// THIS FILE IS GENERATED AUTOMATICALLY AND SHOULD NOT BE EDITED BY HAND!
/// <reference no-default-lib="true"/>
/// <reference path="../roblox.d.ts" />
/// <reference path="enums.d.ts" />
interface Services {
    AccountService: AccountService;
    AchievementService: AchievementService;
    ActivityHistoryEventService: ActivityHistoryEventService;
    AnalyticsService: AnalyticsService;
    AnimationClipProvider: AnimationClipProvider;
    AnimationFromVideoCreatorService: AnimationFromVideoCreatorService;
    AnimationFromVideoCreatorStudioService: AnimationFromVideoCreatorStudioService;
    AnnotationsService: AnnotationsService;
    AppLifecycleObserverService: AppLifecycleObserverService;
    AppUpdateService: AppUpdateService;
    AssetCounterService: AssetCounterService;
    AssetDeliveryProxy: AssetDeliveryProxy;
    AssetImportService: AssetImportService;
    AssetManagerService: AssetManagerService;
    AssetService: AssetService;
    AudioFocusService: AudioFocusService;
    AuroraService: AuroraService;
    AvatarChatService: AvatarChatService;
    AvatarCreationService: AvatarCreationService;
    AvatarEditorService: AvatarEditorService;
    AvatarImportService: AvatarImportService;
    AvatarPreloader: AvatarPreloader;
    BadgeService: BadgeService;
    BugReporterService: BugReporterService;
    BulkImportService: BulkImportService;
    CalloutService: CalloutService;
    CaptureService: CaptureService;
    Chat: Chat;
    ChatbotUIService: ChatbotUIService;
    CloudCRUDService: CloudCRUDService;
    CollaboratorsService: CollaboratorsService;
    CollectionService: CollectionService;
    CommandService: CommandService;
    CommerceService: CommerceService;
    ConfigureServerService: ConfigureServerService;
    ConnectivityService: ConnectivityService;
    ContentProvider: ContentProvider;
    ContextActionService: ContextActionService;
    ControllerService: ControllerService;
    ConversationalAIAcceptanceService: ConversationalAIAcceptanceService;
    CoreScriptDebuggingManagerHelper: CoreScriptDebuggingManagerHelper;
    CreationDBService: CreationDBService;
    CreatorStoreService: CreatorStoreService;
    CrossDMScriptChangeListener: CrossDMScriptChangeListener;
    DataModelPatchService: DataModelPatchService;
    DataStoreService: DataStoreService;
    Debris: Debris;
    DebuggablePluginWatcher: DebuggablePluginWatcher;
    DebuggerConnectionManager: DebuggerConnectionManager;
    DebuggerUIService: DebuggerUIService;
    DeviceIdService: DeviceIdService;
    DraggerService: DraggerService;
    EditableService: EditableService;
    EventIngestService: EventIngestService;
    ExampleService: ExampleService;
    ExperienceAuthService: ExperienceAuthService;
    ExperienceNotificationService: ExperienceNotificationService;
    ExperienceService: ExperienceService;
    ExperienceStateCaptureService: ExperienceStateCaptureService;
    ExplorerServiceVisibilityService: ExplorerServiceVisibilityService;
    FaceAnimatorService: FaceAnimatorService;
    FacialAnimationRecordingService: FacialAnimationRecordingService;
    FacialAnimationStreamingServiceV2: FacialAnimationStreamingServiceV2;
    FeatureRestrictionManager: FeatureRestrictionManager;
    GamepadService: GamepadService;
    GamePassService: GamePassService;
    GenericChallengeService: GenericChallengeService;
    GeometryService: GeometryService;
    GroupService: GroupService;
    GuiService: GuiService;
    HapticService: HapticService;
    HeatmapService: HeatmapService;
    HeightmapImporterService: HeightmapImporterService;
    HttpService: HttpService;
    ILegacyStudioBridge: ILegacyStudioBridge;
    IncrementalPatchBuilder: IncrementalPatchBuilder;
    InsertService: InsertService;
    InternalSyncService: InternalSyncService;
    IXPService: IXPService;
    JointsService: JointsService;
    KeyframeSequenceProvider: KeyframeSequenceProvider;
    LanguageService: LanguageService;
    LegacyStudioBridge: LegacyStudioBridge;
    Lighting: Lighting;
    LinkingService: LinkingService;
    LiveScriptingService: LiveScriptingService;
    LiveSyncService: LiveSyncService;
    LocalizationService: LocalizationService;
    LodDataService: LodDataService;
    LogReporterService: LogReporterService;
    LogService: LogService;
    LSPFileSyncService: LSPFileSyncService;
    LuauScriptAnalyzerService: LuauScriptAnalyzerService;
    MarketplaceService: MarketplaceService;
    MaterialGenerationService: MaterialGenerationService;
    MaterialService: MaterialService;
    MemoryStoreService: MemoryStoreService;
    MessageBusService: MessageBusService;
    MessagingService: MessagingService;
    MetaBreakpointManager: MetaBreakpointManager;
    MLModelDeliveryService: MLModelDeliveryService;
    OmniRecommendationsService: OmniRecommendationsService;
    OpenCloudService: OpenCloudService;
    PackageUIService: PackageUIService;
    PatchBundlerFileWatch: PatchBundlerFileWatch;
    PathfindingService: PathfindingService;
    PerformanceControlService: PerformanceControlService;
    PhysicsService: PhysicsService;
    PlacesService: PlacesService;
    PlaceStatsService: PlaceStatsService;
    PlatformCloudStorageService: PlatformCloudStorageService;
    PlatformFriendsService: PlatformFriendsService;
    PlayerHydrationService: PlayerHydrationService;
    Players: Players;
    PlayerViewService: PlayerViewService;
    PluginManagementService: PluginManagementService;
    PluginPolicyService: PluginPolicyService;
    PolicyService: PolicyService;
    ProcessInstancePhysicsService: ProcessInstancePhysicsService;
    ProximityPromptService: ProximityPromptService;
    PublishService: PublishService;
    ReflectionService: ReflectionService;
    RemoteCursorService: RemoteCursorService;
    RemoteDebuggerServer: RemoteDebuggerServer;
    ReplicatedFirst: ReplicatedFirst;
    ReplicatedStorage: ReplicatedStorage;
    RibbonNotificationService: RibbonNotificationService;
    RobloxServerStorage: RobloxServerStorage;
    RomarkRbxAnalyticsService: RomarkRbxAnalyticsService;
    RomarkService: RomarkService;
    RtMessagingService: RtMessagingService;
    RunService: RunService;
    SafetyService: SafetyService;
    ScriptChangeService: ScriptChangeService;
    ScriptCloneWatcher: ScriptCloneWatcher;
    ScriptCloneWatcherHelper: ScriptCloneWatcherHelper;
    ScriptCommitService: ScriptCommitService;
    ScriptContext: ScriptContext;
    ScriptEditorService: ScriptEditorService;
    ScriptProfilerService: ScriptProfilerService;
    ScriptRegistrationService: ScriptRegistrationService;
    SelectionHighlightManager: SelectionHighlightManager;
    ServerScriptService: ServerScriptService;
    ServerStorage: ServerStorage;
    ServiceVisibilityService: ServiceVisibilityService;
    SessionService: SessionService;
    SharedTableRegistry: SharedTableRegistry;
    ShorelineUpgraderService: ShorelineUpgraderService;
    SmoothVoxelsUpgraderService: SmoothVoxelsUpgraderService;
    SnippetService: SnippetService;
    SocialService: SocialService;
    SoundService: SoundService;
    StarterGui: StarterGui;
    StarterPack: StarterPack;
    StarterPlayer: StarterPlayer;
    StartPageService: StartPageService;
    StartupMessageService: StartupMessageService;
    Stats: Stats;
    StreamingService: StreamingService;
    StudioAssetService: StudioAssetService;
    StudioDeviceEmulatorService: StudioDeviceEmulatorService;
    StudioPublishService: StudioPublishService;
    StudioScriptDebugEventListener: StudioScriptDebugEventListener;
    StudioSdkService: StudioSdkService;
    StudioUserService: StudioUserService;
    StudioWidgetsService: StudioWidgetsService;
    StylingService: StylingService;
    TeamCreateData: TeamCreateData;
    TeamCreatePublishService: TeamCreatePublishService;
    TeamCreateService: TeamCreateService;
    Teams: Teams;
    TelemetryService: TelemetryService;
    TeleportService: TeleportService;
    TemporaryCageMeshProvider: TemporaryCageMeshProvider;
    TemporaryScriptService: TemporaryScriptService;
    TextBoxService: TextBoxService;
    TextChatService: TextChatService;
    TextService: TextService;
    TextureGenerationService: TextureGenerationService;
    ToastNotificationService: ToastNotificationService;
    TracerService: TracerService;
    TutorialService: TutorialService;
    TweenService: TweenService;
    UGCAvatarService: UGCAvatarService;
    UIDragDetectorService: UIDragDetectorService;
    UnvalidatedAssetService: UnvalidatedAssetService;
    UserInputService: UserInputService;
    UserService: UserService;
    VideoCaptureService: VideoCaptureService;
    VideoService: VideoService;
    VisibilityCheckDispatcher: VisibilityCheckDispatcher;
    VisualizationModeService: VisualizationModeService;
    VoiceChatInternal: VoiceChatInternal;
    VoiceChatService: VoiceChatService;
    VRService: VRService;
    VRStatusService: VRStatusService;
    WebViewService: WebViewService;
    Workspace: Workspace;
}
interface CreatableInstances {
    Accessory: Accessory;
    AccessoryDescription: AccessoryDescription;
    Accoutrement: Accoutrement;
    Actor: Actor;
    AdGui: AdGui;
    AdPortal: AdPortal;
    AirController: AirController;
    AlignOrientation: AlignOrientation;
    AlignPosition: AlignPosition;
    AngularVelocity: AngularVelocity;
    Animation: Animation;
    AnimationConstraint: AnimationConstraint;
    AnimationController: AnimationController;
    AnimationRigData: AnimationRigData;
    Animator: Animator;
    Annotation: Annotation;
    ArcHandles: ArcHandles;
    Atmosphere: Atmosphere;
    AtmosphereSensor: AtmosphereSensor;
    Attachment: Attachment;
    AudioAnalyzer: AudioAnalyzer;
    AudioChorus: AudioChorus;
    AudioCompressor: AudioCompressor;
    AudioDeviceInput: AudioDeviceInput;
    AudioDeviceOutput: AudioDeviceOutput;
    AudioDistortion: AudioDistortion;
    AudioEcho: AudioEcho;
    AudioEmitter: AudioEmitter;
    AudioEqualizer: AudioEqualizer;
    AudioFader: AudioFader;
    AudioFilter: AudioFilter;
    AudioFlanger: AudioFlanger;
    AudioLimiter: AudioLimiter;
    AudioListener: AudioListener;
    AudioPitchShifter: AudioPitchShifter;
    AudioPlayer: AudioPlayer;
    AudioReverb: AudioReverb;
    AudioSearchParams: AudioSearchParams;
    Backpack: Backpack;
    BallSocketConstraint: BallSocketConstraint;
    Beam: Beam;
    BillboardGui: BillboardGui;
    BindableEvent: BindableEvent;
    BindableFunction: BindableFunction;
    BlockMesh: BlockMesh;
    BloomEffect: BloomEffect;
    BlurEffect: BlurEffect;
    BodyAngularVelocity: BodyAngularVelocity;
    BodyColors: BodyColors;
    BodyForce: BodyForce;
    BodyGyro: BodyGyro;
    BodyPartDescription: BodyPartDescription;
    BodyPosition: BodyPosition;
    BodyThrust: BodyThrust;
    BodyVelocity: BodyVelocity;
    Bone: Bone;
    BoolValue: BoolValue;
    BoxHandleAdornment: BoxHandleAdornment;
    Breakpoint: Breakpoint;
    BrickColorValue: BrickColorValue;
    BubbleChatMessageProperties: BubbleChatMessageProperties;
    BuoyancySensor: BuoyancySensor;
    Camera: Camera;
    CanvasGroup: CanvasGroup;
    CFrameValue: CFrameValue;
    CharacterMesh: CharacterMesh;
    ChorusSoundEffect: ChorusSoundEffect;
    ClickDetector: ClickDetector;
    ClimbController: ClimbController;
    Clouds: Clouds;
    Color3Value: Color3Value;
    ColorCorrectionEffect: ColorCorrectionEffect;
    ColorGradingEffect: ColorGradingEffect;
    CompressorSoundEffect: CompressorSoundEffect;
    ConeHandleAdornment: ConeHandleAdornment;
    Configuration: Configuration;
    ControllerManager: ControllerManager;
    ControllerPartSensor: ControllerPartSensor;
    CornerWedgePart: CornerWedgePart;
    CurveAnimation: CurveAnimation;
    CylinderHandleAdornment: CylinderHandleAdornment;
    CylinderMesh: CylinderMesh;
    CylindricalConstraint: CylindricalConstraint;
    DataStoreGetOptions: DataStoreGetOptions;
    DataStoreIncrementOptions: DataStoreIncrementOptions;
    DataStoreOptions: DataStoreOptions;
    DataStoreSetOptions: DataStoreSetOptions;
    Decal: Decal;
    DepthOfFieldEffect: DepthOfFieldEffect;
    Dialog: Dialog;
    DialogChoice: DialogChoice;
    DistortionSoundEffect: DistortionSoundEffect;
    DoubleConstrainedValue: DoubleConstrainedValue;
    DragDetector: DragDetector;
    Dragger: Dragger;
    EchoSoundEffect: EchoSoundEffect;
    EqualizerSoundEffect: EqualizerSoundEffect;
    EulerRotationCurve: EulerRotationCurve;
    ExperienceInviteOptions: ExperienceInviteOptions;
    ExplorerFilter: ExplorerFilter;
    Explosion: Explosion;
    FaceControls: FaceControls;
    FileMesh: FileMesh;
    Fire: Fire;
    FlangeSoundEffect: FlangeSoundEffect;
    FloatCurve: FloatCurve;
    FloorWire: FloorWire;
    FluidForceSensor: FluidForceSensor;
    Folder: Folder;
    ForceField: ForceField;
    Frame: Frame;
    GetTextBoundsParams: GetTextBoundsParams;
    Glue: Glue;
    GroundController: GroundController;
    Handles: Handles;
    HapticEffect: HapticEffect;
    Hat: Hat;
    HiddenSurfaceRemovalAsset: HiddenSurfaceRemovalAsset;
    Highlight: Highlight;
    HingeConstraint: HingeConstraint;
    Hole: Hole;
    Humanoid: Humanoid;
    HumanoidController: HumanoidController;
    HumanoidDescription: HumanoidDescription;
    IKControl: IKControl;
    ImageButton: ImageButton;
    ImageHandleAdornment: ImageHandleAdornment;
    ImageLabel: ImageLabel;
    IntConstrainedValue: IntConstrainedValue;
    InternalSyncItem: InternalSyncItem;
    IntersectOperation: IntersectOperation;
    IntValue: IntValue;
    Keyframe: Keyframe;
    KeyframeMarker: KeyframeMarker;
    KeyframeSequence: KeyframeSequence;
    LinearVelocity: LinearVelocity;
    LineForce: LineForce;
    LineHandleAdornment: LineHandleAdornment;
    LocalizationTable: LocalizationTable;
    LocalScript: LocalScript;
    ManualGlue: ManualGlue;
    ManualWeld: ManualWeld;
    MarkerCurve: MarkerCurve;
    MaterialVariant: MaterialVariant;
    MeshPart: MeshPart;
    Model: Model;
    ModuleScript: ModuleScript;
    Motor: Motor;
    Motor6D: Motor6D;
    MotorFeature: MotorFeature;
    NegateOperation: NegateOperation;
    NoCollisionConstraint: NoCollisionConstraint;
    Noise: Noise;
    NumberPose: NumberPose;
    NumberValue: NumberValue;
    ObjectValue: ObjectValue;
    OperationGraph: OperationGraph;
    Pants: Pants;
    Part: Part;
    ParticleEmitter: ParticleEmitter;
    PartOperation: PartOperation;
    Path2D: Path2D;
    PathfindingLink: PathfindingLink;
    PathfindingModifier: PathfindingModifier;
    PitchShiftSoundEffect: PitchShiftSoundEffect;
    Plane: Plane;
    PlaneConstraint: PlaneConstraint;
    PluginCapabilities: PluginCapabilities;
    PointLight: PointLight;
    Pose: Pose;
    PrismaticConstraint: PrismaticConstraint;
    ProximityPrompt: ProximityPrompt;
    RayValue: RayValue;
    RelativeGui: RelativeGui;
    RemoteEvent: RemoteEvent;
    RemoteFunction: RemoteFunction;
    ReverbSoundEffect: ReverbSoundEffect;
    RigidConstraint: RigidConstraint;
    RocketPropulsion: RocketPropulsion;
    RodConstraint: RodConstraint;
    RopeConstraint: RopeConstraint;
    Rotate: Rotate;
    RotateP: RotateP;
    RotateV: RotateV;
    RotationCurve: RotationCurve;
    RTAnimationTracker: RTAnimationTracker;
    ScreenGui: ScreenGui;
    Script: Script;
    ScrollingFrame: ScrollingFrame;
    Seat: Seat;
    SelectionBox: SelectionBox;
    SelectionPartLasso: SelectionPartLasso;
    SelectionPointLasso: SelectionPointLasso;
    SelectionSphere: SelectionSphere;
    Shirt: Shirt;
    ShirtGraphic: ShirtGraphic;
    SkateboardController: SkateboardController;
    SkateboardPlatform: SkateboardPlatform;
    Sky: Sky;
    Smoke: Smoke;
    Snap: Snap;
    Sound: Sound;
    SoundGroup: SoundGroup;
    Sparkles: Sparkles;
    SpawnLocation: SpawnLocation;
    SpecialMesh: SpecialMesh;
    SphereHandleAdornment: SphereHandleAdornment;
    SpotLight: SpotLight;
    SpringConstraint: SpringConstraint;
    StarterGear: StarterGear;
    StringValue: StringValue;
    StudioAttachment: StudioAttachment;
    StudioCallout: StudioCallout;
    StyleDerive: StyleDerive;
    StyleLink: StyleLink;
    StyleRule: StyleRule;
    StyleSheet: StyleSheet;
    SunRaysEffect: SunRaysEffect;
    SurfaceAppearance: SurfaceAppearance;
    SurfaceGui: SurfaceGui;
    SurfaceLight: SurfaceLight;
    SurfaceSelection: SurfaceSelection;
    SwimController: SwimController;
    Team: Team;
    TeleportOptions: TeleportOptions;
    TerrainDetail: TerrainDetail;
    TerrainRegion: TerrainRegion;
    TextBox: TextBox;
    TextButton: TextButton;
    TextChannel: TextChannel;
    TextChatCommand: TextChatCommand;
    TextChatMessageProperties: TextChatMessageProperties;
    TextLabel: TextLabel;
    Texture: Texture;
    Tool: Tool;
    Torque: Torque;
    TorsionSpringConstraint: TorsionSpringConstraint;
    TrackerStreamAnimation: TrackerStreamAnimation;
    Trail: Trail;
    TremoloSoundEffect: TremoloSoundEffect;
    TrussPart: TrussPart;
    UIAspectRatioConstraint: UIAspectRatioConstraint;
    UICorner: UICorner;
    UIDragDetector: UIDragDetector;
    UIFlexItem: UIFlexItem;
    UIGradient: UIGradient;
    UIGridLayout: UIGridLayout;
    UIListLayout: UIListLayout;
    UIPadding: UIPadding;
    UIPageLayout: UIPageLayout;
    UIScale: UIScale;
    UISizeConstraint: UISizeConstraint;
    UIStroke: UIStroke;
    UITableLayout: UITableLayout;
    UITextSizeConstraint: UITextSizeConstraint;
    UnionOperation: UnionOperation;
    UniversalConstraint: UniversalConstraint;
    UnreliableRemoteEvent: UnreliableRemoteEvent;
    Vector3Curve: Vector3Curve;
    Vector3Value: Vector3Value;
    VectorForce: VectorForce;
    VehicleController: VehicleController;
    VehicleSeat: VehicleSeat;
    VelocityMotor: VelocityMotor;
    VideoDeviceInput: VideoDeviceInput;
    VideoFrame: VideoFrame;
    VideoPlayer: VideoPlayer;
    ViewportFrame: ViewportFrame;
    VisualizationMode: VisualizationMode;
    VisualizationModeCategory: VisualizationModeCategory;
    WedgePart: WedgePart;
    Weld: Weld;
    WeldConstraint: WeldConstraint;
    Wire: Wire;
    WireframeHandleAdornment: WireframeHandleAdornment;
    WorkspaceAnnotation: WorkspaceAnnotation;
    WorldModel: WorldModel;
    WrapDeformer: WrapDeformer;
    WrapLayer: WrapLayer;
    WrapTarget: WrapTarget;
}
interface Instances extends Services, CreatableInstances {
    AnimationClip: AnimationClip;
    AnimationImportData: AnimationImportData;
    AnimationStreamTrack: AnimationStreamTrack;
    AnimationTrack: AnimationTrack;
    AssetImportSession: AssetImportSession;
    AssetPatchSettings: AssetPatchSettings;
    AssetSoundEffect: AssetSoundEffect;
    AudioPages: AudioPages;
    BackpackItem: BackpackItem;
    BanHistoryPages: BanHistoryPages;
    BaseImportData: BaseImportData;
    BasePart: BasePart;
    BasePlayerGui: BasePlayerGui;
    BaseRemoteEvent: BaseRemoteEvent;
    BaseScript: BaseScript;
    BaseWrap: BaseWrap;
    BevelMesh: BevelMesh;
    BodyMover: BodyMover;
    BubbleChatConfiguration: BubbleChatConfiguration;
    CatalogPages: CatalogPages;
    ChannelSelectorSoundEffect: ChannelSelectorSoundEffect;
    ChannelTabsConfiguration: ChannelTabsConfiguration;
    CharacterAppearance: CharacterAppearance;
    ChatInputBarConfiguration: ChatInputBarConfiguration;
    ChatWindowConfiguration: ChatWindowConfiguration;
    ChatWindowMessageProperties: ChatWindowMessageProperties;
    Clothing: Clothing;
    CloudLocalizationTable: CloudLocalizationTable;
    Collaborator: Collaborator;
    CommandInstance: CommandInstance;
    Constraint: Constraint;
    Controller: Controller;
    ControllerBase: ControllerBase;
    ControllerSensor: ControllerSensor;
    CustomSoundEffect: CustomSoundEffect;
    DataModel: DataModel;
    DataModelMesh: DataModelMesh;
    DataStore: DataStore;
    DataStoreInfo: DataStoreInfo;
    DataStoreKey: DataStoreKey;
    DataStoreKeyInfo: DataStoreKeyInfo;
    DataStoreKeyPages: DataStoreKeyPages;
    DataStoreListingPages: DataStoreListingPages;
    DataStoreObjectVersionInfo: DataStoreObjectVersionInfo;
    DataStorePages: DataStorePages;
    DataStoreVersionPages: DataStoreVersionPages;
    DebuggerConnection: DebuggerConnection;
    DebuggerLuaResponse: DebuggerLuaResponse;
    DebuggerVariable: DebuggerVariable;
    DynamicRotate: DynamicRotate;
    EmotesPages: EmotesPages;
    ExplorerFilterAutocompleter: ExplorerFilterAutocompleter;
    FaceInstance: FaceInstance;
    FacialAnimationStreamingServiceStats: FacialAnimationStreamingServiceStats;
    FacialAnimationStreamingSubsessionStats: FacialAnimationStreamingSubsessionStats;
    FacsImportData: FacsImportData;
    Feature: Feature;
    FormFactorPart: FormFactorPart;
    FriendPages: FriendPages;
    GenericSettings: GenericSettings;
    GlobalDataStore: GlobalDataStore;
    GroupImportData: GroupImportData;
    GuiBase: GuiBase;
    GuiBase2d: GuiBase2d;
    GuiBase3d: GuiBase3d;
    GuiButton: GuiButton;
    GuiLabel: GuiLabel;
    GuiObject: GuiObject;
    HandleAdornment: HandleAdornment;
    HandlesBase: HandlesBase;
    InputObject: InputObject;
    Instance: Instance;
    InstanceAdornment: InstanceAdornment;
    InventoryPages: InventoryPages;
    JointImportData: JointImportData;
    JointInstance: JointInstance;
    LayerCollector: LayerCollector;
    Light: Light;
    LocalDebuggerConnection: LocalDebuggerConnection;
    LodDataEntity: LodDataEntity;
    LuaSourceContainer: LuaSourceContainer;
    ManualSurfaceJointInstance: ManualSurfaceJointInstance;
    MaterialGenerationSession: MaterialGenerationSession;
    MaterialImportData: MaterialImportData;
    MemoryStoreHashMap: MemoryStoreHashMap;
    MemoryStoreHashMapPages: MemoryStoreHashMapPages;
    MemoryStoreQueue: MemoryStoreQueue;
    MemoryStoreSortedMap: MemoryStoreSortedMap;
    MeshImportData: MeshImportData;
    MessageBusConnection: MessageBusConnection;
    MetaBreakpoint: MetaBreakpoint;
    MetaBreakpointContext: MetaBreakpointContext;
    Mouse: Mouse;
    NetworkMarker: NetworkMarker;
    OpenCloudApiV1: OpenCloudApiV1;
    OrderedDataStore: OrderedDataStore;
    OutfitPages: OutfitPages;
    PackageLink: PackageLink;
    Pages: Pages;
    ParabolaAdornment: ParabolaAdornment;
    PartAdornment: PartAdornment;
    PatchMapping: PatchMapping;
    Path: Path;
    PausedState: PausedState;
    PausedStateBreakpoint: PausedStateBreakpoint;
    PausedStateException: PausedStateException;
    Platform: Platform;
    Player: Player;
    PlayerGui: PlayerGui;
    PlayerMouse: PlayerMouse;
    PlayerScripts: PlayerScripts;
    PluginManagerInterface: PluginManagerInterface;
    PoseBase: PoseBase;
    PostEffect: PostEffect;
    PVAdornment: PVAdornment;
    PVInstance: PVInstance;
    RobloxSerializableInstance: RobloxSerializableInstance;
    RootImportData: RootImportData;
    ScreenshotHud: ScreenshotHud;
    ScriptBuilder: ScriptBuilder;
    ScriptDocument: ScriptDocument;
    ScriptRuntime: ScriptRuntime;
    SelectionLasso: SelectionLasso;
    SensorBase: SensorBase;
    ServiceProvider: ServiceProvider;
    SlidingBallConstraint: SlidingBallConstraint;
    SoundEffect: SoundEffect;
    StackFrame: StackFrame;
    StandardPages: StandardPages;
    StarterCharacterScripts: StarterCharacterScripts;
    StarterPlayerScripts: StarterPlayerScripts;
    StudioObjectBase: StudioObjectBase;
    StudioWidget: StudioWidget;
    StyleBase: StyleBase;
    SurfaceGuiBase: SurfaceGuiBase;
    SyncScriptBuilder: SyncScriptBuilder;
    TeleportAsyncResult: TeleportAsyncResult;
    Terrain: Terrain;
    TextChatConfigurations: TextChatConfigurations;
    TextChatMessage: TextChatMessage;
    TextFilterResult: TextFilterResult;
    TextFilterTranslatedResult: TextFilterTranslatedResult;
    TextSource: TextSource;
    TextureGenerationPartGroup: TextureGenerationPartGroup;
    TextureGenerationUnwrappingRequest: TextureGenerationUnwrappingRequest;
    ThreadState: ThreadState;
    TouchTransmitter: TouchTransmitter;
    TrackerLodController: TrackerLodController;
    Translator: Translator;
    TriangleMeshPart: TriangleMeshPart;
    Tween: Tween;
    TweenBase: TweenBase;
    UIBase: UIBase;
    UIComponent: UIComponent;
    UIConstraint: UIConstraint;
    UIGridStyleLayout: UIGridStyleLayout;
    UILayout: UILayout;
    UserGameSettings: UserGameSettings;
    UserSettings: UserSettings;
    ValueBase: ValueBase;
    WorldRoot: WorldRoot;
}
interface Objects extends Instances {
    EditableImage: EditableImage;
    EditableMesh: EditableMesh;
    Object: RBXObject;
}
// GENERATED ROBLOX INSTANCE CLASSES
/**
 * Object is the base class for all classes in the Roblox class hierarchy.
 *
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Object)
 */
interface RBXObject {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_Object: unique symbol;
    /**
     * A read-only string representing the class this <code>Object</code> belongs to.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Object#ClassName)
     */
    readonly ClassName: string;
    /**
     * Get an event that fires when a given property of the object changes.
     * @param this Object is the base class for all classes in the Roblox class hierarchy.
     * @param property The property to connect to.
     * @returns A signal that fires whenever the property changes.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Object#GetPropertyChangedSignal)
     */
    GetPropertyChangedSignal<T extends RBXObject>(this: T, propertyName: InstancePropertyNames<T>): RBXScriptSignal<() => void>;
    /**
     * Returns true if an object's class matches or inherits from a given class.
     * @param this Object is the base class for all classes in the Roblox class hierarchy.
     * @param className The class against which the Object's class will be checked. Case-sensitive.
     * @returns Describes whether the Object's class matched or is a subclass of the given class.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Object#IsA)
     */
    IsA<T extends keyof Objects>(this: Instance, className: T): this is Objects[T];
    /**
     * Fired immediately after a property of the object changes, with some limitations.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Object#Changed)
     */
    readonly Changed: unknown;
}
/**
 * Instance which allows for the runtime creation and manipulation of images.
 *
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/EditableImage)
 */
interface EditableImage extends RBXObject {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_EditableImage: unique symbol;
    /**
     * Size of the <code>EditableImage</code> in pixels.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/EditableImage#Size)
     */
    readonly Size: Vector2;
    /**
     * @param this Instance which allows for the runtime creation and manipulation of images.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/EditableImage#Destroy)
     */
    Destroy(this: EditableImage): void;
    /**
     * Draws a circle at the specified point.
     * @param this Instance which allows for the runtime creation and manipulation of images.
     * @param center Center of the circle, relative to the top-left corner of the <code>EditableImage</code>. Positions outside the canvas bounds are allowed.
     * @param radius Radius of the circle in pixels.
     * @param color Color of the circle.
     * @param transparency Transparency of the circle with 0 being fully opaque and 1 being fully transparent.
     * @param combineType How the pixels of the source image are blended with the pixels of the added image.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/EditableImage#DrawCircle)
     */
    DrawCircle(this: EditableImage, center: Vector2, radius: number, color: Color3, transparency: number, combineType: CastsToEnum<Enum.ImageCombineType>): void;
    /**
     * Draws another <code>EditableImage</code> into this <code>EditableImage</code> at the given position.
     * @param this Instance which allows for the runtime creation and manipulation of images.
     * @param position Position at which the top-left corner of the added image will be drawn.
     * @param image The <code>EditableImage</code> to draw into this <code>EditableImage</code>.
     * @param combineType How the pixels of the source image should be blended with the pixels of the added image.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/EditableImage#DrawImage)
     */
    DrawImage(this: EditableImage, position: Vector2, image: EditableImage, combineType: CastsToEnum<Enum.ImageCombineType>): void;
    /**
     * Projects another <code>EditableImage</code> into an <code>EditableMesh</code> and stores the result on this <code>EditableImage</code>.
     * @param this Instance which allows for the runtime creation and manipulation of images.
     * @param mesh The <code>EditableMesh</code> used to project into.
     * @param projection Projection configuration dictionary including the following key-value pairs: <ul> <li><code>Direction</code> (<code>Vector3</code>) where the projector is facing.</li> <li><code>Position</code> (<code>Vector3</code>) as the position in local space with   respect to the mesh.</li> <li><code>Size</code> (<code>Vector3</code>) as the size of the projector.</li> <li><code>Up</code> (<code>Vector3</code>) as the up vector of the projector in local   space with respect to the mesh.</li> </ul>
     * @param brushConfig Brush configuration dictionary including the following key-value pairs: <ul> <li><code>AlphaBlendType</code> (<code>ImageAlphaType</code>) which determines how this   projection will blend alpha values.</li> <li><code>ColorBlendType</code> (<code>ImageCombineType</code>) which determines how this   projection will blend color values.</li> <li><code>Decal</code> (<code>EditableImage</code>) as the image used for projection.</li> <li><code>FadeAngle</code> (number) as the angle in degrees for the projection   edges to fall off.</li> <li><code>BlendIntensity</code> (number) as the value between <code>0</code> and <code>1</code> which   controls how much of the projection is blended into the resulting   image.</li> </ul>
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/EditableImage#DrawImageProjected)
     */
    DrawImageProjected(this: EditableImage, mesh: EditableMesh, projection: object, brushConfig: object): void;
    /**
     * Draws an image into this <code>EditableImage</code> with transformations including scaling and rotation, placing it at the specified position.
     * @param this Instance which allows for the runtime creation and manipulation of images.
     * @param position Position in pixels where the pivot point of the source image will be placed on this image.
     * @param scale Scaling factors for the source image along the X and Y axes.
     * @param rotation The rotation angle in degrees, applied around the pivot point of the source image.
     * @param image The source <code>EditableImage</code> to be drawn into this image.
     * @param options Optional dictionary for additional configuration: <ul> <li><code>CombineType</code>: Specifies how the pixels of the source image blend   with those of the destination. Default is   <code>ImageCombineType.AlphaBlend</code>.</li> <li><code>SamplingMode</code>: Specifies the sampling method (e.g. <code>Default</code> for   bilinear or <code>Pixelated</code> for nearest neighbor). Default is   <code>ResamplerMode.Default</code>.</li> <li><code>PivotPoint</code>: Specifies the pivot point within the source image for   scaling and rotation. Default is the center of the source image   (i.e. <code>Size / 2</code>).</li> </ul>
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/EditableImage#DrawImageTransformed)
     */
    DrawImageTransformed(this: EditableImage, position: Vector2, scale: Vector2, rotation: number, image: EditableImage, options?: object): void;
    /**
     * Draws a line between two provided points.
     * @param this Instance which allows for the runtime creation and manipulation of images.
     * @param p1 Start point of the line.
     * @param p2 End point of the line.
     * @param color Color of the line.
     * @param transparency Transparency of the line.
     * @param combineType How the pixels of the source image are blended with the pixels of the added image.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/EditableImage#DrawLine)
     */
    DrawLine(this: EditableImage, p1: Vector2, p2: Vector2, color: Color3, transparency: number, combineType: CastsToEnum<Enum.ImageCombineType>): void;
    /**
     * Draws a rectangle of the given size at the given top-left position.
     * @param this Instance which allows for the runtime creation and manipulation of images.
     * @param position Position of the top-left of the rectangle. Unlike other drawing methods, this cannot be outside the canvas bounds of the <code>EditableImage</code>.
     * @param size Size of the rectangle to draw, in pixels.
     * @param color Color of the rectangle.
     * @param transparency Transparency of the rectangle.
     * @param combineType How the pixels of the source image are blended with the pixels of the added image.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/EditableImage#DrawRectangle)
     */
    DrawRectangle(this: EditableImage, position: Vector2, size: Vector2, color: Color3, transparency: number, combineType: CastsToEnum<Enum.ImageCombineType>): void;
    /**
     * Reads a rectangular region of pixels into a buffer.
     * @param this Instance which allows for the runtime creation and manipulation of images.
     * @param position Top-left corner of the rectangular region of pixels to read.
     * @param size Size of the rectangular region of pixels to read.
     * @returns Buffer where each pixel is represented by four bytes (red, green, blue and alpha respectively). The length of the buffer can be calculated as <code>X * Size.Y * 4</code> bytes.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/EditableImage#ReadPixelsBuffer)
     */
    ReadPixelsBuffer(this: EditableImage, position: Vector2, size: Vector2): buffer;
    /**
     * Writes a rectangular region of pixels into the image.
     * @param this Instance which allows for the runtime creation and manipulation of images.
     * @param position Top-left corner of the rectangular region to draw the pixels into.
     * @param size Size of the rectangular region of pixels to write.
     * @param buffer A buffer where each pixel is represented by four bytes (red, green, blue, and alpha respectively). The length of the buffer should be <code>X * Size.Y * 4</code> bytes.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/EditableImage#WritePixelsBuffer)
     */
    WritePixelsBuffer(this: EditableImage, position: Vector2, size: Vector2, buffer: buffer): void;
}
/**
 * Instance which allows for the runtime creation and manipulation of meshes.
 *
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/EditableMesh)
 */
interface EditableMesh extends DataModelMesh {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_EditableMesh: unique symbol;
    /**
     * Returns <code>true</code> if a mesh is fixed-size.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/EditableMesh#FixedSize)
     */
    get FixedSize(): boolean;
    /**
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/EditableMesh#SkinningEnabled)
     */
    SkinningEnabled: boolean;
    /**
     * Adds a new color to the geometry and returns a stable color ID.
     * @param this Instance which allows for the runtime creation and manipulation of meshes.
     * @param color The new color.
     * @param alpha The color alpha (transparency).
     * @returns Stable color ID of the new color.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/EditableMesh#AddColor)
     */
    AddColor(this: EditableMesh, color: Color3, alpha: number): number;
    /**
     * Adds a new normal to the geometry and returns a stable normal ID.
     * @param this Instance which allows for the runtime creation and manipulation of meshes.
     * @param normal The normal vector. If the normal value isn't specified, the normal will be automatically calculated.
     * @returns Stable normal ID of the new normal.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/EditableMesh#AddNormal)
     */
    AddNormal(this: EditableMesh, normal?: Vector3): number;
    /**
     * Adds a new triangle to the mesh and returns a stable face ID.
     * @param this Instance which allows for the runtime creation and manipulation of meshes.
     * @param vertexId0 ID of the first vertex of the triangle.
     * @param vertexId1 ID of the second vertex of the triangle.
     * @param vertexId2 ID of the third vertex of the triangle.
     * @returns Stable face ID of the new face.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/EditableMesh#AddTriangle)
     */
    AddTriangle(this: EditableMesh, vertexId0: number, vertexId1: number, vertexId2: number): number;
    /**
     * Adds a new UV to the geometry and returns a stable UV ID.
     * @param this Instance which allows for the runtime creation and manipulation of meshes.
     * @param uv The new UV coordinate.
     * @returns Stable UV ID of the new UV.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/EditableMesh#AddUV)
     */
    AddUV(this: EditableMesh, uv: Vector2): number;
    /**
     * Adds a new vertex to the geometry and returns a stable vertex ID.
     * @param this Instance which allows for the runtime creation and manipulation of meshes.
     * @param p Position in the mesh's local object space.
     * @returns Stable vertex ID of the new vertex.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/EditableMesh#AddVertex)
     */
    AddVertex(this: EditableMesh, p: Vector3): number;
    /**
     * Destroys the mesh.
     * @param this Instance which allows for the runtime creation and manipulation of meshes.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/EditableMesh#Destroy)
     */
    Destroy(this: EditableMesh): void;
    /**
     * Finds the closest point on the mesh's surface.
     * @param this Instance which allows for the runtime creation and manipulation of meshes.
     * @param point Point position in the mesh's local object space.
     * @returns Tuple of the face ID, point on the mesh in local object space, and the barycentric coordinate of the position within the face.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/EditableMesh#FindClosestPointOnSurface)
     */
    FindClosestPointOnSurface(this: EditableMesh, point: Vector3): LuaTuple<[
        number,
        Vector3,
        Vector3
    ]>;
    /**
     * Finds the closest vertex to a specific point in space.
     * @param this Instance which allows for the runtime creation and manipulation of meshes.
     * @param toThisPoint Point position in the mesh's local object space.
     * @returns Closest stable vertex ID to the specified point in space.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/EditableMesh#FindClosestVertex)
     */
    FindClosestVertex(this: EditableMesh, toThisPoint: Vector3): number;
    /**
     * Finds all vertices within a specific sphere.
     * @param this Instance which allows for the runtime creation and manipulation of meshes.
     * @param center Center of the sphere in the mesh's local object space.
     * @param radius Radius of the sphere.
     * @returns List of stable vertex IDs within the requested sphere.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/EditableMesh#FindVerticesWithinSphere)
     */
    FindVerticesWithinSphere(this: EditableMesh, center: Vector3, radius: number): Array<number>;
    /**
     * Returns a list of faces adjacent to a given face.
     * @param this Instance which allows for the runtime creation and manipulation of meshes.
     * @param faceId
     * @returns List of face IDs adjacent to the given face.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/EditableMesh#GetAdjacentFaces)
     */
    GetAdjacentFaces(this: EditableMesh, faceId: number): Array<unknown>;
    /**
     * Returns a list of vertices adjacent to a given vertex.
     * @param this Instance which allows for the runtime creation and manipulation of meshes.
     * @param vertexId Vertex ID around which to get adjacent vertices.
     * @returns List of IDs of adjacent vertices around the given vertex ID.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/EditableMesh#GetAdjacentVertices)
     */
    GetAdjacentVertices(this: EditableMesh, vertexId: number): Array<number>;
    /**
     * @param this Instance which allows for the runtime creation and manipulation of meshes.
     * @returns Center of the bounding box of the <code>EditableMesh</code>.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/EditableMesh#GetCenter)
     */
    GetCenter(this: EditableMesh): Vector3;
    /**
     * Returns the color for the given color ID.
     * @param this Instance which allows for the runtime creation and manipulation of meshes.
     * @param colorId Color ID for which to get the color.
     * @returns Color for the requested stable color ID.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/EditableMesh#GetColor)
     */
    GetColor(this: EditableMesh, colorId: number): Color3 | undefined;
    /**
     * Returns the color alpha (transparency) at the given color ID.
     * @param this Instance which allows for the runtime creation and manipulation of meshes.
     * @param colorId Color ID for which to get the alpha.
     * @returns Color alpha at the request stable color ID.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/EditableMesh#GetColorAlpha)
     */
    GetColorAlpha(this: EditableMesh, colorId: number): number | undefined;
    /**
     * Returns all colors of the mesh.
     * @param this Instance which allows for the runtime creation and manipulation of meshes.
     * @returns List of stable color IDs.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/EditableMesh#GetColors)
     */
    GetColors(this: EditableMesh): Array<unknown>;
    /**
     * Returns the face's color IDs for the vertices on the face.
     * @param this Instance which allows for the runtime creation and manipulation of meshes.
     * @param faceId Face ID for which to get the color IDs.
     * @returns List of color IDs used for the vertices on the given face.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/EditableMesh#GetFaceColors)
     */
    GetFaceColors(this: EditableMesh, faceId: number): Array<unknown>;
    /**
     * Returns the face's normal IDs for the vertices on the face.
     * @param this Instance which allows for the runtime creation and manipulation of meshes.
     * @param faceId Face ID for which to get the normal IDs.
     * @returns List of normal IDs used for the vertices on the given face.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/EditableMesh#GetFaceNormals)
     */
    GetFaceNormals(this: EditableMesh, faceId: number): Array<unknown>;
    /**
     * Returns the face's UV IDs for the vertices on the face.
     * @param this Instance which allows for the runtime creation and manipulation of meshes.
     * @param faceId Face ID for which to get the UV IDs.
     * @returns List of UV IDs used for the vertices on the given face.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/EditableMesh#GetFaceUVs)
     */
    GetFaceUVs(this: EditableMesh, faceId: number): Array<unknown>;
    /**
     * Returns the face's vertex IDs.
     * @param this Instance which allows for the runtime creation and manipulation of meshes.
     * @param faceId
     * @returns List of vertex IDs around the given face.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/EditableMesh#GetFaceVertices)
     */
    GetFaceVertices(this: EditableMesh, faceId: number): Array<unknown>;
    /**
     * Returns all faces of the mesh.
     * @param this Instance which allows for the runtime creation and manipulation of meshes.
     * @returns List of stable face IDs.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/EditableMesh#GetFaces)
     */
    GetFaces(this: EditableMesh): Array<unknown>;
    /**
     * Returns a list of faces that use a given attribute ID.
     * @param this Instance which allows for the runtime creation and manipulation of meshes.
     * @param id Attribute ID for which to find faces that use it.
     * @returns List of face IDs which use the given attribute ID.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/EditableMesh#GetFacesWithAttribute)
     */
    GetFacesWithAttribute(this: EditableMesh, id: number): Array<unknown>;
    /**
     * Returns the normal vector for the given normal ID.
     * @param this Instance which allows for the runtime creation and manipulation of meshes.
     * @param normalId Normal ID for which to get the normal vector.
     * @returns Normal vector at the requested normal ID.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/EditableMesh#GetNormal)
     */
    GetNormal(this: EditableMesh, normalId: number): Vector3 | undefined;
    /**
     * Returns all normals of the mesh.
     * @param this Instance which allows for the runtime creation and manipulation of meshes.
     * @returns List of stable normal IDs.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/EditableMesh#GetNormals)
     */
    GetNormals(this: EditableMesh): Array<unknown>;
    /**
     * Gets the position of a vertex.
     * @param this Instance which allows for the runtime creation and manipulation of meshes.
     * @param vertexId Stable vertex ID for which to get the position.
     * @returns Position of a vertex in the mesh's local object space.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/EditableMesh#GetPosition)
     */
    GetPosition(this: EditableMesh, vertexId: number): Vector3;
    /**
     * @param this Instance which allows for the runtime creation and manipulation of meshes.
     * @returns Size of the <code>EditableMesh</code>.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/EditableMesh#GetSize)
     */
    GetSize(this: EditableMesh): Vector3;
    /**
     * Returns UV coordinates at the given UV ID.
     * @param this Instance which allows for the runtime creation and manipulation of meshes.
     * @param uvId UV ID for which to get the UV coordinate.
     * @returns UV coordinates at the requested UV ID.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/EditableMesh#GetUV)
     */
    GetUV(this: EditableMesh, uvId: number): Vector2 | undefined;
    /**
     * Returns all UVs of the mesh.
     * @param this Instance which allows for the runtime creation and manipulation of meshes.
     * @returns List of stable UV IDs.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/EditableMesh#GetUVs)
     */
    GetUVs(this: EditableMesh): Array<unknown>;
    /**
     * Returns all vertices as a list of stable vertex IDs.
     * @param this Instance which allows for the runtime creation and manipulation of meshes.
     * @returns List of stable vertex IDs.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/EditableMesh#GetVertices)
     */
    GetVertices(this: EditableMesh): Array<number>;
    /**
     * Returns a list of vertices that use a given attribute ID.
     * @param this Instance which allows for the runtime creation and manipulation of meshes.
     * @param id Attribute ID for which to find vertices that use it.
     * @returns List of vertex IDs which use the given attribute ID.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/EditableMesh#GetVerticesWithAttribute)
     */
    GetVerticesWithAttribute(this: EditableMesh, id: number): Array<unknown>;
    /**
     * Returns a string describing a stable ID, useful for debugging purposes.
     * @param this Instance which allows for the runtime creation and manipulation of meshes.
     * @param id ID for which to return a debugging information string.
     * @returns String that describes the ID in human-readable format.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/EditableMesh#IdDebugString)
     */
    IdDebugString(this: EditableMesh, id: number): string;
    /**
     * Merges vertices that touch together.
     * @param this Instance which allows for the runtime creation and manipulation of meshes.
     * @param mergeTolerance The distance at which the vertices are considered to touch each other.
     * @returns A mapping of old vertex ID to new vertex ID for vertices that have been merged.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/EditableMesh#MergeVertices)
     */
    MergeVertices(this: EditableMesh, mergeTolerance: number): unknown;
    /**
     * @param this Instance which allows for the runtime creation and manipulation of meshes.
     * @param origin Origin of the ray in the mesh's local object space.
     * @param direction Direction of the ray.
     * @returns Tuple of the point of intersection, face ID, and barycentric coordinates.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/EditableMesh#RaycastLocal)
     */
    RaycastLocal(this: EditableMesh, origin: Vector3, direction: Vector3): LuaTuple<[
        number,
        Vector3,
        Vector3
    ]>;
    /**
     * Removes a face using its stable face ID.
     * @param this Instance which allows for the runtime creation and manipulation of meshes.
     * @param faceId
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/EditableMesh#RemoveFace)
     */
    RemoveFace(this: EditableMesh, faceId: number): void;
    /**
     * Removes all unused vertices, normals, UVs, and colors, and returns the removed IDs.
     * @param this Instance which allows for the runtime creation and manipulation of meshes.
     * @returns All of the removed stable IDs.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/EditableMesh#RemoveUnused)
     */
    RemoveUnused(this: EditableMesh): Array<unknown>;
    /**
     * Reset this normal ID to be automatically calculated.
     * @param this Instance which allows for the runtime creation and manipulation of meshes.
     * @param normalId Stable normal ID to reset.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/EditableMesh#ResetNormal)
     */
    ResetNormal(this: EditableMesh, normalId: number): void;
    /**
     * Sets the color for a color ID.
     * @param this Instance which allows for the runtime creation and manipulation of meshes.
     * @param colorId Stable color ID for which to set the color.
     * @param color Color to set.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/EditableMesh#SetColor)
     */
    SetColor(this: EditableMesh, colorId: number, color: Color3): void;
    /**
     * Sets the color alpha (transparency) for a color ID.
     * @param this Instance which allows for the runtime creation and manipulation of meshes.
     * @param colorId Stable color ID for which to set the color alpha.
     * @param alpha Alpha to set.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/EditableMesh#SetColorAlpha)
     */
    SetColorAlpha(this: EditableMesh, colorId: number, alpha: number): void;
    /**
     * Sets the face's vertex colors to new color IDs.
     * @param this Instance which allows for the runtime creation and manipulation of meshes.
     * @param faceId Face ID for which to update the vertex colors.
     * @param ids List of new stable color IDs to use for the given face's vertices.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/EditableMesh#SetFaceColors)
     */
    SetFaceColors(this: EditableMesh, faceId: number, ids: Array<unknown>): void;
    /**
     * Sets the face's vertex normals to new normal IDs.
     * @param this Instance which allows for the runtime creation and manipulation of meshes.
     * @param faceId Face ID for which to update the vertex normals.
     * @param ids List of new stable normal IDs to use for the given face's vertices.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/EditableMesh#SetFaceNormals)
     */
    SetFaceNormals(this: EditableMesh, faceId: number, ids: Array<unknown>): void;
    /**
     * Sets the face's vertex UVs to new UV IDs.
     * @param this Instance which allows for the runtime creation and manipulation of meshes.
     * @param faceId Face ID for which to update the vertex UVs.
     * @param ids List of new stable UV IDs to use for the given face's vertices.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/EditableMesh#SetFaceUVs)
     */
    SetFaceUVs(this: EditableMesh, faceId: number, ids: Array<unknown>): void;
    /**
     * Sets the face's vertices to new vertex IDs.
     * @param this Instance which allows for the runtime creation and manipulation of meshes.
     * @param faceId Face ID for which to update the vertices.
     * @param ids List of new stable vertex IDs to use for the given face.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/EditableMesh#SetFaceVertices)
     */
    SetFaceVertices(this: EditableMesh, faceId: number, ids: Array<unknown>): void;
    /**
     * Set the normal for a normal ID.
     * @param this Instance which allows for the runtime creation and manipulation of meshes.
     * @param normalId Stable normal ID for which to set the normal vector.
     * @param normal Normal vector to set.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/EditableMesh#SetNormal)
     */
    SetNormal(this: EditableMesh, normalId: number, normal: Vector3): void;
    /**
     * Sets a vertex position in the mesh's local object space.
     * @param this Instance which allows for the runtime creation and manipulation of meshes.
     * @param vertexId Stable vertex ID of the vertex to position.
     * @param p Position in the mesh's local object space.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/EditableMesh#SetPosition)
     */
    SetPosition(this: EditableMesh, vertexId: number, p: Vector3): void;
    /**
     * Sets UV coordinates for a UV ID.
     * @param this Instance which allows for the runtime creation and manipulation of meshes.
     * @param uvId UV ID for which to set the UV coordinates.
     * @param uv UV coordinates.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/EditableMesh#SetUV)
     */
    SetUV(this: EditableMesh, uvId: number, uv: Vector2): void;
    /**
     * Splits all faces on the mesh to be triangles.
     * @param this Instance which allows for the runtime creation and manipulation of meshes.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/EditableMesh#Triangulate)
     */
    Triangulate(this: EditableMesh): void;
    /**
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/EditableMesh#CreateMeshPartAsync)
     */
    CreateMeshPartAsync(this: EditableMesh, initialSize: Vector3, options?: object): MeshPart;
}
/**
 * Instance is the base class for all classes in the Roblox class hierarchy which can be part of the DataModel tree.
 *
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Instance)
 */
interface Instance extends RBXObject {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_Instance: unique symbol;
    /**
     * Determines if an <code>Instance</code> and its descendants can be cloned using <code>Instance:Clone()</code>, and can be saved/published.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Instance#Archivable)
     */
    Archivable: boolean;
    /**
     * A non-unique identifier of the <code>Instance</code>.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Instance#Name)
     */
    Name: string;
    /**
     * Determines the hierarchical parent of the <code>Instance</code>.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Instance#Parent)
     */
    Parent: Instance | undefined;
    /**
     * Applies a tag to the instance.
     * @param this Instance is the base class for all classes in the Roblox class hierarchy which can be part of the DataModel tree.
     * @param tag
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Instance#AddTag)
     */
    AddTag(this: Instance, tag: string): void;
    /**
     * This function destroys all of an instance's children.
     * @param this Instance is the base class for all classes in the Roblox class hierarchy which can be part of the DataModel tree.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Instance#ClearAllChildren)
     */
    ClearAllChildren(this: Instance): void;
    /**
     * Create a copy of an instance and all its descendants, ignoring instances that are not <code>Archivable</code>.
     * @param this Instance is the base class for all classes in the Roblox class hierarchy which can be part of the DataModel tree.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Instance#Clone)
     */
    Clone<T extends Instance>(this: T): T;
    /**
     * Sets the <code>Instance.Parent</code> property to <code>nil</code>, locks the <code>Instance.Parent</code> property, disconnects all connections, and calls <code>Destroy()</code> on all children.
     * @param this Instance is the base class for all classes in the Roblox class hierarchy which can be part of the DataModel tree.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Instance#Destroy)
     */
    Destroy(this: Instance): void;
    /**
     * Returns the first ancestor of the <code>Instance</code> whose <code>Instance.Name</code> is equal to the given name.
     * @param this Instance is the base class for all classes in the Roblox class hierarchy which can be part of the DataModel tree.
     * @param name The <code>Instance.Name</code> to be looked for.
     * @returns The <code>Instance</code> found.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Instance#FindFirstAncestor)
     */
    FindFirstAncestor(this: Instance, name: string): Instance | undefined;
    /**
     * Returns the first ancestor of the <code>Instance</code> whose <code>Object.ClassName</code> is equal to the given className.
     * @param this Instance is the base class for all classes in the Roblox class hierarchy which can be part of the DataModel tree.
     * @param className The <code>Object.ClassName</code> to be looked for.
     * @returns The <code>Instance</code> found.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Instance#FindFirstAncestorOfClass)
     */
    FindFirstAncestorOfClass<T extends keyof Instances>(this: Instance, className: T): Instances[T] | undefined;
    /**
     * Returns the first ancestor of the <code>Instance</code> for whom <code>Object:IsA()</code> returns true for the given className.
     * @param this Instance is the base class for all classes in the Roblox class hierarchy which can be part of the DataModel tree.
     * @param className The <code>Object.ClassName</code> to be looked for.
     * @returns The <code>Instance</code> found.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Instance#FindFirstAncestorWhichIsA)
     */
    FindFirstAncestorWhichIsA<T extends keyof Instances>(this: Instance, className: T): Instances[T] | undefined;
    /**
     * Returns the first child of the <code>Instance</code> found with the given name.
     * @param this Instance is the base class for all classes in the Roblox class hierarchy which can be part of the DataModel tree.
     * @param name The <code>Instance.Name</code> to be searched for.
     * @param recursive Whether or not the search should be conducted recursively.
     * @returns The <code>Instance</code> found.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Instance#FindFirstChild)
     */
    FindFirstChild(this: Instance, childName: string | number, recursive?: boolean): Instance | undefined;
    /**
     * Returns the first child of the <code>Instance</code> whose <code>ClassName</code> is equal to the given className.
     * @param this Instance is the base class for all classes in the Roblox class hierarchy which can be part of the DataModel tree.
     * @param className The <code>Object.ClassName</code> to be looked for.
     * @returns The <code>Instance</code> found.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Instance#FindFirstChildOfClass)
     */
    FindFirstChildOfClass<T extends keyof Instances>(this: Instance, className: T): Instances[T] | undefined;
    /**
     * Returns the first child of the <code>Instance</code> for whom <code>Object:IsA()</code> returns true for the given className.
     * @param this Instance is the base class for all classes in the Roblox class hierarchy which can be part of the DataModel tree.
     * @param className The <code>Object.ClassName</code> to be searched for.
     * @param recursive Whether or not the search should be conducted recursively.
     * @returns The <code>Instance</code> found.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Instance#FindFirstChildWhichIsA)
     */
    FindFirstChildWhichIsA<T extends keyof Instances>(this: Instance, className: T, recursive?: boolean): Instances[T] | undefined;
    /**
     * Returns the first descendant found with the given <code>Instance.Name</code>.
     * @param this Instance is the base class for all classes in the Roblox class hierarchy which can be part of the DataModel tree.
     * @param name The <code>Instance.Name</code> to search for.
     * @returns The <code>Instance</code> found.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Instance#FindFirstDescendant)
     */
    FindFirstDescendant(this: Instance, name: string): Instance | undefined;
    /**
     * Returns the <code>Actor</code> associated with the Instance, if any.
     * @param this Instance is the base class for all classes in the Roblox class hierarchy which can be part of the DataModel tree.
     * @returns The <code>Actor</code> found.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Instance#GetActor)
     */
    GetActor(this: Instance): Actor | undefined;
    /**
     * Returns the value which has been assigned to the given attribute name.
     * @param this Instance is the base class for all classes in the Roblox class hierarchy which can be part of the DataModel tree.
     * @param attribute The name of the attribute being retrieved.
     * @returns The value which has been assigned to the given attribute name. If no attribute has been assigned, <code>nil</code> is returned.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Instance#GetAttribute)
     */
    GetAttribute(this: Instance, attribute: string): AttributeValue | undefined;
    /**
     * Returns an event that fires when the given attribute changes.
     * @param this Instance is the base class for all classes in the Roblox class hierarchy which can be part of the DataModel tree.
     * @param attribute The name of the specified attribute for which the change signal is being returned.
     * @returns An event that fires when the given attribute changes.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Instance#GetAttributeChangedSignal)
     */
    GetAttributeChangedSignal(this: Instance, attribute: string): RBXScriptSignal;
    /**
     * Returns a dictionary of the instance's attributes.
     * @param this Instance is the base class for all classes in the Roblox class hierarchy which can be part of the DataModel tree.
     * @returns A dictionary of string → variant pairs for each attribute where the string is the name of the attribute and the variant is a non-nil value.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Instance#GetAttributes)
     */
    GetAttributes(this: Instance): Map<string, AttributeValue>;
    /**
     * Returns an array containing all of the instance's children.
     * @param this Instance is the base class for all classes in the Roblox class hierarchy which can be part of the DataModel tree.
     * @returns An array containing the instance's children.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Instance#GetChildren)
     */
    GetChildren(this: Instance): Array<Instance>;
    /**
     * Returns an array containing all of the descendants of the instance.
     * @param this Instance is the base class for all classes in the Roblox class hierarchy which can be part of the DataModel tree.
     * @returns An array containing the instance's descendants.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Instance#GetDescendants)
     */
    GetDescendants(this: Instance): Array<Instance>;
    /**
     * Returns a string describing the instance's ancestry.
     * @param this Instance is the base class for all classes in the Roblox class hierarchy which can be part of the DataModel tree.
     * @returns The full name of the <code>Instance</code>.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Instance#GetFullName)
     */
    GetFullName(this: Instance): string;
    /**
     * @param this Instance is the base class for all classes in the Roblox class hierarchy which can be part of the DataModel tree.
     * @param name
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Instance#GetStyled)
     */
    GetStyled(this: Instance, name: string): unknown;
    /**
     * @param this Instance is the base class for all classes in the Roblox class hierarchy which can be part of the DataModel tree.
     * @param property
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Instance#GetStyledPropertyChangedSignal)
     */
    GetStyledPropertyChangedSignal(this: Instance, property: string): RBXScriptSignal;
    /**
     * Gets an array of all tags applied to the instance.
     * @param this Instance is the base class for all classes in the Roblox class hierarchy which can be part of the DataModel tree.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Instance#GetTags)
     */
    GetTags(this: Instance): Array<string>;
    /**
     * Check whether the instance has a given tag.
     * @param this Instance is the base class for all classes in the Roblox class hierarchy which can be part of the DataModel tree.
     * @param tag
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Instance#HasTag)
     */
    HasTag(this: Instance, tag: string): boolean;
    /**
     * Returns true if an <code>Instance</code> is an ancestor of the given descendant.
     * @param this Instance is the base class for all classes in the Roblox class hierarchy which can be part of the DataModel tree.
     * @param descendant The descendant <code>Instance</code>.
     * @returns True if the <code>Instance</code> is an ancestor of the given descendant.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Instance#IsAncestorOf)
     */
    IsAncestorOf(this: Instance, descendant: Instance): boolean;
    /**
     * Returns true if an <code>Instance</code> is a descendant of the given ancestor.
     * @param this Instance is the base class for all classes in the Roblox class hierarchy which can be part of the DataModel tree.
     * @param ancestor The ancestor <code>Instance</code>.
     * @returns True if the <code>Instance</code> is a descendant of the given ancestor.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Instance#IsDescendantOf)
     */
    IsDescendantOf(this: Instance, ancestor: Instance): boolean;
    /**
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Instance#IsPropertyModified)
     */
    IsPropertyModified(this: Instance, name: string): boolean;
    /**
     * Removes a tag from the instance.
     * @param this Instance is the base class for all classes in the Roblox class hierarchy which can be part of the DataModel tree.
     * @param tag
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Instance#RemoveTag)
     */
    RemoveTag(this: Instance, tag: string): void;
    /**
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Instance#ResetPropertyToDefault)
     */
    ResetPropertyToDefault(this: Instance, name: string): void;
    /**
     * Sets the attribute with the given name to the given value.
     * @param this Instance is the base class for all classes in the Roblox class hierarchy which can be part of the DataModel tree.
     * @param attribute The name of the attribute being set.
     * @param value The value to set the specified attribute to.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Instance#SetAttribute)
     */
    SetAttribute(this: Instance, attribute: string, value: AttributeValue | undefined): void;
    /**
     * Returns the child of the <code>Instance</code> with the given name. If the child does not exist, it will yield the current thread until it does.
     * @param this Instance is the base class for all classes in the Roblox class hierarchy which can be part of the DataModel tree.
     * @param childName The <code>Instance.Name</code> to be looked for.
     * @param timeOut An optional time out parameter.
     * @returns The <code>Instance</code> found.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Instance#WaitForChild)
     */
    WaitForChild(this: Instance, childName: string | number): Instance;
    WaitForChild(this: Instance, childName: string | number, timeOut: number): Instance | undefined;
    /**
     * Fires when the <code>Instance.Parent</code> property of the object or one of its ancestors is changed.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Instance#AncestryChanged)
     */
    readonly AncestryChanged: RBXScriptSignal<(child: Instance, parent: Instance | undefined) => void>;
    /**
     * Fires whenever an attribute is changed on the <code>Instance</code>.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Instance#AttributeChanged)
     */
    readonly AttributeChanged: RBXScriptSignal<(attribute: string) => void>;
    /**
     * Fires after an object is parented to this <code>Instance</code>.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Instance#ChildAdded)
     */
    readonly ChildAdded: RBXScriptSignal<(child: Instance) => void>;
    /**
     * Fires after a child is removed from this <code>Instance</code>.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Instance#ChildRemoved)
     */
    readonly ChildRemoved: RBXScriptSignal<(child: Instance) => void>;
    /**
     * Fires after a descendant is added to the <code>Instance</code>.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Instance#DescendantAdded)
     */
    readonly DescendantAdded: RBXScriptSignal<(descendant: Instance) => void>;
    /**
     * Fires immediately before a descendant of the <code>Instance</code> is removed.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Instance#DescendantRemoving)
     */
    readonly DescendantRemoving: RBXScriptSignal<(descendant: Instance) => void>;
    /**
     * Fires immediately before (or is deferred until after) the instance is destroyed via <code>Instance:Destroy()</code>.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Instance#Destroying)
     */
    readonly Destroying: RBXScriptSignal<() => void>;
    /**
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Instance#StyledPropertiesChanged)
     */
    readonly StyledPropertiesChanged: RBXScriptSignal<() => void>;
}
/**
 * Describes the appearance of an <code>Accessory</code> for the <code>HumanoidDescription</code>.
 *
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/AccessoryDescription)
 */
interface AccessoryDescription extends Instance {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_AccessoryDescription: unique symbol;
    /**
     * The <code>AccessoryType</code> of the <code>Accessory</code> referred to by this description.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/AccessoryDescription#AccessoryType)
     */
    AccessoryType: Enum.AccessoryType;
    /**
     * The asset ID that should be applied when applying this <code>AccessoryDescription</code>.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/AccessoryDescription#AssetId)
     */
    AssetId: number;
    /**
     * A reference to the <code>Instance</code> that should be applied when applying this <code>AccessoryDescription</code>.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/AccessoryDescription#Instance)
     */
    Instance: Instance | undefined;
    /**
     * Whether the <code>Accessory</code> is layered or rigid.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/AccessoryDescription#IsLayered)
     */
    IsLayered: boolean;
    /**
     * The layered clothing sort order, if the <code>Accessory</code> is layered.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/AccessoryDescription#Order)
     */
    Order: number;
    /**
     * The accessory adjustment position offset, if the <code>Accessory</code> is rigid.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/AccessoryDescription#Position)
     */
    Position: Vector3;
    /**
     * The layered clothing puffiness, if the <code>Accessory</code> is layered.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/AccessoryDescription#Puffiness)
     */
    Puffiness: number;
    /**
     * The accessory adjustment rotation offset, if the <code>Accessory</code> is rigid.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/AccessoryDescription#Rotation)
     */
    Rotation: Vector3;
    /**
     * The accessory adjustment scale, if the <code>Accessory</code> is rigid.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/AccessoryDescription#Scale)
     */
    Scale: Vector3;
    /**
     * Returns the applied <code>Accessory</code>.
     * @param this Describes the appearance of an <code>Accessory</code> for the <code>HumanoidDescription</code>.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/AccessoryDescription#GetAppliedInstance)
     */
    GetAppliedInstance(this: AccessoryDescription): Instance | undefined;
}
/**
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/AccountService)
 */
interface AccountService extends Instance {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_AccountService: unique symbol;
}
/**
 * An object that can attach to a player's character.
 *
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Accoutrement)
 */
interface Accoutrement extends Instance {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_Accoutrement: unique symbol;
    /**
     * Sets the offset position of the object on the Player.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Accoutrement#AttachmentForward)
     */
    AttachmentForward: Vector3;
    /**
     * The exact CFrame of the Accoutrement.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Accoutrement#AttachmentPoint)
     */
    AttachmentPoint: CFrame;
    /**
     * Sets the position of the object on the Player.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Accoutrement#AttachmentPos)
     */
    AttachmentPos: Vector3;
    /**
     * Sets the offset position of the object on the Player.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Accoutrement#AttachmentRight)
     */
    AttachmentRight: Vector3;
    /**
     * Sets the offset position of the object on the Player.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Accoutrement#AttachmentUp)
     */
    AttachmentUp: Vector3;
}
/**
 * An item that a Character can wear.
 *
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Accessory)
 */
interface Accessory extends Accoutrement {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_Accessory: unique symbol;
    /**
     * Specifies the AccessoryType of the Accessory (eg. Hat, Tshirt, Waist).
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Accessory#AccessoryType)
     */
    AccessoryType: Enum.AccessoryType;
}
/**
 * <strong>Deprecated:</strong> This class has been superseded by the <code>Accessory</code> class. Do not use it for new work.
 *
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Hat)
 */
interface Hat extends Accoutrement {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_Hat: unique symbol;
}
/**
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/AchievementService)
 */
interface AchievementService extends Instance {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_AchievementService: unique symbol;
}
/**
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/ActivityHistoryEventService)
 */
interface ActivityHistoryEventService extends Instance {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_ActivityHistoryEventService: unique symbol;
}
/**
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/AdPortal)
 */
interface AdPortal extends Instance {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_AdPortal: unique symbol;
    /**
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/AdPortal#Status)
     */
    readonly Status: Enum.AdUnitStatus;
}
/**
 * Collection of methods that allows developers to track how users interact with their experiences.
 *
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/AnalyticsService)
 */
interface AnalyticsService extends Instance {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_AnalyticsService: unique symbol;
    /**
     * <strong>Deprecated:</strong> <br>Fires a custom event with a custom event name and data.
     * @param this Collection of methods that allows developers to track how users interact with their experiences.
     * @param player The player who triggered the custom event. nil if not player related.
     * @param eventCategory User defined category. This should be the name of the event.
     * @param customData Optional. User defined data, could be a string, a number or a table.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/AnalyticsService#FireCustomEvent)
     */
    FireCustomEvent(this: AnalyticsService, player: Player | undefined, eventCategory: string, customData?: unknown): void;
    /**
     * <strong>Deprecated:</strong> This function has been deprecated in favor of more descriptive methods, including: <ul> <li><code>AnalyticsService:FireCustomEvent()</code></li> <li><code>AnalyticsService:FireInGameEconomyEvent()</code></li> <li><code>AnalyticsService:FireLogEvent()</code></li> <li><code>AnalyticsService:FirePlayerProgressionEvent()</code><br>Report a custom event to PlayFab.</li> </ul>
     * @param this Collection of methods that allows developers to track how users interact with their experiences.
     * @param category 'The category of event to report. Cannot contain the following characters: comma <code>,</code>, double quote <code>"</code> or newline characters <code>\r\n</code>'.
     * @param value A value to be serialized and reported. Serialized length must not exceed 1 KB, or 1024 bytes.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/AnalyticsService#FireEvent)
     */
    FireEvent(this: AnalyticsService, category: string, value: unknown): void;
    /**
     * <strong>Deprecated:</strong> <br>Fire an event used to track player actions pertaining to the in-game economy.
     * @param this Collection of methods that allows developers to track how users interact with their experiences.
     * @param player The player who triggered the economy event.
     * @param itemName The name of the item.
     * @param economyAction Indicates the acquisition or spending of an in game resource.
     * @param itemCategory A user defined category for items such as "Vehicle," "Weapon.".
     * @param amount The amount of the currency.
     * @param currency The currency used. Examples: 'gold', 'gems', 'life.'.
     * @param location The event location. A dictionary that each key-value represents an entry of location data. The key-value is a string-string pair. With this you can query which are the most popular "stores" then maybe you want to increase/lower the price for the stores. See the example below: <pre><code class="language-lua">local location = {     [&quot;placeDesc&quot;] = &quot;Dungeon1&quot;,     [&quot;levelDesc&quot;] = &quot;level2&quot;,     [&quot;mapDesc&quot;] = &quot;LeftChamberMap&quot;,     [&quot;storeName&quot;] = &quot;DarkSmith&quot;,     [&quot;userDefindKey&quot;] = &quot;0005&quot; } </code></pre>
     * @param customData Optional. User defined data, could be a string, a number or a table.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/AnalyticsService#FireInGameEconomyEvent)
     */
    FireInGameEconomyEvent(this: AnalyticsService, player: Player | undefined, itemName: string, economyAction: CastsToEnum<Enum.AnalyticsEconomyAction>, itemCategory: string, amount: number, currency: string, location?: {
        [index: string]: string;
    }, customData?: unknown): void;
    /**
     * <strong>Deprecated:</strong> <br>Fire a log event used to track errors and warnings experienced by players.
     * @param this Collection of methods that allows developers to track how users interact with their experiences.
     * @param player The player who triggered the error event, nil if not player related.
     * @param logLevel The specified log level (e.g. Debug, Error).
     * @param message User defined message.
     * @param debugInfo Optional. A dictionary which contains predefined keys including "errorCode" and "stackTrace". Both keys values are strings. stackTrace is a traceback of the current function call stack. <pre><code class="language-lua">local debugInfo = {             errorCode = '123',             stackTrace = debug.traceback()       } </code></pre>
     * @param customData Optional. User defined data, could be a string, a number or a table.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/AnalyticsService#FireLogEvent)
     */
    FireLogEvent(this: AnalyticsService, player: Player | undefined, logLevel: CastsToEnum<Enum.AnalyticsLogLevel>, message: string, debugInfo?: {
        errorCode?: string;
        stackTrace?: string;
    }, customData?: unknown): void;
    /**
     * <strong>Deprecated:</strong> <br>Fire an event used to track player progression through the game.
     * @param this Collection of methods that allows developers to track how users interact with their experiences.
     * @param player The player who triggered the event.
     * @param category A user defined category for progression.
     * @param progressionStatus Indicates the status of the progression.
     * @param location The event location. A dictionary that each key-value represents an entry of location data. The key-value is a string-string pair. With this developers can query where is the most frequent location for a specific progression event category. For example, the category could be "LevelUp". <pre><code class="language-lua">local location = {     [&quot;placeDesc&quot;] = &quot;Dungeon1&quot;,     [&quot;levelDesc&quot;] = &quot;level2&quot;,     [&quot;mapDesc&quot;] = &quot;LeftChamberMap&quot;,     [&quot;ProgresionType&quot;] = &quot;LevelUp&quot;,     [&quot;userDefindKey5&quot;] = &quot;0005&quot; } </code></pre>
     * @param statistics Optional. A dictionary that each key-value represents an entry of statistics data that allows developers to track any specific data that they want to collect as players progress through their game. Key-Value is a string-number pair. <pre><code class="language-lua">local statistics = {     [&quot;numberOfKills&quot;] = 111,     [&quot;numberOfExp&quot;] = 222,     [&quot;userDefindKey3&quot;] = number,     [&quot;userDefindKey4&quot;] = number,     [&quot;userDefindKey5&quot;] = number } </code></pre>
     * @param customData Optional. User defined data, could be a string, a number or a table.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/AnalyticsService#FirePlayerProgressionEvent)
     */
    FirePlayerProgressionEvent(this: AnalyticsService, player: Player | undefined, category: string, progressionStatus: CastsToEnum<Enum.AnalyticsProgressionStatus>, location?: {
        [index: string]: string;
    }, statistics?: {
        [index: string]: number;
    }, customData?: unknown): void;
    /**
     * Logs an event used to track custom metrics of a user in experience.
     * @param this Collection of methods that allows developers to track how users interact with their experiences.
     * @param player The user who triggered the event.
     * @param eventName The name of the custom event.
     * @param value The value of the event that will be used in aggregation.
     * @param customFields Optional dictionary of custom fields that will provide breakdowns in Roblox-provided charts. Only specific keys, provided by <code>AnalyticsCustomFieldKeys</code>, will be used for these breakdowns. Limited to 8,000 unique combinations of values across the three custom fields per experience.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/AnalyticsService#LogCustomEvent)
     */
    LogCustomEvent(this: AnalyticsService, player: Player, eventName: string, value?: number, customFields?: object): void;
    /**
     * Logs an event used to track player actions related in experience.
     * @param this Collection of methods that allows developers to track how users interact with their experiences.
     * @param player The user who triggered the event.
     * @param flowType Should specify the direction that currency is flowing using <code>AnalyticsEconomyFlowType</code>.
     * @param currencyType The name of the currency being added or removed, for example <code>"gold"</code>, <code>"gems"</code>, or <code>"energy"</code>. Limited to 5 unique currency types per experience.
     * @param amount The amount of currency being added or removed. This value should always be positive.
     * @param endingBalance The user's balance after the currency has been added or removed. This value should always be greater than or equal to 0.
     * @param transactionType The type of transaction that occurred. While you're free to use any transaction type, it's recommended to use the provided types from <code>AnalyticsEconomyTransactionType</code> such as <code>"IAP"</code> or <code>"ContextualPurchase"</code> to enable future insights from Roblox tools and charts. Because this field type is a string, you'll need to pass the <code>Name</code> value of the enum. For example <code>Enum.AnalyticsEconomyTransactionType.IAP.Name</code>. Limited to 20 unique types per experience.
     * @param itemSku Optional SKU of the item or bundle being purchased. This is a unique identifier for the item being purchased. Limited to 100 unique SKUs per experience.
     * @param customFields Optional dictionary of custom fields that will provide breakdowns in Roblox-provided charts. Only specific keys, provided by <code>AnalyticsCustomFieldKeys</code>, will be used for these breakdowns. Limited to 8,000 unique combinations of values across the three custom fields per experience.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/AnalyticsService#LogEconomyEvent)
     */
    LogEconomyEvent(this: AnalyticsService, player: Player, flowType: CastsToEnum<Enum.AnalyticsEconomyFlowType>, currencyType: string, amount: number, endingBalance: number, transactionType: string, itemSku: string, customFields?: object): void;
    /**
     * Logs an event used to track user actions stepping through a pre-planned funnel.
     * @param this Collection of methods that allows developers to track how users interact with their experiences.
     * @param player The user who triggered the event.
     * @param funnelName The name of the funnel. This should be the same for all steps in the funnel. Limited to 10 unique funnels per experience.
     * @param funnelSessionId Optional unique identifier for the funnel session. This should be the same for all steps in the funnel. Note that this field is only necessary for <strong>recurring</strong> funnels, for example a purchase flow funnel or an item upgrade funnel. If you don't have a natural funnel session identifier, it's recommended to use <code>HttpService:GenerateGUID()</code>.
     * @param step The step number in the funnel. This should be unique for each step in the funnel. All funnels start at step 1. Limited to steps 1-100. Repeated steps by the same user in the same funnel session, or when <code>funnelSessionId</code> is <code>nil</code> will be ignored. Note that if any steps are skipped, the intermediate steps will be considered completed.
     * @param stepName Optional name of the step in the funnel. This field is only used for display purposes in Roblox-provided charts.
     * @param customFields Optional dictionary of custom fields that will provide breakdowns in Roblox-provided charts. Only specific keys, provided by <code>AnalyticsCustomFieldKeys</code>, will be used for these breakdowns. Limited to 8,000 unique combinations of values across the three custom fields per experience.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/AnalyticsService#LogFunnelStepEvent)
     */
    LogFunnelStepEvent(this: AnalyticsService, player: Player, funnelName: string, funnelSessionId: string, step: number, stepName: string, customFields?: object): void;
    /**
     * Logs an event used to track user actions stepping through an onboarding funnel.
     * @param this Collection of methods that allows developers to track how users interact with their experiences.
     * @param player The user who triggered the event.
     * @param step The step number in the funnel. This should be unique for each step in the funnel. All funnels start at step 1. Limited to steps 1-100. Note that if any steps are skipped, the intermediate steps will be considered completed.
     * @param stepName Optional name of the step in the funnel. This field is only used for display purposes in Roblox-provided charts.
     * @param customFields Optional dictionary of custom fields that will provide breakdowns in Roblox-provided charts. Only specific keys, provided by <code>AnalyticsCustomFieldKeys</code>, will be used for these breakdowns. Limited to 8,000 unique combinations of values across the three custom fields per experience.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/AnalyticsService#LogOnboardingFunnelStepEvent)
     */
    LogOnboardingFunnelStepEvent(this: AnalyticsService, player: Player, step: number, stepName: string, customFields?: object): void;
    /**
     * Logs an event for when a user has completed a level attempt.
     * @param this Collection of methods that allows developers to track how users interact with their experiences.
     * @param player The player who triggered the event.
     * @param progressionPathName
     * @param level
     * @param levelName
     * @param customFields
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/AnalyticsService#LogProgressionCompleteEvent)
     */
    LogProgressionCompleteEvent(this: AnalyticsService, player: Player, progressionPathName: string, level: number, levelName: string, customFields?: object): void;
    /**
     * Logs an event for when a user has started, completed, or failed a level attempt.
     * @param this Collection of methods that allows developers to track how users interact with their experiences.
     * @param player The player who triggered the event.
     * @param progressionPathName
     * @param status
     * @param level
     * @param levelName
     * @param customFields
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/AnalyticsService#LogProgressionEvent)
     */
    LogProgressionEvent(this: AnalyticsService, player: Player, progressionPathName: string, status: CastsToEnum<Enum.AnalyticsProgressionType>, level: number, levelName: string, customFields?: object): void;
    /**
     * Logs an event for when a user has failed a level attempt.
     * @param this Collection of methods that allows developers to track how users interact with their experiences.
     * @param player The user who triggered the event.
     * @param progressionPathName
     * @param level
     * @param levelName
     * @param customFields
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/AnalyticsService#LogProgressionFailEvent)
     */
    LogProgressionFailEvent(this: AnalyticsService, player: Player, progressionPathName: string, level: number, levelName: string, customFields?: object): void;
    /**
     * Logs an event for when a user has started a level attempt.
     * @param this Collection of methods that allows developers to track how users interact with their experiences.
     * @param player The player who triggered the event.
     * @param progressionPathName
     * @param level
     * @param levelName
     * @param customFields
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/AnalyticsService#LogProgressionStartEvent)
     */
    LogProgressionStartEvent(this: AnalyticsService, player: Player, progressionPathName: string, level: number, levelName: string, customFields?: object): void;
}
/**
 * References an animation asset which can be loaded by an <code>AnimationController</code>.
 *
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Animation)
 */
interface Animation extends Instance {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_Animation: unique symbol;
    /**
     * Asset ID of the animation an <code>Animation</code> object is referencing.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Animation#AnimationId)
     */
    AnimationId: ContentId;
}
/**
 * Represents all types of animation data that the Roblox animation system can consume.
 *
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/AnimationClip)
 */
interface AnimationClip extends Instance {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_AnimationClip: unique symbol;
    /**
     * Determines whether the animation stored in this <code>AnimationClip</code> is intended to loop.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/AnimationClip#Loop)
     */
    Loop: boolean;
    /**
     * Determines which clip takes priority when multiple animations are playing simultaneously.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/AnimationClip#Priority)
     */
    Priority: Enum.AnimationPriority;
}
/**
 * Stores animation data in the form of curves for each individual channel to animate.
 *
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/CurveAnimation)
 */
interface CurveAnimation extends AnimationClip {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_CurveAnimation: unique symbol;
}
/**
 * This object stores all of the <code>Keyframes</code> and other data for the animation.
 *
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/KeyframeSequence)
 */
interface KeyframeSequence extends AnimationClip {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_KeyframeSequence: unique symbol;
    /**
     * Adds a <code>Keyframe</code> to the <code>KeyframeSequence</code> by parenting it to the <code>KeyframeSequence</code>.
     * @param this This object stores all of the <code>Keyframes</code> and other data for the animation.
     * @param keyframe The <code>Keyframe</code> to be added.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/KeyframeSequence#AddKeyframe)
     */
    AddKeyframe(this: KeyframeSequence, keyframe: Instance): void;
    /**
     * Returns an array that contains all <code>Keyframes</code> contained in a <code>KeyframeSequence</code>.
     * @param this This object stores all of the <code>Keyframes</code> and other data for the animation.
     * @returns An array of <code>Keyframe</code>.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/KeyframeSequence#GetKeyframes)
     */
    GetKeyframes(this: KeyframeSequence): Array<Keyframe>;
    /**
     * This function removes a <code>Keyframe</code> from the <code>KeyframeSequence</code> by setting its parent to nil.
     * @param this This object stores all of the <code>Keyframes</code> and other data for the animation.
     * @param keyframe The <code>Keyframe</code> to be removed.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/KeyframeSequence#RemoveKeyframe)
     */
    RemoveKeyframe(this: KeyframeSequence, keyframe: Instance): void;
}
/**
 * Provides functions to load and preview <code>AnimationClips</code>.
 *
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/AnimationClipProvider)
 */
interface AnimationClipProvider extends Instance {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_AnimationClipProvider: unique symbol;
    /**
     * Generates a temporary asset ID from a <code>AnimationClip</code> that can be used for localized testing of an animation.
     * @param this Provides functions to load and preview <code>AnimationClips</code>.
     * @param animationClip The <code>AnimationClip</code> to be used.
     * @returns A temporary asset ID generated for localized animation playback.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/AnimationClipProvider#RegisterActiveAnimationClip)
     */
    RegisterActiveAnimationClip(this: AnimationClipProvider, animationClip: AnimationClip): ContentId;
    /**
     * Generates a temporary asset ID from a <code>AnimationClip</code> that can be used for localized testing of an animation. Generates a hash.
     * @param this Provides functions to load and preview <code>AnimationClips</code>.
     * @param animationClip The <code>AnimationClip</code> to be used.
     * @returns A temporary asset ID generated for localized animation playback.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/AnimationClipProvider#RegisterAnimationClip)
     */
    RegisterAnimationClip(this: AnimationClipProvider, animationClip: AnimationClip): ContentId;
    /**
     * Returns a <code>AnimationClip</code> based on the specified assetId asynchronously.
     * @param this Provides functions to load and preview <code>AnimationClips</code>.
     * @param assetId The content ID of the animation.
     * @returns The <code>AnimationClip</code> found.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/AnimationClipProvider#GetAnimationClipAsync)
     */
    GetAnimationClipAsync(this: AnimationClipProvider, assetId: ContentId): AnimationClip;
    /**
     * This function returns an <code>InventoryPages</code> object which can be used to iterate over animations owned by a specific user.
     * @param this Provides functions to load and preview <code>AnimationClips</code>.
     * @param userId The user ID of the user.
     * @returns An <code>InventoryPages</code> of animations.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/AnimationClipProvider#GetAnimations)
     */
    GetAnimations(this: AnimationClipProvider, userId: number): Instance | undefined;
    /**
     * @param this Provides functions to load and preview <code>AnimationClips</code>.
     * @param assetId
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/AnimationClipProvider#GetClipEvaluatorAsync)
     */
    GetClipEvaluatorAsync(this: AnimationClipProvider, assetId: ContentId): ClipEvaluator;
}
/**
 * Allows animations to be loaded and applied to a character or model in place of a <code>Humanoid</code>.
 *
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/AnimationController)
 */
interface AnimationController extends Instance {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_AnimationController: unique symbol;
    /**
     * <strong>Deprecated:</strong> <br>Returns an array of all <code>AnimationTracks</code> that are currently being played by the <code>AnimationController</code>.
     * @param this Allows animations to be loaded and applied to a character or model in place of a <code>Humanoid</code>.
     * @returns An array of playing <code>AnimationTracks</code>.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/AnimationController#GetPlayingAnimationTracks)
     */
    GetPlayingAnimationTracks(this: AnimationController): Array<AnimationTrack>;
    /**
     * <strong>Deprecated:</strong> This function is deprecated in favor of using <code>Animator:LoadAnimation()</code> directly (the <code>Animator</code> may be created while editing or at runtime).<br>Loads an <code>Animation</code> onto an <code>AnimationController</code>, returning an <code>AnimationTrack</code> that can be used for playback.
     * @param this Allows animations to be loaded and applied to a character or model in place of a <code>Humanoid</code>.
     * @param animation The <code>Animation</code> to be used.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/AnimationController#LoadAnimation)
     */
    LoadAnimation(this: AnimationController, animation: Animation): AnimationTrack;
    /**
     * <strong>Deprecated:</strong> <br>Fires whenever the <code>AnimationController</code> begins playing an animation. It returns the <code>AnimationTrack</code> playing.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/AnimationController#AnimationPlayed)
     */
    readonly AnimationPlayed: RBXScriptSignal<(animationTrack: AnimationTrack) => void>;
}
/**
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/AnimationFromVideoCreatorService)
 */
interface AnimationFromVideoCreatorService extends Instance {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_AnimationFromVideoCreatorService: unique symbol;
}
/**
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/AnimationFromVideoCreatorStudioService)
 */
interface AnimationFromVideoCreatorStudioService extends Instance {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_AnimationFromVideoCreatorStudioService: unique symbol;
}
/**
 * Used to store information regarding the model an animation was authored for.
 *
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/AnimationRigData)
 */
interface AnimationRigData extends Instance {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_AnimationRigData: unique symbol;
}
/**
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/AnimationStreamTrack)
 */
interface AnimationStreamTrack extends Instance {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_AnimationStreamTrack: unique symbol;
    /**
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/AnimationStreamTrack#Animation)
     */
    readonly Animation: TrackerStreamAnimation | undefined;
    /**
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/AnimationStreamTrack#FACSDataLod)
     */
    readonly FACSDataLod: Enum.FACSDataLod;
    /**
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/AnimationStreamTrack#IsPlaying)
     */
    readonly IsPlaying: boolean;
    /**
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/AnimationStreamTrack#Priority)
     */
    Priority: Enum.AnimationPriority;
    /**
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/AnimationStreamTrack#WeightCurrent)
     */
    readonly WeightCurrent: number;
    /**
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/AnimationStreamTrack#WeightTarget)
     */
    readonly WeightTarget: number;
}
/**
 * Controls the playback of an animation on an <code>AnimationController</code>.
 *
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/AnimationTrack)
 */
interface AnimationTrack extends Instance {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_AnimationTrack: unique symbol;
    /**
     * The <code>Animation</code> object that was used to create this <code>AnimationTrack</code>.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/AnimationTrack#Animation)
     */
    readonly Animation: Animation | undefined;
    /**
     * A read only property that returns true when the <code>AnimationTrack</code> is playing.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/AnimationTrack#IsPlaying)
     */
    readonly IsPlaying: boolean;
    /**
     * A read only property that returns the length (in seconds) of an <code>AnimationTrack</code>. This will return 0 until the animation has fully loaded and thus may not be immediately available.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/AnimationTrack#Length)
     */
    readonly Length: number;
    /**
     * Sets whether the animation will repeat after finishing. If it is changed while playing the result will take effect after the animation finishes.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/AnimationTrack#Looped)
     */
    Looped: boolean;
    /**
     * Sets the priority of an <code>AnimationTrack</code>. Depending on what this is set to, playing multiple animations at once will look to this property to figure out which <code>Keyframe</code> <code>Poses</code> should be played over one another.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/AnimationTrack#Priority)
     */
    Priority: Enum.AnimationPriority;
    /**
     * The Speed of an <code>AnimationTrack</code> is a read only property that gives the current playback speed of the <code>AnimationTrack</code>. This has a default value of 1. When speed is equal to 1, the amount of time an animation takes to complete is equal to <code>AnimationTrack.Length</code> (in seconds).
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/AnimationTrack#Speed)
     */
    readonly Speed: number;
    /**
     * Returns the position in time in seconds that an <code>AnimationTrack</code> is through playing its source animation. Can be set to make the track jump to a specific moment in the animation.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/AnimationTrack#TimePosition)
     */
    TimePosition: number;
    /**
     * Read-only property that gives the current weight of the <code>AnimationTrack</code>. It has a default value of 1.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/AnimationTrack#WeightCurrent)
     */
    readonly WeightCurrent: number;
    /**
     * Read-only property that gives the current weight of the <code>AnimationTrack</code>.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/AnimationTrack#WeightTarget)
     */
    readonly WeightTarget: number;
    /**
     * Changes the <code>AnimationTrack.Speed</code> of an animation. A positive value for speed plays the animation forward, a negative one plays it backwards, and 0 pauses it.
     * @param this Controls the playback of an animation on an <code>AnimationController</code>.
     * @param speed The playback speed the animation is to be changed to.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/AnimationTrack#AdjustSpeed)
     */
    AdjustSpeed(this: AnimationTrack, speed?: number): void;
    /**
     * Changes the weight of an animation, with the optional fadeTime parameter determining how long it takes for <code>AnimationTrack.WeightCurrent</code> to reach <code>AnimationTrack.WeightTarget</code>.
     * @param this Controls the playback of an animation on an <code>AnimationController</code>.
     * @param weight The weight the animation is to be changed to.
     * @param fadeTime The duration of time that the animation will fade between the old weight and the new weight for.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/AnimationTrack#AdjustWeight)
     */
    AdjustWeight(this: AnimationTrack, weight?: number, fadeTime?: number): void;
    /**
     * Returns an <code>event</code> that fires when a specified <code>KeyframeMarker</code> has been hit in an <code>animation</code>.
     * @param this Controls the playback of an animation on an <code>AnimationController</code>.
     * @param name The name of the <code>KeyFrameMarker</code> the signal is being created for.
     * @returns The signal created and fired when the animation reaches the created <code>KeyFrameMarker</code>.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/AnimationTrack#GetMarkerReachedSignal)
     */
    GetMarkerReachedSignal(this: AnimationTrack, name: string): RBXScriptSignal<(param?: string) => void>;
    /**
     * Returns the time position of the first <code>Keyframe</code> of the given name in an <code>AnimationTrack</code>.
     * @param this Controls the playback of an animation on an <code>AnimationController</code>.
     * @param keyframeName The name associated with the <code>Keyframe</code> to be found.
     * @returns The time, in seconds, the <code>Keyframe</code> occurs at normal playback speed.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/AnimationTrack#GetTimeOfKeyframe)
     */
    GetTimeOfKeyframe(this: AnimationTrack, keyframeName: string): number;
    /**
     * Plays the <code>AnimationTrack</code>. Once called an <code>AnimationTrack</code> will play with the specified fadeTime, weight and speed.
     * @param this Controls the playback of an animation on an <code>AnimationController</code>.
     * @param fadeTime The duration of time that the animation's weight should be faded in for.
     * @param weight The weight the animation is to be played at.
     * @param speed The playback speed of the animation.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/AnimationTrack#Play)
     */
    Play(this: AnimationTrack, fadeTime?: number, weight?: number, speed?: number): void;
    /**
     * Stops the <code>AnimationTrack</code>. Once called playback of the <code>AnimationTrack</code> will stop and the weight of the animation will move towards zero over a length of time specified by the optional fadeTime parameter.
     * @param this Controls the playback of an animation on an <code>AnimationController</code>.
     * @param fadeTime The time, in seconds, for which animation weight is to be faded out over.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/AnimationTrack#Stop)
     */
    Stop(this: AnimationTrack, fadeTime?: number): void;
    /**
     * Fires when an <code>AnimationTrack</code> loops on the next update following the end of the previous animation loop.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/AnimationTrack#DidLoop)
     */
    readonly DidLoop: RBXScriptSignal<() => void>;
    /**
     * Fires when the <code>AnimationTrack</code> is completely done moving anything in the world. The animation has finished playing, the "fade out" is finished, and the subject is in a neutral pose.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/AnimationTrack#Ended)
     */
    readonly Ended: RBXScriptSignal<() => void>;
    /**
     * Fires every time playback of an <code>AnimationTrack</code> reaches a <code>Keyframe</code> that does not have the default name - "Keyframe.".
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/AnimationTrack#KeyframeReached)
     */
    readonly KeyframeReached: RBXScriptSignal<(keyframeName: string) => void>;
    /**
     * Fires when the <code>AnimationTrack</code> finishes playing. The AnimationTrack might still animate the subject while the animation "fades out". To catch when the AnimationTrack is completely done moving anything in the world, use the <code>AnimationTrack.Ended</code> event.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/AnimationTrack#Stopped)
     */
    readonly Stopped: RBXScriptSignal<() => void>;
}
/**
 * Responsible for the playback and replication of <code>Animations</code>.
 *
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Animator)
 */
interface Animator extends Instance {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_Animator: unique symbol;
    /**
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Animator#EvaluationThrottled)
     */
    readonly EvaluationThrottled: boolean;
    /**
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Animator#PreferLodEnabled)
     */
    PreferLodEnabled: boolean;
    /**
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Animator#RootMotion)
     */
    readonly RootMotion: CFrame;
    /**
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Animator#RootMotionWeight)
     */
    readonly RootMotionWeight: number;
    /**
     * Computes relative velocities between parts and apply them to <code>Motor6D.Part1</code>. These relative velocity calculations and assignments happen in the order provided.
     * @param this Responsible for the playback and replication of <code>Animations</code>.
     * @param motors
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Animator#ApplyJointVelocities)
     */
    ApplyJointVelocities(this: Animator, motors: Array<Motor6D>): void;
    /**
     * Returns the list of currently playing <code>AnimationTracks</code>.
     * @param this Responsible for the playback and replication of <code>Animations</code>.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Animator#GetPlayingAnimationTracks)
     */
    GetPlayingAnimationTracks(this: Animator): Array<AnimationTrack>;
    /**
     * Loads an <code>Animation</code> onto an <code>Animator</code>, returning an <code>AnimationTrack</code>.
     * @param this Responsible for the playback and replication of <code>Animations</code>.
     * @param animation The <code>Animation</code> to be used.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Animator#LoadAnimation)
     */
    LoadAnimation(this: Animator, animation: Animation): AnimationTrack;
    /**
     * @param this Responsible for the playback and replication of <code>Animations</code>.
     * @param callback
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Animator#RegisterEvaluationParallelCallback)
     */
    RegisterEvaluationParallelCallback(this: Animator, callback: Callback): void;
    /**
     * Fires when the Animator starts playing an AnimationTrack.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Animator#AnimationPlayed)
     */
    readonly AnimationPlayed: RBXScriptSignal<(animationTrack: AnimationTrack) => void>;
}
/**
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Annotation)
 */
interface Annotation extends Instance {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_Annotation: unique symbol;
}
/**
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/WorkspaceAnnotation)
 */
interface WorkspaceAnnotation extends Annotation {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_WorkspaceAnnotation: unique symbol;
}
/**
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/AnnotationsService)
 */
interface AnnotationsService extends Instance {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_AnnotationsService: unique symbol;
}
/**
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/AppLifecycleObserverService)
 */
interface AppLifecycleObserverService extends Instance {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_AppLifecycleObserverService: unique symbol;
}
/**
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/AppUpdateService)
 */
interface AppUpdateService extends Instance {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_AppUpdateService: unique symbol;
}
/**
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/AssetCounterService)
 */
interface AssetCounterService extends Instance {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_AssetCounterService: unique symbol;
}
/**
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/AssetDeliveryProxy)
 */
interface AssetDeliveryProxy extends Instance {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_AssetDeliveryProxy: unique symbol;
    /**
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/AssetDeliveryProxy#Interface)
     */
    Interface: string;
    /**
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/AssetDeliveryProxy#Port)
     */
    Port: number;
    /**
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/AssetDeliveryProxy#StartServer)
     */
    StartServer: boolean;
}
/**
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/AssetImportService)
 */
interface AssetImportService extends Instance {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_AssetImportService: unique symbol;
}
/**
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/AssetImportSession)
 */
interface AssetImportSession extends Instance {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_AssetImportSession: unique symbol;
    /**
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/AssetImportSession#UploadComplete)
     */
    readonly UploadComplete: RBXScriptSignal<(results: object) => void>;
    /**
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/AssetImportSession#UploadProgress)
     */
    readonly UploadProgress: RBXScriptSignal<(progressRatio: number) => void>;
}
/**
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/AssetManagerService)
 */
interface AssetManagerService extends Instance {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_AssetManagerService: unique symbol;
}
/**
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/AssetPatchSettings)
 */
interface AssetPatchSettings extends Instance {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_AssetPatchSettings: unique symbol;
    /**
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/AssetPatchSettings#ContentId)
     */
    ContentId: string;
    /**
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/AssetPatchSettings#OutputPath)
     */
    OutputPath: string;
    /**
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/AssetPatchSettings#PatchId)
     */
    PatchId: string;
}
/**
 * A non-replicated service that handles asset-related queries to the Roblox web API.
 *
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/AssetService)
 */
interface AssetService extends Instance {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_AssetService: unique symbol;
    /**
     * Creates a new <code>EditableImage</code>.
     * @param this A non-replicated service that handles asset-related queries to the Roblox web API.
     * @param editableImageOptions Options table containing controls for the method: <ul> <li><code>Size</code> – A <code>Vector2</code> that specifies the image's desired   width and height.</li> </ul>
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/AssetService#CreateEditableImage)
     */
    CreateEditableImage(this: AssetService, editableImageOptions?: object): EditableImage;
    /**
     * Creates a new, empty <code>EditableMesh</code>.
     * @param this A non-replicated service that handles asset-related queries to the Roblox web API.
     * @param editableMeshOptions Table containing options for the created <code>EditableMesh</code>. Currently no options are available since <code>FixedSize</code> will always be <code>false</code> for empty editable meshes.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/AssetService#CreateEditableMesh)
     */
    CreateEditableMesh(this: AssetService, editableMeshOptions?: object): EditableMesh;
    /**
     * Creates a new asset from the given object.
     * @param this A non-replicated service that handles asset-related queries to the Roblox web API.
     * @param object The object to be created as an asset.
     * @param assetType Currently supported types are: <ul> <li><code>AssetType.Model</code> – with <code>object</code> as any valid <code>Instance</code>   root.</li> <li><code>AssetType.Plugin</code> – with <code>object</code> as any valid   <code>Instance</code> root.</li> <li><code>AssetType.Mesh</code> – with <code>object</code> as any valid   <code>EditableMesh</code> root.</li> <li><code>AssetType.Image</code> – with <code>object</code> as any valid   <code>EditableImage</code> root.</li> </ul>
     * @param requestParameters Options table containing asset metadata: <ul> <li><code>Name</code> – Name of the asset as a string. Defaults to <code>[object.Name]</code>.</li> <li><code>Description</code> – Description of the asset as a string. Defaults to   <code>"Created with AssetService:CreateAssetAsync"</code>.</li> <li><code>CreatorId</code> – ID of the asset creator as a number. Defaults to the   logged in Roblox Studio user for Plugin context. Required for Open   Cloud Luau Execution context.</li> <li><code>CreatorType</code> – <code>AssetCreatorType</code> indicating the type of asset   creator. Defaults to <code>AssetCreatorType.User</code> in Plugin context.   Required for Open Cloud Luau Execution context.</li> <li><code>IsPackage</code> – Boolean value, only applicable to the   <code>AssetType.Model</code> type. Defaults to <code>true</code>.</li> </ul>
     * @returns The <code>CreateAssetResult</code> and asset ID pair if successful.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/AssetService#CreateAssetAsync)
     */
    CreateAssetAsync(this: AssetService, object: RBXObject, assetType: CastsToEnum<Enum.AssetType>, requestParameters?: object): unknown;
    /**
     * Creates a new version for an existing asset from the given object.
     * @param this A non-replicated service that handles asset-related queries to the Roblox web API.
     * @param object The object to be created as an asset.
     * @param assetType Currently supported types are: <ul> <li><code>AssetType.Model</code> – with <code>object</code> as any valid <code>Instance</code>   root.</li> <li><code>AssetType.Plugin</code> – with <code>object</code> as any valid   <code>Instance</code> root.</li> <li><code>AssetType.Mesh</code> – with <code>object</code> as any valid   <code>EditableMesh</code> root.</li> <li><code>AssetType.Image</code> – with <code>object</code> as any valid   <code>EditableImage</code> root.</li> </ul>
     * @param assetId The ID of the asset for the new version.
     * @param requestParameters Options table containing asset metadata: <ul> <li><code>Name</code> – A <code>string</code>. Name of the asset. Default: object.Name.</li> <li><code>Description</code> – A <code>string</code>. Description of the asset. Default:   "Created with AssetService:CreateAssetAsync".</li> <li><code>CreatorId</code> – A <code>number</code>. ID of the asset creator. Default: The   logged in Roblox Studio user for Plugin context. Required for Open   Cloud Luau Execution context.</li> <li><code>CreatorType</code> – A <code>AssetCreatorType</code>. Type of asset creator.   Default: <code>AssetCreatorType.User</code> in Plugin context. Required   for Open Cloud Luau Execution context.</li> <li><code>IsPackage</code> – A <code>bool</code>. Only applicable to the   <code>AssetType.Model</code> type. Default: true.</li> </ul>
     * @returns The <code>CreateAssetResult</code> and asset version number pair if successful.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/AssetService#CreateAssetVersionAsync)
     */
    CreateAssetVersionAsync(this: AssetService, object: RBXObject, assetType: CastsToEnum<Enum.AssetType>, assetId: number, requestParameters?: object): unknown;
    /**
     * Creates a new <code>EditableImage</code> object populated with the given image.
     * @param this A non-replicated service that handles asset-related queries to the Roblox web API.
     * @param content
     * @param editableImageOptions Table containing options for the created <code>EditableImage</code>. Currently no options are available since resizing via <code>Size</code> is not supported.
     * @returns A new <code>EditableImage</code> containing the provided image.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/AssetService#CreateEditableImageAsync)
     */
    CreateEditableImageAsync(this: AssetService, content: Content, editableImageOptions?: object): EditableImage;
    /**
     * Returns a new <code>EditableMesh</code> object created from an existing mesh content ID.
     * @param this A non-replicated service that handles asset-related queries to the Roblox web API.
     * @param content
     * @param editableMeshOptions Options table containing controls for the method: <ul> <li><code>FixedSize</code> – A <code>bool</code>. Default value is <code>true</code>, and the returned   <code>EditableMesh</code> will not allow you to add or remove vertices,   only modify their values. Set to <code>false</code> if the ability to change   the mesh topology is required, at the expense of using more memory.</li> </ul>
     * @returns The new <code>EditableMesh</code> instance.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/AssetService#CreateEditableMeshAsync)
     */
    CreateEditableMeshAsync(this: AssetService, content: Content, editableMeshOptions?: object): EditableMesh;
    /**
     * <strong>Deprecated:</strong> This function has been deprecated - use <code>AssetService:CreateEditableMeshAsync()</code>.<br>Returns a new <code>EditableMesh</code> instance created from an existing <code>MeshPart</code>.
     * @param this A non-replicated service that handles asset-related queries to the Roblox web API.
     * @param meshPart The <code>MeshPart</code> from which to create an <code>EditableMesh</code> instance. The part must have a valid <code>MeshId</code> for this method to operate.
     * @returns The new <code>EditableMesh</code> instance.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/AssetService#CreateEditableMeshFromPartAsync)
     */
    CreateEditableMeshFromPartAsync(this: AssetService, meshPart: Instance): EditableMesh;
    /**
     * Creates a new <code>MeshPart</code> with a specified mesh ID and an optional table of fidelity values.
     * @param this A non-replicated service that handles asset-related queries to the Roblox web API.
     * @param meshContent
     * @param options Options table containing one or more controls for the method: <ul> <li><code>CollisionFidelity</code> – The value of   <code>CollisionFidelity</code> in the   resulting part. Defaults to <code>CollisionFidelity.Default</code> if the   option is absent or the <code>options</code> table is <code>nil</code>.</li> <li><code>RenderFidelity</code> – The value of   <code>RenderFidelity</code> in the resulting   part. Defaults to <code>RenderFidelity.Automatic</code> if the option is   absent or the <code>options</code> table is <code>nil</code>.</li> <li><code>FluidFidelity</code> – The value of   <code>FluidFidelity</code> in the resulting part.   Defaults to <code>FluidFidelity.Automatic</code> if the option is absent   or the <code>options</code> table is <code>nil</code>.</li> </ul>
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/AssetService#CreateMeshPartAsync)
     */
    CreateMeshPartAsync(this: AssetService, meshContent: Content, options?: object): MeshPart;
    /**
     * Clones a place through the given <code>templatePlaceID</code>.
     * @param this A non-replicated service that handles asset-related queries to the Roblox web API.
     * @param placeName Name of the new place.
     * @param templatePlaceID <code>PlaceId</code> of the place to clone.
     * @param description Description of the new place.
     * @returns <code>PlaceId</code> of the new place.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/AssetService#CreatePlaceAsync)
     */
    CreatePlaceAsync(this: AssetService, placeName: string, templatePlaceID: number, description: string): number;
    /**
     * Clones a place through the given <code>templatePlaceID</code> and puts it into the inventory of the given player.
     * @param this A non-replicated service that handles asset-related queries to the Roblox web API.
     * @param player
     * @param placeName
     * @param templatePlaceID
     * @param description
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/AssetService#CreatePlaceInPlayerInventoryAsync)
     */
    CreatePlaceInPlayerInventoryAsync(this: AssetService, player: Instance, placeName: string, templatePlaceID: number, description: string): number;
    /**
     * Returns an array of asset IDs that are contained in a specified package.
     * @param this A non-replicated service that handles asset-related queries to the Roblox web API.
     * @param packageAssetId
     * @returns Asset IDs that are contained in a specified package.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/AssetService#GetAssetIdsForPackage)
     */
    GetAssetIdsForPackage(this: AssetService, packageAssetId: number): Array<number>;
    /**
     * Provides relevant metadata about a specific audio source.
     * @param this A non-replicated service that handles asset-related queries to the Roblox web API.
     * @param idList Array of asset or content IDs for which to retrieve metadata. Max batch size is 30.
     * @returns Array of dictionary tables in the same order as the request, where each dictionary contains the following metadata for its asset/content: <ul> <li> <code>AssetId</code> (string) </li> <li> <code>Title</code> (string) </li> <li> <code>Artist</code> (string) </li> <li> <code>Duration</code> (number) in seconds </li> <li> <code>AudioType</code> (<code>AudioSubType</code>) </li> </ul> Note that if an error occurs on fetching metadata for any of the requested assets, for example the asset ID doesn't exist, its dictionary table is still included in the returned array but it only contains the <code>AssetId</code> field for reference purposes. Additionally, if the <code>AudioType</code> cannot be determined for a given asset (perhaps because it's private audio), the resulting dictionary will not contain an <code>AudioType</code> entry.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/AssetService#GetAudioMetadataAsync)
     */
    GetAudioMetadataAsync(this: AssetService, idList: Array<unknown>): Array<unknown>;
    /**
     * Returns details of the contents of specified bundle.
     * @param this A non-replicated service that handles asset-related queries to the Roblox web API.
     * @param bundleId The ID of the specified bundle.
     * @returns Dictionary with the following key-value pairs containing details about the specified bundle: <ul> <li> <code>Id</code> — Bundle ID (same as passed <code>bundleId</code> argument) </li> <li> <code>Name</code> — Bundle name </li> <li> <code>Description</code> — Bundle description </li> <li> <code>BundleType</code> — String representing the <code>BundleType</code>, for   example <code>"BodyParts"</code> or <code>"DynamicHead"</code> </li> <li> <code>Items</code> — Array of items in the bundle, each with details   represented through the following keys: </li> <li> <code>Id</code> — Item ID </li> <li> <code>Name</code> — Item name </li> <li> <code>Type</code> — Item type such as <code>"Asset"</code> . </li> </ul>
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/AssetService#GetBundleDetailsAsync)
     */
    GetBundleDetailsAsync(this: AssetService, bundleId: number): BundleInfo;
    /**
     * <strong>Deprecated:</strong> This item is deprecated and no longer functions correctly. Do not use it for new work.<br>Returns the UserId of the account who created the creationID asset.
     * @param this A non-replicated service that handles asset-related queries to the Roblox web API.
     * @param creationID
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/AssetService#GetCreatorAssetID)
     */
    GetCreatorAssetID(this: AssetService, creationID: number): number;
    /**
     * Returns a <code>StandardPages</code> object which contains the name and <code>PlaceId</code> of places within the current experience.
     * @param this A non-replicated service that handles asset-related queries to the Roblox web API.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/AssetService#GetGamePlacesAsync)
     */
    GetGamePlacesAsync(this: AssetService): StandardPages<{
        Name: string;
        PlaceId: number;
    }>;
    /**
     * Allows in-experience asset creation for users by prompting a publish dialog.
     * @param this A non-replicated service that handles asset-related queries to the Roblox web API.
     * @param player The user who submits an asset creation.
     * @param instance The asset to be created. Currently can't contain scripts or nest non-public assets.
     * @param assetType The asset type. Currently can only be <code>AssetType.Model</code>.
     * @returns The <code>PromptCreateAssetResult</code> and asset ID pair if successful.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/AssetService#PromptCreateAssetAsync)
     */
    PromptCreateAssetAsync(this: AssetService, player: Player, instance: Instance, assetType: CastsToEnum<Enum.AssetType>): unknown;
    /**
     * @param this A non-replicated service that handles asset-related queries to the Roblox web API.
     * @param player
     * @param progressCallback
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/AssetService#PromptImportAnimationClipFromVideoAsync)
     */
    PromptImportAnimationClipFromVideoAsync(this: AssetService, player: Player, progressCallback: Callback): unknown;
    /**
     * Saves the state of the current place.
     * @param this A non-replicated service that handles asset-related queries to the Roblox web API.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/AssetService#SavePlaceAsync)
     */
    SavePlaceAsync(this: AssetService): void;
    /**
     * Finds audio assets matching a variety of search criteria.
     * @param this A non-replicated service that handles asset-related queries to the Roblox web API.
     * @param searchParameters
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/AssetService#SearchAudio)
     */
    SearchAudio(this: AssetService, searchParameters: AudioSearchParams): AudioPages;
}
/**
 * The <code>Atmosphere</code> object pushes Roblox closer toward realistic environments where sunlight scatters in different ways depending on density and other air particle properties.
 *
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Atmosphere)
 */
interface Atmosphere extends Instance {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_Atmosphere: unique symbol;
    /**
     * Changes the <code>Atmosphere</code> hue for subtle environmental moods.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Atmosphere#Color)
     */
    Color: Color3;
    /**
     * When used with increased <code>Atmosphere.Haze</code> and <code>Atmosphere.Glare</code>, defines the hue of the <code>Atmosphere</code> away from the sun, gradually falling off from <code>Atmosphere.Color</code> towards this value.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Atmosphere#Decay)
     */
    Decay: Color3;
    /**
     * Defines the amount of particles in the <code>Atmosphere</code> and essentially controls how much in-game objects/terrain will be obscured by them.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Atmosphere#Density)
     */
    Density: number;
    /**
     * When used with increased <code>Atmosphere.Haze</code>, specifies the glow/glare of the <code>Atmosphere</code> around the sun. More glare results in an increased effect of sunlight cast onto the sky and world.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Atmosphere#Glare)
     */
    Glare: number;
    /**
     * Defines the haziness of the <code>Atmosphere</code> with a visible effect both above the horizon and into the distance.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Atmosphere#Haze)
     */
    Haze: number;
    /**
     * Controls how light transmits between the camera and the sky background.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Atmosphere#Offset)
     */
    Offset: number;
}
/**
 * Defines a point and orientation relative to a parent <code>BasePart</code>, <code>Bone</code>, or another <code>Attachment</code>.
 *
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Attachment)
 */
interface Attachment extends Instance {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_Attachment: unique symbol;
    /**
     * Direction of the <strong>X</strong> axis of the attachment, represented as a unit <code>Vector3</code>.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Attachment#Axis)
     */
    Axis: Vector3;
    /**
     * <code>CFrame</code> offset of the attachment.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Attachment#CFrame)
     */
    CFrame: CFrame;
    /**
     * Orientation of the attachment relative to the orientation of its parent.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Attachment#Orientation)
     */
    Orientation: Vector3;
    /**
     * Positional offset of the attachment, relative to the position and orientation of its parent.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Attachment#Position)
     */
    Position: Vector3;
    /**
     * <strong>Deprecated:</strong> This property is deprecated and should not be used in new work. See <code>Orientation</code> instead.<br>Rotation of the attachment relative to the rotation of its parent.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Attachment#Rotation)
     */
    Rotation: Vector3;
    /**
     * Direction of the <strong>Y</strong> axis of the attachment, represented as a unit <code>Vector3</code>.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Attachment#SecondaryAxis)
     */
    SecondaryAxis: Vector3;
    /**
     * Toggles the in-experience visibility of the attachment.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Attachment#Visible)
     */
    Visible: boolean;
    /**
     * Direction of the <strong>X</strong> axis of the attachment relative to the world, represented as a unit <code>Vector3</code> with a length of 1.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Attachment#WorldAxis)
     */
    WorldAxis: Vector3;
    /**
     * The exact <code>CFrame</code> of the attachment in world space coordinates.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Attachment#WorldCFrame)
     */
    WorldCFrame: CFrame;
    /**
     * Orientation of the attachment relative to the world rather than its own parent.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Attachment#WorldOrientation)
     */
    WorldOrientation: Vector3;
    /**
     * Position of the attachment relative to the world rather than its own parent.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Attachment#WorldPosition)
     */
    WorldPosition: Vector3;
    /**
     * <strong>Deprecated:</strong> This item has been superseded by <code>WorldOrientation</code> which should be used in new work.<br>Rotation of the attachment relative to the world rather than its own parent.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Attachment#WorldRotation)
     */
    readonly WorldRotation: Vector3;
    /**
     * Direction of the <strong>Y</strong> axis of the attachment relative to the world, represented as a unit <code>Vector3</code> with a length of 1.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Attachment#WorldSecondaryAxis)
     */
    WorldSecondaryAxis: Vector3;
    /**
     * <strong>Deprecated:</strong> This method is deprecated and should not be used in new work.<br>Returns the value of the attachment's <code>Axis</code>.
     * @param this Defines a point and orientation relative to a parent <code>BasePart</code>, <code>Bone</code>, or another <code>Attachment</code>.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Attachment#GetAxis)
     */
    GetAxis(this: Attachment): Vector3;
    /**
     * Returns a list of <code>Constraints</code> connected to the attachment.
     * @param this Defines a point and orientation relative to a parent <code>BasePart</code>, <code>Bone</code>, or another <code>Attachment</code>.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Attachment#GetConstraints)
     */
    GetConstraints(this: Attachment): Array<Instance>;
    /**
     * <strong>Deprecated:</strong> This method is deprecated and should not be used in new work.<br>Returns the value of the attachment's <code>SecondaryAxis</code>.
     * @param this Defines a point and orientation relative to a parent <code>BasePart</code>, <code>Bone</code>, or another <code>Attachment</code>.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Attachment#GetSecondaryAxis)
     */
    GetSecondaryAxis(this: Attachment): Vector3;
    /**
     * <strong>Deprecated:</strong> This method is deprecated and should not be used in new work.<br>Sets the value of the attachment's <code>Axis</code>.
     * @param this Defines a point and orientation relative to a parent <code>BasePart</code>, <code>Bone</code>, or another <code>Attachment</code>.
     * @param axis
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Attachment#SetAxis)
     */
    SetAxis(this: Attachment, axis: Vector3): void;
    /**
     * <strong>Deprecated:</strong> This method is deprecated and should not be used in new work.<br>Sets the value of the attachment's <code>SecondaryAxis</code>.
     * @param this Defines a point and orientation relative to a parent <code>BasePart</code>, <code>Bone</code>, or another <code>Attachment</code>.
     * @param axis
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Attachment#SetSecondaryAxis)
     */
    SetSecondaryAxis(this: Attachment, axis: Vector3): void;
}
/**
 * Bones are non-rendered objects that drive the movement of one or more parts for the purposes of animation, or creating clothing and characters.
 *
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Bone)
 */
interface Bone extends Attachment {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_Bone: unique symbol;
    /**
     * Determines the current animated offset of the bone in its local space.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Bone#Transform)
     */
    Transform: CFrame;
    /**
     * Describes the combined <code>CFrame</code> offset of the bone and the current animation offset in the bone local space.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Bone#TransformedCFrame)
     */
    readonly TransformedCFrame: CFrame;
    /**
     * Describes the combined <code>CFrame</code> offset of the bone and the current animation offset in world space.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Bone#TransformedWorldCFrame)
     */
    readonly TransformedWorldCFrame: CFrame;
}
/**
 * Takes measurements from audio streams that are connected to it via one or more <code>Wires</code>.
 *
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/AudioAnalyzer)
 */
interface AudioAnalyzer extends Instance {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_AudioAnalyzer: unique symbol;
    /**
     * The loudest volume observed during the last audio buffer.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/AudioAnalyzer#PeakLevel)
     */
    readonly PeakLevel: number;
    /**
     * The root-mean-square average volume observed during the last audio buffer.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/AudioAnalyzer#RmsLevel)
     */
    readonly RmsLevel: number;
    /**
     * Enables usage of <code>GetSpectrum</code>.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/AudioAnalyzer#SpectrumEnabled)
     */
    SpectrumEnabled: boolean;
    /**
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/AudioAnalyzer#WindowSize)
     */
    WindowSize: Enum.AudioWindowSize;
    /**
     * Returns an array of <code>Wires</code> that are connected to the specified pin.
     * @param this Takes measurements from audio streams that are connected to it via one or more <code>Wires</code>.
     * @param pin
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/AudioAnalyzer#GetConnectedWires)
     */
    GetConnectedWires(this: AudioAnalyzer, pin: string): Array<Instance>;
    /**
     * Returns the frequency spectrum of the last audio buffer.
     * @param this Takes measurements from audio streams that are connected to it via one or more <code>Wires</code>.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/AudioAnalyzer#GetSpectrum)
     */
    GetSpectrum(this: AudioAnalyzer): Array<number>;
    /**
     * Fires when another instance is connected to or disconnected from the <code>AudioAnalyzer</code> via a <code>Wire</code>.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/AudioAnalyzer#WiringChanged)
     */
    readonly WiringChanged: RBXScriptSignal<(connected: boolean, pin: string, wire: Wire, instance: Instance) => void>;
}
/**
 * Makes an audio stream sound more voluminous. If applied to a single voice, it may sound like multiple voices.
 *
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/AudioChorus)
 */
interface AudioChorus extends Instance {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_AudioChorus: unique symbol;
    /**
     * Whether audio streams are passed-through unaffected by this effect.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/AudioChorus#Bypass)
     */
    Bypass: boolean;
    /**
     * Controls the maximum delay time of the copied streams in the chorus effect.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/AudioChorus#Depth)
     */
    Depth: number;
    /**
     * Controls the balance of plain input stream to modified output stream.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/AudioChorus#Mix)
     */
    Mix: number;
    /**
     * Controls the rate of pitch modulations.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/AudioChorus#Rate)
     */
    Rate: number;
    /**
     * Returns an array of <code>Wires</code> that are connected to the specified pin.
     * @param this Makes an audio stream sound more voluminous. If applied to a single voice, it may sound like multiple voices.
     * @param pin
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/AudioChorus#GetConnectedWires)
     */
    GetConnectedWires(this: AudioChorus, pin: string): Array<Instance>;
    /**
     * Fires when another instance is connected to or disconnected from the <code>AudioChorus</code> via a <code>Wire</code>.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/AudioChorus#WiringChanged)
     */
    readonly WiringChanged: RBXScriptSignal<(connected: boolean, pin: string, wire: Wire, instance: Instance) => void>;
}
/**
 * Adjusts the dynamic range of input streams.
 *
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/AudioCompressor)
 */
interface AudioCompressor extends Instance {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_AudioCompressor: unique symbol;
    /**
     * Controls how quickly the compressor will clamp down on volume after it surpasses <code>Threshold</code>.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/AudioCompressor#Attack)
     */
    Attack: number;
    /**
     * Whether audio streams are passed-through unaffected by this effect.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/AudioCompressor#Bypass)
     */
    Bypass: boolean;
    /**
     * A gain value to be applied after compression.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/AudioCompressor#MakeupGain)
     */
    MakeupGain: number;
    /**
     * Ratio of input volume to output volume, to be applied when surpassing <code>Threshold</code>.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/AudioCompressor#Ratio)
     */
    Ratio: number;
    /**
     * Controls how quickly the compressor will unclamp after the stream volume dips back below <code>Threshold</code>.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/AudioCompressor#Release)
     */
    Release: number;
    /**
     * Gain value at which the compressor will start to modify the input stream.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/AudioCompressor#Threshold)
     */
    Threshold: number;
    /**
     * Returns an array of <code>Wires</code> that are connected to the specified pin.
     * @param this Adjusts the dynamic range of input streams.
     * @param pin
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/AudioCompressor#GetConnectedWires)
     */
    GetConnectedWires(this: AudioCompressor, pin: string): Array<Instance>;
    /**
     * Fires when another instance is connected to or disconnected from the <code>AudioCompressor</code> via a <code>Wire</code>.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/AudioCompressor#WiringChanged)
     */
    readonly WiringChanged: RBXScriptSignal<(connected: boolean, pin: string, wire: Wire, instance: Instance) => void>;
}
/**
 * Produces audio streams from physical devices, such as microphones.
 *
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/AudioDeviceInput)
 */
interface AudioDeviceInput extends Instance {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_AudioDeviceInput: unique symbol;
    /**
     * Determines whether the list of user IDs provided to <code>SetUserIdAccessList</code> is treated as an allow-list or deny-list.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/AudioDeviceInput#AccessType)
     */
    AccessType: Enum.AccessModifierType;
    /**
     * Controls whether the physical device is actively recording.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/AudioDeviceInput#Active)
     */
    get Active(): boolean;
    /**
     * Controls whether this <code>AudioDeviceInput</code> is muted.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/AudioDeviceInput#Muted)
     */
    Muted: boolean;
    /**
     * Determines whose device is producing sound.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/AudioDeviceInput#Player)
     */
    Player: Player | undefined;
    /**
     * Volume level which is multiplied onto the output audio stream.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/AudioDeviceInput#Volume)
     */
    Volume: number;
    /**
     * Returns an array of <code>Wires</code> that are connected to the specified pin.
     * @param this Produces audio streams from physical devices, such as microphones.
     * @param pin
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/AudioDeviceInput#GetConnectedWires)
     */
    GetConnectedWires(this: AudioDeviceInput, pin: string): Array<Instance>;
    /**
     * Returns a list of user IDs that are either permitted to hear or blocked from hearing this <code>AudioDeviceInput</code>.
     * @param this Produces audio streams from physical devices, such as microphones.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/AudioDeviceInput#GetUserIdAccessList)
     */
    GetUserIdAccessList(this: AudioDeviceInput): Array<unknown>;
    /**
     * Sets a list of user IDs that are either permitted to hear or blocked from hearing this <code>AudioDeviceInput</code>.
     * @param this Produces audio streams from physical devices, such as microphones.
     * @param userIds
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/AudioDeviceInput#SetUserIdAccessList)
     */
    SetUserIdAccessList(this: AudioDeviceInput, userIds: Array<unknown>): void;
    /**
     * Fires when another instance is connected to or disconnected from the <code>AudioDeviceInput</code> via a <code>Wire</code>.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/AudioDeviceInput#WiringChanged)
     */
    readonly WiringChanged: RBXScriptSignal<(connected: boolean, pin: string, wire: Wire, instance: Instance) => void>;
}
/**
 * Accepts audio streams to be rendered out to physical hardware devices such as speakers or headphones.
 *
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/AudioDeviceOutput)
 */
interface AudioDeviceOutput extends Instance {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_AudioDeviceOutput: unique symbol;
    /**
     * A <code>Player</code> who is intended to hear the connected audio streams.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/AudioDeviceOutput#Player)
     */
    Player: Player | undefined;
    /**
     * Returns an array of <code>Wires</code> that are connected to the specified pin.
     * @param this Accepts audio streams to be rendered out to physical hardware devices such as speakers or headphones.
     * @param pin
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/AudioDeviceOutput#GetConnectedWires)
     */
    GetConnectedWires(this: AudioDeviceOutput, pin: string): Array<Instance>;
    /**
     * Fires when another instance is connected to or disconnected from the <code>AudioDeviceOutput</code> via a <code>Wire</code>.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/AudioDeviceOutput#WiringChanged)
     */
    readonly WiringChanged: RBXScriptSignal<(connected: boolean, pin: string, wire: Wire, instance: Instance) => void>;
}
/**
 * Distorts audio streams, making them sound fuzzier, grittier, and louder.
 *
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/AudioDistortion)
 */
interface AudioDistortion extends Instance {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_AudioDistortion: unique symbol;
    /**
     * Whether audio streams are passed-through unaffected by this effect.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/AudioDistortion#Bypass)
     */
    Bypass: boolean;
    /**
     * Controls how distorted the input stream will become.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/AudioDistortion#Level)
     */
    Level: number;
    /**
     * Returns an array of <code>Wires</code> that are connected to the specified pin.
     * @param this Distorts audio streams, making them sound fuzzier, grittier, and louder.
     * @param pin
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/AudioDistortion#GetConnectedWires)
     */
    GetConnectedWires(this: AudioDistortion, pin: string): Array<Instance>;
    /**
     * Fires when another instance is connected to or disconnected from the <code>AudioDistortion</code> via a <code>Wire</code>.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/AudioDistortion#WiringChanged)
     */
    readonly WiringChanged: RBXScriptSignal<(connected: boolean, pin: string, wire: Wire, instance: Instance) => void>;
}
/**
 * Overlays delayed copies of audio streams.
 *
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/AudioEcho)
 */
interface AudioEcho extends Instance {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_AudioEcho: unique symbol;
    /**
     * Whether audio streams are passed-through unaffected by this effect.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/AudioEcho#Bypass)
     */
    Bypass: boolean;
    /**
     * The amount of time between echoes.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/AudioEcho#DelayTime)
     */
    DelayTime: number;
    /**
     * Gain level determining how loud the original, unaltered audio stream will be.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/AudioEcho#DryLevel)
     */
    DryLevel: number;
    /**
     * How slowly echoes fade away.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/AudioEcho#Feedback)
     */
    Feedback: number;
    /**
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/AudioEcho#RampTime)
     */
    RampTime: number;
    /**
     * Gain level determining how loud the echoed stream will be.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/AudioEcho#WetLevel)
     */
    WetLevel: number;
    /**
     * Returns an array of <code>Wires</code> that are connected to the specified pin.
     * @param this Overlays delayed copies of audio streams.
     * @param pin
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/AudioEcho#GetConnectedWires)
     */
    GetConnectedWires(this: AudioEcho, pin: string): Array<Instance>;
    /**
     * Fires when another instance is connected to or disconnected from the <code>AudioEcho</code> via a <code>Wire</code>.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/AudioEcho#WiringChanged)
     */
    readonly WiringChanged: RBXScriptSignal<(connected: boolean, pin: string, wire: Wire, instance: Instance) => void>;
}
/**
 * Emits audio streams into the world.
 *
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/AudioEmitter)
 */
interface AudioEmitter extends Instance {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_AudioEmitter: unique symbol;
    /**
     * Controls which <code>AudioListeners</code> are capable of hearing this <code>AudioEmitter</code>.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/AudioEmitter#AudioInteractionGroup)
     */
    AudioInteractionGroup: string;
    /**
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/AudioEmitter#SimulationFidelity)
     */
    SimulationFidelity: Enum.AudioSimulationFidelity;
    /**
     * Gets the angle attenuation curve that the <code>AudioEmitter</code> is using, or an empty table if it's using the default curve.
     * @param this Emits audio streams into the world.
     * @returns Table mapping angle to volume, as described above.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/AudioEmitter#GetAngleAttenuation)
     */
    GetAngleAttenuation(this: AudioEmitter): object;
    /**
     * Returns an array of <code>Wires</code> that are connected to the specified pin.
     * @param this Emits audio streams into the world.
     * @param pin
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/AudioEmitter#GetConnectedWires)
     */
    GetConnectedWires(this: AudioEmitter, pin: string): Array<Instance>;
    /**
     * Gets the distance attenuation curve that the <code>AudioEmitter</code> is using, or an empty table if it's using the default curve.
     * @param this Emits audio streams into the world.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/AudioEmitter#GetDistanceAttenuation)
     */
    GetDistanceAttenuation(this: AudioEmitter): object;
    /**
     * @param this Emits audio streams into the world.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/AudioEmitter#GetInteractingListeners)
     */
    GetInteractingListeners(this: AudioEmitter): Array<Instance>;
    /**
     * Sets the angle attenuation curve that the <code>AudioEmitter</code> should use, or uses a constant curve of volume <code>1</code> if none is provided.
     * @param this Emits audio streams into the world.
     * @param curve
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/AudioEmitter#SetAngleAttenuation)
     */
    SetAngleAttenuation(this: AudioEmitter, curve: object): void;
    /**
     * Sets the distance attenuation curve that the <code>AudioEmitter</code> should use, or uses an inverse rolloff curve if none is provided.
     * @param this Emits audio streams into the world.
     * @param curve
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/AudioEmitter#SetDistanceAttenuation)
     */
    SetDistanceAttenuation(this: AudioEmitter, curve: DistanceAttenuationCurve): void;
    /**
     * Fires when another instance is connected to or disconnected from the <code>AudioEmitter</code> via a <code>Wire</code>.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/AudioEmitter#WiringChanged)
     */
    readonly WiringChanged: RBXScriptSignal<(connected: boolean, pin: string, wire: Wire, instance: Instance) => void>;
}
/**
 * Adjusts the frequency content of audio streams.
 *
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/AudioEqualizer)
 */
interface AudioEqualizer extends Instance {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_AudioEqualizer: unique symbol;
    /**
     * Whether audio streams are passed-through unaffected by this effect.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/AudioEqualizer#Bypass)
     */
    Bypass: boolean;
    /**
     * Gain value to be applied to the frequency content of the highest band in the equalizer.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/AudioEqualizer#HighGain)
     */
    HighGain: number;
    /**
     * Gain value to be applied to the frequency content of the lowest band in the equalizer.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/AudioEqualizer#LowGain)
     */
    LowGain: number;
    /**
     * Gain value to be applied to the frequency content of the middle band in the equalizer.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/AudioEqualizer#MidGain)
     */
    MidGain: number;
    /**
     * The frequency range of the band influenced by <code>MidGain</code>.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/AudioEqualizer#MidRange)
     */
    MidRange: NumberRange;
    /**
     * Returns an array of <code>Wires</code> that are connected to the specified pin.
     * @param this Adjusts the frequency content of audio streams.
     * @param pin
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/AudioEqualizer#GetConnectedWires)
     */
    GetConnectedWires(this: AudioEqualizer, pin: string): Array<Instance>;
    /**
     * Fires when another instance is connected to or disconnected from the <code>AudioEqualizer</code> via a <code>Wire</code>.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/AudioEqualizer#WiringChanged)
     */
    readonly WiringChanged: RBXScriptSignal<(connected: boolean, pin: string, wire: Wire, instance: Instance) => void>;
}
/**
 * Adjusts the volume of audio streams.
 *
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/AudioFader)
 */
interface AudioFader extends Instance {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_AudioFader: unique symbol;
    /**
     * Whether audio streams are passed-through unaffected by this effect.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/AudioFader#Bypass)
     */
    Bypass: boolean;
    /**
     * Volume level which is multiplied onto the input stream.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/AudioFader#Volume)
     */
    Volume: number;
    /**
     * Returns an array of <code>Wires</code> that are connected to the specified pin.
     * @param this Adjusts the volume of audio streams.
     * @param pin
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/AudioFader#GetConnectedWires)
     */
    GetConnectedWires(this: AudioFader, pin: string): Array<Instance>;
    /**
     * Fires when another instance is connected to or disconnected from the <code>AudioFader</code> via a <code>Wire</code>.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/AudioFader#WiringChanged)
     */
    readonly WiringChanged: RBXScriptSignal<(connected: boolean, pin: string, wire: Wire, instance: Instance) => void>;
}
/**
 * Adjusts the frequency content of audio streams.
 *
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/AudioFilter)
 */
interface AudioFilter extends Instance {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_AudioFilter: unique symbol;
    /**
     * Whether audio streams are passed-through unaffected by this effect.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/AudioFilter#Bypass)
     */
    Bypass: boolean;
    /**
     * The curve type of the band represented by the filter.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/AudioFilter#FilterType)
     */
    FilterType: Enum.AudioFilterType;
    /**
     * The central frequency that the filter acts around.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/AudioFilter#Frequency)
     */
    Frequency: number;
    /**
     * For peaking and shelving filters, controls volume increase or reduction.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/AudioFilter#Gain)
     */
    Gain: number;
    /**
     * For peaking, lowpass, highpass, bandpass, and notch filters, controls the selectiveness or resonance.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/AudioFilter#Q)
     */
    Q: number;
    /**
     * Returns an array of <code>Wires</code> that are connected to the specified pin.
     * @param this Adjusts the frequency content of audio streams.
     * @param pin
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/AudioFilter#GetConnectedWires)
     */
    GetConnectedWires(this: AudioFilter, pin: string): Array<Instance>;
    /**
     * Returns the magnitude response of the filter at the given frequency.
     * @param this Adjusts the frequency content of audio streams.
     * @param frequency The frequency, in hertz, to sample.
     * @returns The gain value, in decibels, at the given frequency.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/AudioFilter#GetGainAt)
     */
    GetGainAt(this: AudioFilter, frequency: number): number;
    /**
     * Fires when another instance is connected to or disconnected from the <code>AudioFilter</code> via a <code>Wire</code>.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/AudioFilter#WiringChanged)
     */
    readonly WiringChanged: RBXScriptSignal<(connected: boolean, pin: string, wire: Wire, instance: Instance) => void>;
}
/**
 * Imparts a whooshing or sweeping sound on audio streams.
 *
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/AudioFlanger)
 */
interface AudioFlanger extends Instance {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_AudioFlanger: unique symbol;
    /**
     * Whether audio streams are passed-through unaffected by this effect.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/AudioFlanger#Bypass)
     */
    Bypass: boolean;
    /**
     * Controls how strong the pitch modulation of the flanger is.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/AudioFlanger#Depth)
     */
    Depth: number;
    /**
     * Controls the balance of plain input stream to modified output stream.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/AudioFlanger#Mix)
     */
    Mix: number;
    /**
     * Controls the rate of pitch modulations.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/AudioFlanger#Rate)
     */
    Rate: number;
    /**
     * Returns an array of <code>Wires</code> that are connected to the specified pin.
     * @param this Imparts a whooshing or sweeping sound on audio streams.
     * @param pin
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/AudioFlanger#GetConnectedWires)
     */
    GetConnectedWires(this: AudioFlanger, pin: string): Array<Instance>;
    /**
     * Fires when another instance is connected to or disconnected from the <code>AudioFlanger</code> via a <code>Wire</code>.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/AudioFlanger#WiringChanged)
     */
    readonly WiringChanged: RBXScriptSignal<(connected: boolean, pin: string, wire: Wire, instance: Instance) => void>;
}
/**
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/AudioFocusService)
 */
interface AudioFocusService extends Instance {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_AudioFocusService: unique symbol;
}
/**
 * Limits how loud audio streams are allowed to be.
 *
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/AudioLimiter)
 */
interface AudioLimiter extends Instance {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_AudioLimiter: unique symbol;
    /**
     * Whether audio streams are passed-through unaffected by this effect.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/AudioLimiter#Bypass)
     */
    Bypass: boolean;
    /**
     * The maximum volume tolerated.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/AudioLimiter#MaxLevel)
     */
    MaxLevel: number;
    /**
     * The amount of time it takes for previously limited streams to return to their normal volume.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/AudioLimiter#Release)
     */
    Release: number;
    /**
     * Returns an array of <code>Wires</code> that are connected to the specified pin.
     * @param this Limits how loud audio streams are allowed to be.
     * @param pin
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/AudioLimiter#GetConnectedWires)
     */
    GetConnectedWires(this: AudioLimiter, pin: string): Array<Instance>;
    /**
     * Fires when another instance is connected to or disconnected from the <code>AudioLimiter</code> via a <code>Wire</code>.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/AudioLimiter#WiringChanged)
     */
    readonly WiringChanged: RBXScriptSignal<(connected: boolean, pin: string, wire: Wire, instance: Instance) => void>;
}
/**
 * Records an audio stream from its surrounding <code>AudioEmitters</code> in the 3D world.
 *
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/AudioListener)
 */
interface AudioListener extends Instance {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_AudioListener: unique symbol;
    /**
     * Controls which <code>AudioEmitters</code> are audible to this <code>AudioListener</code>.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/AudioListener#AudioInteractionGroup)
     */
    AudioInteractionGroup: string;
    /**
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/AudioListener#SimulationFidelity)
     */
    SimulationFidelity: Enum.AudioSimulationFidelity;
    /**
     * Gets the angle attenuation curve that the <code>AudioListener</code> is using, or an empty table if it's using the default curve.
     * @param this Records an audio stream from its surrounding <code>AudioEmitters</code> in the 3D world.
     * @returns Table mapping angle to volume, as described above.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/AudioListener#GetAngleAttenuation)
     */
    GetAngleAttenuation(this: AudioListener): object;
    /**
     * Returns an array of <code>Wires</code> that are connected to the specified pin.
     * @param this Records an audio stream from its surrounding <code>AudioEmitters</code> in the 3D world.
     * @param pin
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/AudioListener#GetConnectedWires)
     */
    GetConnectedWires(this: AudioListener, pin: string): Array<Instance>;
    /**
     * Gets the distance attenuation curve that the <code>AudioListener</code> is using, or an empty table if it's using the default curve.
     * @param this Records an audio stream from its surrounding <code>AudioEmitters</code> in the 3D world.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/AudioListener#GetDistanceAttenuation)
     */
    GetDistanceAttenuation(this: AudioListener): object;
    /**
     * @param this Records an audio stream from its surrounding <code>AudioEmitters</code> in the 3D world.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/AudioListener#GetInteractingEmitters)
     */
    GetInteractingEmitters(this: AudioListener): Array<Instance>;
    /**
     * Sets the angle attenuation curve that the <code>AudioListener</code> should use, or uses a constant curve of volume <code>1</code> if none is provided.
     * @param this Records an audio stream from its surrounding <code>AudioEmitters</code> in the 3D world.
     * @param curve
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/AudioListener#SetAngleAttenuation)
     */
    SetAngleAttenuation(this: AudioListener, curve: object): void;
    /**
     * Sets the distance attenuation curve that the <code>AudioListener</code> should use, or uses an inverse rolloff curve if none is provided.
     * @param this Records an audio stream from its surrounding <code>AudioEmitters</code> in the 3D world.
     * @param curve
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/AudioListener#SetDistanceAttenuation)
     */
    SetDistanceAttenuation(this: AudioListener, curve: object): void;
    /**
     * Fires when another instance is connected to or disconnected from the <code>AudioListener</code> via a <code>Wire</code>.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/AudioListener#WiringChanged)
     */
    readonly WiringChanged: RBXScriptSignal<(connected: boolean, pin: string, wire: Wire, instance: Instance) => void>;
}
/**
 * Adjusts the perceived pitch of audio streams.
 *
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/AudioPitchShifter)
 */
interface AudioPitchShifter extends Instance {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_AudioPitchShifter: unique symbol;
    /**
     * Whether audio streams are passed-through unaffected by this effect.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/AudioPitchShifter#Bypass)
     */
    Bypass: boolean;
    /**
     * Pitch modification to be multiplied by the pitch of the input stream.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/AudioPitchShifter#Pitch)
     */
    Pitch: number;
    /**
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/AudioPitchShifter#WindowSize)
     */
    WindowSize: Enum.AudioWindowSize;
    /**
     * Returns an array of <code>Wires</code> that are connected to the specified pin.
     * @param this Adjusts the perceived pitch of audio streams.
     * @param pin
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/AudioPitchShifter#GetConnectedWires)
     */
    GetConnectedWires(this: AudioPitchShifter, pin: string): Array<Instance>;
    /**
     * Fires when another instance is connected to or disconnected from the <code>AudioPitchShifter</code> via a <code>Wire</code>.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/AudioPitchShifter#WiringChanged)
     */
    readonly WiringChanged: RBXScriptSignal<(connected: boolean, pin: string, wire: Wire, instance: Instance) => void>;
}
/**
 * Used to play audio assets.
 *
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/AudioPlayer)
 */
interface AudioPlayer extends Instance {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_AudioPlayer: unique symbol;
    /**
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/AudioPlayer#Asset)
     */
    Asset: ContentId;
    /**
     * The asset to be loaded into the <code>AudioPlayer</code>.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/AudioPlayer#AssetId)
     */
    AssetId: string;
    /**
     * Controls whether <code>AssetId</code> loads automatically once assigned.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/AudioPlayer#AutoLoad)
     */
    AutoLoad: boolean;
    /**
     * Denotes whether this <code>AudioPlayer</code> is currently playing.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/AudioPlayer#IsPlaying)
     */
    get IsPlaying(): boolean;
    /**
     * Denotes whether this <code>AudioPlayer</code> is loaded, buffered, and ready to play.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/AudioPlayer#IsReady)
     */
    readonly IsReady: boolean;
    /**
     * A range, in seconds, denoting a desired loop start and loop end within the <code>PlaybackRegion</code> of this <code>AudioPlayer</code>.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/AudioPlayer#LoopRegion)
     */
    LoopRegion: NumberRange;
    /**
     * Controls whether this <code>AudioPlayer</code> loops.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/AudioPlayer#Looping)
     */
    Looping: boolean;
    /**
     * Range in seconds denoting a desired start time (minimum) and stop time (maximum) within the <code>TimeLength</code>.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/AudioPlayer#PlaybackRegion)
     */
    PlaybackRegion: NumberRange;
    /**
     * Controls how quickly the asset will be played, which controls its pitch.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/AudioPlayer#PlaybackSpeed)
     */
    PlaybackSpeed: number;
    /**
     * Denotes the length of the loaded asset.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/AudioPlayer#TimeLength)
     */
    readonly TimeLength: number;
    /**
     * Tracks the current position of the playhead within the asset.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/AudioPlayer#TimePosition)
     */
    TimePosition: number;
    /**
     * Controls how loudly the asset will be played.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/AudioPlayer#Volume)
     */
    Volume: number;
    /**
     * Returns an array of <code>Wires</code> that are connected to the specified pin.
     * @param this Used to play audio assets.
     * @param pin
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/AudioPlayer#GetConnectedWires)
     */
    GetConnectedWires(this: AudioPlayer, pin: string): Array<Instance>;
    /**
     * Plays the <code>AudioPlayer</code> from wherever its <code>TimePosition</code> is.
     * @param this Used to play audio assets.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/AudioPlayer#Play)
     */
    Play(this: AudioPlayer): void;
    /**
     * Stops the <code>AudioPlayer</code> wherever its <code>TimePosition</code> is.
     * @param this Used to play audio assets.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/AudioPlayer#Stop)
     */
    Stop(this: AudioPlayer): void;
    /**
     * @param this Used to play audio assets.
     * @param timeRange
     * @param samples
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/AudioPlayer#GetWaveformAsync)
     */
    GetWaveformAsync(this: AudioPlayer, timeRange: NumberRange, samples: number): Array<unknown>;
    /**
     * Fires when the <code>AudioPlayer</code> has completed playback and stopped.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/AudioPlayer#Ended)
     */
    readonly Ended: RBXScriptSignal<() => void>;
    /**
     * Fires when the <code>AudioPlayer</code> loops.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/AudioPlayer#Looped)
     */
    readonly Looped: RBXScriptSignal<() => void>;
    /**
     * Fires when another instance is connected to or disconnected from the <code>AudioPlayer</code> via a <code>Wire</code>.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/AudioPlayer#WiringChanged)
     */
    readonly WiringChanged: RBXScriptSignal<(connected: boolean, pin: string, wire: Wire, instance: Instance) => void>;
}
/**
 * Reverberates audio streams.
 *
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/AudioReverb)
 */
interface AudioReverb extends Instance {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_AudioReverb: unique symbol;
    /**
     * Whether audio streams are passed-through unaffected by this effect.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/AudioReverb#Bypass)
     */
    Bypass: boolean;
    /**
     * Controls how quickly high frequency sound decays compared to the overall reverb.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/AudioReverb#DecayRatio)
     */
    DecayRatio: number;
    /**
     * Controls how long it takes for the reverb to dissipate.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/AudioReverb#DecayTime)
     */
    DecayTime: number;
    /**
     * Controls how many reflections are generated.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/AudioReverb#Density)
     */
    Density: number;
    /**
     * Controls how smooth and reflective the simulated surfaces are.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/AudioReverb#Diffusion)
     */
    Diffusion: number;
    /**
     * Gain level determining how loud the original, unaltered audio stream will be.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/AudioReverb#DryLevel)
     */
    DryLevel: number;
    /**
     * Controls the amount of time before reverberation begins .
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/AudioReverb#EarlyDelayTime)
     */
    EarlyDelayTime: number;
    /**
     * Frequency above which sound is filtered out of the reverb.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/AudioReverb#HighCutFrequency)
     */
    HighCutFrequency: number;
    /**
     * Time, following early delays, before diffuse reverberations begin.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/AudioReverb#LateDelayTime)
     */
    LateDelayTime: number;
    /**
     * Frequency below which audio can be boosted or reduced in the reverb.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/AudioReverb#LowShelfFrequency)
     */
    LowShelfFrequency: number;
    /**
     * Controls the presence of low frequency content in the reverb.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/AudioReverb#LowShelfGain)
     */
    LowShelfGain: number;
    /**
     * Frequency that separates low frequency decay speeds from high frequency decay speeds.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/AudioReverb#ReferenceFrequency)
     */
    ReferenceFrequency: number;
    /**
     * Gain level determining how loud the reverberated stream will be.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/AudioReverb#WetLevel)
     */
    WetLevel: number;
    /**
     * Returns an array of <code>Wires</code> that are connected to the specified pin.
     * @param this Reverberates audio streams.
     * @param pin
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/AudioReverb#GetConnectedWires)
     */
    GetConnectedWires(this: AudioReverb, pin: string): Array<Instance>;
    /**
     * Fires when another instance is connected to or disconnected from the <code>AudioReverb</code> via a <code>Wire</code>.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/AudioReverb#WiringChanged)
     */
    readonly WiringChanged: RBXScriptSignal<(connected: boolean, pin: string, wire: Wire, instance: Instance) => void>;
}
/**
 * Instance to be passed to <code>AssetService:SearchAudio()</code> to search for audio assets.
 *
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/AudioSearchParams)
 */
interface AudioSearchParams extends Instance {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_AudioSearchParams: unique symbol;
    /**
     * The album the audio asset belongs to.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/AudioSearchParams#Album)
     */
    Album: string;
    /**
     * The artist that created the audio asset.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/AudioSearchParams#Artist)
     */
    Artist: string;
    /**
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/AudioSearchParams#AudioSubType)
     */
    AudioSubType: Enum.AudioSubType;
    /**
     * <strong>Deprecated:</strong> <br>The subtype of the audio asset.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/AudioSearchParams#AudioSubtype)
     */
    AudioSubtype: Enum.AudioSubType;
    /**
     * The maximum duration of the audio asset.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/AudioSearchParams#MaxDuration)
     */
    MaxDuration: number;
    /**
     * The minimum duration of the audio asset.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/AudioSearchParams#MinDuration)
     */
    MinDuration: number;
    /**
     * The keyword to search for.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/AudioSearchParams#SearchKeyword)
     */
    SearchKeyword: string;
    /**
     * The tag of the audio asset.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/AudioSearchParams#Tag)
     */
    Tag: string;
    /**
     * The title of the audio asset.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/AudioSearchParams#Title)
     */
    Title: string;
}
/**
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/AuroraService)
 */
interface AuroraService extends Instance {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_AuroraService: unique symbol;
    /**
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/AuroraService#GetDesyncedInstances)
     */
    GetDesyncedInstances(this: AuroraService): Array<unknown>;
    /**
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/AuroraService#GetRemoteWorldStepId)
     */
    GetRemoteWorldStepId(this: AuroraService): number;
    /**
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/AuroraService#GetServerView)
     */
    GetServerView(this: AuroraService, target: Instance): Instance | undefined;
    /**
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/AuroraService#GetWorldStepId)
     */
    GetWorldStepId(this: AuroraService): number;
    /**
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/AuroraService#IsDesynced)
     */
    IsDesynced(this: AuroraService, target: Instance): boolean;
    /**
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/AuroraService#NetDesync)
     */
    NetDesync(this: AuroraService, target: Instance): void;
    /**
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/AuroraService#NetSync)
     */
    NetSync(this: AuroraService, target: Instance): void;
    /**
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/AuroraService#SetIncomingReplicationLag)
     */
    SetIncomingReplicationLag(this: AuroraService, seconds: number): void;
    /**
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/AuroraService#StepPhysics)
     */
    StepPhysics(this: AuroraService, worldSteps: number, parts?: Array<Instance>): void;
    /**
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/AuroraService#UpdateProperties)
     */
    UpdateProperties(this: AuroraService, target: Instance): void;
    /**
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/AuroraService#Desynced)
     */
    readonly Desynced: RBXScriptSignal<(target: Instance) => void>;
    /**
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/AuroraService#FixedRateTick)
     */
    readonly FixedRateTick: RBXScriptSignal<(deltaTime: number, worldStepId: number) => void>;
    /**
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/AuroraService#Synced)
     */
    readonly Synced: RBXScriptSignal<(target: Instance) => void>;
}
/**
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/AvatarChatService)
 */
interface AvatarChatService extends Instance {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_AvatarChatService: unique symbol;
}
/**
 * A service to support developer avatar creators.
 *
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/AvatarCreationService)
 */
interface AvatarCreationService extends Instance {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_AvatarCreationService: unique symbol;
    /**
     * Gets data regarding rules that assets must abide by to pass UGC validation.
     * @param this A service to support developer avatar creators.
     * @returns Dictionary of validation rules as detailed above.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/AvatarCreationService#GetValidationRules)
     */
    GetValidationRules(this: AvatarCreationService): object;
    /**
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/AvatarCreationService#SendAnalyticsEvent)
     */
    SendAnalyticsEvent(this: AvatarCreationService, eventName: string, params: object): void;
    /**
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/AvatarCreationService#GenerateAvatarAsync)
     */
    GenerateAvatarAsync(this: AvatarCreationService, sessionId: string, previewId: string): string;
    /**
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/AvatarCreationService#GenerateAvatarModelAsync)
     */
    GenerateAvatarModelAsync(this: AvatarCreationService, player: Player, previewJobId: string, options: object, progressCallback: Callback): string;
    /**
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/AvatarCreationService#GenerateAvatarPreviewAsync)
     */
    GenerateAvatarPreviewAsync(this: AvatarCreationService, player: Player, textPrompt: string, options: object, progressCallback: Callback): string;
    /**
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/AvatarCreationService#GenerateAvatarPreviewAsync2)
     */
    GenerateAvatarPreviewAsync2(this: AvatarCreationService, sessionId: string, fileId: string, textPrompt: string, options: object): string;
    /**
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/AvatarCreationService#GetAvatarGenerationConfig)
     */
    GetAvatarGenerationConfig(this: AvatarCreationService): object;
    /**
     * Gets the avatar creation token details for a list of avatar creation tokens at once.
     * @param this A service to support developer avatar creators.
     * @param tokenIds The list of avatar creation token IDs to get details of.
     * @returns Array of avatar creation token details as outlined above.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/AvatarCreationService#GetBatchTokenDetailsAsync)
     */
    GetBatchTokenDetailsAsync(this: AvatarCreationService, tokenIds: Array<unknown>): Array<unknown>;
    /**
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/AvatarCreationService#LoadAvatarHumanoidDescriptionAsync)
     */
    LoadAvatarHumanoidDescriptionAsync(this: AvatarCreationService, id: string): HumanoidDescription;
    /**
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/AvatarCreationService#LoadAvatarModelAsync)
     */
    LoadAvatarModelAsync(this: AvatarCreationService, id: string): Instance | undefined;
    /**
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/AvatarCreationService#LoadAvatarPreviewImageAsync)
     */
    LoadAvatarPreviewImageAsync(this: AvatarCreationService, avatarPreview: string): EditableImage;
    /**
     * Prompts a <code>Player</code> to purchase and create an avatar from a <code>HumanoidDescription</code>.
     * @param this A service to support developer avatar creators.
     * @param tokenId The ID of an avatar creation token. The token must be valid in that the universe the method is called from is the same universe the token was created for. Furthermore, the token creator must maintain ID verification and <a href="https://www.roblox.com/premium/membership">Roblox Premium</a>.
     * @param player The <code>Player</code> intended to be presented with the creation prompt.
     * @param humanoidDescription The <code>HumanoidDescription</code> of the avatar intended for creation.
     * @returns A tuple containing, in order: <ul> <li> An <code>PromptCreateAvatarResult</code> indicating the result of the   creation prompt. </li> <li> A string result. In the case of   <code>PromptCreateAvatarResult.Success</code>, this will indicate the   bundle ID. In the case of any failure enum, this will indicate the   resultant error message. </li> <li> A secondary optional string result. In the case of   <code>PromptCreateAvatarResult.Success</code>, this will indicate the   outfit ID. In the case of any failure enum, this will be <code>nil</code>. </li> </ul>
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/AvatarCreationService#PromptCreateAvatarAsync)
     */
    PromptCreateAvatarAsync(this: AvatarCreationService, tokenId: string, player: Player, humanoidDescription: HumanoidDescription): unknown;
    /**
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/AvatarCreationService#PromptSelectAvatarGenerationImageAsync)
     */
    PromptSelectAvatarGenerationImageAsync(this: AvatarCreationService, player: Player): string;
    /**
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/AvatarCreationService#RequestAvatarGenerationSessionAsync)
     */
    RequestAvatarGenerationSessionAsync(this: AvatarCreationService, player: Player, callback: Callback): unknown;
    /**
     * Studio only. Runs UGC validation for an <code>AccessoryType</code>.
     * @param this A service to support developer avatar creators.
     * @param player The <code>Player</code> validation is completed for.
     * @param accessory The instance validation is run on.
     * @param accessoryType <code>AccessoryType</code> the instance is expected to be. Expects <code>Eyebrow</code>, <code>Eyelash</code>, or <code>Hair</code>.
     * @returns A tuple containing, in order: <ul> <li>A boolean indicating if validation was successful for the accessory.</li> <li>An optional table of strings. This includes failure reasons if   validation was unsuccessful; otherwise <code>nil</code> if validation was   successful.</li> </ul>
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/AvatarCreationService#ValidateUGCAccessoryAsync)
     */
    ValidateUGCAccessoryAsync(this: AvatarCreationService, player: Player, accessory: Instance, accessoryType: CastsToEnum<Enum.AccessoryType>): unknown;
    /**
     * Studio only. Runs UGC validation for an <code>BodyPart</code>.
     * @param this A service to support developer avatar creators.
     * @param player The <code>Player</code> validation is completed for.
     * @param instance The instance validation is run on.
     * @param bodyPart <code>BodyPart</code> the instance is expected to be.
     * @returns A tuple containing, in order: <ul> <li>A boolean indicating if validation was successful for the body part.</li> <li>An optional table of strings. This includes failure reasons if   validation was unsuccessful; otherwise <code>nil</code> if validation was   successful.</li> </ul>
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/AvatarCreationService#ValidateUGCBodyPartAsync)
     */
    ValidateUGCBodyPartAsync(this: AvatarCreationService, player: Player, instance: Instance, bodyPart: CastsToEnum<Enum.BodyPart>): unknown;
    /**
     * Studio only. Runs UGC validation for a whole body.
     * @param this A service to support developer avatar creators.
     * @param player The <code>Player</code> validation is completed for.
     * @param humanoidDescription <code>HumanoidDescription</code> representing the body that validation is run on.
     * @returns A tuple containing, in order: <ul> <li>A boolean indicating if validation was successful for the body.</li> <li>An optional table of strings. This includes failure reasons if   validation was unsuccessful; otherwise <code>nil</code> if validation was   successful.</li> </ul>
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/AvatarCreationService#ValidateUGCFullBodyAsync)
     */
    ValidateUGCFullBodyAsync(this: AvatarCreationService, player: Player, humanoidDescription: HumanoidDescription): unknown;
}
/**
 * A service to support developer Avatar Editors.
 *
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/AvatarEditorService)
 */
interface AvatarEditorService extends Instance {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_AvatarEditorService: unique symbol;
    /**
     * @param this A service to support developer Avatar Editors.
     * @param avatarAssetType
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/AvatarEditorService#GetAccessoryType)
     */
    GetAccessoryType(this: AvatarEditorService, avatarAssetType: CastsToEnum<Enum.AvatarAssetType>): Enum.AccessoryType;
    /**
     * Prompts the <code>Players.LocalPlayer</code> to allow the developer to read what items the user has in their inventory and other avatar editor related information.
     * @param this A service to support developer Avatar Editors.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/AvatarEditorService#PromptAllowInventoryReadAccess)
     */
    PromptAllowInventoryReadAccess(this: AvatarEditorService): void;
    /**
     * Prompts the <code>Players.LocalPlayer</code> to save the given <code>HumanoidDescription</code> as an outfit.
     * @param this A service to support developer Avatar Editors.
     * @param outfit The <code>Outfit</code> that the player will be prompted to created.
     * @param rigType The <code>RigType</code> that the outfit will be created for if the player confirms the prompt.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/AvatarEditorService#PromptCreateOutfit)
     */
    PromptCreateOutfit(this: AvatarEditorService, outfit: HumanoidDescription, rigType: CastsToEnum<Enum.HumanoidRigType>): void;
    /**
     * Prompts the <code>Players.LocalPlayer</code> to delete the given outfit.
     * @param this A service to support developer Avatar Editors.
     * @param outfitId The outfitId of the outfit to delete.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/AvatarEditorService#PromptDeleteOutfit)
     */
    PromptDeleteOutfit(this: AvatarEditorService, outfitId: number): void;
    /**
     * Prompts the <code>Players.LocalPlayer</code> to rename the given outfit.
     * @param this A service to support developer Avatar Editors.
     * @param outfitId The outfitId of the outfit to rename.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/AvatarEditorService#PromptRenameOutfit)
     */
    PromptRenameOutfit(this: AvatarEditorService, outfitId: number): void;
    /**
     * Prompts the <code>Players.LocalPlayer</code> to update their avatar based on the given <code>HumanoidDescription</code> and <code>RigType</code> of R6 or R15.
     * @param this A service to support developer Avatar Editors.
     * @param humanoidDescription The given <code>HumanoidDescription</code> being prompted to save.
     * @param rigType The <code>RigType</code> that the avatar will be saved for if the player confirms the prompt.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/AvatarEditorService#PromptSaveAvatar)
     */
    PromptSaveAvatar(this: AvatarEditorService, humanoidDescription: HumanoidDescription, rigType: CastsToEnum<Enum.HumanoidRigType>): void;
    /**
     * Prompts the <code>Players.LocalPlayer</code> to favorite or unfavorite the given asset or bundle.
     * @param this A service to support developer Avatar Editors.
     * @param itemId The ItemId of the item being prompted to favorite.
     * @param itemType The type of item being prompted to favorite.
     * @param shouldFavorite
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/AvatarEditorService#PromptSetFavorite)
     */
    PromptSetFavorite(this: AvatarEditorService, itemId: number, itemType: CastsToEnum<Enum.AvatarItemType>, shouldFavorite: boolean): void;
    /**
     * Prompts the <code>Players.LocalPlayer</code> to update the given outfit.
     * @param this A service to support developer Avatar Editors.
     * @param outfitId The outfitId of the outfit to update.
     * @param updatedOutfit A HumanoidDescription that represents the new outfit data.
     * @param rigType The HumanoidRigType to update the outfit to.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/AvatarEditorService#PromptUpdateOutfit)
     */
    PromptUpdateOutfit(this: AvatarEditorService, outfitId: number, updatedOutfit: HumanoidDescription, rigType: CastsToEnum<Enum.HumanoidRigType>): void;
    /**
     * Used to apply default clothing to the <code>HumanoidDescription</code> if necessary.
     * @param this A service to support developer Avatar Editors.
     * @param humanoidDescription The HumanoidDescription to check if default clothing is required.
     * @returns Returns a HumanoidDescription if default clothing was necessary. Otherwise returns nil.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/AvatarEditorService#CheckApplyDefaultClothing)
     */
    CheckApplyDefaultClothing(this: AvatarEditorService, humanoidDescription: HumanoidDescription): HumanoidDescription;
    /**
     * @param this A service to support developer Avatar Editors.
     * @param humanoidDescription
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/AvatarEditorService#ConformToAvatarRules)
     */
    ConformToAvatarRules(this: AvatarEditorService, humanoidDescription: HumanoidDescription): HumanoidDescription;
    /**
     * Returns the platform Avatar rules for things such as scaling, default shirts and pants, number of wearable assets.
     * @param this A service to support developer Avatar Editors.
     * @returns A dictionary containing the platform Avatar rules for things like scaling, default shirts and pants, number of wearable assets, ect. See the example return in the main description above.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/AvatarEditorService#GetAvatarRules)
     */
    GetAvatarRules(this: AvatarEditorService): AvatarRules;
    /**
     * Gets the item details for a list of items at once.
     * @param this A service to support developer Avatar Editors.
     * @param itemIds The list of item ids to get details of.
     * @param itemType The type of the item ids provided.
     * @returns Returns an array of item details with the following fields: <pre><code class="language-lua">  {     &quot;AssetType&quot; = &quot;string&quot;,     &quot;CreatorName&quot; = &quot;string&quot;,     &quot;CreatorTargetId&quot; = 0,     &quot;CreatorType&quot; = &quot;string&quot;,     &quot;Description&quot; = &quot;string&quot;,     &quot;FavoriteCount&quot; = 0,     &quot;Genres&quot; = [       &quot;All&quot;     ],     &quot;Id&quot; = 0,     &quot;ItemRestrictions&quot; = [       &quot;Limited&quot;     ],     &quot;ItemStatus&quot;: [       &quot;New&quot;     ],     &quot;ItemType&quot; = &quot;string&quot;,     &quot;LowestPrice&quot; = 0,     &quot;Name&quot; = &quot;string&quot;,     &quot;Price&quot; = 0,     &quot;ProductId&quot; = 0   } </code></pre> .
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/AvatarEditorService#GetBatchItemDetails)
     */
    GetBatchItemDetails(this: AvatarEditorService, itemIds: ReadonlyArray<number>, itemType: CastsToEnum<Enum.AvatarItemType.Asset>): ReadonlyArray<AssetItemDetails>;
    GetBatchItemDetails(this: AvatarEditorService, itemIds: ReadonlyArray<number>, itemType: CastsToEnum<Enum.AvatarItemType.Bundle>): ReadonlyArray<BundleItemDetails>;
    GetBatchItemDetails(this: AvatarEditorService, itemIds: ReadonlyArray<number>, itemType: CastsToEnum<Enum.AvatarItemType>): ReadonlyArray<ItemDetails>;
    /**
     * Returns if the <code>Players.LocalPlayer</code> has favorited the given bundle or asset.
     * @param this A service to support developer Avatar Editors.
     * @param itemId The id of the specified asset or bundle.
     * @param itemType The <code>AvatarItemType</code> of the specified asset or bundle.
     * @returns Whether the <code>LocalPlayer</code> has favorited the given bundle or asset.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/AvatarEditorService#GetFavorite)
     */
    GetFavorite(this: AvatarEditorService, itemId: number, itemType: CastsToEnum<Enum.AvatarItemType>): boolean;
    /**
     * Returns an <code>InventoryPages</code> object with information about owned items in the users inventory with the given AvatarAssetTypes.
     * @param this A service to support developer Avatar Editors.
     * @param assetTypes The <code>AvatarAssetType</code> that can will be checked for in the player's inventory.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/AvatarEditorService#GetInventory)
     */
    GetInventory(this: AvatarEditorService, assetTypes: ReadonlyArray<Enum.AvatarAssetType>): InventoryPages<{
        AssetId: number;
        AssetType: string;
        Created: string;
        Name: string;
    }>;
    /**
     * Returns the item details for the given item.
     * @param this A service to support developer Avatar Editors.
     * @param itemId The ID of the item whose details are being retrieved.
     * @param itemType An enum value indicating the type of item whose details are being retrieved.
     * @returns A table containing the item info for the retrieved item. See above for a sample table.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/AvatarEditorService#GetItemDetails)
     */
    GetItemDetails(this: AvatarEditorService, itemId: number, itemType: CastsToEnum<Enum.AvatarItemType.Asset>): AssetItemDetails;
    GetItemDetails(this: AvatarEditorService, itemId: number, itemType: CastsToEnum<Enum.AvatarItemType.Bundle>): BundleItemDetails;
    GetItemDetails(this: AvatarEditorService, itemId: number, itemType: CastsToEnum<Enum.AvatarItemType>): ItemDetails;
    /**
     * Returns the outfit details for the given outfit.
     * @param this A service to support developer Avatar Editors.
     * @param outfitId The ID of the outfit whose details are being retrieved.
     * @returns A table containing the outfit info for the retrieved outfit. See above for a sample table.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/AvatarEditorService#GetOutfitDetails)
     */
    GetOutfitDetails(this: AvatarEditorService, outfitId: number): object;
    /**
     * Returns outfit data for the <code>Players.LocalPlayer</code>.
     * @param this A service to support developer Avatar Editors.
     * @param outfitSource
     * @param outfitType
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/AvatarEditorService#GetOutfits)
     */
    GetOutfits(this: AvatarEditorService, outfitSource?: CastsToEnum<Enum.OutfitSource>, outfitType?: CastsToEnum<Enum.OutfitType>): OutfitPages;
    /**
     * Returns a list of recommended assets based on a given <code>AssetType</code> and asset id.
     * @param this A service to support developer Avatar Editors.
     * @param assetType The type of asset recommendations to retrieve recommendations for. Only affects the response when item based recommendations don't exist for the given <code>contextAssetId</code>.
     * @param contextAssetId The id of an asset with a type matching the provided assetType used for context when retrieving recommendations.
     * @returns A list of recommendations based on the given <code>AssetType</code>.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/AvatarEditorService#GetRecommendedAssets)
     */
    GetRecommendedAssets(this: AvatarEditorService, assetType: CastsToEnum<Enum.AvatarAssetType>, contextAssetId?: number): ReadonlyArray<RecommendedAsset>;
    /**
     * Returns a list of recommended bundles for a given bundle id.
     * @param this A service to support developer Avatar Editors.
     * @param bundleId A list of recommended bundles.
     * @returns The bundle ID that the recommended bundles will be returned for.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/AvatarEditorService#GetRecommendedBundles)
     */
    GetRecommendedBundles(this: AvatarEditorService, bundleId: number): ReadonlyArray<RecommendedBundle>;
    /**
     * Returns a <code>CatalogPages</code> object containing the result of the given search.
     * @param this A service to support developer Avatar Editors.
     * @param searchParameters An object containing the parameters used for the search.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/AvatarEditorService#SearchCatalog)
     */
    SearchCatalog(this: AvatarEditorService, searchParameters: CatalogSearchParams): CatalogPages;
    /**
     * Fires when the <code>AvatarEditorService:PromptAllowInventoryReadAccess()</code> prompt is responded to by the user.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/AvatarEditorService#PromptAllowInventoryReadAccessCompleted)
     */
    readonly PromptAllowInventoryReadAccessCompleted: RBXScriptSignal<(result: Enum.AvatarPromptResult) => void>;
    /**
     * Fires when the PromptSaveOutfit operation is completed.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/AvatarEditorService#PromptCreateOutfitCompleted)
     */
    readonly PromptCreateOutfitCompleted: RBXScriptSignal<(result: Enum.AvatarPromptResult, failureType: unknown) => void>;
    /**
     * Fires when the PromptDeleteOutfit operation is completed.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/AvatarEditorService#PromptDeleteOutfitCompleted)
     */
    readonly PromptDeleteOutfitCompleted: RBXScriptSignal<(result: Enum.AvatarPromptResult) => void>;
    /**
     * Fires when the PromptRenameOutfit operation is completed.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/AvatarEditorService#PromptRenameOutfitCompleted)
     */
    readonly PromptRenameOutfitCompleted: RBXScriptSignal<(result: Enum.AvatarPromptResult) => void>;
    /**
     * Fires when the <code>AvatarEditorService:PromptSaveAvatar()</code> operation is completed.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/AvatarEditorService#PromptSaveAvatarCompleted)
     */
    readonly PromptSaveAvatarCompleted: RBXScriptSignal<(result: Enum.AvatarPromptResult, humanoidDescription: HumanoidDescription) => void>;
    /**
     * Fires when the <code>AvatarEditorService:PromptSetFavorite()</code> operation is completed.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/AvatarEditorService#PromptSetFavoriteCompleted)
     */
    readonly PromptSetFavoriteCompleted: RBXScriptSignal<(result: Enum.AvatarPromptResult) => void>;
    /**
     * Fires when the <code>AvatarEditorService:PromptUpdateOutfit()</code> operation is completed.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/AvatarEditorService#PromptUpdateOutfitCompleted)
     */
    readonly PromptUpdateOutfitCompleted: RBXScriptSignal<(result: Enum.AvatarPromptResult) => void>;
}
/**
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/AvatarImportService)
 */
interface AvatarImportService extends Instance {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_AvatarImportService: unique symbol;
}
/**
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/AvatarPreloader)
 */
interface AvatarPreloader extends Instance {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_AvatarPreloader: unique symbol;
}
/**
 * A container object that holds a player's inventory. Any <code>Tool</code> in a player's Backpack will be displayed in their inventory at the bottom of their screen.
 *
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Backpack)
 */
interface Backpack extends Instance {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_Backpack: unique symbol;
}
/**
 * Provides information on badges and awards them.
 *
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/BadgeService)
 */
interface BadgeService extends Instance {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_BadgeService: unique symbol;
    /**
     * Award a badge to a player given the ID of each.
     * @param this Provides information on badges and awards them.
     * @param userId The <code>Player.UserId</code> of the user the badge is to be awarded to.
     * @param badgeId The ID of the badge to be awarded.
     * @returns Boolean of <code>true</code> if the badge was awarded successfully.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/BadgeService#AwardBadge)
     */
    AwardBadge(this: BadgeService, userId: number, badgeId: number): boolean;
    /**
     * Checks a list of badge IDs against a <code>UserId</code> and returns a list of badge IDs that the player owns.
     * @param this Provides information on badges and awards them.
     * @param userId The <code>UserId</code> of the player to check for ownership of the specified badges.
     * @param badgeIds The list of IDs of the badges to check ownership of. Maximum length of 10.
     * @returns The list of badge IDs the given user owns out of the provided badge IDs. Empty if none of the provided badges are owned by the given user. Not guaranteed to be in the same order as the input list.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/BadgeService#CheckUserBadgesAsync)
     */
    CheckUserBadgesAsync(this: BadgeService, userId: number, badgeIds: Array<unknown>): Array<unknown>;
    /**
     * Fetch information about a badge given its ID.
     * @param this Provides information on badges and awards them.
     * @param badgeId The badge ID of the badge whose information should be fetched.
     * @returns A dictionary of information about the specified badge.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/BadgeService#GetBadgeInfoAsync)
     */
    GetBadgeInfoAsync(this: BadgeService, badgeId: number): BadgeInfo;
    /**
     * <strong>Deprecated:</strong> This function is deprecated. Do not use it for new work. Instead, it can be checked by calling BadgeService:GetBadgeInfoAsync() and checking the IsEnabled field.<br>Returns whether a given badge is disabled.
     * @param this Provides information on badges and awards them.
     * @param badgeId The ID of the badge.
     * @returns True if the specified badge is not available to be awarded.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/BadgeService#IsDisabled)
     */
    IsDisabled(this: BadgeService, badgeId: number): boolean;
    /**
     * <strong>Deprecated:</strong> This function is deprecated and will always return true. Do not use it for new work.<br>Determines if a given badge is associated with the current game.
     * @param this Provides information on badges and awards them.
     * @param badgeId The badge ID of the badge.
     * @returns True if the badge is associated with the current game.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/BadgeService#IsLegal)
     */
    IsLegal(this: BadgeService, badgeId: number): boolean;
    /**
     * <strong>Deprecated:</strong> This function has been superseded by <code>BadgeService:UserHasBadgeAsync()</code> which should be used for new instead.<br>Checks whether a user has the badge given the <code>Player.UserId</code> and the badge ID.
     * @param this Provides information on badges and awards them.
     * @param userId The user ID of the user.
     * @param badgeId The badge ID of the badge.
     * @returns True if the user has the badge.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/BadgeService#UserHasBadge)
     */
    UserHasBadge(this: BadgeService, userId: number, badgeId: number): boolean;
    /**
     * Checks whether a player has the badge given the <code>Player.UserId</code> and the badge ID.
     * @param this Provides information on badges and awards them.
     * @param userId The <code>Player.UserId</code> of the player to check for ownership of the specified badge.
     * @param badgeId The badge ID of the badge whose ownership will be checked.
     * @returns Indicates if the specified user has the specified badge.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/BadgeService#UserHasBadgeAsync)
     */
    UserHasBadgeAsync(this: BadgeService, userId: number, badgeId: number): boolean;
}
/**
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/BaseImportData)
 */
interface BaseImportData extends Instance {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_BaseImportData: unique symbol;
    /**
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/BaseImportData#Id)
     */
    readonly Id: string;
    /**
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/BaseImportData#ImportName)
     */
    ImportName: string;
    /**
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/BaseImportData#ShouldImport)
     */
    ShouldImport: boolean;
    /**
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/BaseImportData#StatusRemoved)
     */
    readonly StatusRemoved: RBXScriptSignal<(status: object) => void>;
    /**
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/BaseImportData#StatusReported)
     */
    readonly StatusReported: RBXScriptSignal<(status: object) => void>;
}
/**
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/AnimationImportData)
 */
interface AnimationImportData extends BaseImportData {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_AnimationImportData: unique symbol;
}
/**
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/FacsImportData)
 */
interface FacsImportData extends BaseImportData {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_FacsImportData: unique symbol;
}
/**
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/GroupImportData)
 */
interface GroupImportData extends BaseImportData {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_GroupImportData: unique symbol;
    /**
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/GroupImportData#Anchored)
     */
    Anchored: boolean;
    /**
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/GroupImportData#ImportAsModelAsset)
     */
    ImportAsModelAsset: boolean;
    /**
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/GroupImportData#InsertInWorkspace)
     */
    InsertInWorkspace: boolean;
}
/**
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/JointImportData)
 */
interface JointImportData extends BaseImportData {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_JointImportData: unique symbol;
}
/**
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/MaterialImportData)
 */
interface MaterialImportData extends BaseImportData {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_MaterialImportData: unique symbol;
    /**
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/MaterialImportData#DiffuseFilePath)
     */
    DiffuseFilePath: string;
    /**
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/MaterialImportData#IsPbr)
     */
    readonly IsPbr: boolean;
    /**
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/MaterialImportData#MetalnessFilePath)
     */
    MetalnessFilePath: string;
    /**
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/MaterialImportData#NormalFilePath)
     */
    NormalFilePath: string;
    /**
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/MaterialImportData#RoughnessFilePath)
     */
    RoughnessFilePath: string;
}
/**
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/MeshImportData)
 */
interface MeshImportData extends BaseImportData {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_MeshImportData: unique symbol;
    /**
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/MeshImportData#Anchored)
     */
    Anchored: boolean;
    /**
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/MeshImportData#CageManifold)
     */
    readonly CageManifold: boolean;
    /**
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/MeshImportData#CageMeshIntersectedPreview)
     */
    CageMeshIntersectedPreview: boolean;
    /**
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/MeshImportData#CageMeshNotIntersected)
     */
    readonly CageMeshNotIntersected: boolean;
    /**
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/MeshImportData#CageNoOverlappingVertices)
     */
    readonly CageNoOverlappingVertices: boolean;
    /**
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/MeshImportData#CageNonManifoldPreview)
     */
    CageNonManifoldPreview: boolean;
    /**
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/MeshImportData#CageOverlappingVerticesPreview)
     */
    CageOverlappingVerticesPreview: boolean;
    /**
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/MeshImportData#CageUVMatched)
     */
    readonly CageUVMatched: boolean;
    /**
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/MeshImportData#CageUVMisMatchedPreview)
     */
    CageUVMisMatchedPreview: boolean;
    /**
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/MeshImportData#Dimensions)
     */
    readonly Dimensions: Vector3;
    /**
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/MeshImportData#DoubleSided)
     */
    DoubleSided: boolean;
    /**
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/MeshImportData#IgnoreVertexColors)
     */
    IgnoreVertexColors: boolean;
    /**
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/MeshImportData#IrrelevantCageModifiedPreview)
     */
    IrrelevantCageModifiedPreview: boolean;
    /**
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/MeshImportData#MeshHoleDetectedPreview)
     */
    MeshHoleDetectedPreview: boolean;
    /**
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/MeshImportData#MeshNoHoleDetected)
     */
    readonly MeshNoHoleDetected: boolean;
    /**
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/MeshImportData#NoIrrelevantCageModified)
     */
    readonly NoIrrelevantCageModified: boolean;
    /**
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/MeshImportData#NoOuterCageFarExtendedFromMesh)
     */
    readonly NoOuterCageFarExtendedFromMesh: boolean;
    /**
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/MeshImportData#OuterCageFarExtendedFromMeshPreview)
     */
    OuterCageFarExtendedFromMeshPreview: boolean;
    /**
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/MeshImportData#PolygonCount)
     */
    readonly PolygonCount: number;
    /**
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/MeshImportData#UseImportedPivot)
     */
    UseImportedPivot: boolean;
}
/**
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/RootImportData)
 */
interface RootImportData extends BaseImportData {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_RootImportData: unique symbol;
    /**
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/RootImportData#AddModelToInventory)
     */
    AddModelToInventory: boolean;
    /**
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/RootImportData#Anchored)
     */
    Anchored: boolean;
    /**
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/RootImportData#AnimationIdForRestPose)
     */
    AnimationIdForRestPose: number;
    /**
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/RootImportData#ExistingPackageId)
     */
    ExistingPackageId: string;
    /**
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/RootImportData#FileDimensions)
     */
    readonly FileDimensions: Vector3;
    /**
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/RootImportData#ImportAsModelAsset)
     */
    ImportAsModelAsset: boolean;
    /**
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/RootImportData#ImportAsPackage)
     */
    ImportAsPackage: boolean;
    /**
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/RootImportData#InsertInWorkspace)
     */
    InsertInWorkspace: boolean;
    /**
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/RootImportData#InsertWithScenePosition)
     */
    InsertWithScenePosition: boolean;
    /**
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/RootImportData#InvertNegativeFaces)
     */
    InvertNegativeFaces: boolean;
    /**
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/RootImportData#KeepZeroInfluenceBones)
     */
    KeepZeroInfluenceBones: boolean;
    /**
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/RootImportData#MergeMeshes)
     */
    MergeMeshes: boolean;
    /**
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/RootImportData#PolygonCount)
     */
    readonly PolygonCount: number;
    /**
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/RootImportData#PreferredUploadId)
     */
    PreferredUploadId: number;
    /**
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/RootImportData#RestPose)
     */
    RestPose: Enum.RestPose;
    /**
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/RootImportData#RigScale)
     */
    RigScale: Enum.RigScale;
    /**
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/RootImportData#RigType)
     */
    RigType: Enum.RigType;
    /**
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/RootImportData#RigVisualization)
     */
    RigVisualization: boolean;
    /**
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/RootImportData#ScaleUnit)
     */
    ScaleUnit: Enum.MeshScaleUnit;
    /**
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/RootImportData#UseSceneOriginAsCFrame)
     */
    UseSceneOriginAsCFrame: boolean;
    /**
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/RootImportData#UseSceneOriginAsPivot)
     */
    UseSceneOriginAsPivot: boolean;
    /**
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/RootImportData#UsesCages)
     */
    UsesCages: boolean;
    /**
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/RootImportData#ValidateUgcBody)
     */
    ValidateUgcBody: boolean;
    /**
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/RootImportData#WorldForward)
     */
    WorldForward: Enum.NormalId;
    /**
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/RootImportData#WorldUp)
     */
    WorldUp: Enum.NormalId;
}
/**
 * The BasePlayerGui is an abstract class which the GUI drawing storage classes inherit from.
 *
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/BasePlayerGui)
 */
interface BasePlayerGui extends Instance {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_BasePlayerGui: unique symbol;
    /**
     * Returns a list of all <code>GuiObject</code> instances occupying the given point on the screen.
     * @param this The BasePlayerGui is an abstract class which the GUI drawing storage classes inherit from.
     * @param x The x position on the screen relative to the top left corner after the <code>GuiInset</code> is applied.
     * @param y The y position on the screen relative to the top left corner after the <code>GuiInset</code> is applied.
     * @returns A table of the <code>GuiObject</code> instances that occupy the given screen space.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/BasePlayerGui#GetGuiObjectsAtPosition)
     */
    GetGuiObjectsAtPosition(this: BasePlayerGui, x: number, y: number): Array<GuiObject>;
}
/**
 * A container for a player's currently rendered <code>ScreenGuis</code>.
 *
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/PlayerGui)
 */
interface PlayerGui extends BasePlayerGui {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_PlayerGui: unique symbol;
    /**
     * Describes the player's current screen orientation.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/PlayerGui#CurrentScreenOrientation)
     */
    readonly CurrentScreenOrientation: Enum.ScreenOrientation;
    /**
     * Sets the preferred screen orientation mode for this player, if on a mobile device.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/PlayerGui#ScreenOrientation)
     */
    ScreenOrientation: Enum.ScreenOrientation;
    /**
     * Overrides the default selection adornment used for gamepads.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/PlayerGui#SelectionImageObject)
     */
    SelectionImageObject: GuiObject | undefined;
    /**
     * <strong>Deprecated:</strong> <br>Returns the transparency of the Topbar.
     * @param this A container for a player's currently rendered <code>ScreenGuis</code>.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/PlayerGui#GetTopbarTransparency)
     */
    GetTopbarTransparency(this: PlayerGui): number;
    /**
     * <strong>Deprecated:</strong> <br>Sets the transparency of the top bar.
     * @param this A container for a player's currently rendered <code>ScreenGuis</code>.
     * @param transparency
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/PlayerGui#SetTopbarTransparency)
     */
    SetTopbarTransparency(this: PlayerGui, transparency: number): void;
    /**
     * <strong>Deprecated:</strong> <br>Fires when the transparency of the Topbar CoreGui changes.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/PlayerGui#TopbarTransparencyChangedSignal)
     */
    readonly TopbarTransparencyChangedSignal: RBXScriptSignal<(transparency: number) => void>;
}
/**
 * A container for <code>LayerCollector</code> objects to be copied into the <code>PlayerGui</code> of <code>Players</code>. Also provides a range of functions for interacting with the <code>CoreGui</code>.
 *
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/StarterGui)
 */
interface StarterGui extends BasePlayerGui {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_StarterGui: unique symbol;
    /**
     * <strong>Deprecated:</strong> This property is deprecated. Use <code>LayerCollector.ResetOnSpawn</code> to control the resetting behavior for individual <code>LayerCollector</code> objects.<br>Determines whether each child parented to the StarterGui will be cloned into a player's PlayerGui when that player's character is respawned.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/StarterGui#ResetPlayerGuiOnSpawn)
     */
    ResetPlayerGuiOnSpawn: boolean;
    /**
     * Sets the default screen orientation mode for users with mobile devices.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/StarterGui#ScreenOrientation)
     */
    ScreenOrientation: Enum.ScreenOrientation;
    /**
     * Determines whether the contents of <code>StarterGui</code> is visible in Studio.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/StarterGui#ShowDevelopmentGui)
     */
    ShowDevelopmentGui: boolean;
    /**
     * Returns whether the given <code>CoreGuiType</code>is enabled, or if it has been disabled using <code>StarterGui:SetCoreGuiEnabled()</code>.
     * @param this A container for <code>LayerCollector</code> objects to be copied into the <code>PlayerGui</code> of <code>Players</code>. Also provides a range of functions for interacting with the <code>CoreGui</code>.
     * @param coreGuiType The given <code>CoreGuiType</code>.
     * @returns Whether the given <code>CoreGuiType</code> is enabled.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/StarterGui#GetCoreGuiEnabled)
     */
    GetCoreGuiEnabled(this: StarterGui, coreGuiType: CastsToEnum<Enum.CoreGuiType>): boolean;
    /**
     * Allows you to perform certain interactions with Roblox's core scripts.
     * @param this A container for <code>LayerCollector</code> objects to be copied into the <code>PlayerGui</code> of <code>Players</code>. Also provides a range of functions for interacting with the <code>CoreGui</code>.
     * @param parameterName Selects the functionality with which the call will interact.
     * @param value A table of <code>BindableEvents</code> and <code>BindableFunctions</code>.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/StarterGui#SetCore)
     */
    SetCore<T extends keyof SettableCores>(this: StarterGui, parameter: T, option: SettableCores[T]): void;
    /**
     * Sets whether the <code>CoreGui</code> element associated with the given <code>CoreGuiType</code> is enabled or disabled.
     * @param this A container for <code>LayerCollector</code> objects to be copied into the <code>PlayerGui</code> of <code>Players</code>. Also provides a range of functions for interacting with the <code>CoreGui</code>.
     * @param coreGuiType The given <code>CoreGuiType</code>.
     * @param enabled Whether to enable or disable the given <code>CoreGuiType</code>.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/StarterGui#SetCoreGuiEnabled)
     */
    SetCoreGuiEnabled(this: StarterGui, coreGuiType: CastsToEnum<Enum.CoreGuiType>, enabled: boolean): void;
    /**
     * Returns a variable that has been specified by a Roblox core script.
     * @param this A container for <code>LayerCollector</code> objects to be copied into the <code>PlayerGui</code> of <code>Players</code>. Also provides a range of functions for interacting with the <code>CoreGui</code>.
     * @param parameterName
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/StarterGui#GetCore)
     */
    GetCore<T extends keyof GettableCores>(this: StarterGui, parameter: T): GettableCores[T];
}
/**
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/BaseRemoteEvent)
 */
interface BaseRemoteEvent extends Instance {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_BaseRemoteEvent: unique symbol;
}
/**
 * An object which facilitates asynchronous, one-way communication across the client-server boundary. Scripts firing a <code>RemoteEvent</code> do not yield.
 *
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/RemoteEvent)
 */
interface RemoteEvent<T extends Callback = Callback> extends BaseRemoteEvent {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_RemoteEvent: unique symbol;
    /**
     * Fires the <code>OnClientEvent</code> event for each client connected to the same <code>RemoteEvent</code>.
     * @param this An object which facilitates asynchronous, one-way communication across the client-server boundary. Scripts firing a <code>RemoteEvent</code> do not yield.
     * @param arguments Values to pass to all <code>OnClientEvent</code> events connected to the same <code>RemoteEvent</code>.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/RemoteEvent#FireAllClients)
     */
    FireAllClients(this: RemoteEvent, ...args: Parameters<T>): void;
    /**
     * Fires the <code>OnClientEvent</code> event for a specific client connected to the same <code>RemoteEvent</code>.
     * @param this An object which facilitates asynchronous, one-way communication across the client-server boundary. Scripts firing a <code>RemoteEvent</code> do not yield.
     * @param player The client of the <code>Player</code> to fire the event to.
     * @param arguments Values to pass to <code>OnClientEvent</code> events connected to the same <code>RemoteEvent</code>.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/RemoteEvent#FireClient)
     */
    FireClient(this: RemoteEvent, player: Player, ...args: Parameters<T>): void;
    /**
     * Fires the <code>OnServerEvent</code> event on the server from one client connected to the same <code>RemoteEvent</code>.
     * @param this An object which facilitates asynchronous, one-way communication across the client-server boundary. Scripts firing a <code>RemoteEvent</code> do not yield.
     * @param arguments Values to pass to <code>OnServerEvent</code> events connected to the same <code>RemoteEvent</code>.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/RemoteEvent#FireServer)
     */
    FireServer(this: RemoteEvent, ...args: Parameters<T>): void;
    /**
     * Fires from a <code>LocalScript</code> when either <code>FireClient()</code> or <code>FireAllClients()</code> is called on the same <code>RemoteEvent</code> instance from a <code>Script</code>.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/RemoteEvent#OnClientEvent)
     */
    readonly OnClientEvent: RBXScriptSignal<T>;
    /**
     * Fires from a <code>Script</code> when <code>FireServer()</code> is called on the same <code>RemoteEvent</code> instance from a <code>LocalScript</code>.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/RemoteEvent#OnServerEvent)
     */
    readonly OnServerEvent: RBXScriptSignal<(player: Player, ...args: Array<unknown>) => void>;
}
/**
 * An object which facilitates asynchronous, unordered and unreliable, one-way communication across the client-server boundary. Scripts firing a <code>UnreliableRemoteEvent</code> do not yield.
 *
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/UnreliableRemoteEvent)
 */
interface UnreliableRemoteEvent<T extends Callback = Callback> extends BaseRemoteEvent {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_UnreliableRemoteEvent: unique symbol;
    /**
     * Fires the <code>OnClientEvent</code> event for each client connected to the same <code>UnreliableRemoteEvent</code>. Has a 900 byte limit to the payload of the event, otherwise event is dropped.
     * @param this An object which facilitates asynchronous, unordered and unreliable, one-way communication across the client-server boundary. Scripts firing a <code>UnreliableRemoteEvent</code> do not yield.
     * @param arguments Values to pass to all <code>OnClientEvent</code> events connected to the same <code>UnreliableRemoteEvent</code>.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/UnreliableRemoteEvent#FireAllClients)
     */
    FireAllClients(this: UnreliableRemoteEvent, ...args: Parameters<T>): void;
    /**
     * Fires the <code>OnClientEvent</code> event for a specific client connected to the same <code>UnreliableRemoteEvent</code>. Has a 900 byte limit to the payload of the event, otherwise event is dropped.
     * @param this An object which facilitates asynchronous, unordered and unreliable, one-way communication across the client-server boundary. Scripts firing a <code>UnreliableRemoteEvent</code> do not yield.
     * @param player The client of the <code>Player</code> to fire the event to.
     * @param arguments Values to pass to <code>OnClientEvent</code> events connected to the same <code>UnreliableRemoteEvent</code>.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/UnreliableRemoteEvent#FireClient)
     */
    FireClient(this: UnreliableRemoteEvent, player: Player, ...args: Parameters<T>): void;
    /**
     * Fires the <code>OnServerEvent</code> event on the server from one client connected to the same <code>UnreliableRemoteEvent</code>. Has a 900 byte limit to the payload of the event, otherwise event is dropped.
     * @param this An object which facilitates asynchronous, unordered and unreliable, one-way communication across the client-server boundary. Scripts firing a <code>UnreliableRemoteEvent</code> do not yield.
     * @param arguments Values to pass to <code>OnServerEvent</code> events connected to the same <code>UnreliableRemoteEvent</code>.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/UnreliableRemoteEvent#FireServer)
     */
    FireServer(this: UnreliableRemoteEvent, ...args: Parameters<T>): void;
    /**
     * Fires from a <code>LocalScript</code> when either <code>FireClient()</code> or <code>FireAllClients()</code> is called on the same <code>UnreliableRemoteEvent</code> instance from a <code>Script</code>, although this firing is not guaranteed even if one of the above methods are called. This can occur due to packet loss or to maintain optimal engine performance.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/UnreliableRemoteEvent#OnClientEvent)
     */
    readonly OnClientEvent: RBXScriptSignal<T>;
    /**
     * Fires from a <code>Script</code> when <code>FireServer()</code> is called on the same <code>UnreliableRemoteEvent</code> instance from a <code>LocalScript</code>, although this firing is not guaranteed even if the above methods is called. This can occur due to packet loss or to maintain optimal engine performance.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/UnreliableRemoteEvent#OnServerEvent)
     */
    readonly OnServerEvent: RBXScriptSignal<(player: Player, ...args: Array<unknown>) => void>;
}
/**
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/BaseWrap)
 */
interface BaseWrap extends Instance {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_BaseWrap: unique symbol;
    /**
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/BaseWrap#CageMeshContent)
     */
    get CageMeshContent(): Content;
    /**
     * Asset ID for cage mesh.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/BaseWrap#CageMeshId)
     */
    get CageMeshId(): ContentId;
    /**
     * Cage mesh offset relative to parent <code>MeshPart</code>.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/BaseWrap#CageOrigin)
     */
    get CageOrigin(): CFrame;
    /**
     * Cage mesh offset in world space.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/BaseWrap#CageOriginWorld)
     */
    readonly CageOriginWorld: CFrame;
    /**
     * Describes where a global zero was while authoring the cage mesh in an asset creation tool.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/BaseWrap#ImportOrigin)
     */
    get ImportOrigin(): CFrame;
    /**
     * Describes where the origin (in world space) was while authoring the cage mesh in an asset creation tool.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/BaseWrap#ImportOriginWorld)
     */
    readonly ImportOriginWorld: CFrame;
}
/**
 * Allows for the real-time deformation of a <code>MeshPart</code>.
 *
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/WrapDeformer)
 */
interface WrapDeformer extends BaseWrap {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_WrapDeformer: unique symbol;
    /**
     * Sets the cage mesh used to deform against a sibling <code>WrapTarget</code> cage mesh.
     * @param this Allows for the real-time deformation of a <code>MeshPart</code>.
     * @param content
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/WrapDeformer#SetCageMeshContent)
     */
    SetCageMeshContent(this: WrapDeformer, content: Content): void;
    /**
     * Returns an <code>EditableMesh</code> (currently unskinned) equivalent to the deformed parent mesh.
     * @param this Allows for the real-time deformation of a <code>MeshPart</code>.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/WrapDeformer#CreateEditableMeshAsync)
     */
    CreateEditableMeshAsync(this: WrapDeformer): EditableMesh;
    /**
     * Returns a <code>CFrame</code> deformed comparably to the <code>MeshPart</code>.
     * @param this Allows for the real-time deformation of a <code>MeshPart</code>.
     * @param originalCFrame
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/WrapDeformer#GetDeformedCFrameAsync)
     */
    GetDeformedCFrameAsync(this: WrapDeformer, originalCFrame: CFrame): CFrame;
}
/**
 * The WrapLayer object defines a 3D accessory's inner and outer surfaces and other properties related to layering accessories. These surfaces, or the Inner Cage and Outer Cage, are similar to collision boxes, and describe the surfaces of which other 3D accessories can be placed without clipping or breaking.
 *
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/WrapLayer)
 */
interface WrapLayer extends BaseWrap {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_WrapLayer: unique symbol;
    /**
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/WrapLayer#AutoSkin)
     */
    AutoSkin: Enum.WrapLayerAutoSkin;
    /**
     * <code>CFrame</code> is used to adjust a binding point for clothing item mesh. Could be used to move and rotate clothing items. This property is intended for fine-tuning only and it is heavily optional.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/WrapLayer#BindOffset)
     */
    get BindOffset(): CFrame;
    /**
     * Allows for disabling of the <code>WrapLayer</code> object as if it does not exist.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/WrapLayer#Enabled)
     */
    Enabled: boolean;
    /**
     * Controls the composition order for layered clothing.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/WrapLayer#Order)
     */
    Order: number;
    /**
     * Controls how much underlying clothing items inflate the current clothing item.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/WrapLayer#Puffiness)
     */
    Puffiness: number;
    /**
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/WrapLayer#ReferenceMeshContent)
     */
    get ReferenceMeshContent(): Content;
    /**
     * AssetID for reference mesh used to define Inner Cage of a 3D object.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/WrapLayer#ReferenceMeshId)
     */
    get ReferenceMeshId(): ContentId;
    /**
     * Reference mesh offset relative to parent MeshPart (in the parent MeshPart space) Note: this property is set up automatically by the FBX importer.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/WrapLayer#ReferenceOrigin)
     */
    get ReferenceOrigin(): CFrame;
    /**
     * Reference mesh offset relative to parent MeshPart (in the world space) Note: this property is set up automatically by the FBX importer.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/WrapLayer#ReferenceOriginWorld)
     */
    readonly ReferenceOriginWorld: CFrame;
    /**
     * Allows slight shrinking/expanding of the resulting render mesh, without affecting any other layers.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/WrapLayer#ShrinkFactor)
     */
    get ShrinkFactor(): number;
}
/**
 * The WrapTarget object defines a target. A target is the 3D body with only an outer surface, or an Outer Cage.
 *
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/WrapTarget)
 */
interface WrapTarget extends BaseWrap {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_WrapTarget: unique symbol;
    /**
     * Defines how much the body mesh can be compressed by clothing.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/WrapTarget#Stiffness)
     */
    get Stiffness(): number;
}
/**
 * Connects two <code>Attachments</code> by drawing a texture between them.
 *
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Beam)
 */
interface Beam extends Instance {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_Beam: unique symbol;
    /**
     * The <code>Attachment</code> the beam originates from.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Beam#Attachment0)
     */
    Attachment0: Attachment | undefined;
    /**
     * The <code>Attachment</code> the beam ends at.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Beam#Attachment1)
     */
    Attachment1: Attachment | undefined;
    /**
     * Scales the light emitted from the beam when <code>LightInfluence</code> is less than 1.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Beam#Brightness)
     */
    Brightness: number;
    /**
     * Determines the color of the beam across its <code>Segments</code>.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Beam#Color)
     */
    Color: ColorSequence;
    /**
     * Determines, along with <code>Attachment0</code>, the position of the second control point in the beam's Bézier curve.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Beam#CurveSize0)
     */
    CurveSize0: number;
    /**
     * Determines, along with <code>Attachment1</code>, the position of the third control point in the beam's Bézier curve.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Beam#CurveSize1)
     */
    CurveSize1: number;
    /**
     * Determines whether the beam is visible or not.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Beam#Enabled)
     */
    Enabled: boolean;
    /**
     * Determines whether the <code>Segments</code> of the beam will always face the camera, regardless of its orientation.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Beam#FaceCamera)
     */
    FaceCamera: boolean;
    /**
     * Determines to what degree the colors of the beam are blended with the colors behind it.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Beam#LightEmission)
     */
    LightEmission: number;
    /**
     * Determines the degree to which the beam is influenced by the environment's lighting.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Beam#LightInfluence)
     */
    LightInfluence: number;
    /**
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Beam#LocalTransparencyModifier)
     */
    LocalTransparencyModifier: number;
    /**
     * Sets how many straight segments the beam is made up of.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Beam#Segments)
     */
    Segments: number;
    /**
     * The content ID of the texture to be displayed on the beam.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Beam#Texture)
     */
    Texture: ContentId;
    /**
     * Sets the length of the beam's texture, dependent on <code>TextureMode</code>.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Beam#TextureLength)
     */
    TextureLength: number;
    /**
     * Determines the manner in which the <code>Texture</code> scales and repeats.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Beam#TextureMode)
     */
    TextureMode: Enum.TextureMode;
    /**
     * Determines the speed at which the <code>Texture</code> image moves along the beam.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Beam#TextureSpeed)
     */
    TextureSpeed: number;
    /**
     * Determines the transparency of the beam across its segments.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Beam#Transparency)
     */
    Transparency: NumberSequence;
    /**
     * The width of the beam at its origin (<code>Attachment0</code>), in studs.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Beam#Width0)
     */
    Width0: number;
    /**
     * The width of the beam at its end (<code>Attachment1</code>), in studs.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Beam#Width1)
     */
    Width1: number;
    /**
     * The distance, in studs, the beam display is offset relative to the <code>CurrentCamera</code>.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Beam#ZOffset)
     */
    ZOffset: number;
    /**
     * Sets the current offset of the beam's texture cycle.
     * @param this Connects two <code>Attachments</code> by drawing a texture between them.
     * @param offset The desired offset of the texture cycle.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Beam#SetTextureOffset)
     */
    SetTextureOffset(this: Beam, offset?: number): void;
}
/**
 * An object which enables custom events through asynchronous one-way communication between scripts on the same side of the client-server boundary. Scripts firing a <code>BindableEvent</code> do not yield.
 *
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/BindableEvent)
 */
interface BindableEvent<T extends Callback = Callback> extends Instance {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_BindableEvent: unique symbol;
    /**
     * Fires the <code>BindableEvent</code> which in turn fires the <code>Event</code> event.
     * @param this An object which enables custom events through asynchronous one-way communication between scripts on the same side of the client-server boundary. Scripts firing a <code>BindableEvent</code> do not yield.
     * @param arguments Values to pass to <code>Event</code> events connected to the same <code>BindableEvent</code>.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/BindableEvent#Fire)
     */
    Fire(this: BindableEvent, ...args: Parameters<T>): void;
    /**
     * Fires when any script calls the <code>Fire()</code> method on the same <code>BindableEvent</code> instance.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/BindableEvent#Event)
     */
    readonly Event: RBXScriptSignal<T>;
}
/**
 * An object which allows for synchronous two-way communication between scripts on the same side of the client-server boundary. Scripts invoking a <code>BindableFunction</code> yield until the corresponding callback is found.
 *
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/BindableFunction)
 */
interface BindableFunction<T extends Callback = Callback> extends Instance {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_BindableFunction: unique symbol;
    /**
     * Invokes the <code>BindableFunction</code> which in turn calls the <code>OnInvoke</code> callback, returning any values returned by the callback.
     * @param this An object which allows for synchronous two-way communication between scripts on the same side of the client-server boundary. Scripts invoking a <code>BindableFunction</code> yield until the corresponding callback is found.
     * @param arguments Values to pass to the <code>OnInvoke</code> callback.
     * @returns Values returned from the <code>OnInvoke</code> callback.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/BindableFunction#Invoke)
     */
    Invoke(this: BindableFunction, ...args: Parameters<T>): ReturnType<T>;
    /**
     * Callback for when the <code>BindableFunction</code> is invoked with <code>Invoke()</code>.
     * @param arguments The parameters sent through <code>Invoke()</code>.
     * @returns Values returned by the callback function.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/BindableFunction#OnInvoke)
     */
    OnInvoke: T | undefined;
}
/**
 * <strong>Deprecated:</strong> This class has been deprecated. Use <code>Constraints|Constraint</code> for new work. Find an overview of BodyMover replacements in the <a href="../../../physics/mover-constraints.md">Constraint Movers article</a>.<br>Base class for objects that continually exert forces to parts.
 *
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/BodyMover)
 */
interface BodyMover extends Instance {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_BodyMover: unique symbol;
}
/**
 * <strong>Deprecated:</strong> This object is deprecated and should not be used for new work. Use <code>AngularVelocity</code> instead.<br>Applies a torque to maintain a constant angular velocity.
 *
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/BodyAngularVelocity)
 */
interface BodyAngularVelocity extends BodyMover {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_BodyAngularVelocity: unique symbol;
    /**
     * Determines the axis of rotation (direction) and the rotational velocity (magnitude) in radians/s.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/BodyAngularVelocity#AngularVelocity)
     */
    AngularVelocity: Vector3;
    /**
     * Determines the limit of torque that may be exerted on each world axis.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/BodyAngularVelocity#MaxTorque)
     */
    MaxTorque: Vector3;
    /**
     * Determines how aggressive of a torque is applied in reaching the goal angular velocity.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/BodyAngularVelocity#P)
     */
    P: number;
}
/**
 * <strong>Deprecated:</strong> This object is deprecated and should not be used for new work. Use <code>VectorForce</code> instead.<br>Applies a constant force to an object.
 *
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/BodyForce)
 */
interface BodyForce extends BodyMover {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_BodyForce: unique symbol;
    /**
     * Determines the force exerted on each axis.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/BodyForce#Force)
     */
    Force: Vector3;
}
/**
 * <strong>Deprecated:</strong> This object is deprecated and should not be used for new work. Use <code>AlignOrientation</code> instead.<br>Applies a torque to maintain a constant orientation.
 *
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/BodyGyro)
 */
interface BodyGyro extends BodyMover {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_BodyGyro: unique symbol;
    /**
     * Determines the target orientation (translational component ignored).
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/BodyGyro#CFrame)
     */
    CFrame: CFrame;
    /**
     * Determines the amount of dampening to use in reaching the goal <code>CFrame</code>.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/BodyGyro#D)
     */
    D: number;
    /**
     * Determines the limit on how much torque that may be applied to each axis.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/BodyGyro#MaxTorque)
     */
    MaxTorque: Vector3;
    /**
     * Determines how aggressive of a torque is applied in reaching the goal orientation.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/BodyGyro#P)
     */
    P: number;
}
/**
 * <strong>Deprecated:</strong> This object is deprecated and should not be used for new work. Use <code>AlignPosition</code> instead.<br>Applies a force to maintain a constant position.
 *
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/BodyPosition)
 */
interface BodyPosition extends BodyMover {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_BodyPosition: unique symbol;
    /**
     * Determines the amount of dampening to use in reaching the goal <code>Position</code>.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/BodyPosition#D)
     */
    D: number;
    /**
     * Determines the limit on how much force that may be applied to each axis.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/BodyPosition#MaxForce)
     */
    MaxForce: Vector3;
    /**
     * Determines how aggressive of a force is applied in reaching the goal position.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/BodyPosition#P)
     */
    P: number;
    /**
     * Determines the goal position towards which force will be applied.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/BodyPosition#Position)
     */
    Position: Vector3;
    /**
     * Returns the last force in the object.
     * @param this <strong>Deprecated:</strong> This object is deprecated and should not be used for new work. Use <code>AlignPosition</code> instead.<br>Applies a force to maintain a constant position.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/BodyPosition#GetLastForce)
     */
    GetLastForce(this: BodyPosition): Vector3;
    /**
     * Fired when the Parent of the BodyPosition reaches the desired <code>BodyPosition.Position</code> (within .1 studs). Once this event fires it will not fire again until <code>BodyPosition.Position</code> is updated.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/BodyPosition#ReachedTarget)
     */
    readonly ReachedTarget: RBXScriptSignal<() => void>;
}
/**
 * <strong>Deprecated:</strong> This object is deprecated and should not be used for new work. Use <code>VectorForce</code> instead.<br>Applies a constant force to an object at a specific point.
 *
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/BodyThrust)
 */
interface BodyThrust extends BodyMover {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_BodyThrust: unique symbol;
    /**
     * Determines the amount of force exerted on each axis relative to the part.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/BodyThrust#Force)
     */
    Force: Vector3;
    /**
     * Determines the relative position where the <code>Force</code> is exerted.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/BodyThrust#Location)
     */
    Location: Vector3;
}
/**
 * <strong>Deprecated:</strong> This object is deprecated and should not be used for new work. Use <code>LinearVelocity</code> instead.<br>Applies a force to maintain a constant velocity.
 *
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/BodyVelocity)
 */
interface BodyVelocity extends BodyMover {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_BodyVelocity: unique symbol;
    /**
     * Determines the limit on how much force that may be applied to each axis.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/BodyVelocity#MaxForce)
     */
    MaxForce: Vector3;
    /**
     * Determines how aggressive of a force is applied in reaching the goal velocity.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/BodyVelocity#P)
     */
    P: number;
    /**
     * Determines the goal velocity.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/BodyVelocity#Velocity)
     */
    Velocity: Vector3;
    /**
     * Not implemented and will always return the 0 vector.
     * @param this <strong>Deprecated:</strong> This object is deprecated and should not be used for new work. Use <code>LinearVelocity</code> instead.<br>Applies a force to maintain a constant velocity.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/BodyVelocity#GetLastForce)
     */
    GetLastForce(this: BodyVelocity): Vector3;
    /**
     * Returns the last force in the object.
     * @param this <strong>Deprecated:</strong> This object is deprecated and should not be used for new work. Use <code>LinearVelocity</code> instead.<br>Applies a force to maintain a constant velocity.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/BodyVelocity#lastForce)
     */
    lastForce(this: BodyVelocity): Vector3;
}
/**
 * <strong>Deprecated:</strong> This object is deprecated and should not be used for new work. Use <code>LineForce</code> instead.<br>Applies a force so that a part follows and faces another part.
 *
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/RocketPropulsion)
 */
interface RocketPropulsion extends BodyMover {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_RocketPropulsion: unique symbol;
    /**
     * Determines the tendency of the part to face the <code>Target</code>.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/RocketPropulsion#CartoonFactor)
     */
    CartoonFactor: number;
    /**
     * Determines the maximum speed at which the part will move toward the <code>Target</code>.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/RocketPropulsion#MaxSpeed)
     */
    MaxSpeed: number;
    /**
     * Determines the maximum amount of thrust that will be exerted to move the part.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/RocketPropulsion#MaxThrust)
     */
    MaxThrust: number;
    /**
     * Determines the maximum amount of torque that may be exerted to rotate the part towards the <code>Target</code>.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/RocketPropulsion#MaxTorque)
     */
    MaxTorque: Vector3;
    /**
     * Determines the object towards which the part should follow/face.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/RocketPropulsion#Target)
     */
    Target: BasePart | undefined;
    /**
     * Determines the world offset from the <code>Target</code> toward which the force/torque is exerted.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/RocketPropulsion#TargetOffset)
     */
    TargetOffset: Vector3;
    /**
     * Determines the maximum distance from the <code>Target</code> the part must be in order for <code>ReachedTarget</code> to be fired.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/RocketPropulsion#TargetRadius)
     */
    TargetRadius: number;
    /**
     * Determines the dampening applied to the part in order to prevent it from overshooting the <code>Target</code>.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/RocketPropulsion#ThrustD)
     */
    ThrustD: number;
    /**
     * Determines how aggressive of a force is applied in reaching the <code>Target</code>.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/RocketPropulsion#ThrustP)
     */
    ThrustP: number;
    /**
     * Determines the amount of dampening that to use in reaching the <code>Target</code>.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/RocketPropulsion#TurnD)
     */
    TurnD: number;
    /**
     * Determines how aggressive of a torque is applied in facing the <code>Target</code>.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/RocketPropulsion#TurnP)
     */
    TurnP: number;
    /**
     * Causes the Rocket to stop moving towards its target, making it fall.
     * @param this <strong>Deprecated:</strong> This object is deprecated and should not be used for new work. Use <code>LineForce</code> instead.<br>Applies a force so that a part follows and faces another part.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/RocketPropulsion#Abort)
     */
    Abort(this: RocketPropulsion): void;
    /**
     * Causes the rocket to fly towards Target.
     * @param this <strong>Deprecated:</strong> This object is deprecated and should not be used for new work. Use <code>LineForce</code> instead.<br>Applies a force so that a part follows and faces another part.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/RocketPropulsion#Fire)
     */
    Fire(this: RocketPropulsion): void;
    /**
     * Fired when the Rocket comes within TargetRadius of the Target. This is used to make the rocket work, such as make an explosion when it flies near the Target.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/RocketPropulsion#ReachedTarget)
     */
    readonly ReachedTarget: RBXScriptSignal<() => void>;
}
/**
 * Describes the appearance of an avatar body part for the <code>HumanoidDescription</code>.
 *
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/BodyPartDescription)
 */
interface BodyPartDescription extends Instance {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_BodyPartDescription: unique symbol;
    /**
     * The asset ID that should be applied when applying this <code>BodyPartDescription</code>.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/BodyPartDescription#AssetId)
     */
    AssetId: number;
    /**
     * The type of body part.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/BodyPartDescription#BodyPart)
     */
    BodyPart: Enum.BodyPart;
    /**
     * The <code>Color3</code> for this body part.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/BodyPartDescription#Color)
     */
    Color: Color3;
    /**
     * A reference to the <code>Instance</code> that should be applied when applying this <code>BodyPartDescription</code>.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/BodyPartDescription#Instance)
     */
    Instance: Instance | undefined;
}
/**
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Breakpoint)
 */
interface Breakpoint extends Instance {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_Breakpoint: unique symbol;
}
/**
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/BugReporterService)
 */
interface BugReporterService extends Instance {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_BugReporterService: unique symbol;
}
/**
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/BulkImportService)
 */
interface BulkImportService extends Instance {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_BulkImportService: unique symbol;
}
/**
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/CalloutService)
 */
interface CalloutService extends Instance {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_CalloutService: unique symbol;
}
/**
 * A class which defines a view of the 3D world.
 *
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Camera)
 */
interface Camera extends Instance {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_Camera: unique symbol;
    /**
     * The <code>CFrame</code> of the <code>Camera</code>, defining its position and orientation in the 3D world.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Camera#CFrame)
     */
    CFrame: CFrame;
    /**
     * The <code>Humanoid</code> or <code>BasePart</code> that is the <code>Camera</code> subject.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Camera#CameraSubject)
     */
    CameraSubject: Humanoid | BasePart | undefined;
    /**
     * Specifies the <code>CameraType</code> to be read by the camera scripts.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Camera#CameraType)
     */
    CameraType: Enum.CameraType;
    /**
     * <strong>Deprecated:</strong> This item has been superseded by <code>Camera.CFrame</code> which should be used in all new work.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Camera#CoordinateFrame)
     */
    CoordinateFrame: CFrame;
    /**
     * Sets the angle of the camera's diagonal field of view.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Camera#DiagonalFieldOfView)
     */
    DiagonalFieldOfView: number;
    /**
     * Sets the angle of the camera's vertical field of view.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Camera#FieldOfView)
     */
    FieldOfView: number;
    /**
     * Determines the FOV value of the <code>Camera</code> that's invariant under viewport size changes.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Camera#FieldOfViewMode)
     */
    FieldOfViewMode: Enum.FieldOfViewMode;
    /**
     * Sets the area in 3D space that is prioritized by Roblox's graphical systems.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Camera#Focus)
     */
    Focus: CFrame;
    /**
     * Toggles whether the camera will automatically track the head motion of a player using a VR device.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Camera#HeadLocked)
     */
    HeadLocked: boolean;
    /**
     * Sets the scale of the user's perspective of the world when using VR.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Camera#HeadScale)
     */
    HeadScale: number;
    /**
     * Sets the angle of the camera's field of view along the longest viewport axis.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Camera#MaxAxisFieldOfView)
     */
    MaxAxisFieldOfView: number;
    /**
     * Describes the negative <strong>Z</strong> offset, in studs, of the camera's near clipping plane.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Camera#NearPlaneZ)
     */
    readonly NearPlaneZ: number;
    /**
     * Toggles whether to apply tilt and roll from the <code>CFrame</code> property while the player is using a VR device.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Camera#VRTiltAndRollEnabled)
     */
    VRTiltAndRollEnabled: boolean;
    /**
     * The dimensions of the device safe area on a Roblox client.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Camera#ViewportSize)
     */
    readonly ViewportSize: Vector2;
    /**
     * <strong>Deprecated:</strong> <br>Returns how much the <code>Camera</code> needs to be pushed towards its <code>Focus</code> in order to make sure there is no obstructions between the <code>Focus</code> and <code>CFrame</code>.
     * @param this A class which defines a view of the 3D world.
     * @param ignoreList An array of <code>Instances</code> to ignore. Descendants of these instances will also be ignored.
     * @returns The distance, in studs, that the <code>Camera</code> needs to be pushed towards its <code>Focus</code> to ensure there are no obstructions between the <code>Focus</code> and <code>CFrame</code> of the <code>Camera</code>.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Camera#GetLargestCutoffDistance)
     */
    GetLargestCutoffDistance(this: Camera, ignoreList: Array<Instance>): number;
    /**
     * <strong>Deprecated:</strong> This method has been deprecated and no longer works. It should not be used in new work.<br>Returns the current 'pan' speed of the <code>Camera</code>.
     * @param this A class which defines a view of the 3D world.
     * @returns The speed at which the <code>Camera</code> is rotating around its <code>Focus</code> on the <strong>Y</strong> axis.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Camera#GetPanSpeed)
     */
    GetPanSpeed(this: Camera): number;
    /**
     * Returns an array of <code>BaseParts</code> that are obscuring the lines of sight between the camera's <code>CFrame</code> and the cast points.
     * @param this A class which defines a view of the 3D world.
     * @param castPoints An array of <code>Vector3</code> positions of cast points.
     * @param ignoreList An array of <code>Instances</code> that should be ignored, along with their descendants.
     * @returns An array of <code>BaseParts</code> that obscure the lines of sight between the camera's <code>CFrame</code> and the <code>castPoints</code>.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Camera#GetPartsObscuringTarget)
     */
    GetPartsObscuringTarget(this: Camera, castPoints: Array<Vector3>, ignoreList: Array<Instance>): Array<Instance>;
    /**
     * Returns the actual <code>CFrame</code>where the <code>Camera</code> is being rendered, accounting for any roll applied and the impact of VR devices.
     * @param this A class which defines a view of the 3D world.
     * @returns The <code>CFrame</code> the <code>Camera</code> is being rendered at.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Camera#GetRenderCFrame)
     */
    GetRenderCFrame(this: Camera): CFrame;
    /**
     * Returns in radians the current roll, or rotation around the camera's Z-axis, applied to the <code>Camera</code> using <code>SetRoll()</code>.
     * @param this A class which defines a view of the 3D world.
     * @returns The current roll applied by <code>SetRoll()</code>, in radians.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Camera#GetRoll)
     */
    GetRoll(this: Camera): number;
    /**
     * <strong>Deprecated:</strong> This method has been deprecated and no longer works.<br>Returns the current tilt speed of the <code>Camera</code>.
     * @param this A class which defines a view of the 3D world.
     * @returns The speed at which the <code>Camera</code> is rotating around its <code>Focus</code> around the camera's <strong>X</strong> axis.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Camera#GetTiltSpeed)
     */
    GetTiltSpeed(this: Camera): number;
    /**
     * <strong>Deprecated:</strong> This method has been deprecated. Instead use <code>TweenService</code> to smoothly animate the <code>Camera</code>, see the code snippets below for an example.<br>Tweens the <code>Camera</code> in a linear fashion towards a new <code>CFrame</code> and <code>Focus</code> over a given duration.
     * @param this A class which defines a view of the 3D world.
     * @param endPos The <code>CFrame</code> for the <code>Camera</code> to tween to.
     * @param endFocus The <code>CFrame</code> for the camera's <code>Focus</code> to tween to.
     * @param duration The duration, in seconds, of the tween.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Camera#Interpolate)
     */
    Interpolate(this: Camera, endPos: CFrame, endFocus: CFrame, duration: number): void;
    /**
     * <strong>Deprecated:</strong> This method was used for legacy camera controls and has since been deprecated. Do not use in new work.<br>Pans the <code>Camera</code> around the <code>Focus</code> in 45 degree increments around the <strong>Y</strong> axis.
     * @param this A class which defines a view of the 3D world.
     * @param units The number of 45 degree increments by which to pan the <code>Camera</code>.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Camera#PanUnits)
     */
    PanUnits(this: Camera, units: number): void;
    /**
     * Creates a unit <code>Ray</code> from a position on the screen (in pixels), at a set depth from the <code>Camera</code> orientated in the camera's direction. Accounts for the GUI inset.
     * @param this A class which defines a view of the 3D world.
     * @param x The position on the <strong>X</strong> axis, in pixels, of the screen point at which to originate the <code>Ray</code>. This position accounts for the GUI inset.
     * @param y The position on the <strong>Y</strong> axis, in pixels, of the screen point at which to originate the <code>Ray</code>. This position accounts for the GUI inset.
     * @param depth The depth from the <code>Camera</code>, in studs, from which to offset the origin of the <code>Ray</code>.
     * @returns A unit <code>Ray</code>, originating from the equivalent <code>Vector3</code> world position of the given screen coordinates at the given depth away from the <code>Camera</code>. This ray is orientated in the direction of the <code>Camera</code>.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Camera#ScreenPointToRay)
     */
    ScreenPointToRay(this: Camera, x: number, y: number, depth?: number): Ray;
    /**
     * <strong>Deprecated:</strong> This method has been deprecated and should not be used in new work.<br>Sets the <code>CameraPanMode</code> to be used by the <code>Camera</code> on mobile devices.
     * @param this A class which defines a view of the 3D world.
     * @param mode The <code>CameraPanMode</code> to set the <code>Camera</code> to.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Camera#SetCameraPanMode)
     */
    SetCameraPanMode(this: Camera, mode?: CastsToEnum<Enum.CameraPanMode>): void;
    /**
     * Sets the current rotation applied around the camera's Z-axis.
     * @param this A class which defines a view of the 3D world.
     * @param rollAngle The roll angle, in radians, to be applied to the <code>Camera</code>.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Camera#SetRoll)
     */
    SetRoll(this: Camera, rollAngle: number): void;
    /**
     * <strong>Deprecated:</strong> This method was used for legacy camera controls and has been deprecated. Do not use in new work.<br>Tilts the <code>Camera</code> around its <code>Focus</code> in 10 degree increments around the camera's <strong>X</strong> axis.
     * @param this A class which defines a view of the 3D world.
     * @param units The number of 10 degree units by which to tilt the <code>Camera</code>.
     * @returns Whether the <code>Camera</code> tilt applied was constrained.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Camera#TiltUnits)
     */
    TiltUnits(this: Camera, units: number): boolean;
    /**
     * Creates a unit <code>Ray</code> from a position on the viewport (in pixels), at a given depth from the <code>Camera</code>, orientated in the camera's direction. Does not account for the <code>CoreUISafeInsets</code> inset.
     * @param this A class which defines a view of the 3D world.
     * @param x The position on the <strong>X</strong> axis, in pixels, of the viewport point at which to originate the <code>Ray</code>, in device safe area coordinates.
     * @param y The position on the <strong>Y</strong> axis, in pixels, of the viewport point at which to originate the <code>Ray</code>, in device safe area coordinates.
     * @param depth The depth from the <code>Camera</code>, in studs, from which to offset the origin of the <code>Ray</code>.
     * @returns A unit <code>Ray</code>, originating from the equivalent <code>Vector3</code> world position of the given viewport coordinates at the given depth away from the <code>Camera</code>. This ray is orientated in the direction of the <code>Camera</code>.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Camera#ViewportPointToRay)
     */
    ViewportPointToRay(this: Camera, x: number, y: number, depth?: number): Ray;
    /**
     * Returns the screen location and depth of a <code>Vector3</code> <code>worldPoint</code> and whether this point is within the bounds of the screen. Accounts for the GUI inset.
     * @param this A class which defines a view of the 3D world.
     * @param worldPoint The <code>Vector3</code> world position.
     * @returns A tuple containing, in order: <ul> <li> A <code>Vector3</code> whose <strong>X</strong> and <strong>Y</strong> components represent the   offset of the <code>worldPoint</code> from the top left corner of the screen,   in pixels. The <code>Vector3</code> <strong>Z</strong> component represents the   depth of the <code>worldPoint</code> from the screen (in studs). </li> <li> A boolean indicating if the <code>worldPoint</code> is within the bounds of the   screen. </li> </ul>
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Camera#WorldToScreenPoint)
     */
    WorldToScreenPoint(this: Camera, worldPoint: Vector3): LuaTuple<[
        Vector3,
        boolean
    ]>;
    /**
     * Returns the screen location and depth of a <code>Vector3</code> <code>worldPoint</code> and whether this point is within the bounds of the screen. Does not account for the GUI inset.
     * @param this A class which defines a view of the 3D world.
     * @param worldPoint The <code>Vector3</code> world position.
     * @returns A tuple containing, in order: <ul> <li> A <code>Vector3</code> whose <strong>X</strong> and <strong>Y</strong> components represent the   offset of the <code>worldPoint</code> from the top left corner of the viewport,   in pixels. The <code>Vector3</code> <strong>Z</strong> component represents the   depth of the <code>worldPoint</code> from the screen (in studs). </li> <li> A boolean indicating if the <code>worldPoint</code> is within the bounds of the   screen. </li> </ul>
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Camera#WorldToViewportPoint)
     */
    WorldToViewportPoint(this: Camera, worldPoint: Vector3): LuaTuple<[
        Vector3,
        boolean
    ]>;
    /**
     * @param this A class which defines a view of the 3D world.
     * @param boundingBoxCFrame
     * @param boundingBoxSize
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Camera#ZoomToExtents)
     */
    ZoomToExtents(this: Camera, boundingBoxCFrame: CFrame, boundingBoxSize: Vector3): void;
    /**
     * Fired when the <code>Camera</code> has finished interpolating using<code>Interpolate()</code>.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Camera#InterpolationFinished)
     */
    readonly InterpolationFinished: RBXScriptSignal<() => void>;
}
/**
 * A service which provides control over screenshot capture features.
 *
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/CaptureService)
 */
interface CaptureService extends Instance {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_CaptureService: unique symbol;
    /**
     * Takes a screenshot and provides a temporary <code>contentId</code> to identify it.
     * @param this A service which provides control over screenshot capture features.
     * @param onCaptureReady A callback function that is called with the <code>contentId</code> of the new capture once it is ready.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/CaptureService#CaptureScreenshot)
     */
    CaptureScreenshot(this: CaptureService, onCaptureReady: (captureContentId: string) => void): void;
    /**
     * Prompts the user to save specified captures to their gallery.
     * @param this A service which provides control over screenshot capture features.
     * @param contentIds An array of <code>contentId</code> strings identifying the screenshots to save.
     * @param resultCallback A callback function that will be invoked with a dictionary mapping each <code>contentId</code> to a boolean indicating if the user accepted saving that capture.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/CaptureService#PromptSaveCapturesToGallery)
     */
    PromptSaveCapturesToGallery<T extends string>(this: CaptureService, contentIds: Array<T>, resultCallback: (results: Record<T, boolean>) => void): void;
    /**
     * Prompts the user to share a specified screenshot capture.
     * @param this A service which provides control over screenshot capture features.
     * @param contentId The <code>contentId</code> identifying the screenshot to share.
     * @param launchData An optional string to include as launch data in the invite link.
     * @param onAcceptedCallback An optional callback function invoked if the user accepts sharing.
     * @param onDeniedCallback An optional callback function invoked if the user denies sharing.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/CaptureService#PromptShareCapture)
     */
    PromptShareCapture(this: CaptureService, contentId: string, launchData: string, onAcceptedCallback: () => void, onDeniedCallback: () => void): void;
    /**
     * Fires immediately before a capture begins.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/CaptureService#CaptureBegan)
     */
    readonly CaptureBegan: RBXScriptSignal<() => void>;
    /**
     * Fires after a capture finishes.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/CaptureService#CaptureEnded)
     */
    readonly CaptureEnded: RBXScriptSignal<() => void>;
    /**
     * <strong>Deprecated:</strong> This event has been superseded by the <code>UserCaptureSaved</code> event.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/CaptureService#CaptureSaved)
     */
    readonly CaptureSaved: RBXScriptSignal<(captureInfo: Record<string, unknown>) => void>;
    /**
     * Fires when the user saves a capture.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/CaptureService#UserCaptureSaved)
     */
    readonly UserCaptureSaved: RBXScriptSignal<(captureContentId: ContentId) => void>;
}
/**
 * The base class for objects that change the character's appearance, such as the <code>BodyColors</code>, <code>CharacterMesh</code>, <code>ShirtGraphic</code>, <code>Pants</code> and <code>Shirt</code> objects.
 *
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/CharacterAppearance)
 */
interface CharacterAppearance extends Instance {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_CharacterAppearance: unique symbol;
}
/**
 * For a Humanoid character, the BodyColors will specify the colors for the different body parts.
 *
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/BodyColors)
 */
interface BodyColors extends CharacterAppearance {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_BodyColors: unique symbol;
    /**
     * Sets the color of the head, as a <code>BrickColor</code>.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/BodyColors#HeadColor)
     */
    HeadColor: BrickColor;
    /**
     * Sets the color of the head, as a <code>Color3</code>.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/BodyColors#HeadColor3)
     */
    HeadColor3: Color3;
    /**
     * Sets the color of the left arm, as a <code>BrickColor</code>.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/BodyColors#LeftArmColor)
     */
    LeftArmColor: BrickColor;
    /**
     * Sets the color of the left arm, as a <code>Color3</code>.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/BodyColors#LeftArmColor3)
     */
    LeftArmColor3: Color3;
    /**
     * Sets the color of the left leg, as a <code>BrickColor</code>.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/BodyColors#LeftLegColor)
     */
    LeftLegColor: BrickColor;
    /**
     * Sets the color of the left leg, as a <code>Color3</code>.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/BodyColors#LeftLegColor3)
     */
    LeftLegColor3: Color3;
    /**
     * Sets the color of the right arm, as a <code>BrickColor</code>.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/BodyColors#RightArmColor)
     */
    RightArmColor: BrickColor;
    /**
     * Sets the color of the right arm, as a <code>Color3</code>.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/BodyColors#RightArmColor3)
     */
    RightArmColor3: Color3;
    /**
     * Sets the color of the right leg, as a <code>BrickColor</code>.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/BodyColors#RightLegColor)
     */
    RightLegColor: BrickColor;
    /**
     * Sets the color of the right leg, as a <code>Color3</code>.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/BodyColors#RightLegColor3)
     */
    RightLegColor3: Color3;
    /**
     * Sets the color of the torso, as a <code>BrickColor</code>.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/BodyColors#TorsoColor)
     */
    TorsoColor: BrickColor;
    /**
     * Sets the color of the torso, as a <code>Color3</code>.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/BodyColors#TorsoColor3)
     */
    TorsoColor3: Color3;
}
/**
 * Modifies the appearance of an R6 body part.
 *
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/CharacterMesh)
 */
interface CharacterMesh extends CharacterAppearance {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_CharacterMesh: unique symbol;
    /**
     * The texture of a CharacterMesh. It can be overridden by Shirts, Pants, T-Shirts, and the <code>CharacterMesh.OverlayTextureId</code> property.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/CharacterMesh#BaseTextureId)
     */
    BaseTextureId: number;
    /**
     * The part of the Character's body that is affected.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/CharacterMesh#BodyPart)
     */
    BodyPart: Enum.BodyPart;
    /**
     * Used to load a mesh file, and apply it to the given BodyPart.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/CharacterMesh#MeshId)
     */
    MeshId: number;
    /**
     * The assetId of the overlay texture. The overlay covers Shirts, Pants, T-Shirts, and the <code>CharacterMesh.BaseTextureId</code>.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/CharacterMesh#OverlayTextureId)
     */
    OverlayTextureId: number;
}
/**
 * Clothing is the base class for the <code>Shirt</code> and <code>Pants</code> clothing objects.
 *
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Clothing)
 */
interface Clothing extends CharacterAppearance {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_Clothing: unique symbol;
    /**
     * Determines the colorization to be applied to the <code>Clothing</code> texture.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Clothing#Color3)
     */
    Color3: Color3;
}
/**
 * Displays a Pants texture from the Roblox website to display on a <code>Humanoid</code> rig.
 *
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Pants)
 */
interface Pants extends Clothing {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_Pants: unique symbol;
    /**
     * Determines the texture of the <code>Pants</code>.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Pants#PantsTemplate)
     */
    PantsTemplate: ContentId;
}
/**
 * Displays a shirt texture on a <code>Humanoid</code> rig.
 *
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Shirt)
 */
interface Shirt extends Clothing {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_Shirt: unique symbol;
    /**
     * Determines the texture of the <code>Shirt</code>.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Shirt#ShirtTemplate)
     */
    ShirtTemplate: ContentId;
}
/**
 * Applies a texture to the front surface of a character's torso, used to display t-shirts.
 *
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/ShirtGraphic)
 */
interface ShirtGraphic extends CharacterAppearance {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_ShirtGraphic: unique symbol;
    /**
     * Determines the colorization to be applied to the <code>ShirtGraphic</code> texture.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/ShirtGraphic#Color3)
     */
    Color3: Color3;
    /**
     * The content ID link pointing to the <code>ShirtGraphic</code> texture hosted on the Roblox website. This property sets the texture associated with a t-shirt.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/ShirtGraphic#Graphic)
     */
    Graphic: ContentId;
}
/**
 * Houses the Lua code responsible for running the legacy chat system.
 *
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Chat)
 */
interface Chat extends Instance {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_Chat: unique symbol;
    /**
     * Determines whether player's chat messages will appear above their in-game avatar.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Chat#BubbleChatEnabled)
     */
    BubbleChatEnabled: boolean;
    /**
     * Toggles whether the default chat framework should be automatically loaded when the game runs.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Chat#LoadDefaultChat)
     */
    get LoadDefaultChat(): boolean;
    /**
     * Fires the <code>Chat.Chatted</code> event with the parameters specified in this method.
     * @param this Houses the Lua code responsible for running the legacy chat system.
     * @param partOrCharacter An instance that is the part or character which the <em>BubbleChat</em> dialog should appear above.
     * @param message The message string being chatted.
     * @param color An <code>ChatColor</code> specifying the color of the chatted message.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Chat#Chat)
     */
    Chat(this: Chat, partOrCharacter: Instance, message: string, color?: CastsToEnum<Enum.ChatColor>): void;
    /**
     * Invoke a chat callback function registered by <code>RegisterChatCallback</code>. Used by the Lua Chat System.
     * @param this Houses the Lua code responsible for running the legacy chat system.
     * @param callbackType The type of callback to invoke.
     * @param callbackArguments The arguments that will be sent to the registered callback function.
     * @returns The values returned by the function registered to the given ChatCallbackType.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Chat#InvokeChatCallback)
     */
    InvokeChatCallback(this: Chat, callbackType: CastsToEnum<Enum.ChatCallbackType>, callbackArguments: unknown): unknown;
    /**
     * Register a function to be called upon the invocation of some chat system event (<code>InvokeChatCallback</code>).
     * @param this Houses the Lua code responsible for running the legacy chat system.
     * @param callbackType The callback to which the function shall be registered (this determines in what way the function is called).
     * @param callbackFunction The function to call when the callback is invoked using Chat:InvokeChatCallback.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Chat#RegisterChatCallback)
     */
    RegisterChatCallback(this: Chat, callbackType: CastsToEnum<Enum.ChatCallbackType>, callbackFunction: Callback): void;
    /**
     * Customizes various settings of the in-game bubble chat.
     * @param this Houses the Lua code responsible for running the legacy chat system.
     * @param settings A settings table.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Chat#SetBubbleChatSettings)
     */
    SetBubbleChatSettings(this: Chat, settings: unknown): void;
    /**
     * Will return false if the player with the specified <code>Player.UserId</code> is not allowed to chat because of their account settings.
     * @param this Houses the Lua code responsible for running the legacy chat system.
     * @param userId
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Chat#CanUserChatAsync)
     */
    CanUserChatAsync(this: Chat, userId: number): boolean;
    /**
     * Will return false if the two users cannot communicate because their account settings do not allow it.
     * @param this Houses the Lua code responsible for running the legacy chat system.
     * @param userIdFrom
     * @param userIdTo
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Chat#CanUsersChatAsync)
     */
    CanUsersChatAsync(this: Chat, userIdFrom: number, userIdTo: number): boolean;
    /**
     * Filters a string sent from a player to another player using filtering that is appropriate to the players' account settings.
     * @param this Houses the Lua code responsible for running the legacy chat system.
     * @param stringToFilter The raw string to be filtered, exactly as entered by the player.
     * @param playerFrom The author of the text.
     * @param playerTo The intended recipient of the provided text; use the author if the text is persistent (see description).
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Chat#FilterStringAsync)
     */
    FilterStringAsync(this: Chat, stringToFilter: string, playerFrom: Player, playerTo: Player): string;
    /**
     * Filters a string sent from a player meant for broadcast to no particular target. More restrictive than <code>Chat:FilterStringAsync()</code>.
     * @param this Houses the Lua code responsible for running the legacy chat system.
     * @param stringToFilter Message string being filtered.
     * @param playerFrom Instance of the player sending the message.
     * @returns Filtered message string.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Chat#FilterStringForBroadcast)
     */
    FilterStringForBroadcast(this: Chat, stringToFilter: string, playerFrom: Player): string;
    /**
     * <strong>Deprecated:</strong> This item has been superseded by <code>Chat:FilterStringAsync()</code> and <code>Chat:FilterStringForBroadcast()</code> which should be used in all new work<br>Filters a string appropriate to the given player's age settings, so they see what is appropriate to them.
     * @param this Houses the Lua code responsible for running the legacy chat system.
     * @param stringToFilter String being filtered.
     * @param playerToFilterFor Player that the string is being filtered for.
     * @returns Filtered string result.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Chat#FilterStringForPlayerAsync)
     */
    FilterStringForPlayerAsync(this: Chat, stringToFilter: string, playerToFilterFor: Player): string;
    /**
     * Fires when <code>Chat:Chat()</code> is called.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Chat#Chatted)
     */
    readonly Chatted: RBXScriptSignal<(part: BasePart, message: string, color: Enum.ChatColor) => void>;
}
/**
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/ChatbotUIService)
 */
interface ChatbotUIService extends Instance {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_ChatbotUIService: unique symbol;
}
/**
 * An object that provides user input on in-experience <code>BaseParts</code> and <code>Models</code>.
 *
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/ClickDetector)
 */
interface ClickDetector extends Instance {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_ClickDetector: unique symbol;
    /**
     * Sets the cursor icon to display when the mouse is hovered over the parent of this <code>ClickDetector</code> or <code>DragDetector</code>.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/ClickDetector#CursorIcon)
     */
    CursorIcon: ContentId;
    /**
     * Maximum distance between a character and the <code>ClickDetector</code> or <code>DragDetector</code> for the player to be able to interact with it.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/ClickDetector#MaxActivationDistance)
     */
    MaxActivationDistance: number;
    /**
     * Fires when a player interacts with the parent of a <code>ClickDetector</code> or <code>DragDetector</code>.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/ClickDetector#MouseClick)
     */
    readonly MouseClick: RBXScriptSignal<(playerWhoClicked: Player) => void>;
    /**
     * Fires when the parent of a <code>ClickDetector</code> or <code>DragDetector</code> is hovered over by a player.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/ClickDetector#MouseHoverEnter)
     */
    readonly MouseHoverEnter: RBXScriptSignal<(playerWhoHovered: Player) => void>;
    /**
     * Fires when a player's cursor hovers off the parent of a <code>ClickDetector</code> or <code>DragDetector</code>.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/ClickDetector#MouseHoverLeave)
     */
    readonly MouseHoverLeave: RBXScriptSignal<(playerWhoHovered: Player) => void>;
    /**
     * Fires when a player right clicks their mouse cursor on a <code>ClickDetector</code> or <code>DragDetector</code>.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/ClickDetector#RightMouseClick)
     */
    readonly RightMouseClick: RBXScriptSignal<(playerWhoClicked: Player) => void>;
}
/**
 * Instance which facilitates and encourages interaction with 3D objects in an experience.
 *
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/DragDetector)
 */
interface DragDetector extends ClickDetector {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_DragDetector: unique symbol;
    /**
     * Sets the cursor icon to display when the mouse is activated over the parent of this <code>DragDetector</code>.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/DragDetector#ActivatedCursorIcon)
     */
    ActivatedCursorIcon: ContentId;
    /**
     * Whether constraint force is applied to the object's center of mass.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/DragDetector#ApplyAtCenterOfMass)
     */
    ApplyAtCenterOfMass: boolean;
    /**
     * The primary axis of motion, expressed relative to the reference frame.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/DragDetector#Axis)
     */
    Axis: Vector3;
    /**
     * The <code>CFrame</code> of the pivot, dependent on the drag detector's <code>ReferenceInstance</code>.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/DragDetector#DragFrame)
     */
    DragFrame: CFrame;
    /**
     * The paradigm used to generate proposed motion.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/DragDetector#DragStyle)
     */
    DragStyle: Enum.DragDetectorDragStyle;
    /**
     * Whether the <code>DragDetector</code> responds to user input.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/DragDetector#Enabled)
     */
    Enabled: boolean;
    /**
     * During gamepad input, the modifier <code>KeyCode</code> for the secondary mode of motion.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/DragDetector#GamepadModeSwitchKeyCode)
     */
    GamepadModeSwitchKeyCode: Enum.KeyCode;
    /**
     * During keyboard input, the modifier <code>KeyCode</code> for the secondary mode of motion.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/DragDetector#KeyboardModeSwitchKeyCode)
     */
    KeyboardModeSwitchKeyCode: Enum.KeyCode;
    /**
     * Along with <code>MinDragAngle</code>, impedes the drag detector's attempts to generate motion.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/DragDetector#MaxDragAngle)
     */
    MaxDragAngle: number;
    /**
     * Along with <code>MinDragTranslation</code>, impedes the drag detector's attempts to generate motion.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/DragDetector#MaxDragTranslation)
     */
    MaxDragTranslation: Vector3;
    /**
     * Maximum force applied for the object to reach its goal.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/DragDetector#MaxForce)
     */
    MaxForce: number;
    /**
     * Maximum torque applied for the object to reach its goal.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/DragDetector#MaxTorque)
     */
    MaxTorque: number;
    /**
     * Along with <code>MaxDragAngle</code>, impedes the drag detector's attempts to generate motion.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/DragDetector#MinDragAngle)
     */
    MinDragAngle: number;
    /**
     * Along with <code>MaxDragTranslation</code>, impedes the drag detector's attempts to generate motion.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/DragDetector#MinDragTranslation)
     */
    MinDragTranslation: Vector3;
    /**
     * Specifies the <strong>YXZ</strong> rotation of axes of motion relative to the reference frame.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/DragDetector#Orientation)
     */
    Orientation: Vector3;
    /**
     * Controls the permission level for which players can interact with the <code>DragDetector</code>.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/DragDetector#PermissionPolicy)
     */
    PermissionPolicy: Enum.DragDetectorPermissionPolicy;
    /**
     * An instance whose <code>CFrame</code> is the reference frame for the drag detector.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/DragDetector#ReferenceInstance)
     */
    ReferenceInstance: Instance | undefined;
    /**
     * The paradigm used to move, or not move, the objects affected by the drag detector.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/DragDetector#ResponseStyle)
     */
    ResponseStyle: Enum.DragDetectorResponseStyle;
    /**
     * Higher values cause the object to reach its goal more rapidly.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/DragDetector#Responsiveness)
     */
    Responsiveness: number;
    /**
     * Whether user input on a <code>DragDetector</code> replicates to the server or remains local to the specific client.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/DragDetector#RunLocally)
     */
    RunLocally: boolean;
    /**
     * The secondary axis of the motion.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/DragDetector#SecondaryAxis)
     */
    SecondaryAxis: Vector3;
    /**
     * If <code>DragStyle</code> is <code>DragDetectorDragStyle.RotateTrackball</code>, multiplier for adding a radial pull rotation as a contribution to the total.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/DragDetector#TrackballRadialPullFactor)
     */
    TrackballRadialPullFactor: number;
    /**
     * If <code>DragStyle</code> is <code>DragDetectorDragStyle.RotateTrackball</code>, multiplier for adding roll rotation to the total.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/DragDetector#TrackballRollFactor)
     */
    TrackballRollFactor: number;
    /**
     * During VR input, the modifier <code>KeyCode</code> for the secondary mode of motion.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/DragDetector#VRSwitchKeyCode)
     */
    VRSwitchKeyCode: Enum.KeyCode;
    /**
     * The <code>Axis</code> expressed in world space.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/DragDetector#WorldAxis)
     */
    WorldAxis: Vector3;
    /**
     * The <code>SecondaryAxis</code> expressed in world space.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/DragDetector#WorldSecondaryAxis)
     */
    WorldSecondaryAxis: Vector3;
    /**
     * Adds a function to modify or constrain proposed motion.
     * @param this Instance which facilitates and encourages interaction with 3D objects in an experience.
     * @param priority The order of priority for functions added via this method. Higher values take precedence over lower values.
     * @param function Function for modifying or constraining proposed motion. This function takes an input <code>CFrame</code> of <strong>proposed</strong> motion and returns a <code>CFrame</code> of <strong>modified</strong> or unmodified motion, both relative to the reference frame.
     * @returns Use this connection object to remove the constraint function.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/DragDetector#AddConstraintFunction)
     */
    AddConstraintFunction(this: DragDetector, priority: number, callback: Callback): RBXScriptConnection;
    /**
     * Returns the reference <code>CFrame</code> in which motion is expressed.
     * @param this Instance which facilitates and encourages interaction with 3D objects in an experience.
     * @returns The reference <code>CFrame</code> in which motion is expressed.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/DragDetector#GetReferenceFrame)
     */
    GetReferenceFrame(this: DragDetector): CFrame;
    /**
     * May be invoked from a script to restart the drag using new parameters.
     * @param this Instance which facilitates and encourages interaction with 3D objects in an experience.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/DragDetector#RestartDrag)
     */
    RestartDrag(this: DragDetector): void;
    /**
     * Passes a function to be used if and only if <code>DragStyle</code> is set to <code>DragDetectorDragStyle.Scriptable</code>.
     * @param this Instance which facilitates and encourages interaction with 3D objects in an experience.
     * @param function Function for monitoring <code>DragContinue</code> signals. This function receives the signal's world space cursor ray and it returns a <code>CFrame</code> containing the desired location and orientation of the pivot in world space. If this function returns <code>nil</code>, the object will not be moved.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/DragDetector#SetDragStyleFunction)
     */
    SetDragStyleFunction(this: DragDetector, callback: Callback): void;
    /**
     * Passes a function to be used if and only if <code>PermissionPolicy</code> is set to <code>DragDetectorPermissionPolicy.Scriptable</code>.
     * @param this Instance which facilitates and encourages interaction with 3D objects in an experience.
     * @param function Function for setting the detector's interactivity. This function accepts a <code>Player</code> parameter for enabling/disabling the detector for a specific player. It also receives a <code>part</code> parameter indicating which specific <code>BasePart</code> was clicked, such as one part within a draggable <code>Model</code>; this is useful for enabling/disabling the detector based on that part's <code>Name</code>, <code>Color</code>, <code>HasTag()</code> value, or other details.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/DragDetector#SetPermissionPolicyFunction)
     */
    SetPermissionPolicyFunction(this: DragDetector, callback: Callback): void;
    /**
     * Fires when a user continues dragging the object after <code>DragStart</code> has been initiated.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/DragDetector#DragContinue)
     */
    readonly DragContinue: RBXScriptSignal<(playerWhoDragged: Player, cursorRay: Ray, viewFrame: CFrame, vrInputFrame: CFrame | undefined, isModeSwitchKeyDown: boolean) => void>;
    /**
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/DragDetector#DragContinueReplicate)
     */
    readonly DragContinueReplicate: RBXScriptSignal<(playerWhoDragged: Player, cursorRay: Ray, viewFrame: CFrame, vrInputFrame: CFrame | undefined, isModeSwitchKeyDown: boolean) => void>;
    /**
     * Fires when a user stops dragging the object.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/DragDetector#DragEnd)
     */
    readonly DragEnd: RBXScriptSignal<(playerWhoDragged: Player) => void>;
    /**
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/DragDetector#DragEndReplicate)
     */
    readonly DragEndReplicate: RBXScriptSignal<(playerWhoDragged: Player) => void>;
    /**
     * Fires when a user starts dragging the object.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/DragDetector#DragStart)
     */
    readonly DragStart: RBXScriptSignal<(playerWhoDragged: Player, cursorRay: Ray, viewFrame: CFrame, hitFrame: CFrame, clickedPart: BasePart, vrInputFrame: CFrame | undefined, isModeSwitchKeyDown: boolean) => void>;
    /**
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/DragDetector#DragStartReplicate)
     */
    readonly DragStartReplicate: RBXScriptSignal<(playerWhoDragged: Player, cursorRay: Ray, viewFrame: CFrame, hitFrame: CFrame, clickedPart: BasePart, vrInputFrame: CFrame | undefined, isModeSwitchKeyDown: boolean) => void>;
}
/**
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/CloudCRUDService)
 */
interface CloudCRUDService extends Instance {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_CloudCRUDService: unique symbol;
}
/**
 * Renders realistic clouds that drift slowly across the sky.
 *
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Clouds)
 */
interface Clouds extends Instance {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_Clouds: unique symbol;
    /**
     * Controls the material color of cloud particles.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Clouds#Color)
     */
    Color: Color3;
    /**
     * Defines the cloud cover within the overall skyscape layer.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Clouds#Cover)
     */
    Cover: number;
    /**
     * Controls the particulate density of clouds.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Clouds#Density)
     */
    Density: number;
    /**
     * Toggles rendering of the <code>Clouds</code> object.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Clouds#Enabled)
     */
    Enabled: boolean;
}
/**
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Collaborator)
 */
interface Collaborator extends Instance {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_Collaborator: unique symbol;
    /**
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Collaborator#CFrame)
     */
    CFrame: CFrame;
    /**
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Collaborator#CollaboratorColor)
     */
    CollaboratorColor: number;
    /**
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Collaborator#CollaboratorColor3)
     */
    CollaboratorColor3: Color3;
    /**
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Collaborator#CurDocGUID)
     */
    CurDocGUID: string;
    /**
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Collaborator#CurScriptLineNumber)
     */
    CurScriptLineNumber: number;
    /**
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Collaborator#IsIdle)
     */
    IsIdle: boolean;
    /**
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Collaborator#Status)
     */
    Status: Enum.CollaboratorStatus;
    /**
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Collaborator#UserId)
     */
    UserId: number;
    /**
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Collaborator#Username)
     */
    Username: string;
}
/**
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/CollaboratorsService)
 */
interface CollaboratorsService extends Instance {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_CollaboratorsService: unique symbol;
}
/**
 * A service which manages instance collections using assigned tags.
 *
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/CollectionService)
 */
interface CollectionService extends Instance {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_CollectionService: unique symbol;
    /**
     * Applies a tag to an <code>Instance</code>.
     * @param this A service which manages instance collections using assigned tags.
     * @param instance
     * @param tag
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/CollectionService#AddTag)
     */
    AddTag(this: CollectionService, instance: Instance, tag: string): void;
    AddTag(this: Instance, tag: string): void;
    /**
     * Returns an array of all tags in the experience.
     * @param this A service which manages instance collections using assigned tags.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/CollectionService#GetAllTags)
     */
    GetAllTags(this: CollectionService): Array<string>;
    /**
     * Returns a signal that fires when a given tag is added to an instance.
     * @param this A service which manages instance collections using assigned tags.
     * @param tag The tag to watch for.
     * @returns An event that fires when you add the tag to an instance.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/CollectionService#GetInstanceAddedSignal)
     */
    GetInstanceAddedSignal(this: CollectionService, tag: string): RBXScriptSignal<(instance: Instance) => void>;
    /**
     * Returns a signal that fires when a given tag is removed from an instance.
     * @param this A service which manages instance collections using assigned tags.
     * @param tag The tag to watch for.
     * @returns An event that fires when you remove the tag from an instance.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/CollectionService#GetInstanceRemovedSignal)
     */
    GetInstanceRemovedSignal(this: CollectionService, tag: string): RBXScriptSignal<(instance: Instance) => void>;
    /**
     * Returns an array of instances in the game with a given tag.
     * @param this A service which manages instance collections using assigned tags.
     * @param tag The tag to search for.
     * @returns An array of all instances with the tag.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/CollectionService#GetTagged)
     */
    GetTagged(this: CollectionService, tag: string): Array<Instance>;
    /**
     * Gets an array of all tags applied to a given instance.
     * @param this A service which manages instance collections using assigned tags.
     * @param instance The instance whose tags should be returned.
     * @returns An array of strings which are the tags applied to the given instance.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/CollectionService#GetTags)
     */
    GetTags(this: CollectionService, instance: Instance): Array<string>;
    GetTags(this: Instance): Array<string>;
    /**
     * Check whether an instance has a given tag.
     * @param this A service which manages instance collections using assigned tags.
     * @param instance The instance to check for the presence of a tag.
     * @param tag The tag to check for.
     * @returns Whether the instance has the tag.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/CollectionService#HasTag)
     */
    HasTag(this: CollectionService, instance: Instance, tag: string): boolean;
    HasTag(this: Instance, tag: string): boolean;
    /**
     * Removes a tag from an instance.
     * @param this A service which manages instance collections using assigned tags.
     * @param instance The instance to remove the tag from.
     * @param tag The tag to remove from the instance.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/CollectionService#RemoveTag)
     */
    RemoveTag(this: CollectionService, instance: Instance, tag: string): void;
    RemoveTag(this: Instance, tag: string): void;
    /**
     * <strong>Deprecated:</strong> This item has been superseded by a <code>CollectionService</code> tagging method. There is currently no means of checking when a tag is added.<br>Fires when a <code>Configuration</code>, <code>CustomEvent</code>, <code>CustomEventReceiver</code>, <code>Dialog</code>, or <code>VehicleSeat</code> is added to the <code>DataModel</code>.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/CollectionService#ItemAdded)
     */
    readonly ItemAdded: RBXScriptSignal<(instance: Instance) => void>;
    /**
     * <strong>Deprecated:</strong> This item has been superseded by a <code>CollectionService</code> tagging method. There is currently no means of checking when a tag is removed.<br>Fires when a <code>Configuration</code>, <code>CustomEvent</code>, <code>CustomEventReceiver</code>, <code>Dialog</code>, or <code>VehicleSeat</code> is removed from the <code>DataModel</code>.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/CollectionService#ItemRemoved)
     */
    readonly ItemRemoved: RBXScriptSignal<(instance: Instance) => void>;
    /**
     * Fires when a tag is added to an instance and the added tag is the only occurrence of that tag in the place.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/CollectionService#TagAdded)
     */
    readonly TagAdded: RBXScriptSignal<(tag: string) => void>;
    /**
     * Fires when a tag is removed from an instance and the removed tag is no longer used anywhere in the place.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/CollectionService#TagRemoved)
     */
    readonly TagRemoved: RBXScriptSignal<(tag: string) => void>;
}
/**
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/CommandInstance)
 */
interface CommandInstance extends Instance {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_CommandInstance: unique symbol;
    /**
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/CommandInstance#AllowGUIAccessPoints)
     */
    readonly AllowGUIAccessPoints: boolean;
    /**
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/CommandInstance#DisplayName)
     */
    DisplayName: string;
    /**
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/CommandInstance#Name)
     */
    readonly Name: string;
}
/**
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/CommandService)
 */
interface CommandService extends Instance {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_CommandService: unique symbol;
}
/**
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/CommerceService)
 */
interface CommerceService extends Instance {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_CommerceService: unique symbol;
    /**
     * @param this
     * @param user
     * @param commerceProductId
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/CommerceService#PromptCommerceProductPurchase)
     */
    PromptCommerceProductPurchase(this: CommerceService, user: Player, commerceProductId: string): void;
    /**
     * @param this
     * @param player
     * @param url
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/CommerceService#PromptRealWorldCommerceBrowser)
     */
    PromptRealWorldCommerceBrowser(this: CommerceService, player: Player, url: string): void;
    /**
     * @param this
     * @param commerceProductId
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/CommerceService#GetCommerceProductInfoAsync)
     */
    GetCommerceProductInfoAsync(this: CommerceService, commerceProductId: string): object;
    /**
     * @param this
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/CommerceService#UserEligibleForRealWorldCommerceAsync)
     */
    UserEligibleForRealWorldCommerceAsync(this: CommerceService): boolean;
    /**
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/CommerceService#PromptCommerceProductPurchaseFinished)
     */
    readonly PromptCommerceProductPurchaseFinished: RBXScriptSignal<(user: Player, productId: string) => void>;
}
/**
 * The Configuration object is a container object that is designed to hold value objects to make values used in <code>Tools</code> or any model using <code>Scripts</code> more accessible.
 *
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Configuration)
 */
interface Configuration extends Instance {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_Configuration: unique symbol;
}
/**
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/ConfigureServerService)
 */
interface ConfigureServerService extends Instance {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_ConfigureServerService: unique symbol;
}
/**
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/ConnectivityService)
 */
interface ConnectivityService extends Instance {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_ConnectivityService: unique symbol;
}
/**
 * The base class for constraint-based objects.
 *
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Constraint)
 */
interface Constraint extends Instance {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_Constraint: unique symbol;
    /**
     * Indicates if the constraint is currently active in the world.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Constraint#Active)
     */
    readonly Active: boolean;
    /**
     * The <code>Attachment</code> that is connected to <code>Constraint.Attachment1</code>.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Constraint#Attachment0)
     */
    Attachment0: Attachment | undefined;
    /**
     * The <code>Attachment</code> that is connected to <code>Constraint.Attachment0</code>.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Constraint#Attachment1)
     */
    Attachment1: Attachment | undefined;
    /**
     * The color of the constraint.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Constraint#Color)
     */
    Color: BrickColor;
    /**
     * Toggles whether or not the constraint is enabled.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Constraint#Enabled)
     */
    Enabled: boolean;
    /**
     * Toggles the constraint's visibility.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Constraint#Visible)
     */
    Visible: boolean;
    /**
     * <strong>Deprecated:</strong> This method should not be used in new work.
     * @param this The base class for constraint-based objects.
     * @param bodyId
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Constraint#GetDebugAppliedForce)
     */
    GetDebugAppliedForce(this: Constraint, bodyId: number): Vector3;
    /**
     * <strong>Deprecated:</strong> This method should not be used in new work.
     * @param this The base class for constraint-based objects.
     * @param bodyId
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Constraint#GetDebugAppliedTorque)
     */
    GetDebugAppliedTorque(this: Constraint, bodyId: number): Vector3;
}
/**
 * Constraint which applies torque to align two attachments, or to align one attachment with a goal orientation.
 *
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/AlignOrientation)
 */
interface AlignOrientation extends Constraint {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_AlignOrientation: unique symbol;
    /**
     * The constraint's axis alignment type.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/AlignOrientation#AlignType)
     */
    AlignType: Enum.AlignType;
    /**
     * The <code>CFrame</code> orientation with which the constraint will attempt to match the orientation of <code>Attachment0</code>.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/AlignOrientation#CFrame)
     */
    CFrame: CFrame;
    /**
     * A <code>Vector3</code> world space location toward which the primary axis will attempt to align.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/AlignOrientation#LookAtPosition)
     */
    LookAtPosition: Vector3;
    /**
     * Maximum angular velocity the constraint can use to reach its goal.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/AlignOrientation#MaxAngularVelocity)
     */
    MaxAngularVelocity: number;
    /**
     * Maximum torque the constraint can use to reach its goal.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/AlignOrientation#MaxTorque)
     */
    MaxTorque: number;
    /**
     * Whether the constraint uses one or two attachments in calculating its goal.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/AlignOrientation#Mode)
     */
    Mode: Enum.OrientationAlignmentMode;
    /**
     * The direction of the goal's <strong>X</strong> axis, represented as a unit <code>Vector3</code>.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/AlignOrientation#PrimaryAxis)
     */
    PrimaryAxis: Vector3;
    /**
     * Determines how the constraint's axes are affected by torque.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/AlignOrientation#PrimaryAxisOnly)
     */
    PrimaryAxisOnly: boolean;
    /**
     * Whether the constraint applies torque only to <code>Attachment0</code>, or to both attachments in equal and opposite directions.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/AlignOrientation#ReactionTorqueEnabled)
     */
    ReactionTorqueEnabled: boolean;
    /**
     * Controls how quickly the constraint reaches its goal. Higher values cause the attachment(s) to align more rapidly.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/AlignOrientation#Responsiveness)
     */
    Responsiveness: number;
    /**
     * Whether torque is dependent on other properties, or if the physics solver reacts as quickly as possible to complete the alignment.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/AlignOrientation#RigidityEnabled)
     */
    RigidityEnabled: boolean;
    /**
     * The direction of the goal's <strong>Y</strong> axis, represented as a unit <code>Vector3</code>.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/AlignOrientation#SecondaryAxis)
     */
    SecondaryAxis: Vector3;
}
/**
 * Constraint which applies force to move two attachments together, or to move one attachment to a goal position.
 *
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/AlignPosition)
 */
interface AlignPosition extends Constraint {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_AlignPosition: unique symbol;
    /**
     * Whether force is applied to the parent of <code>Attachment0</code> at that attachment's location, or at the parents' center of mass.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/AlignPosition#ApplyAtCenterOfMass)
     */
    ApplyAtCenterOfMass: boolean;
    /**
     * Determines how the constraint force will be limited. Only used if <code>RigidityEnabled</code> is false.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/AlignPosition#ForceLimitMode)
     */
    ForceLimitMode: Enum.ForceLimitMode;
    /**
     * Determines the axes that the constraint uses to limit the force. Only applies when <code>RigidityEnabled</code> is false and <code>AlignPosition.ForceLimitMode</code> is <code>PerAxis</code>. .
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/AlignPosition#ForceRelativeTo)
     */
    ForceRelativeTo: Enum.ActuatorRelativeTo;
    /**
     * Maximum force along each axis that the constraint can apply to achieve its goal.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/AlignPosition#MaxAxesForce)
     */
    MaxAxesForce: Vector3;
    /**
     * Maximum force magnitude the constraint can apply to achieve its goal.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/AlignPosition#MaxForce)
     */
    MaxForce: number;
    /**
     * Maximum speed the attachments can move when converging.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/AlignPosition#MaxVelocity)
     */
    MaxVelocity: number;
    /**
     * Whether the constraint uses one or two attachments in calculating its goal.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/AlignPosition#Mode)
     */
    Mode: Enum.PositionAlignmentMode;
    /**
     * The position to which the constraint should move its <code>Attachment0</code>.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/AlignPosition#Position)
     */
    Position: Vector3;
    /**
     * Whether the constraint applies force only to <code>Attachment0</code>, or to both attachments in equal and opposite directions.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/AlignPosition#ReactionForceEnabled)
     */
    ReactionForceEnabled: boolean;
    /**
     * Controls how quickly the constraint reaches its goal. Higher values cause the attachment(s) to align more rapidly.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/AlignPosition#Responsiveness)
     */
    Responsiveness: number;
    /**
     * Whether force is dependent on other properties, or if the physics solver reacts as quickly as possible to complete the alignment.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/AlignPosition#RigidityEnabled)
     */
    RigidityEnabled: boolean;
}
/**
 * Applies torque on an assembly to maintain a <strong>constant</strong> angular velocity.
 *
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/AngularVelocity)
 */
interface AngularVelocity extends Constraint {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_AngularVelocity: unique symbol;
    /**
     * A <code>Vector3</code> that gives the desired or target angular velocity.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/AngularVelocity#AngularVelocity)
     */
    AngularVelocity: Vector3;
    /**
     * Magnitude of the maximum torque the constraint can apply.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/AngularVelocity#MaxTorque)
     */
    MaxTorque: number;
    /**
     * Causes the constraint to apply equal and opposite reaction forces.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/AngularVelocity#ReactionTorqueEnabled)
     */
    ReactionTorqueEnabled: boolean;
    /**
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/AngularVelocity#RelativeTo)
     */
    RelativeTo: Enum.ActuatorRelativeTo;
}
/**
 * Aligns two <code>BaseParts</code> with an animate-able kinematic or force-based joint.
 *
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/AnimationConstraint)
 */
interface AnimationConstraint extends Constraint {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_AnimationConstraint: unique symbol;
    /**
     * <strong>Deprecated:</strong>
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/AnimationConstraint#C0)
     */
    readonly C0: CFrame;
    /**
     * <strong>Deprecated:</strong>
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/AnimationConstraint#C1)
     */
    readonly C1: CFrame;
    /**
     * Toggles whether the <code>AnimationConstraint</code> is kinematic or physically simulated.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/AnimationConstraint#IsKinematic)
     */
    IsKinematic: boolean;
    /**
     * Maximum force magnitude the constraint can apply to achieve its goal.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/AnimationConstraint#MaxForce)
     */
    MaxForce: number;
    /**
     * Maximum torque the constraint can apply to reach its goal.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/AnimationConstraint#MaxTorque)
     */
    MaxTorque: number;
    /**
     * <strong>Deprecated:</strong>
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/AnimationConstraint#Part0)
     */
    readonly Part0: BasePart | undefined;
    /**
     * <strong>Deprecated:</strong>
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/AnimationConstraint#Part1)
     */
    readonly Part1: BasePart | undefined;
    /**
     * Describes the current animation offset of the <code>AnimationConstraint</code> joint.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/AnimationConstraint#Transform)
     */
    Transform: CFrame;
}
/**
 * Forces its two attachments into the same position and allows them to freely rotate about all three axes, with optional limits to restrict both tilt and twist.
 *
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/BallSocketConstraint)
 */
interface BallSocketConstraint extends Constraint {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_BallSocketConstraint: unique symbol;
    /**
     * Sets whether the <code>BallSocketConstraint</code> sets a limit on rotation based on <code>UpperAngle</code>.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/BallSocketConstraint#LimitsEnabled)
     */
    LimitsEnabled: boolean;
    /**
     * Sets the maximum frictional torque applied to keep its <code>Attachments</code> aligned.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/BallSocketConstraint#MaxFrictionTorque)
     */
    MaxFrictionTorque: number;
    /**
     * The visualized radius of the <code>BallSocketConstraint</code>.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/BallSocketConstraint#Radius)
     */
    Radius: number;
    /**
     * How elastic <code>Attachments</code> connected by a <code>BallSocketConstraint</code> will be when they reach the end of the range specified by <code>UpperAngle</code> when <code>LimitsEnabled</code> is true.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/BallSocketConstraint#Restitution)
     */
    Restitution: number;
    /**
     * Sets whether the <code>BallSocketConstraint</code> sets a limit on twist rotation based on <code>TwistUpperAngle</code> and <code>TwistLowerAngle</code>.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/BallSocketConstraint#TwistLimitsEnabled)
     */
    TwistLimitsEnabled: boolean;
    /**
     * Sets the lower twist rotation limit of the <code>BallSocketConstraint</code>, as long as <code>TwistLimitsEnabled</code> is true.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/BallSocketConstraint#TwistLowerAngle)
     */
    TwistLowerAngle: number;
    /**
     * Sets the upper twist rotation limit of the <code>BallSocketConstraint</code>, as long as <code>TwistLimitsEnabled</code> is true.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/BallSocketConstraint#TwistUpperAngle)
     */
    TwistUpperAngle: number;
    /**
     * Sets the upper rotation limit of the <code>BallSocketConstraint</code>, as long as <code>LimitsEnabled</code> is true.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/BallSocketConstraint#UpperAngle)
     */
    UpperAngle: number;
}
/**
 * Constrains its attachments to rotate about a single axis.
 *
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/HingeConstraint)
 */
interface HingeConstraint extends Constraint {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_HingeConstraint: unique symbol;
    /**
     * Sets whether the rotation of the <code>HingeConstraint</code> is actuated and, if so, what kind of actuation it uses.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/HingeConstraint#ActuatorType)
     */
    ActuatorType: Enum.ActuatorType;
    /**
     * Specifies the sharpness of the servo motor in reaching the <code>TargetAngle</code>.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/HingeConstraint#AngularResponsiveness)
     */
    AngularResponsiveness: number;
    /**
     * The desired angular speed a <code>HingeConstraint</code> with <code>ActuatorType</code> set to <code>Servo</code> will attempt to maintain while rotating towards its <code>TargetAngle</code>. Measured in radians/second.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/HingeConstraint#AngularSpeed)
     */
    AngularSpeed: number;
    /**
     * The angular velocity a <code>HingeConstraint</code> with <code>ActuatorType</code> set to <code>Motor</code> will attempt to achieve. Measured in radians/second.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/HingeConstraint#AngularVelocity)
     */
    AngularVelocity: number;
    /**
     * The current angle of the <code>HingeConstraint</code>.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/HingeConstraint#CurrentAngle)
     */
    readonly CurrentAngle: number;
    /**
     * Sets whether the <code>HingeConstraint</code> will limit the range of rotation.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/HingeConstraint#LimitsEnabled)
     */
    LimitsEnabled: boolean;
    /**
     * The minimum rotation angle the <code>HingeConstraint</code> will allow if <code>LimitsEnabled</code> is true.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/HingeConstraint#LowerAngle)
     */
    LowerAngle: number;
    /**
     * The maximum angular acceleration a <code>HingeConstraint</code> with <code>ActuatorType</code> set to <code>Motor</code> can apply to achieve its <code>AngularVelocity</code>. Measured in radians/second&sup2;.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/HingeConstraint#MotorMaxAcceleration)
     */
    MotorMaxAcceleration: number;
    /**
     * The maximum torque a <code>HingeConstraint</code> with <code>ActuatorType</code> set to <code>Motor</code> can apply when trying to reach its desired <code>AngularVelocity</code>.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/HingeConstraint#MotorMaxTorque)
     */
    MotorMaxTorque: number;
    /**
     * The visualized radius of the <code>HingeConstraint</code>.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/HingeConstraint#Radius)
     */
    Radius: number;
    /**
     * How elastic <code>Attachment</code> connected by a <code>HingeConstraint</code> will be when they reach the end of the range when <code>LimitsEnabled</code> is true. Constrained between 0 and 1.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/HingeConstraint#Restitution)
     */
    Restitution: number;
    /**
     * The maximum torque a <code>HingeConstraint</code> with <code>ActuatorType</code> set to <code>Servo</code> can apply when trying to reach its desired <code>TargetAngle</code>.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/HingeConstraint#ServoMaxTorque)
     */
    ServoMaxTorque: number;
    /**
     * <strong>Deprecated:</strong> This property should not be used in new work.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/HingeConstraint#SoftlockServoUponReachingTarget)
     */
    SoftlockServoUponReachingTarget: boolean;
    /**
     * The target angle a <code>HingeConstraint</code> will attempt to rotate to if its <code>ActuatorType</code> is set to <code>Servo</code>. Measured in degrees.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/HingeConstraint#TargetAngle)
     */
    TargetAngle: number;
    /**
     * The maximum rotation angle the <code>HingeConstraint</code> will allow if <code>LimitsEnabled</code> is true.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/HingeConstraint#UpperAngle)
     */
    UpperAngle: number;
}
/**
 * Applies a force along the theoretical line connecting its two <code>Attachments</code>.
 *
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/LineForce)
 */
interface LineForce extends Constraint {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_LineForce: unique symbol;
    /**
     * Whether force is applied at the center of mass of the parent assembly.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/LineForce#ApplyAtCenterOfMass)
     */
    ApplyAtCenterOfMass: boolean;
    /**
     * When true, the force magnitude is multiplied by the inverse square of the distance.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/LineForce#InverseSquareLaw)
     */
    InverseSquareLaw: boolean;
    /**
     * The magnitude of the force.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/LineForce#Magnitude)
     */
    Magnitude: number;
    /**
     * Maximum absolute force that can be applied.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/LineForce#MaxForce)
     */
    MaxForce: number;
    /**
     * Enables an equal and opposite reaction force on the parent of <code>Attachment1</code>.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/LineForce#ReactionForceEnabled)
     */
    ReactionForceEnabled: boolean;
}
/**
 * Applies force on an assembly to maintain a <strong>constant</strong> linear velocity.
 *
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/LinearVelocity)
 */
interface LinearVelocity extends Constraint {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_LinearVelocity: unique symbol;
    /**
     * Determines how the constraint force will be limited.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/LinearVelocity#ForceLimitMode)
     */
    ForceLimitMode: Enum.ForceLimitMode;
    /**
     * Determines if the constraint force will be limited or if the physics solver can apply an unlimited force to achieve the target velocity.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/LinearVelocity#ForceLimitsEnabled)
     */
    ForceLimitsEnabled: boolean;
    /**
     * The normalized <code>Vector3</code> direction for constraining the velocity along a line.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/LinearVelocity#LineDirection)
     */
    LineDirection: Vector3;
    /**
     * Float value of the velocity when <code>VelocityConstraintMode</code> is set to <code>Line</code>.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/LinearVelocity#LineVelocity)
     */
    LineVelocity: number;
    /**
     * Maximum force along each axis that the constraint can apply to achieve the vector velocity. Only used if <code>ForceLimitsEnabled</code> is true, <code>ForceLimitMode</code> is <code>PerAxis</code>, and <code>VelocityConstraintMode</code> is <code>Vector</code>.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/LinearVelocity#MaxAxesForce)
     */
    MaxAxesForce: Vector3;
    /**
     * Maximum magnitude of the force vector the constraint can apply.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/LinearVelocity#MaxForce)
     */
    MaxForce: number;
    /**
     * Maximum force along each axis that the constraint can apply to achieve the plane velocity. Only used if <code>ForceLimitsEnabled</code> is true, <code>ForceLimitMode</code> is <code>PerAxis</code>, and <code>VelocityConstraintMode</code> is <code>Plane</code>.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/LinearVelocity#MaxPlanarAxesForce)
     */
    MaxPlanarAxesForce: Vector2;
    /**
     * <code>Vector2</code> value of the velocity in each tangent direction of the plane.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/LinearVelocity#PlaneVelocity)
     */
    PlaneVelocity: Vector2;
    /**
     * The primary axis in the plane, when <code>VelocityConstraintMode</code> is set to <code>Plane</code>.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/LinearVelocity#PrimaryTangentAxis)
     */
    PrimaryTangentAxis: Vector3;
    /**
     * Sets the <code>ActuatorRelativeTo</code> property for the <code>LinearVelocity</code> constraint.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/LinearVelocity#RelativeTo)
     */
    RelativeTo: Enum.ActuatorRelativeTo;
    /**
     * The secondary axis in the plane, when <code>VelocityConstraintMode</code> is set to <code>Plane</code>.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/LinearVelocity#SecondaryTangentAxis)
     */
    SecondaryTangentAxis: Vector3;
    /**
     * <code>Vector3</code> velocity value when <code>VelocityConstraintMode</code> is set to <code>Vector</code>.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/LinearVelocity#VectorVelocity)
     */
    VectorVelocity: Vector3;
    /**
     * The mode of the <code>LinearVelocity</code> constraint.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/LinearVelocity#VelocityConstraintMode)
     */
    VelocityConstraintMode: Enum.VelocityConstraintMode;
}
/**
 * Moves its attachments into a position/orientation along a plane whose normal vector is the primary axis of <code>Attachment0</code>.
 *
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/PlaneConstraint)
 */
interface PlaneConstraint extends Constraint {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_PlaneConstraint: unique symbol;
}
/**
 * <strong>Deprecated:</strong> <br>Constrains Attachment0 and Attachment1 such that both points lie in an plane with origin at Attachment0's position and unit normal vector equal to Attachment0's primary axis.
 *
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Plane)
 */
interface Plane extends PlaneConstraint {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_Plane: unique symbol;
}
/**
 * Creates a rigid connection between two <code>Attachments</code> or <code>Bones</code>.
 *
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/RigidConstraint)
 */
interface RigidConstraint extends Constraint {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_RigidConstraint: unique symbol;
}
/**
 * Keeps two attachments separated by its defined <code>Length</code>.
 *
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/RodConstraint)
 */
interface RodConstraint extends Constraint {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_RodConstraint: unique symbol;
    /**
     * The current distance between the constraint's <code>Attachments</code>.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/RodConstraint#CurrentDistance)
     */
    readonly CurrentDistance: number;
    /**
     * The distance apart at which the constraint attempts to keep its <code>Attachments</code>.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/RodConstraint#Length)
     */
    Length: number;
    /**
     * The maximum angle between the rod and <code>Attachment0</code> when <code>LimitsEnabled</code> is true.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/RodConstraint#LimitAngle0)
     */
    LimitAngle0: number;
    /**
     * The maximum angle between the rod and <code>Attachment1</code> when <code>LimitsEnabled</code> is true.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/RodConstraint#LimitAngle1)
     */
    LimitAngle1: number;
    /**
     * Determines whether <code>LimitAngle0</code> and <code>LimitAngle1</code> control the angles between the rod and the respective attachments.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/RodConstraint#LimitsEnabled)
     */
    LimitsEnabled: boolean;
    /**
     * The visualized thickness of the <code>RodConstraint</code>.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/RodConstraint#Thickness)
     */
    Thickness: number;
}
/**
 * Simulates rope dynamics, preventing two attachments from separating further than a defined length.
 *
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/RopeConstraint)
 */
interface RopeConstraint extends Constraint {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_RopeConstraint: unique symbol;
    /**
     * The current distance between the constraint's <code>Attachments</code>.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/RopeConstraint#CurrentDistance)
     */
    readonly CurrentDistance: number;
    /**
     * The maximum distance apart the two <code>Attachments</code> can be.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/RopeConstraint#Length)
     */
    Length: number;
    /**
     * Elasticity of the <code>Attachments</code> connected by the constraint when reaching the maximum defined <code>Length</code>. Constrained between 0 and 1.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/RopeConstraint#Restitution)
     */
    Restitution: number;
    /**
     * The visualized thickness of the <code>RopeConstraint</code>.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/RopeConstraint#Thickness)
     */
    Thickness: number;
    /**
     * Enables the winch motor.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/RopeConstraint#WinchEnabled)
     */
    WinchEnabled: boolean;
    /**
     * The maximum force that the winch motor can apply.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/RopeConstraint#WinchForce)
     */
    WinchForce: number;
    /**
     * The sharpness of the winch motor in reaching the <code>WinchTarget</code>.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/RopeConstraint#WinchResponsiveness)
     */
    WinchResponsiveness: number;
    /**
     * A positive desired velocity at which the winch motor changes the rope length.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/RopeConstraint#WinchSpeed)
     */
    WinchSpeed: number;
    /**
     * The target length for the winch motor.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/RopeConstraint#WinchTarget)
     */
    WinchTarget: number;
}
/**
 * The base class for constraints that allow their attachments to slide along an axis but not rotate.
 *
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/SlidingBallConstraint)
 */
interface SlidingBallConstraint extends Constraint {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_SlidingBallConstraint: unique symbol;
    /**
     * Sets whether the translation of the <code>SlidingBallConstraint</code> is actuated and, if so, what kind of actuation.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/SlidingBallConstraint#ActuatorType)
     */
    ActuatorType: Enum.ActuatorType;
    /**
     * The current offset between the constraint's <code>Attachments</code>.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/SlidingBallConstraint#CurrentPosition)
     */
    readonly CurrentPosition: number;
    /**
     * Sets whether the <code>SlidingBallConstraint</code> will limit the range of translation.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/SlidingBallConstraint#LimitsEnabled)
     */
    LimitsEnabled: boolean;
    /**
     * Specifies the "sharpness" of the linear servo motor in reaching the <code>TargetPosition</code>.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/SlidingBallConstraint#LinearResponsiveness)
     */
    LinearResponsiveness: number;
    /**
     * The lower positional limit along the <strong>X</strong> axis of <code>Attachment0</code> if <code>LimitsEnabled</code> is true.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/SlidingBallConstraint#LowerLimit)
     */
    LowerLimit: number;
    /**
     * The constraint's maximum acceleration when <code>ActuatorType</code> is set to <code>Motor</code> as the constraint attempts to reach its desired <code>Velocity</code>.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/SlidingBallConstraint#MotorMaxAcceleration)
     */
    MotorMaxAcceleration: number;
    /**
     * The constraint's maximum force when <code>ActuatorType</code> is set to <code>Motor</code>, as the constraint attempts to reach its desired <code>Velocity</code>.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/SlidingBallConstraint#MotorMaxForce)
     */
    MotorMaxForce: number;
    /**
     * The elasticity of the constraint's <code>Attachments</code> when they reach the end of the range specified by <code>UpperLimit</code> and <code>LowerLimit</code>, assuming <code>LimitsEnabled</code> is set to true.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/SlidingBallConstraint#Restitution)
     */
    Restitution: number;
    /**
     * The constraint's maximum force when <code>ActuatorType</code> is set to <code>Servo</code>, as the constraint attempts to reach its desired <code>Speed</code>.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/SlidingBallConstraint#ServoMaxForce)
     */
    ServoMaxForce: number;
    /**
     * The constraint's visualized size.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/SlidingBallConstraint#Size)
     */
    Size: number;
    /**
     * <strong>Deprecated:</strong> This property should not be used in new work.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/SlidingBallConstraint#SoftlockServoUponReachingTarget)
     */
    SoftlockServoUponReachingTarget: boolean;
    /**
     * The constraint's desired speed when <code>ActuatorType</code> is set to <code>Servo</code>, as the constraint translates towards its <code>TargetPosition</code>. Measured in studs per second.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/SlidingBallConstraint#Speed)
     */
    Speed: number;
    /**
     * The constraint's attempted target position when <code>ActuatorType</code> is set to <code>Servo</code>. Measured in studs.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/SlidingBallConstraint#TargetPosition)
     */
    TargetPosition: number;
    /**
     * The upper positional limit along the <strong>X</strong> axis of <code>Attachment0</code> if <code>LimitsEnabled</code> is true.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/SlidingBallConstraint#UpperLimit)
     */
    UpperLimit: number;
    /**
     * The constraint's attempted velocity when <code>ActuatorType</code> is set to <code>Motor</code>. Measured in studs per second.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/SlidingBallConstraint#Velocity)
     */
    Velocity: number;
}
/**
 * Constrains two attachments on two parts to have a relative linear and rotational motion.
 *
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/CylindricalConstraint)
 */
interface CylindricalConstraint extends SlidingBallConstraint {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_CylindricalConstraint: unique symbol;
    /**
     * Type of angular actuator.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/CylindricalConstraint#AngularActuatorType)
     */
    AngularActuatorType: Enum.ActuatorType;
    /**
     * Enables the angular limits around the rotation axis.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/CylindricalConstraint#AngularLimitsEnabled)
     */
    AngularLimitsEnabled: boolean;
    /**
     * Specifies the sharpness of the angular servo motor in reaching the <code>TargetAngle</code>.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/CylindricalConstraint#AngularResponsiveness)
     */
    AngularResponsiveness: number;
    /**
     * Restitution of the two limits, or how elastic they are.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/CylindricalConstraint#AngularRestitution)
     */
    AngularRestitution: number;
    /**
     * Target angular speed. This value is unsigned as the servo will always move toward its target. In radians per second.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/CylindricalConstraint#AngularSpeed)
     */
    AngularSpeed: number;
    /**
     * The target angular velocity of the motor in radians per second around the rotation axis.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/CylindricalConstraint#AngularVelocity)
     */
    AngularVelocity: number;
    /**
     * Signed angle (in degrees) between the reference axis and the secondary axis of <code>Attachment1</code> around the rotation axis.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/CylindricalConstraint#CurrentAngle)
     */
    readonly CurrentAngle: number;
    /**
     * Direction of the rotation axis as an angle from the <strong>X</strong> axis in the <strong>XY</strong> plane of <code>Attachment0</code>.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/CylindricalConstraint#InclinationAngle)
     */
    InclinationAngle: number;
    /**
     * Lower limit for the angle (in degrees) between the reference axis and the SecondaryAxis of <code>Attachment1</code> around the rotation axis.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/CylindricalConstraint#LowerAngle)
     */
    LowerAngle: number;
    /**
     * The maximum angular acceleration of the motor in radians per second squared.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/CylindricalConstraint#MotorMaxAngularAcceleration)
     */
    MotorMaxAngularAcceleration: number;
    /**
     * The maximum torque the motor can apply to achieve the target angular velocity.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/CylindricalConstraint#MotorMaxTorque)
     */
    MotorMaxTorque: number;
    /**
     * Enable the visibility of the rotation axis.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/CylindricalConstraint#RotationAxisVisible)
     */
    RotationAxisVisible: boolean;
    /**
     * Maximum torque the servo motor can apply.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/CylindricalConstraint#ServoMaxTorque)
     */
    ServoMaxTorque: number;
    /**
     * <strong>Deprecated:</strong> This property should not be used in new work.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/CylindricalConstraint#SoftlockAngularServoUponReachingTarget)
     */
    SoftlockAngularServoUponReachingTarget: boolean;
    /**
     * Target angle (in degrees) between the reference axis and the secondary axis of <code>Attachment1</code> around the rotation axis.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/CylindricalConstraint#TargetAngle)
     */
    TargetAngle: number;
    /**
     * Upper limit for the angle (in degrees) between the reference axis and the secondary axis of <code>Attachment1</code> around the rotation axis.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/CylindricalConstraint#UpperAngle)
     */
    UpperAngle: number;
    /**
     * The unit vector direction of the rotation axis in world coordinates.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/CylindricalConstraint#WorldRotationAxis)
     */
    readonly WorldRotationAxis: Vector3;
}
/**
 * Constraint which creates a rigid joint between two <code>Attachments</code>, allowing them to slide along one axis but not rotate.
 *
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/PrismaticConstraint)
 */
interface PrismaticConstraint extends SlidingBallConstraint {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_PrismaticConstraint: unique symbol;
}
/**
 * Simulates spring and damper behavior between two attachments.
 *
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/SpringConstraint)
 */
interface SpringConstraint extends Constraint {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_SpringConstraint: unique symbol;
    /**
     * The number of coils visualized on the <code>SpringConstraint</code>.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/SpringConstraint#Coils)
     */
    Coils: number;
    /**
     * The current distance between the constraint's <code>Attachments</code>.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/SpringConstraint#CurrentLength)
     */
    readonly CurrentLength: number;
    /**
     * Damping constant for the <code>SpringConstraint</code>. Multiplied to the velocity of the constraint's <code>Attachments</code> to reduce the spring force applied.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/SpringConstraint#Damping)
     */
    Damping: number;
    /**
     * Natural resting length of the spring.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/SpringConstraint#FreeLength)
     */
    FreeLength: number;
    /**
     * Sets whether the <code>SpringConstraint</code> enforces a minimum and maximum length.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/SpringConstraint#LimitsEnabled)
     */
    LimitsEnabled: boolean;
    /**
     * The maximum force the <code>SpringConstraint</code> can apply on its <code>Attachments</code>.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/SpringConstraint#MaxForce)
     */
    MaxForce: number;
    /**
     * The maximum separation the SpringConstraint will allow if <code>LimitsEnabled</code> is true.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/SpringConstraint#MaxLength)
     */
    MaxLength: number;
    /**
     * The minimum separation the SpringConstraint will allow if <code>LimitsEnabled</code> is true.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/SpringConstraint#MinLength)
     */
    MinLength: number;
    /**
     * The visualized radius of the spring's coils.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/SpringConstraint#Radius)
     */
    Radius: number;
    /**
     * The strength of the spring. The higher this value the more force will be applied when the attachments are separated a different length than the <code>FreeLength</code>.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/SpringConstraint#Stiffness)
     */
    Stiffness: number;
    /**
     * The visualized thickness of the spring's coils.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/SpringConstraint#Thickness)
     */
    Thickness: number;
}
/**
 * Applies constant torque to an assembly from its center of mass.
 *
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Torque)
 */
interface Torque extends Constraint {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_Torque: unique symbol;
    /**
     * The <code>CFrame</code> in which the torque is expressed.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Torque#RelativeTo)
     */
    RelativeTo: Enum.ActuatorRelativeTo;
    /**
     * The strength and direction of the torque.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Torque#Torque)
     */
    Torque: Vector3;
}
/**
 * A rotational spring that opposes the angular motion between two axes.
 *
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/TorsionSpringConstraint)
 */
interface TorsionSpringConstraint extends Constraint {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_TorsionSpringConstraint: unique symbol;
    /**
     * The number of coils visualized for the constraint.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/TorsionSpringConstraint#Coils)
     */
    Coils: number;
    /**
     * The current angle, in degrees, of the limiting cone.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/TorsionSpringConstraint#CurrentAngle)
     */
    readonly CurrentAngle: number;
    /**
     * Damping constant for the <code>TorsionSpringConstraint</code>. Multiplied to the velocity of the constraint's <code>Attachments</code> to reduce the spring force applied.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/TorsionSpringConstraint#Damping)
     */
    Damping: number;
    /**
     * <strong>Deprecated:</strong> This property is deprecated. Use <code>LimitsEnabled</code> instead.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/TorsionSpringConstraint#LimitEnabled)
     */
    LimitEnabled: boolean;
    /**
     * Limits the relative angular motion of the secondary axes of attachments through a cone constraint.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/TorsionSpringConstraint#LimitsEnabled)
     */
    LimitsEnabled: boolean;
    /**
     * The maximum angle of the constraint's limiting cone.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/TorsionSpringConstraint#MaxAngle)
     */
    MaxAngle: number;
    /**
     * The maximum allowable torque provided by the torsion spring.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/TorsionSpringConstraint#MaxTorque)
     */
    MaxTorque: number;
    /**
     * The visualization radius of the spring.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/TorsionSpringConstraint#Radius)
     */
    Radius: number;
    /**
     * The restitution coefficient of the cone constraint.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/TorsionSpringConstraint#Restitution)
     */
    Restitution: number;
    /**
     * The torsional stiffness of the spring.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/TorsionSpringConstraint#Stiffness)
     */
    Stiffness: number;
}
/**
 * Ensures two axes on two bodies remain perpendicular.
 *
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/UniversalConstraint)
 */
interface UniversalConstraint extends Constraint {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_UniversalConstraint: unique symbol;
    /**
     * Determines whether the angular motion of attachments' primary axes is limited.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/UniversalConstraint#LimitsEnabled)
     */
    LimitsEnabled: boolean;
    /**
     * The max angle, in degrees, of the constraint's limiting cone.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/UniversalConstraint#MaxAngle)
     */
    MaxAngle: number;
    /**
     * The constraint's visualization radius.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/UniversalConstraint#Radius)
     */
    Radius: number;
    /**
     * The restitution coefficient of the cone constraint.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/UniversalConstraint#Restitution)
     */
    Restitution: number;
}
/**
 * Applies constant force to an assembly.
 *
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/VectorForce)
 */
interface VectorForce extends Constraint {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_VectorForce: unique symbol;
    /**
     * Whether force is applied at the center of mass of the parent assembly.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/VectorForce#ApplyAtCenterOfMass)
     */
    ApplyAtCenterOfMass: boolean;
    /**
     * The strength and direction of the force.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/VectorForce#Force)
     */
    Force: Vector3;
    /**
     * The <code>CFrame</code> in which the force is expressed.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/VectorForce#RelativeTo)
     */
    RelativeTo: Enum.ActuatorRelativeTo;
}
/**
 * Service that is used to load content, or assets, into a game.
 *
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/ContentProvider)
 */
interface ContentProvider extends Instance {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_ContentProvider: unique symbol;
    /**
     * Used by the <code>ContentProvider</code> to download assets from the Roblox website.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/ContentProvider#BaseUrl)
     */
    readonly BaseUrl: string;
    /**
     * Gives the number of items in the <code>ContentProvider</code> request queue that need to be downloaded.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/ContentProvider#RequestQueueSize)
     */
    readonly RequestQueueSize: number;
    /**
     * Gets the current <code>AssetFetchStatus</code> of the <code>contentId</code> provided.
     * @param this Service that is used to load content, or assets, into a game.
     * @param contentId The ID of the content to fetch the status for.
     * @returns The <code>AssetFetchStatus</code> of the content.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/ContentProvider#GetAssetFetchStatus)
     */
    GetAssetFetchStatus(this: ContentProvider, contentId: ContentId): Enum.AssetFetchStatus;
    /**
     * A signal that fires when the <code>AssetFetchStatus</code> of the provided content changes.
     * @param this Service that is used to load content, or assets, into a game.
     * @param contentId
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/ContentProvider#GetAssetFetchStatusChangedSignal)
     */
    GetAssetFetchStatusChangedSignal(this: ContentProvider, contentId: ContentId): RBXScriptSignal;
    /**
     * @param this Service that is used to load content, or assets, into a game.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/ContentProvider#ListEncryptedAssets)
     */
    ListEncryptedAssets(this: ContentProvider): Array<unknown>;
    /**
     * <strong>Deprecated:</strong> This item has been superseded by <code>ContentProvider:PreloadAsync()</code> which should be used in all new work.<br>Queues an asset to be downloaded by the <code>ContentProvider</code>.
     * @param this Service that is used to load content, or assets, into a game.
     * @param contentId
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/ContentProvider#Preload)
     */
    Preload(this: ContentProvider, contentId: ContentId): void;
    /**
     * @param this Service that is used to load content, or assets, into a game.
     * @param encryptionKey
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/ContentProvider#RegisterDefaultEncryptionKey)
     */
    RegisterDefaultEncryptionKey(this: ContentProvider, encryptionKey: string): void;
    /**
     * @param this Service that is used to load content, or assets, into a game.
     * @param sessionKey
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/ContentProvider#RegisterDefaultSessionKey)
     */
    RegisterDefaultSessionKey(this: ContentProvider, sessionKey: string): void;
    /**
     * @param this Service that is used to load content, or assets, into a game.
     * @param assetId
     * @param encryptionKey
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/ContentProvider#RegisterEncryptedAsset)
     */
    RegisterEncryptedAsset(this: ContentProvider, assetId: ContentId, encryptionKey: string): void;
    /**
     * @param this Service that is used to load content, or assets, into a game.
     * @param contentId
     * @param sessionKey
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/ContentProvider#RegisterSessionEncryptedAsset)
     */
    RegisterSessionEncryptedAsset(this: ContentProvider, contentId: ContentId, sessionKey: string): void;
    /**
     * @param this Service that is used to load content, or assets, into a game.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/ContentProvider#UnregisterDefaultEncryptionKey)
     */
    UnregisterDefaultEncryptionKey(this: ContentProvider): void;
    /**
     * @param this Service that is used to load content, or assets, into a game.
     * @param assetId
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/ContentProvider#UnregisterEncryptedAsset)
     */
    UnregisterEncryptedAsset(this: ContentProvider, assetId: ContentId): void;
    /**
     * Yields until all of the assets associated with the given <code>Instances</code> have loaded.
     * @param this Service that is used to load content, or assets, into a game.
     * @param contentIdList An array of instances or content ID strings (for images) to load.
     * @param callbackFunction The function called when each asset request completes. Returns the <code>content</code> string and the asset's final <code>AssetFetchStatus</code>.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/ContentProvider#PreloadAsync)
     */
    PreloadAsync(this: ContentProvider, contentIdList: Array<Instance | string>, callback?: (contentId: string, status: Enum.AssetFetchStatus) => void): void;
    /**
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/ContentProvider#AssetFetchFailed)
     */
    readonly AssetFetchFailed: RBXScriptSignal<(assetId: ContentId) => void>;
}
/**
 * A service used to bind user input to contextual actions.
 *
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/ContextActionService)
 */
interface ContextActionService extends Instance {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_ContextActionService: unique symbol;
    /**
     * Bind user input to an action given an action handling function.
     * @param this A service used to bind user input to contextual actions.
     * @param actionName A string representing the action being performed (e.g. "HonkHorn" or "OpenDoor").
     * @param functionToBind The action-handling function, called with the following parameters when the bound inputs are triggered: string (actionName), <code>UserInputState</code> and an InputObject.
     * @param createTouchButton Whether a GUI button should be created for the action on touch input devices.
     * @param inputTypes Any number of <code>KeyCode</code> or <code>UserInputType</code> representing the inputs to bind to the action.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/ContextActionService#BindAction)
     */
    BindAction(this: ContextActionService, actionName: string, functionToBind: (actionName: string, state: Enum.UserInputState, inputObject: InputObject) => void, createTouchButton: boolean, ...inputTypes: Array<Enum.KeyCode | Enum.PlayerActions | Enum.UserInputType>): void;
    /**
     * Behaves like <code>BindAction</code> but also allows a priority to be assigned to the bound action for overlapping input types (higher before lower).
     * @param this A service used to bind user input to contextual actions.
     * @param actionName A string representing the action being performed (e.g. "HonkHorn" or "OpenDoor").
     * @param functionToBind The action-handling function, called with the following parameters when the bound inputs are triggered: string (actionName), <code>UserInputState</code> and an InputObject.
     * @param createTouchButton Whether a GUI button should be created for the action on touch input devices.
     * @param priorityLevel The priority level at which the action should be bound (higher considered before lower).
     * @param inputTypes Any number of Enum.KeyCode or Enum.UserInputType representing the inputs to bind to the action.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/ContextActionService#BindActionAtPriority)
     */
    BindActionAtPriority(this: ContextActionService, actionName: string, functionToBind: (actionName: string, state: Enum.UserInputState, inputObject: InputObject) => void, createTouchButton: boolean, priorityLevel: number, ...inputTypes: Array<Enum.KeyCode | Enum.PlayerActions | Enum.UserInputType>): void;
    /**
     * <strong>Deprecated:</strong> This item has been superseded by <code>ContextActionService:BindAction()</code> which should be used in all new work.<br>Binds <em>functionToBind</em> to input events such as key presses, mouse movement, or controller input.
     * @param this A service used to bind user input to contextual actions.
     * @param actionName
     * @param functionToBind
     * @param createTouchButton
     * @param inputTypes
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/ContextActionService#BindActionToInputTypes)
     */
    BindActionToInputTypes(this: ContextActionService, actionName: string, functionToBind: Callback, createTouchButton: boolean, inputTypes: unknown): void;
    /**
     * Bind a <code>KeyCode</code> with a specific <code>UserInputType</code> to trigger <code>Tool.Activation</code> and <code>ClickDetector</code> events.
     * @param this A service used to bind user input to contextual actions.
     * @param userInputTypeForActivation Must be Keyboard or Gamepad1 through Gamepad8.
     * @param keyCodesForActivation
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/ContextActionService#BindActivate)
     */
    BindActivate(this: ContextActionService, userInputTypeForActivation: CastsToEnum<Enum.UserInputType>, keyCodesForActivation: unknown): void;
    /**
     * Get a table of information about all bound actions (key is the name passed to <code>BindAction</code>, value is a table from <code>GetBoundActionInfo</code> when called with the key).
     * @param this A service used to bind user input to contextual actions.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/ContextActionService#GetAllBoundActionInfo)
     */
    GetAllBoundActionInfo(this: ContextActionService): Map<string, BoundActionInfo>;
    /**
     * Get a table of information about a bound action given its name originally passed to <code>BindAction</code>.
     * @param this A service used to bind user input to contextual actions.
     * @param actionName
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/ContextActionService#GetBoundActionInfo)
     */
    GetBoundActionInfo(this: ContextActionService, actionName: string): BoundActionInfo;
    /**
     * Return the <code>BackpackItem.TextureId</code> of a <code>Tool</code> currently <code>equipped</code> by the <code>Player</code>.
     * @param this A service used to bind user input to contextual actions.
     * @returns A content string from the Tool's TextureId, or nil if one could not be found.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/ContextActionService#GetCurrentLocalToolIcon)
     */
    GetCurrentLocalToolIcon(this: ContextActionService): string;
    /**
     * Given the name of a bound action with a touch button, sets the description of the action.
     * @param this A service used to bind user input to contextual actions.
     * @param actionName The name of the action originally passed to BindAction.
     * @param description A text description of the action, such as "Honk the car's horn" or "Open the inventory".
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/ContextActionService#SetDescription)
     */
    SetDescription(this: ContextActionService, actionName: string, description: string): void;
    /**
     * If <code>actionName</code> key contains a bound action, then <code>image</code> is set as the image of the touch button.
     * @param this A service used to bind user input to contextual actions.
     * @param actionName The name of the action originally passed to BindAction.
     * @param image The value to which the Image property should be set.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/ContextActionService#SetImage)
     */
    SetImage(this: ContextActionService, actionName: string, image: string): void;
    /**
     * Given the name of a bound action with a touch button, sets the position of the button within the ContextButtonFrame.
     * @param this A service used to bind user input to contextual actions.
     * @param actionName The name of the action originally passed to BindAction.
     * @param position The position within the ContextButtonFrame.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/ContextActionService#SetPosition)
     */
    SetPosition(this: ContextActionService, actionName: string, position: UDim2): void;
    /**
     * Given the name of a bound action with a touch button, sets the text shown on the button.
     * @param this A service used to bind user input to contextual actions.
     * @param actionName The name of the action originally passed to BindAction.
     * @param title The text to display on the button.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/ContextActionService#SetTitle)
     */
    SetTitle(this: ContextActionService, actionName: string, title: string): void;
    /**
     * Unbind an action from input given its name.
     * @param this A service used to bind user input to contextual actions.
     * @param actionName
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/ContextActionService#UnbindAction)
     */
    UnbindAction(this: ContextActionService, actionName: string): void;
    /**
     * Unbind a <code>KeyCode</code> with a specific <code>UserInputType</code> from triggering <code>Tool.Activation</code> when bound with <code>ContextActionService:BindActivate()</code>.
     * @param this A service used to bind user input to contextual actions.
     * @param userInputTypeForActivation The same UserInputType originally sent to BindActivate.
     * @param keyCodeForActivation The same KeyCode originally sent to BindActivate.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/ContextActionService#UnbindActivate)
     */
    UnbindActivate(this: ContextActionService, userInputTypeForActivation: CastsToEnum<Enum.UserInputType>, keyCodeForActivation?: CastsToEnum<Enum.KeyCode>): void;
    /**
     * Removes all functions bound. No actionNames will remain. All touch buttons will be removed.
     * @param this A service used to bind user input to contextual actions.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/ContextActionService#UnbindAllActions)
     */
    UnbindAllActions(this: ContextActionService): void;
    /**
     * Retrieves a <code>ImageButton</code> of a <code>bound</code> action that had a touch input button created.
     * @param this A service used to bind user input to contextual actions.
     * @param actionName The name of the action originally passed to BindAction.
     * @returns An ImageButton created by BindAction.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/ContextActionService#GetButton)
     */
    GetButton(this: ContextActionService, actionName: string): ImageButton | undefined;
    /**
     * Fires when the current player equips a <code>Tool</code>.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/ContextActionService#LocalToolEquipped)
     */
    readonly LocalToolEquipped: RBXScriptSignal<(toolEquipped: Instance) => void>;
    /**
     * Fires when the current player unequips a <code>Tool</code>.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/ContextActionService#LocalToolUnequipped)
     */
    readonly LocalToolUnequipped: RBXScriptSignal<(toolUnequipped: Instance) => void>;
}
/**
 * The base class for controller objects, such as the <code>HumanoidController</code> object.
 *
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Controller)
 */
interface Controller extends Instance {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_Controller: unique symbol;
    /**
     * Activates an overriding bind on the specified button.
     * @param this The base class for controller objects, such as the <code>HumanoidController</code> object.
     * @param button
     * @param caption
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Controller#BindButton)
     */
    BindButton(this: Controller, button: CastsToEnum<Enum.Button>, caption: string): void;
    /**
     * Returns whether or not Button is being pressed.
     * @param this The base class for controller objects, such as the <code>HumanoidController</code> object.
     * @param button
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Controller#GetButton)
     */
    GetButton(this: Controller, button: CastsToEnum<Enum.Button>): boolean;
    /**
     * Removes the bind on button.
     * @param this The base class for controller objects, such as the <code>HumanoidController</code> object.
     * @param button
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Controller#UnbindButton)
     */
    UnbindButton(this: Controller, button: CastsToEnum<Enum.Button>): void;
    /**
     * Fired when the pressed state of a bound button is changed. This event can be used in conjunction with <code>Controller:GetButton()</code> to see whether a bound button is being pressed down or not.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Controller#ButtonChanged)
     */
    readonly ButtonChanged: RBXScriptSignal<(button: Enum.Button) => void>;
}
/**
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/HumanoidController)
 */
interface HumanoidController extends Controller {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_HumanoidController: unique symbol;
}
/**
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/SkateboardController)
 */
interface SkateboardController extends Controller {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_SkateboardController: unique symbol;
    /**
     * The direction of movement, tied to the keys A and D. Must be 1 (right), 0 (straight), or -1 (left). Will refresh back to 0 unless constantly set.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/SkateboardController#Steer)
     */
    readonly Steer: number;
    /**
     * The direction of movement, tied to the keys W and S. Must be an integer 1 (forward), 0 (null), or -1 (reverse). Will refresh back to 0 unless constantly set.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/SkateboardController#Throttle)
     */
    readonly Throttle: number;
    /**
     * Fired when any input state of the skateboard controller is updated.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/SkateboardController#AxisChanged)
     */
    readonly AxisChanged: RBXScriptSignal<(axis: string) => void>;
}
/**
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/VehicleController)
 */
interface VehicleController extends Controller {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_VehicleController: unique symbol;
}
/**
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/ControllerBase)
 */
interface ControllerBase extends Instance {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_ControllerBase: unique symbol;
    /**
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/ControllerBase#Active)
     */
    readonly Active: boolean;
    /**
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/ControllerBase#BalanceRigidityEnabled)
     */
    BalanceRigidityEnabled: boolean;
    /**
     * The value multiplied by the <code>ControllerManager.BaseMoveSpeed</code>.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/ControllerBase#MoveSpeedFactor)
     */
    MoveSpeedFactor: number;
}
/**
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/AirController)
 */
interface AirController extends ControllerBase {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_AirController: unique symbol;
    /**
     * The maximum torque the character can use to remain balanced upright.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/AirController#BalanceMaxTorque)
     */
    BalanceMaxTorque: number;
    /**
     * The maximum angular speed used to align the character upright.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/AirController#BalanceSpeed)
     */
    BalanceSpeed: number;
    /**
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/AirController#LinearImpulse)
     */
    LinearImpulse: Vector3;
    /**
     * Determines whether angular momentum is preserved when input has stopped.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/AirController#MaintainAngularMomentum)
     */
    MaintainAngularMomentum: boolean;
    /**
     * Determines whether linear momentum is preserved when input has stopped.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/AirController#MaintainLinearMomentum)
     */
    MaintainLinearMomentum: boolean;
    /**
     * The maximum force that can be applied on the <code>ControllerManager.RootPart</code> for moving in the <code>ControllerManager.MovingDirection</code>.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/AirController#MoveMaxForce)
     */
    MoveMaxForce: number;
    /**
     * The maximum torque that can be applied on the <code>ControllerManager.RootPart</code> for turning towards the <code>ControllerManager.FacingDirection</code>.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/AirController#TurnMaxTorque)
     */
    TurnMaxTorque: number;
    /**
     * The value multiplied by the <code>ControllerManager.BaseTurnSpeed</code>.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/AirController#TurnSpeedFactor)
     */
    TurnSpeedFactor: number;
}
/**
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/ClimbController)
 */
interface ClimbController extends ControllerBase {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_ClimbController: unique symbol;
    /**
     * The amount of time taken to reach the desired climb velocity from 0.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/ClimbController#AccelerationTime)
     */
    AccelerationTime: number;
    /**
     * The maximum torque used to keep the <code>ControllerManager.RootPart</code> aligned upright and aligned to the climbed surface.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/ClimbController#BalanceMaxTorque)
     */
    BalanceMaxTorque: number;
    /**
     * The maximum angular speed used to align the <code>ControllerManager.RootPart</code> upright and with the climbed surface.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/ClimbController#BalanceSpeed)
     */
    BalanceSpeed: number;
    /**
     * The maximum force used by the climbing "motor" to move the <code>ControllerManager.RootPart</code> or keep it stationary.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/ClimbController#MoveMaxForce)
     */
    MoveMaxForce: number;
}
/**
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/GroundController)
 */
interface GroundController extends ControllerBase {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_GroundController: unique symbol;
    /**
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/GroundController#AccelerationLean)
     */
    AccelerationLean: number;
    /**
     * Estimated time taken to reach the desired speed.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/GroundController#AccelerationTime)
     */
    AccelerationTime: number;
    /**
     * The maximum torque used to keep the <code>ControllerManager.RootPart</code> aligned upright.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/GroundController#BalanceMaxTorque)
     */
    BalanceMaxTorque: number;
    /**
     * The maximum angular speed used to align the <code>ControllerManager.RootPart</code> upright.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/GroundController#BalanceSpeed)
     */
    BalanceSpeed: number;
    /**
     * Estimated time taken to reach a complete stop from full speed.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/GroundController#DecelerationTime)
     */
    DecelerationTime: number;
    /**
     * The coefficient of friction of the character on the ground.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/GroundController#Friction)
     */
    Friction: number;
    /**
     * Amount the character's friction is weighed against the ground friction.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/GroundController#FrictionWeight)
     */
    FrictionWeight: number;
    /**
     * The target distance above the ground to keep the <code>ControllerManager.RootPart</code> at.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/GroundController#GroundOffset)
     */
    GroundOffset: number;
    /**
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/GroundController#StandForce)
     */
    StandForce: number;
    /**
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/GroundController#StandSpeed)
     */
    StandSpeed: number;
    /**
     * The value multiplied by the <code>ControllerManager.BaseTurnSpeed</code>.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/GroundController#TurnSpeedFactor)
     */
    TurnSpeedFactor: number;
}
/**
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/SwimController)
 */
interface SwimController extends ControllerBase {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_SwimController: unique symbol;
    /**
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/SwimController#AccelerationTime)
     */
    AccelerationTime: number;
    /**
     * The maximum torque used to rotate to the desired pitch.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/SwimController#PitchMaxTorque)
     */
    PitchMaxTorque: number;
    /**
     * Multiplied by <code>ControllerManager.BaseTurnSpeed</code> to determine the maximum angular velocity for pitch.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/SwimController#PitchSpeedFactor)
     */
    PitchSpeedFactor: number;
    /**
     * The maximum torque applied to rotate to the desired roll.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/SwimController#RollMaxTorque)
     */
    RollMaxTorque: number;
    /**
     * Multiplied by <code>ControllerManager.BaseTurnSpeed</code> to determine the maximum angular velocity for roll.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/SwimController#RollSpeedFactor)
     */
    RollSpeedFactor: number;
}
/**
 * Manages simulated motion control for its assigned <code>ControllerManager.RootPart</code> .
 *
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/ControllerManager)
 */
interface ControllerManager extends Instance {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_ControllerManager: unique symbol;
    /**
     * The <code>ControllerBase</code> that is set to be activated on the character.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/ControllerManager#ActiveController)
     */
    ActiveController: ControllerBase | undefined;
    /**
     * The base linear movement speed used by all controllers.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/ControllerManager#BaseMoveSpeed)
     */
    BaseMoveSpeed: number;
    /**
     * The base angular turning speed used by all controllers.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/ControllerManager#BaseTurnSpeed)
     */
    BaseTurnSpeed: number;
    /**
     * A reference to the sensor data used while a <code>ClimbController</code> is active.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/ControllerManager#ClimbSensor)
     */
    ClimbSensor: ControllerSensor | undefined;
    /**
     * The unit vector describing the desired direction to face.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/ControllerManager#FacingDirection)
     */
    FacingDirection: Vector3;
    /**
     * A reference to the sensor data used while a <code>GroundController</code> is active.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/ControllerManager#GroundSensor)
     */
    GroundSensor: ControllerSensor | undefined;
    /**
     * The vector describing the desired direction to move in.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/ControllerManager#MovingDirection)
     */
    MovingDirection: Vector3;
    /**
     * The <code>BasePart</code> where the controller's forces and torques are applied.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/ControllerManager#RootPart)
     */
    RootPart: BasePart | undefined;
    /**
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/ControllerManager#UpDirection)
     */
    UpDirection: Vector3;
}
/**
 * Container class for the <code>HumanoidController</code> among other classes.
 *
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/ControllerService)
 */
interface ControllerService extends Instance {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_ControllerService: unique symbol;
}
/**
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/ConversationalAIAcceptanceService)
 */
interface ConversationalAIAcceptanceService extends Instance {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_ConversationalAIAcceptanceService: unique symbol;
}
/**
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/CoreScriptDebuggingManagerHelper)
 */
interface CoreScriptDebuggingManagerHelper extends Instance {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_CoreScriptDebuggingManagerHelper: unique symbol;
}
/**
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/CreationDBService)
 */
interface CreationDBService extends Instance {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_CreationDBService: unique symbol;
}
/**
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/CreatorStoreService)
 */
interface CreatorStoreService extends Instance {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_CreatorStoreService: unique symbol;
}
/**
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/CrossDMScriptChangeListener)
 */
interface CrossDMScriptChangeListener extends Instance {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_CrossDMScriptChangeListener: unique symbol;
}
/**
 * The DataModelMesh is an abstract class from which mesh classes descend.
 *
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/DataModelMesh)
 */
interface DataModelMesh extends Instance {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_DataModelMesh: unique symbol;
    /**
     * The Offset of a mesh determines the relative position from the <code>BasePart.Position</code> of a <code>BasePart</code> that the mesh will be displayed at.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/DataModelMesh#Offset)
     */
    Offset: Vector3;
    /**
     * The Scale of a mesh determines the size of the mesh relative to its original dimensions.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/DataModelMesh#Scale)
     */
    Scale: Vector3;
    /**
     * Changes the hue of a mesh's texture, used with <code>FileMesh.TextureId</code>.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/DataModelMesh#VertexColor)
     */
    VertexColor: Vector3;
}
/**
 * <strong>Deprecated:</strong> This object serves no purpose other than being an abstract class that <code>BlockMesh</code> and <code>CylinderMesh</code> inherit from. Note non-character beveled parts were removed in 2013. Developers looking for beveled edges are required to use either <code>UnionOperations</code> or <code>MeshParts</code>.<br>An abstract class that <code>BlockMesh</code> and <code>CylinderMesh</code> inherit from.
 *
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/BevelMesh)
 */
interface BevelMesh extends DataModelMesh {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_BevelMesh: unique symbol;
}
/**
 * The BlockMesh object applies a 'brick' mesh to the <code>BasePart</code> it is parented to. It behaves identically to a <code>SpecialMesh</code> with <code>SpecialMesh.MeshType</code> set to 'Brick'.
 *
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/BlockMesh)
 */
interface BlockMesh extends BevelMesh {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_BlockMesh: unique symbol;
}
/**
 * <strong>Deprecated:</strong> This class is deprecated, and <code>CylinderMeshes</code> are no longer supported. Do not use it for new work.<br>The CylinderMesh object applies a 'cylinder' mesh to the <code>BasePart</code> it is parented to.
 *
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/CylinderMesh)
 */
interface CylinderMesh extends BevelMesh {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_CylinderMesh: unique symbol;
}
/**
 * The FileMesh object applies a mesh to a <code>BasePart</code> when parented to it. Its properties are inherited by the <code>SpecialMesh</code> object.
 *
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/FileMesh)
 */
interface FileMesh extends DataModelMesh {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_FileMesh: unique symbol;
    /**
     * The MeshId is the content ID of the mesh that is to be displayed.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/FileMesh#MeshId)
     */
    MeshId: ContentId;
    /**
     * The TextureId is the content ID of the texture that is to be applied to the mesh.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/FileMesh#TextureId)
     */
    TextureId: ContentId;
}
/**
 * The <code>SpecialMesh</code> object applies a mesh to a <code>BasePart</code> depending on the <code>MeshType</code> property.
 *
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/SpecialMesh)
 */
interface SpecialMesh extends FileMesh {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_SpecialMesh: unique symbol;
    /**
     * Determines the type of mesh that will be applied to the <code>BasePart</code> the <code>SpecialMesh</code> is parented to.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/SpecialMesh#MeshType)
     */
    MeshType: Enum.MeshType;
}
/**
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/DataModelPatchService)
 */
interface DataModelPatchService extends Instance {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_DataModelPatchService: unique symbol;
}
/**
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/DataStoreGetOptions)
 */
interface DataStoreGetOptions extends Instance {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_DataStoreGetOptions: unique symbol;
    /**
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/DataStoreGetOptions#UseCache)
     */
    UseCache: boolean;
}
/**
 * Specifies additional parameters for a <code>GlobalDataStore:IncrementAsync()</code> call.
 *
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/DataStoreIncrementOptions)
 */
interface DataStoreIncrementOptions extends Instance {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_DataStoreIncrementOptions: unique symbol;
    /**
     * Gets the custom metadata set with this <code>DataStoreIncrementOptions</code> instance.
     * @param this Specifies additional parameters for a <code>GlobalDataStore:IncrementAsync()</code> call.
     * @returns Metadata associated with this <code>DataStoreIncrementOptions</code> instance.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/DataStoreIncrementOptions#GetMetadata)
     */
    GetMetadata(this: DataStoreIncrementOptions): object;
    /**
     * Sets custom metadata to be associated with the key.
     * @param this Specifies additional parameters for a <code>GlobalDataStore:IncrementAsync()</code> call.
     * @param attributes Metadata values to set for the key.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/DataStoreIncrementOptions#SetMetadata)
     */
    SetMetadata(this: DataStoreIncrementOptions, attributes: object): void;
}
/**
 * Object describing data store information.
 *
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/DataStoreInfo)
 */
interface DataStoreInfo extends Instance {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_DataStoreInfo: unique symbol;
    /**
     * Indicates when the data store was created in milliseconds since epoch.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/DataStoreInfo#CreatedTime)
     */
    readonly CreatedTime: number;
    /**
     * The name of the data store.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/DataStoreInfo#DataStoreName)
     */
    readonly DataStoreName: string;
    /**
     * Indicates the last time the data store was updated in milliseconds since epoch.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/DataStoreInfo#UpdatedTime)
     */
    readonly UpdatedTime: number;
}
/**
 * Object representing a key on a <code>DataStoreKeyPages</code> object.
 *
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/DataStoreKey)
 */
interface DataStoreKey extends Instance {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_DataStoreKey: unique symbol;
    /**
     * The name of the key.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/DataStoreKey#KeyName)
     */
    readonly KeyName: string;
}
/**
 * An object specifying information about a particular version of the key.
 *
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/DataStoreKeyInfo)
 */
interface DataStoreKeyInfo extends Instance {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_DataStoreKeyInfo: unique symbol;
    /**
     * The date and time the object was created.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/DataStoreKeyInfo#CreatedTime)
     */
    readonly CreatedTime: number;
    /**
     * The date and time the object was last updated.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/DataStoreKeyInfo#UpdatedTime)
     */
    readonly UpdatedTime: number;
    /**
     * Uniquely identifies the version of the object.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/DataStoreKeyInfo#Version)
     */
    readonly Version: string;
    /**
     * Returns the metadata associated with the object.
     * @param this An object specifying information about a particular version of the key.
     * @returns Metadata associated with the key.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/DataStoreKeyInfo#GetMetadata)
     */
    GetMetadata(this: DataStoreKeyInfo): object;
    /**
     * An array of <code>UserIds</code> tagged with a key.
     * @param this An object specifying information about a particular version of the key.
     * @returns An array of <code>UserIds</code> associated with the object.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/DataStoreKeyInfo#GetUserIds)
     */
    GetUserIds(this: DataStoreKeyInfo): Array<number>;
}
/**
 * An instance describing version information for a key.
 *
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/DataStoreObjectVersionInfo)
 */
interface DataStoreObjectVersionInfo extends Instance {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_DataStoreObjectVersionInfo: unique symbol;
    /**
     * Indicates when the version was created in milliseconds since epoch.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/DataStoreObjectVersionInfo#CreatedTime)
     */
    readonly CreatedTime: number;
    /**
     * Whether the version has been marked as deleted.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/DataStoreObjectVersionInfo#IsDeleted)
     */
    readonly IsDeleted: boolean;
    /**
     * Uniquely identifies a particular version of the key.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/DataStoreObjectVersionInfo#Version)
     */
    readonly Version: string;
}
/**
 * Object used to provide additional parameters to <code>DataStoreService:GetDataStore()</code>.
 *
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/DataStoreOptions)
 */
interface DataStoreOptions extends Instance {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_DataStoreOptions: unique symbol;
    /**
     * Whether the <code>GlobalDataStore</code> should work with all scopes.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/DataStoreOptions#AllScopes)
     */
    AllScopes: boolean;
    /**
     * @param this Object used to provide additional parameters to <code>DataStoreService:GetDataStore()</code>.
     * @param experimentalFeatures Lua table in <code>key = value</code> format where the key is the experimental feature name and the value is a boolean which specifies whether to enable.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/DataStoreOptions#SetExperimentalFeatures)
     */
    SetExperimentalFeatures(this: DataStoreOptions, experimentalFeatures: object): void;
}
/**
 * A game service that gives access to persistent data storage across places in a game.
 *
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/DataStoreService)
 */
interface DataStoreService extends Instance {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_DataStoreService: unique symbol;
    /**
     * Creates a <code>DataStore</code> instance with the provided name and scope.
     * @param this A game service that gives access to persistent data storage across places in a game.
     * @param name Name of the data store.
     * @param scope <strong>(Optional)</strong> A string specifying the scope.
     * @param options <strong>(Optional)</strong> A <code>DataStoreOptions</code> instance to enable experimental features and v2 API features.
     * @returns A <code>DataStore</code> instance with provided name and optional scope.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/DataStoreService#GetDataStore)
     */
    GetDataStore(this: DataStoreService, name: string, scope?: string, options?: DataStoreOptions): DataStore;
    /**
     * Returns the default data store.
     * @param this A game service that gives access to persistent data storage across places in a game.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/DataStoreService#GetGlobalDataStore)
     */
    GetGlobalDataStore(this: DataStoreService): DataStore;
    /**
     * Get an <code>OrderedDataStore</code> given a name and optional scope.
     * @param this A game service that gives access to persistent data storage across places in a game.
     * @param name
     * @param scope
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/DataStoreService#GetOrderedDataStore)
     */
    GetOrderedDataStore(this: DataStoreService, name: string, scope?: string): OrderedDataStore;
    /**
     * Returns the number of requests that can be made by the given request type.
     * @param this A game service that gives access to persistent data storage across places in a game.
     * @param requestType
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/DataStoreService#GetRequestBudgetForRequestType)
     */
    GetRequestBudgetForRequestType(this: DataStoreService, requestType: CastsToEnum<Enum.DataStoreRequestType>): number;
    /**
     * Returns a <code>DataStoreListingPages</code> object for enumerating through all of the experience's data stores.
     * @param this A game service that gives access to persistent data storage across places in a game.
     * @param prefix <strong>(Optional)</strong> Prefix to enumerate data stores that start with the given prefix.
     * @param pageSize <strong>(Optional)</strong> Number of items to be returned in each page. By default is 32.
     * @param cursor <strong>(Optional)</strong> Cursor to continue iteration.
     * @returns <code>DataStoreListingPages</code> instance containing <code>DataStoreInfo</code> instances that provide details such as name, creation time, and time last updated.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/DataStoreService#ListDataStoresAsync)
     */
    ListDataStoresAsync(this: DataStoreService, prefix: string, pageSize: number, cursor: string): DataStoreListingPages;
}
/**
 * Specifies additional parameters for a <code>GlobalDataStore:SetAsync()</code> call.
 *
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/DataStoreSetOptions)
 */
interface DataStoreSetOptions extends Instance {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_DataStoreSetOptions: unique symbol;
    /**
     * Gets the custom metadata set with this <code>DataStoreSetOptions</code> instance.
     * @param this Specifies additional parameters for a <code>GlobalDataStore:SetAsync()</code> call.
     * @returns Metadata associated with this <code>DataStoreSetOptions</code> instance.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/DataStoreSetOptions#GetMetadata)
     */
    GetMetadata(this: DataStoreSetOptions): object;
    /**
     * Sets custom metadata to be associated with the key.
     * @param this Specifies additional parameters for a <code>GlobalDataStore:SetAsync()</code> call.
     * @param attributes Metadata values to set for the key.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/DataStoreSetOptions#SetMetadata)
     */
    SetMetadata(this: DataStoreSetOptions, attributes: object): void;
}
/**
 * Allows scheduling the guaranteed destruction of an object without yielding.<br /> .
 *
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Debris)
 */
interface Debris extends Instance {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_Debris: unique symbol;
    /**
     * Schedules a given <code>Instance</code> for destruction within the specified lifetime.
     * @param this Allows scheduling the guaranteed destruction of an object without yielding.<br /> .
     * @param item The <code>Instance</code> to add to <code>Debris</code>.
     * @param lifetime Number of seconds before the <code>Instance</code> should be destroyed.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Debris#AddItem)
     */
    AddItem(this: Debris, item: Instance, lifetime?: number): void;
}
/**
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/DebuggablePluginWatcher)
 */
interface DebuggablePluginWatcher extends Instance {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_DebuggablePluginWatcher: unique symbol;
}
/**
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/DebuggerConnection)
 */
interface DebuggerConnection extends Instance {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_DebuggerConnection: unique symbol;
}
/**
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/LocalDebuggerConnection)
 */
interface LocalDebuggerConnection extends DebuggerConnection {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_LocalDebuggerConnection: unique symbol;
}
/**
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/DebuggerConnectionManager)
 */
interface DebuggerConnectionManager extends Instance {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_DebuggerConnectionManager: unique symbol;
}
/**
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/DebuggerLuaResponse)
 */
interface DebuggerLuaResponse extends Instance {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_DebuggerLuaResponse: unique symbol;
}
/**
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/DebuggerUIService)
 */
interface DebuggerUIService extends Instance {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_DebuggerUIService: unique symbol;
}
/**
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/DebuggerVariable)
 */
interface DebuggerVariable extends Instance {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_DebuggerVariable: unique symbol;
}
/**
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/DeviceIdService)
 */
interface DeviceIdService extends Instance {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_DeviceIdService: unique symbol;
}
/**
 * Creates NPC billboard-style dialog bubbles.
 *
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Dialog)
 */
interface Dialog extends Instance {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_Dialog: unique symbol;
    /**
     * Sets whether the Dialog can be used by multiple players at once.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Dialog#BehaviorType)
     */
    BehaviorType: Enum.DialogBehaviorType;
    /**
     * The furthest distance that a player can be from the Dialog's parent to start a conversation.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Dialog#ConversationDistance)
     */
    ConversationDistance: number;
    /**
     * Toggles whether the goodbye option will be displayed.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Dialog#GoodbyeChoiceActive)
     */
    GoodbyeChoiceActive: boolean;
    /**
     * Sets the sentence that the dialog will show to the player when the chat ends.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Dialog#GoodbyeDialog)
     */
    GoodbyeDialog: string;
    /**
     * If true, this dialog is being used by at least one player.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Dialog#InUse)
     */
    InUse: boolean;
    /**
     * Sets the first sentence that the dialog will show to the player, once a chat is commenced.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Dialog#InitialPrompt)
     */
    InitialPrompt: string;
    /**
     * Sets the icon that the initial dialog displays.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Dialog#Purpose)
     */
    Purpose: Enum.DialogPurpose;
    /**
     * Sets the color of the NPC's speech bubble.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Dialog#Tone)
     */
    Tone: Enum.DialogTone;
    /**
     * Sets the maximum distance that a dialog can be triggered from.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Dialog#TriggerDistance)
     */
    TriggerDistance: number;
    /**
     * Sets the offset of the dialog relative to the dialog's parent.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Dialog#TriggerOffset)
     */
    TriggerOffset: Vector3;
    /**
     * Returns a list of players currently using the Dialog.
     * @param this Creates NPC billboard-style dialog bubbles.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Dialog#GetCurrentPlayers)
     */
    GetCurrentPlayers(this: Dialog): Array<Player>;
    /**
     * Fired when a player chooses something to say, through a <code>Dialog</code> instance.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Dialog#DialogChoiceSelected)
     */
    readonly DialogChoiceSelected: RBXScriptSignal<(player: Player, dialogChoice: Dialog) => void>;
}
/**
 * Used to craft the further choices available to players who have started a dialog conversation with an NPC.
 *
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/DialogChoice)
 */
interface DialogChoice extends Instance {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_DialogChoice: unique symbol;
    /**
     * Toggles whether the goodbye option will be displayed.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/DialogChoice#GoodbyeChoiceActive)
     */
    GoodbyeChoiceActive: boolean;
    /**
     * Sets the sentence that the dialog will show to the player when the chat ends.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/DialogChoice#GoodbyeDialog)
     */
    GoodbyeDialog: string;
    /**
     * Sets what the NPC will say when the player chooses this DialogChoice.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/DialogChoice#ResponseDialog)
     */
    ResponseDialog: string;
    /**
     * Sets what the player will say when they choose this DialogChoice.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/DialogChoice#UserDialog)
     */
    UserDialog: string;
}
/**
 * A helper object used to create tools that can drag parts.
 *
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Dragger)
 */
interface Dragger extends Instance {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_Dragger: unique symbol;
    /**
     * Rotates the currently dragged part(s) by 90 degrees on the given axis.
     * @param this A helper object used to create tools that can drag parts.
     * @param axis
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Dragger#AxisRotate)
     */
    AxisRotate(this: Dragger, axis?: CastsToEnum<Enum.Axis>): void;
    /**
     * Initializes a dragging action, specifying which parts to use when dragging.
     * @param this A helper object used to create tools that can drag parts.
     * @param mousePart
     * @param pointOnMousePart
     * @param parts
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Dragger#MouseDown)
     */
    MouseDown(this: Dragger, mousePart: BasePart, pointOnMousePart: Vector3, parts: Array<BasePart>): void;
    /**
     * Tries to move the currently dragged part to the point where MouseRay hits another part.
     * @param this A helper object used to create tools that can drag parts.
     * @param mouseRay
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Dragger#MouseMove)
     */
    MouseMove(this: Dragger, mouseRay: Ray): void;
    /**
     * Stops the current dragging action (made by <code>Dragger:MouseDown()</code>).
     * @param this A helper object used to create tools that can drag parts.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Dragger#MouseUp)
     */
    MouseUp(this: Dragger): void;
}
/**
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/DraggerService)
 */
interface DraggerService extends Instance {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_DraggerService: unique symbol;
    /**
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/DraggerService#AlignDraggedObjects)
     */
    readonly AlignDraggedObjects: boolean;
    /**
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/DraggerService#AngleSnapEnabled)
     */
    readonly AngleSnapEnabled: boolean;
    /**
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/DraggerService#AngleSnapIncrement)
     */
    readonly AngleSnapIncrement: number;
    /**
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/DraggerService#AnimateHover)
     */
    readonly AnimateHover: boolean;
    /**
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/DraggerService#CollisionsEnabled)
     */
    readonly CollisionsEnabled: boolean;
    /**
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/DraggerService#DraggerCoordinateSpace)
     */
    readonly DraggerCoordinateSpace: Enum.DraggerCoordinateSpace;
    /**
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/DraggerService#DraggerMovementMode)
     */
    readonly DraggerMovementMode: Enum.DraggerMovementMode;
    /**
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/DraggerService#GeometrySnapColor)
     */
    readonly GeometrySnapColor: Color3;
    /**
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/DraggerService#HoverAnimateFrequency)
     */
    readonly HoverAnimateFrequency: number;
    /**
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/DraggerService#HoverThickness)
     */
    readonly HoverThickness: number;
    /**
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/DraggerService#JointsEnabled)
     */
    readonly JointsEnabled: boolean;
    /**
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/DraggerService#LinearSnapEnabled)
     */
    readonly LinearSnapEnabled: boolean;
    /**
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/DraggerService#LinearSnapIncrement)
     */
    readonly LinearSnapIncrement: number;
    /**
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/DraggerService#ShowHover)
     */
    readonly ShowHover: boolean;
    /**
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/DraggerService#ShowPivotIndicator)
     */
    ShowPivotIndicator: boolean;
}
/**
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/EditableService)
 */
interface EditableService extends Instance {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_EditableService: unique symbol;
}
/**
 * Represents a 3D rotation curve through a group of three <code>FloatCurves</code>.
 *
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/EulerRotationCurve)
 */
interface EulerRotationCurve extends Instance {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_EulerRotationCurve: unique symbol;
    /**
     * Euler angles rotation order.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/EulerRotationCurve#RotationOrder)
     */
    RotationOrder: Enum.RotationOrder;
    /**
     * Samples the three <code>FloatCurves</code> (<code>X</code>, <code>Y</code>, <code>Z</code>) at the passed <code>time</code> argument and returns the result as three Euler angles.
     * @param this Represents a 3D rotation curve through a group of three <code>FloatCurves</code>.
     * @param time
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/EulerRotationCurve#GetAnglesAtTime)
     */
    GetAnglesAtTime(this: EulerRotationCurve, time: number): Array<unknown>;
    /**
     * Samples the <code>EulerRotationCurve</code> at a given <code>time</code> and returns the corresponding rotation.
     * @param this Represents a 3D rotation curve through a group of three <code>FloatCurves</code>.
     * @param time
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/EulerRotationCurve#GetRotationAtTime)
     */
    GetRotationAtTime(this: EulerRotationCurve, time: number): CFrame;
    /**
     * Returns the <code>FloatCurve</code> controlling the <code>X</code> Euler angle channel.
     * @param this Represents a 3D rotation curve through a group of three <code>FloatCurves</code>.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/EulerRotationCurve#X)
     */
    X(this: EulerRotationCurve): FloatCurve;
    /**
     * Returns the <code>FloatCurve</code> controlling the <code>Y</code> Euler angle channel.
     * @param this Represents a 3D rotation curve through a group of three <code>FloatCurves</code>.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/EulerRotationCurve#Y)
     */
    Y(this: EulerRotationCurve): FloatCurve;
    /**
     * Returns the <code>FloatCurve</code> controlling the <code>Z</code> Euler angle channel.
     * @param this Represents a 3D rotation curve through a group of three <code>FloatCurves</code>.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/EulerRotationCurve#Z)
     */
    Z(this: EulerRotationCurve): FloatCurve;
}
/**
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/EventIngestService)
 */
interface EventIngestService extends Instance {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_EventIngestService: unique symbol;
}
/**
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/ExampleService)
 */
interface ExampleService extends Instance {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_ExampleService: unique symbol;
}
/**
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/ExperienceAuthService)
 */
interface ExperienceAuthService extends Instance {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_ExperienceAuthService: unique symbol;
}
/**
 * Used to customize a player invite prompt.
 *
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/ExperienceInviteOptions)
 */
interface ExperienceInviteOptions extends Instance {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_ExperienceInviteOptions: unique symbol;
    /**
     * Asset ID that maps to a <strong>Notification</strong> asset type.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/ExperienceInviteOptions#InviteMessageId)
     */
    InviteMessageId: string;
    /**
     * Roblox <code>UserId</code> of the specific friend to invite.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/ExperienceInviteOptions#InviteUser)
     */
    InviteUser: number;
    /**
     * Used to set a parameter in <code>Player:GetJoinData()</code> when a friend joins from the invite notification.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/ExperienceInviteOptions#LaunchData)
     */
    LaunchData: string;
    /**
     * Custom text shown on the invite prompt for the sending player.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/ExperienceInviteOptions#PromptMessage)
     */
    PromptMessage: string;
}
/**
 * Service containing methods to validate users and prompt them to enable experience notifications.
 *
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/ExperienceNotificationService)
 */
interface ExperienceNotificationService extends Instance {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_ExperienceNotificationService: unique symbol;
    /**
     * Shows an in-experience prompt for the local player to enable notifications.
     * @param this Service containing methods to validate users and prompt them to enable experience notifications.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/ExperienceNotificationService#PromptOptIn)
     */
    PromptOptIn(this: ExperienceNotificationService): void;
    /**
     * Indicates whether the local player can be prompted to enable notifications.
     * @param this Service containing methods to validate users and prompt them to enable experience notifications.
     * @returns Whether the local player can be prompted to enable notifications.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/ExperienceNotificationService#CanPromptOptInAsync)
     */
    CanPromptOptInAsync(this: ExperienceNotificationService): boolean;
    /**
     * Fires when the local player closes the prompt.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/ExperienceNotificationService#OptInPromptClosed)
     */
    readonly OptInPromptClosed: RBXScriptSignal<() => void>;
}
/**
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/ExperienceService)
 */
interface ExperienceService extends Instance {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_ExperienceService: unique symbol;
}
/**
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/ExperienceStateCaptureService)
 */
interface ExperienceStateCaptureService extends Instance {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_ExperienceStateCaptureService: unique symbol;
}
/**
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/ExplorerFilter)
 */
interface ExplorerFilter extends Instance {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_ExplorerFilter: unique symbol;
}
/**
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/ExplorerFilterAutocompleter)
 */
interface ExplorerFilterAutocompleter extends Instance {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_ExplorerFilterAutocompleter: unique symbol;
}
/**
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/ExplorerServiceVisibilityService)
 */
interface ExplorerServiceVisibilityService extends Instance {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_ExplorerServiceVisibilityService: unique symbol;
    /**
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/ExplorerServiceVisibilityService#GetServiceVisibility)
     */
    GetServiceVisibility(this: ExplorerServiceVisibilityService, service: Instance): boolean;
}
/**
 * Applies force to <code>BaseParts</code> within the explosion's <code>Explosion.BlastRadius</code>. Breaks <code>JointInstances</code> and <code>WeldConstraints</code> between parts and kills <code>Humanoid</code> characters not protected by a <code>ForceField</code>.
 *
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Explosion)
 */
interface Explosion extends Instance {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_Explosion: unique symbol;
    /**
     * Used to determine the amount of force applied to <code>BaseParts</code> caught in the <code>Explosion.BlastRadius</code>.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Explosion#BlastPressure)
     */
    BlastPressure: number;
    /**
     * This property determines the radius of the <code>Explosion</code>, in studs. This radius determines the area of effect of the explosion, not the size of the explosion's visuals.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Explosion#BlastRadius)
     */
    BlastRadius: number;
    /**
     * Used to set the proportion of the <code>Explosion.BlastRadius</code>, between 0 and 1, within which all joints will be destroyed. Anything outside of this range will only have the <code>Explosion</code> force applied to it.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Explosion#DestroyJointRadiusPercent)
     */
    DestroyJointRadiusPercent: number;
    /**
     * This property determines how the <code>Explosion</code> will interact with <code>Terrain</code>. Used to set if explosions will cause damage to the terrain or not.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Explosion#ExplosionType)
     */
    ExplosionType: Enum.ExplosionType;
    /**
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Explosion#LocalTransparencyModifier)
     */
    LocalTransparencyModifier: number;
    /**
     * This property is the position of the center of the <code>Explosion</code>. It is defined in world-space and not influenced by the <code>Explosion</code> parent.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Explosion#Position)
     */
    Position: Vector3;
    /**
     * Value between 0 and 1 that controls the speed of the particle effect.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Explosion#TimeScale)
     */
    TimeScale: number;
    /**
     * This property determines whether or not the visual effect of an <code>Explosion</code> is shown or not.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Explosion#Visible)
     */
    Visible: boolean;
    /**
     * Fires when the <code>Explosion</code> hits a <code>BasePart</code> within its <code>Explosion.BlastRadius</code>. Returns the part hit along with the distance of the part from <code>Explosion.Position</code>.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Explosion#Hit)
     */
    readonly Hit: RBXScriptSignal<(part: BasePart, distance: number) => void>;
}
/**
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/FaceAnimatorService)
 */
interface FaceAnimatorService extends Instance {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_FaceAnimatorService: unique symbol;
}
/**
 * The <code>FaceControls</code> object defines a set of properties for controlling the facial expressions of a Dynamic Head.
 *
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/FaceControls)
 */
interface FaceControls extends Instance {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_FaceControls: unique symbol;
}
/**
 * The FaceInstance class is an abstract class from which the <code>Decal</code> class inherits.
 *
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/FaceInstance)
 */
interface FaceInstance extends Instance {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_FaceInstance: unique symbol;
    /**
     * Sets what face of the brick the object appears on.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/FaceInstance#Face)
     */
    Face: Enum.NormalId;
}
/**
 * The Decal object is an object which applies an image to a face of a <code>BasePart</code>.
 *
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Decal)
 */
interface Decal extends FaceInstance {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_Decal: unique symbol;
    /**
     * The <code>Color3</code> tint of the <code>Decal</code>.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Decal#Color3)
     */
    Color3: Color3;
    /**
     * Acts as a multiplier for the decal's <code>Decal.Transparency</code> property. The effects are only visible to the local player.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Decal#LocalTransparencyModifier)
     */
    LocalTransparencyModifier: number;
    /**
     * <strong>Deprecated:</strong> This non-functional property is deprecated and should not be used in new work.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Decal#Shiny)
     */
    Shiny: number;
    /**
     * <strong>Deprecated:</strong> This property no longer functions correctly and is deprecated. It should not be used in new work. Developers looking to alter how light interacts with images applied to parts should use <code>SurfaceGuis</code>.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Decal#Specular)
     */
    Specular: number;
    /**
     * The ContentId of the image to be applied by the <code>Decal</code>.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Decal#Texture)
     */
    Texture: ContentId;
    /**
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Decal#TextureContent)
     */
    TextureContent: Content;
    /**
     * Determines the transparency of the <code>Decal</code> with 0 being completely opaque and 1 completely transparent.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Decal#Transparency)
     */
    Transparency: number;
    /**
     * Determines the rendering order when multiple Decals are assigned the same face.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Decal#ZIndex)
     */
    ZIndex: number;
}
/**
 * A Texture object applies a repeating texture to the face of a <code>BasePart</code>.
 *
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Texture)
 */
interface Texture extends Decal {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_Texture: unique symbol;
    /**
     * Determines the offset in studs of the rendered texture's horizontal coordinate.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Texture#OffsetStudsU)
     */
    OffsetStudsU: number;
    /**
     * Determines the offset in studs of the rendered texture's vertical coordinate.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Texture#OffsetStudsV)
     */
    OffsetStudsV: number;
    /**
     * Sets the horizontal size, in studs, of the tiled image applied by the <code>Texture</code>.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Texture#StudsPerTileU)
     */
    StudsPerTileU: number;
    /**
     * Sets the vertical size, in studs, of the tiled image applied by the <code>Texture</code>.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Texture#StudsPerTileV)
     */
    StudsPerTileV: number;
}
/**
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/FacialAnimationRecordingService)
 */
interface FacialAnimationRecordingService extends Instance {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_FacialAnimationRecordingService: unique symbol;
}
/**
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/FacialAnimationStreamingServiceStats)
 */
interface FacialAnimationStreamingServiceStats extends Instance {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_FacialAnimationStreamingServiceStats: unique symbol;
}
/**
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/FacialAnimationStreamingServiceV2)
 */
interface FacialAnimationStreamingServiceV2 extends Instance {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_FacialAnimationStreamingServiceV2: unique symbol;
}
/**
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/FacialAnimationStreamingSubsessionStats)
 */
interface FacialAnimationStreamingSubsessionStats extends Instance {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_FacialAnimationStreamingSubsessionStats: unique symbol;
}
/**
 * The base class for the legacy motor system.
 *
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Feature)
 */
interface Feature extends Instance {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_Feature: unique symbol;
    /**
     * Sets what side of the Parent the object is on.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Feature#FaceId)
     */
    FaceId: Enum.NormalId;
    /**
     * Controls how the Feature is positioned on it's parent's surface, in correspondence to the Feature's <code>Feature.LeftRight</code> and <code>Feature.TopBottom</code> properties.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Feature#InOut)
     */
    InOut: Enum.InOut;
    /**
     * Controls whether the feature is shifted to the left, center, or right on the surface.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Feature#LeftRight)
     */
    LeftRight: Enum.LeftRight;
    /**
     * Controls whether the feature is shifted to the top, center, or bottom on the surface.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Feature#TopBottom)
     */
    TopBottom: Enum.TopBottom;
}
/**
 * <strong>Deprecated:</strong> A Hole is an unused type of surface joint. It should not be used in new work.
 *
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Hole)
 */
interface Hole extends Feature {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_Hole: unique symbol;
}
/**
 * <strong>Deprecated:</strong> A MotorFeature is an unused type of surface joint. It should not be used for new work.
 *
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/MotorFeature)
 */
interface MotorFeature extends Feature {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_MotorFeature: unique symbol;
}
/**
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/FeatureRestrictionManager)
 */
interface FeatureRestrictionManager extends Instance {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_FeatureRestrictionManager: unique symbol;
}
/**
 * A particle emitter with the visual aesthetic of fire.
 *
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Fire)
 */
interface Fire extends Instance {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_Fire: unique symbol;
    /**
     * Determines the color of the primary (outer) flame particles.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Fire#Color)
     */
    Color: Color3;
    /**
     * Determines whether flame particles are emit.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Fire#Enabled)
     */
    Enabled: boolean;
    /**
     * Determines the velocity at which particles are emit.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Fire#Heat)
     */
    Heat: number;
    /**
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Fire#LocalTransparencyModifier)
     */
    LocalTransparencyModifier: number;
    /**
     * Determines the color of the of the secondary (inner) flame particles.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Fire#SecondaryColor)
     */
    SecondaryColor: Color3;
    /**
     * Determines the size of the flame particles.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Fire#Size)
     */
    Size: number;
    /**
     * Value between 0-1 that controls the speed of the particle effect.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Fire#TimeScale)
     */
    TimeScale: number;
}
/**
 * A sorted list of time-value pairs that define a curve. Used to animate a single numerical value.
 *
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/FloatCurve)
 */
interface FloatCurve extends Instance {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_FloatCurve: unique symbol;
    /**
     * Number of keys in the float curve.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/FloatCurve#Length)
     */
    readonly Length: number;
    /**
     * Returns a copy of a key at a given index.
     * @param this A sorted list of time-value pairs that define a curve. Used to animate a single numerical value.
     * @param index
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/FloatCurve#GetKeyAtIndex)
     */
    GetKeyAtIndex(this: FloatCurve, index: number): FloatCurveKey;
    /**
     * Returns the index of the last and first key of a period of time.
     * @param this A sorted list of time-value pairs that define a curve. Used to animate a single numerical value.
     * @param time
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/FloatCurve#GetKeyIndicesAtTime)
     */
    GetKeyIndicesAtTime(this: FloatCurve, time: number): [
        before: number,
        after: number
    ];
    /**
     * Returns a copy of all the keys in the FloatCurve as a Lua array of <code>FloatCurveKeys</code>.
     * @param this A sorted list of time-value pairs that define a curve. Used to animate a single numerical value.
     * @returns Array of <code>FloatCurveKeys</code>.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/FloatCurve#GetKeys)
     */
    GetKeys(this: FloatCurve): Array<FloatCurveKey>;
    /**
     * Samples the float curve at a given time passed as argument.
     * @param this A sorted list of time-value pairs that define a curve. Used to animate a single numerical value.
     * @param time Time at which to sample the curve.
     * @returns Value of the curve at the requested <code>time</code>.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/FloatCurve#GetValueAtTime)
     */
    GetValueAtTime(this: FloatCurve, time: number): number | undefined;
    /**
     * Adds the key passed as an argument to this curve. If a key at the same time is found, it will be replaced.
     * @param this A sorted list of time-value pairs that define a curve. Used to animate a single numerical value.
     * @param key <code>FloatCurveKey</code> to insert.
     * @returns (see description) .
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/FloatCurve#InsertKey)
     */
    InsertKey(this: FloatCurve, key: FloatCurveKey): [
        isNew: boolean,
        index: number
    ];
    /**
     * Removes a given number of keys starting from a given index.
     * @param this A sorted list of time-value pairs that define a curve. Used to animate a single numerical value.
     * @param startingIndex Starting index from which to remove keys.
     * @param count Number of keys to remove.
     * @returns Number of keys removed.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/FloatCurve#RemoveKeyAtIndex)
     */
    RemoveKeyAtIndex(this: FloatCurve, startingIndex: number, count?: number): number;
    /**
     * Resets this curve's keys using the <code>FloatCurveKey</code> array passed as an argument.
     * @param this A sorted list of time-value pairs that define a curve. Used to animate a single numerical value.
     * @param keys Array of <code>FloatCurveKeys</code>.
     * @returns Number of keys inserted.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/FloatCurve#SetKeys)
     */
    SetKeys(this: FloatCurve, keys: Array<unknown>): number;
}
/**
 * A simple container used to hold and organize Roblox instances.
 *
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Folder)
 */
interface Folder extends Instance {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_Folder: unique symbol;
}
/**
 * Protects a <code>Humanoid</code> from taking damage dealt through the <code>Humanoid:TakeDamage()</code> method and protects <code>BaseParts</code> from having their joints broken due to an <code>Explosion</code>.
 *
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/ForceField)
 */
interface ForceField extends Instance {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_ForceField: unique symbol;
    /**
     * Determines whether or not the <code>ForceField</code> particle effect is visible.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/ForceField#Visible)
     */
    Visible: boolean;
}
/**
 * A service associated with the legacy game pass system. Use <code>MarketplaceService</code> for all new work.
 *
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/GamePassService)
 */
interface GamePassService extends Instance {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_GamePassService: unique symbol;
    /**
     * <strong>Deprecated:</strong> <br>Returns <code>true</code> if the <code>Player</code> has the specified <strong>legacy</strong> game pass. Does not work with new game passes.
     * @param this A service associated with the legacy game pass system. Use <code>MarketplaceService</code> for all new work.
     * @param player The <code>Player</code> for which to check ownership.
     * @param gamePassId The <em>Asset ID</em> of the game pass. This is <strong>not</strong> the <em>Game Pass ID</em> (see above).
     * @returns Whether the <code>Player</code> owns the game pass.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/GamePassService#PlayerHasPass)
     */
    PlayerHasPass(this: GamePassService, player: Player, gamePassId: number): boolean;
}
/**
 * The GamepadService is internally responsible for handling inputs from various controllers, such as Xbox One or PlayStation DualShock controllers.
 *
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/GamepadService)
 */
interface GamepadService extends Instance {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_GamepadService: unique symbol;
    /**
     * The state of the gamepad virtual cursor.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/GamepadService#GamepadCursorEnabled)
     */
    get GamepadCursorEnabled(): boolean;
    /**
     * Disables the gamepad cursor, if currently enabled.
     * @param this The GamepadService is internally responsible for handling inputs from various controllers, such as Xbox One or PlayStation DualShock controllers.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/GamepadService#DisableGamepadCursor)
     */
    DisableGamepadCursor(this: GamepadService): void;
    /**
     * Enables the gamepad cursor or updates its position.
     * @param this The GamepadService is internally responsible for handling inputs from various controllers, such as Xbox One or PlayStation DualShock controllers.
     * @param guiObject
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/GamepadService#EnableGamepadCursor)
     */
    EnableGamepadCursor(this: GamepadService, guiObject: GuiObject | undefined): void;
}
/**
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/GenericChallengeService)
 */
interface GenericChallengeService extends Instance {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_GenericChallengeService: unique symbol;
}
/**
 * Service containing geometric operations.
 *
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/GeometryService)
 */
interface GeometryService extends Instance {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_GeometryService: unique symbol;
    /**
     * Returns a table of <code>Constraints</code> and <code>Attachments</code> which you may choose to preserve, along with their respective parents.
     * @param this Service containing geometric operations.
     * @param source An original object that the solid modeling operation was performed on, for example <code>part</code> in <code>UnionAsync()</code>.
     * @param destination
     * @param options Options dictionary for the method: <ul> <li><code>tolerance</code> — The distance tolerance, in regards to   <code>Attachment</code> preservation, between the attachment and the   closest point on the original part's surface versus the closest   point on the resulting part's surface. If the resulting distance   following the solid modeling operation is greater than this value,   the <code>Parent</code> of attachments and their   associated constraints will be <code>nil</code> in the returned recommendation   table.</li> <li><code>weldConstraintPreserve</code> — A <code>WeldConstraintPreserve</code> enum   value describing how <code>WeldConstraints</code> are   preserved in the resulting recommendation table.</li> <li><code>dropAttachmentsWithoutConstraints</code> — Boolean with default of   <code>true</code>. If set to <code>false</code>, <code>Attachments</code> that have   no <code>Constraints</code> will be preserved.</li> </ul>
     * @returns Table containing information for general case <code>Constraints</code>, <code>NoCollisionConstraints</code>, and <code>WeldConstraints</code>. In cases where an <code>Attachment</code> or <code>Constraint</code> should be dropped, its respective parent will be <code>nil</code>. For general case <code>Constraints</code> such as <code>HingeConstraint</code>: <table size="small"> <thead>   <tr>     <th>Key</th>     <th>Type</th>   </tr> </thead> <tbody>   <tr>     <td><code>Attachment</code></td>     <td><code>Class.Attachment</code></td>   </tr>   <tr>     <td><code>Constraint</code></td>     <td><code>Class.Constraint</code> or <code>nil</code></td>   </tr>   <tr>     <td><code>AttachmentParent</code></td>     <td><code>Class.BasePart</code> or <code>nil</code></td>   </tr>   <tr>     <td><code>ConstraintParent</code></td>     <td><code>Class.BasePart</code> or <code>nil</code></td>   </tr> </tbody> </table>  For <code>WeldConstraints</code>: <table size="small"> <thead>   <tr>     <th>Key</th>     <th>Type</th>   </tr> </thead> <tbody>   <tr>     <td><code>WeldConstraint</code></td>     <td><code>Class.WeldConstraint</code></td>   </tr>   <tr>     <td><code>WeldConstraintParent</code></td>     <td><code>Class.BasePart</code> or <code>nil</code></td>   </tr>   <tr>     <td><code>WeldConstraintPart0</code></td>     <td><code>Class.BasePart</code></td>   </tr>   <tr>     <td><code>WeldConstraintPart1</code></td>     <td><code>Class.BasePart</code></td>   </tr> </tbody> </table>  For <code>NoCollisionConstraints</code>: <table size="small"> <thead>   <tr>     <th>Key</th>     <th>Type</th>   </tr> </thead> <tbody>   <tr>     <td><code>NoCollisionConstraint</code></td>     <td><code>Class.NoCollisionConstraint</code></td>   </tr>   <tr>     <td><code>NoCollisionConstraintParent</code></td>     <td><code>Class.BasePart</code> or <code>nil</code></td>   </tr>   <tr>     <td><code>NoCollisionConstraintPart0</code></td>     <td><code>Class.BasePart</code></td>   </tr>   <tr>     <td><code>NoCollisionConstraintPart1</code></td>     <td><code>Class.BasePart</code></td>   </tr> </tbody> </table>
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/GeometryService#CalculateConstraintsToPreserve)
     */
    CalculateConstraintsToPreserve(this: GeometryService, source: Instance, destination: ReadonlyArray<Instance>, options?: CalculateConstraintsToPreserveConfig): Array<unknown>;
    /**
     * Creates one or more <code>PartOperations</code> from the intersecting geometry of one part and other parts.
     * @param this Service containing geometric operations.
     * @param part Main <code>Part</code> or <code>PartOperation</code> to operate on.
     * @param parts Array of parts to intersect with the main part.
     * @param options Options table containing all the controls for the method: <ul> <li><code>CollisionFidelity</code> — The value of   <code>CollisionFidelity</code> in the   resulting parts.</li> <li><code>RenderFidelity</code> — The value of   <code>RenderFidelity</code> in the resulting   parts.</li> <li><code>FluidFidelity</code> — The value of   <code>FluidFidelity</code> in the resulting   parts.</li> <li><code>SplitApart</code> — Boolean controlling whether the objects should all be   kept together or properly split apart. Default is <code>true</code> (split).</li> </ul>
     * @returns One or more <code>PartOperations</code> from the intersecting geometry of the main part (<code>part</code>) and the other parts.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/GeometryService#IntersectAsync)
     */
    IntersectAsync(this: GeometryService, part: Part | PartOperation, parts: ReadonlyArray<Part | PartOperation>, options?: GeometryServiceAsyncMethodConfig): Array<PartOperation>;
    /**
     * Creates one or more <code>PartOperations</code> from one part minus the geometry occupied by other parts.
     * @param this Service containing geometric operations.
     * @param part Main <code>Part</code> or <code>PartOperation</code> to operate on.
     * @param parts Array of parts to subtract from the main part.
     * @param options Options table containing all the controls for the method: <ul> <li><code>CollisionFidelity</code> — The value of   <code>CollisionFidelity</code> in the   resulting parts.</li> <li><code>RenderFidelity</code> — The value of   <code>RenderFidelity</code> in the resulting   parts.</li> <li><code>FluidFidelity</code> — The value of   <code>FluidFidelity</code> in the resulting   parts.</li> <li><code>SplitApart</code> — Boolean controlling whether the objects should all be   kept together or properly split apart. Default is <code>true</code> (split).</li> </ul>
     * @returns One or more <code>PartOperations</code> from the geometry of the main part (<code>part</code>) minus the geometry occupied by the other parts.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/GeometryService#SubtractAsync)
     */
    SubtractAsync(this: GeometryService, part: Part | PartOperation, parts: ReadonlyArray<Part | PartOperation>, options?: GeometryServiceAsyncMethodConfig): Array<PartOperation>;
    /**
     * Creates one or more <code>PartOperations</code> from one part plus the geometry occupied by other parts.
     * @param this Service containing geometric operations.
     * @param part Main <code>Part</code> or <code>PartOperation</code> to operate on.
     * @param parts Array of parts to union with the main part.
     * @param options Options table containing all the controls for the method: <ul> <li><code>CollisionFidelity</code> — The value of   <code>CollisionFidelity</code> in the   resulting parts.</li> <li><code>RenderFidelity</code> — The value of   <code>RenderFidelity</code> in the resulting   parts.</li> <li><code>FluidFidelity</code> — The value of   <code>FluidFidelity</code> in the resulting   parts.</li> <li><code>SplitApart</code> — Boolean controlling whether the objects should all be   kept together or properly split apart. Default is <code>true</code> (split).</li> </ul>
     * @returns One or more <code>PartOperations</code> from the geometry of the main part (<code>part</code>) plus the geometry occupied by the other parts.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/GeometryService#UnionAsync)
     */
    UnionAsync(this: GeometryService, part: Part | PartOperation, parts: ReadonlyArray<Part | PartOperation>, options?: GeometryServiceAsyncMethodConfig): Array<PartOperation>;
}
/**
 * Use with <code>TextService:GetTextBoundsAsync()</code> to measure the size of text.
 *
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/GetTextBoundsParams)
 */
interface GetTextBoundsParams extends Instance {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_GetTextBoundsParams: unique symbol;
    /**
     * The <code>Font</code> of the text being measured.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/GetTextBoundsParams#Font)
     */
    Font: Font;
    /**
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/GetTextBoundsParams#RichText)
     */
    RichText: boolean;
    /**
     * The size of the text being measured.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/GetTextBoundsParams#Size)
     */
    Size: number;
    /**
     * The text being measured.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/GetTextBoundsParams#Text)
     */
    Text: string;
    /**
     * The width of the container for line breaking.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/GetTextBoundsParams#Width)
     */
    Width: number;
}
/**
 * An object that exposes methods to access a single data store.
 *
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/GlobalDataStore)
 */
interface GlobalDataStore extends Instance {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_GlobalDataStore: unique symbol;
    /**
     * <strong>Deprecated:</strong> This function has been deprecated and should not be used in new work. You can use the <code>Cross Server Messaging Service</code> to publish and subscribe to topics to receive near real-time updates, completely replacing the need for this function.<br>Sets a callback function to be executed any time the value associated with a key is changed.
     * @param this An object that exposes methods to access a single data store.
     * @param key The key identifying the entry being retrieved from the data store.
     * @param callback The function to be executed any time the value associated with <strong>key</strong> is changed.
     * @returns The connection to the key being tracked for updates.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/GlobalDataStore#OnUpdate)
     */
    OnUpdate(this: GlobalDataStore, key: string, callback: Callback): RBXScriptConnection;
    /**
     * Returns the value of a key in a specified data store and a <code>DataStoreKeyInfo</code> instance.
     * @param this An object that exposes methods to access a single data store.
     * @param key The key name for which the value is requested. If <code>DataStoreOptions.AllScopes</code> was set to true when accessing the data store through <code>DataStoreService:GetDataStore()</code>, this key name must be prepended with the original scope as in "scope/key".
     * @param options
     * @returns The value of the entry in the data store with the given key and a <code>DataStoreKeyInfo</code> instance that includes the version number, date and time the version was created, and functions to retrieve <code>UserIds</code> and metadata.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/GlobalDataStore#GetAsync)
     */
    readonly GetAsync: unknown;
    /**
     * Increments the value of a key by the provided amount (both must be integers).
     * @param this An object that exposes methods to access a single data store.
     * @param key Key name for which the value should be updated. If <code>DataStoreOptions.AllScopes</code> was set to true when accessing the data store through <code>DataStoreService:GetDataStore()</code>, this key name must be prepended with the original scope as in "scope/key".
     * @param delta Amount to increment the current value by.
     * @param userIds <strong>(Optional)</strong> A table of <code>UserIds</code> to associate with the key.
     * @param options <strong>(Optional)</strong> <code>DataStoreIncrementOptions</code> instance that combines multiple additional parameters as custom metadata and allows for future extensibility.
     * @returns The updated value of the entry in the data store with the given key.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/GlobalDataStore#IncrementAsync)
     */
    readonly IncrementAsync: unknown;
    /**
     * Removes the specified key while also retaining an accessible version.
     * @param this An object that exposes methods to access a single data store.
     * @param key Key name to be removed. If <code>DataStoreOptions.AllScopes</code> was set to true when accessing the data store through <code>DataStoreService:GetDataStore()</code>, this key name must be prepended with the original scope as in "scope/key".
     * @returns The value of the data store prior to deletion and a <code>DataStoreKeyInfo</code> instance that includes the version number, date and time the version was created, and functions to retrieve <code>UserIds</code> and metadata.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/GlobalDataStore#RemoveAsync)
     */
    readonly RemoveAsync: unknown;
    /**
     * Sets the value of the data store for the given key.
     * @param this An object that exposes methods to access a single data store.
     * @param key Key name for which the value should be set. If <code>DataStoreOptions.AllScopes</code> was set to true when accessing the data store through <code>DataStoreService:GetDataStore()</code>, this key name must be prepended with the original scope as in "scope/key".
     * @param value The value that the data store key will be set to.
     * @param userIds Table of <code>UserIds</code>, highly recommended to assist with GDPR tracking/removal.
     * @param options <strong>(Optional)</strong> <code>DataStoreSetOptions</code> instance that allows for metadata specification on the key.
     * @returns The version identifier of the newly created version. It can be used to retrieve key info using <code>GetVersionAsync()</code> or to remove it using <code>RemoveVersionAsync()</code>.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/GlobalDataStore#SetAsync)
     */
    readonly SetAsync: unknown;
    /**
     * Updates a key's value with a new value from the specified callback function.
     * @param this An object that exposes methods to access a single data store.
     * @param key Key name for which the value should be updated. If <code>DataStoreOptions.AllScopes</code> was set to true when accessing the data store through <code>DataStoreService:GetDataStore()</code>, this key name must be prepended with the original scope as in "scope/key".
     * @param transformFunction Transform function that takes the current value and <code>DataStoreKeyInfo</code> as parameters and returns the new value along with optional <code>UserIds</code> and metadata.
     * @returns The updated value of the entry in the data store with the given key and a <code>DataStoreKeyInfo</code> instance that includes the version number, date and time the version was created, and functions to retrieve <code>UserIds</code> and metadata.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/GlobalDataStore#UpdateAsync)
     */
    readonly UpdateAsync: unknown;
}
/**
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/DataStore)
 */
interface DataStore extends GlobalDataStore {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_DataStore: unique symbol;
    /**
     * Retrieves the specified key version.
     * @param this
     * @param key Key name for which the version info is requested. If <code>DataStoreOptions.AllScopes</code> was set to true when accessing the data store through <code>DataStoreService:GetDataStore()</code>, this key name must be prepended with the original scope as in "scope/key".
     * @param version Version number of the key for which the version info is requested.
     * @returns The value of the key at the specified version and a <code>DataStoreKeyInfo</code> instance that includes the version number, date and time the version was created, and functions to retrieve <code>UserIds</code> and metadata.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/DataStore#GetVersionAsync)
     */
    GetVersionAsync(this: DataStore, key: string, version: string): LuaTuple<[
        value: unknown,
        keyInfo: DataStoreKeyInfo
    ]>;
    /**
     * Retrieves the key version that was current at a given time.
     * @param this
     * @param key Key name for which the version info is requested. If <code>DataStoreOptions.AllScopes</code> was set to true when accessing the data store through <code>DataStoreService:GetDataStore()</code>, this key name must be prepended with the original scope as in "scope/key".
     * @param timestamp Unix timestamp in milliseconds for which the requested version was current. Must be greater than zero. Must not be more than ten minutes in the future.
     * @returns The value of the key that was current at the specified time and a <code>DataStoreKeyInfo</code> instance that includes the version number, date and time the version was created, and functions to retrieve <code>UserIds</code> and metadata. <code>nil</code> if no available version was current at the requested time.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/DataStore#GetVersionAtTimeAsync)
     */
    GetVersionAtTimeAsync(this: DataStore, key: string, timestamp: number): unknown;
    /**
     * Returns a <code>DataStoreKeyPages</code> object for enumerating through keys of a data store.
     * @param this
     * @param prefix <strong>(Optional)</strong> Prefix to use for locating keys.
     * @param pageSize <strong>(Optional)</strong> Maximum possible number of items that can be returned.
     * @param cursor <strong>(Optional)</strong> Cursor to continue iteration.
     * @param excludeDeleted <strong>(Optional)</strong> Exclude deleted keys from being returned. When enabled ListKeys will check up to 512 keys. If all checked keys are deleted then it will return an empty list with a cursor to continue iteration.
     * @returns A <code>DataStoreKeyPages</code> instance that enumerates the keys as <code>DataStoreKey</code> instances.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/DataStore#ListKeysAsync)
     */
    ListKeysAsync(this: DataStore, prefix: string, pageSize: number, cursor: string, excludeDeleted?: boolean): DataStoreKeyPages;
    /**
     * Enumerates all versions of a key.
     * @param this
     * @param key Key name for the versions to list. If <code>DataStoreOptions.AllScopes</code> was set to true when accessing the data store through <code>DataStoreService:GetDataStore()</code>, this key name must be prepended with the original scope as in "scope/key".
     * @param sortDirection Enum specifying ascending or descending sort order.
     * @param minDate Unix timestamp in milliseconds after which the versions should be listed.
     * @param maxDate Unix timestamp in milliseconds up to which the versions should be listed.
     * @param pageSize Number of items to be returned in each page.
     * @returns A <code>DataStoreVersionPages</code> instance that enumerates all the versions of the key as <code>DataStoreObjectVersionInfo</code> instances.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/DataStore#ListVersionsAsync)
     */
    ListVersionsAsync(this: DataStore, key: string, sortDirection?: CastsToEnum<Enum.SortDirection>, minDate?: number, maxDate?: number, pageSize?: number): DataStoreVersionPages;
    /**
     * Permanently deletes the specified version of a key.
     * @param this
     * @param key Key name for which a version is to be removed. If <code>DataStoreOptions.AllScopes</code> was set to true when accessing the data store through <code>DataStoreService:GetDataStore()</code>, this key name must be prepended with the original scope as in "scope/key".
     * @param version Version number of the key to remove.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/DataStore#RemoveVersionAsync)
     */
    RemoveVersionAsync(this: DataStore, key: string, version: string): void;
    GetAsync<T>(this: DataStore, key: string, options?: DataStoreGetOptions): LuaTuple<[
        T | undefined,
        DataStoreKeyInfo
    ]>;
    IncrementAsync(this: DataStore, key: string, delta?: number, userIds?: Array<number>, options?: DataStoreIncrementOptions): LuaTuple<[
        number,
        DataStoreKeyInfo
    ]>;
    SetAsync(this: DataStore, key: string, value?: unknown, userIds?: Array<number>, options?: DataStoreSetOptions): string;
    UpdateAsync<O, R>(this: DataStore, key: string, transformFunction: (oldValue: O | undefined, keyInfo: DataStoreKeyInfo | undefined) => LuaTuple<[
        newValue: R | undefined,
        userIds?: Array<number>,
        metadata?: object
    ]>): LuaTuple<[
        newValue: R | undefined,
        keyInfo: DataStoreKeyInfo
    ]>;
    RemoveAsync<T>(this: DataStore, key: string): LuaTuple<[
        T | undefined,
        DataStoreKeyInfo | undefined
    ]>;
}
/**
 * A GlobalDataStore that also allows for ordered data store entries.
 *
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/OrderedDataStore)
 */
interface OrderedDataStore extends GlobalDataStore {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_OrderedDataStore: unique symbol;
    /**
     * Returns a <code>DataStorePages</code> object.
     * @param this A GlobalDataStore that also allows for ordered data store entries.
     * @param ascending A boolean indicating whether the returned data pages are in ascending order.
     * @param pagesize The length of each page. By default is 50. The max allowed value is 100.
     * @param minValue Optional parameter. If set, data pages with a value less than <strong>minValue</strong> will be excluded.
     * @param maxValue Optional parameter. If set, data pages with a value greater than <strong>maxValue</strong> will be excluded.
     * @returns A sorted <code>DataStorePages</code> object based on the provided arguments.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/OrderedDataStore#GetSortedAsync)
     */
    GetSortedAsync(this: OrderedDataStore, ascending: boolean, pagesize: number, minValue?: number, maxValue?: number): DataStorePages;
    GetAsync(this: OrderedDataStore, key: string): number | undefined;
    IncrementAsync(this: OrderedDataStore, key: string, delta?: number): number;
    RemoveAsync(this: OrderedDataStore, key: string): number | undefined;
    SetAsync(this: OrderedDataStore, key: string, value?: unknown): void;
    UpdateAsync(this: OrderedDataStore, key: string, transformFunction: (oldValue: number | undefined) => number | undefined): number | undefined;
}
/**
 * GroupService is a service that allows developers to fetch information about a Roblox group from within a game.
 *
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/GroupService)
 */
interface GroupService extends Instance {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_GroupService: unique symbol;
    /**
     * Returns a <code>StandardPages</code> object including information on all of the specified group's allies.
     * @param this GroupService is a service that allows developers to fetch information about a Roblox group from within a game.
     * @param groupId The group's ID.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/GroupService#GetAlliesAsync)
     */
    GetAlliesAsync(this: GroupService, groupId: number): StandardPages<GroupInfo>;
    /**
     * Returns a <code>StandardPages</code> object including information on all of the specified group's enemies.
     * @param this GroupService is a service that allows developers to fetch information about a Roblox group from within a game.
     * @param groupId The group's ID.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/GroupService#GetEnemiesAsync)
     */
    GetEnemiesAsync(this: GroupService, groupId: number): StandardPages<GroupInfo>;
    /**
     * Returns a table containing information about the given group.
     * @param this GroupService is a service that allows developers to fetch information about a Roblox group from within a game.
     * @param groupId The group ID of the group.
     * @returns A dictionary of information about the group.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/GroupService#GetGroupInfoAsync)
     */
    GetGroupInfoAsync(this: GroupService, groupId: number): GroupInfo;
    /**
     * Returns a list of tables containing information on all of the groups a given player is a member of.
     * @param this GroupService is a service that allows developers to fetch information about a Roblox group from within a game.
     * @param userId The <code>Player.UserId</code> of the user.
     * @returns An array of dictionaries containing information on the group's the <code>Player</code> is a member of.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/GroupService#GetGroupsAsync)
     */
    GetGroupsAsync(this: GroupService, userId: number): Array<GetGroupsAsyncResult>;
}
/**
 * GuiBase is an abstract class which most graphical user interface objects inherit from.
 *
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/GuiBase)
 */
interface GuiBase extends Instance {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_GuiBase: unique symbol;
}
/**
 * An abstract class inherited by 2D <code>GuiObjects</code>.
 *
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/GuiBase2d)
 */
interface GuiBase2d extends GuiBase {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_GuiBase2d: unique symbol;
    /**
     * Describes the actual screen position of a <code>GuiBase2d</code> element, in pixels.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/GuiBase2d#AbsolutePosition)
     */
    readonly AbsolutePosition: Vector2;
    /**
     * Describes the actual screen rotation of a <code>GuiBase2d</code> element, in degrees.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/GuiBase2d#AbsoluteRotation)
     */
    readonly AbsoluteRotation: number;
    /**
     * Describes the actual screen size of a <code>GuiBase2d</code> element, in pixels.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/GuiBase2d#AbsoluteSize)
     */
    readonly AbsoluteSize: Vector2;
    /**
     * When set to <code>true</code>, localization will be applied to this <code>GuiBase2d</code> and its descendants.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/GuiBase2d#AutoLocalize)
     */
    AutoLocalize: boolean;
    /**
     * <strong>Deprecated:</strong> This item is deprecated. Do not use it for new work.<br>Automatically set to true when a localization table's <code>LocalizationTable.Root</code> targets this object, or an ancestor of this object.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/GuiBase2d#Localize)
     */
    Localize: boolean;
    /**
     * A reference to a <code>LocalizationTable</code> to be used to apply automated localization to this <code>GuiBase2d</code> and its descendants.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/GuiBase2d#RootLocalizationTable)
     */
    RootLocalizationTable: LocalizationTable | undefined;
    /**
     * Customizes gamepad selection behavior in the down direction.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/GuiBase2d#SelectionBehaviorDown)
     */
    SelectionBehaviorDown: Enum.SelectionBehavior;
    /**
     * Customizes gamepad selection behavior in the left direction.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/GuiBase2d#SelectionBehaviorLeft)
     */
    SelectionBehaviorLeft: Enum.SelectionBehavior;
    /**
     * Customizes gamepad selection behavior in the right direction.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/GuiBase2d#SelectionBehaviorRight)
     */
    SelectionBehaviorRight: Enum.SelectionBehavior;
    /**
     * Customizes gamepad selection behavior in the up direction.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/GuiBase2d#SelectionBehaviorUp)
     */
    SelectionBehaviorUp: Enum.SelectionBehavior;
    /**
     * Allows customization of gamepad selection movement.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/GuiBase2d#SelectionGroup)
     */
    SelectionGroup: boolean;
    /**
     * Fires when the gamepad selection moves to, leaves, or changes within the connected <code>GuiBase2d</code> or any descendant <code>GuiObjects</code>.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/GuiBase2d#SelectionChanged)
     */
    readonly SelectionChanged: RBXScriptSignal<(amISelected: boolean, previousSelection: GuiObject, newSelection: GuiObject) => void>;
}
/**
 * An abstract class for all 2D user interface objects.
 *
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/GuiObject)
 */
interface GuiObject extends GuiBase2d {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_GuiObject: unique symbol;
    /**
     * Determines whether this UI element sinks input.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/GuiObject#Active)
     */
    Active: boolean;
    /**
     * Determines the origin point of a <code>GuiObject</code>, relative to its absolute size.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/GuiObject#AnchorPoint)
     */
    AnchorPoint: Vector2;
    /**
     * Determines whether resizing occurs based on child content.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/GuiObject#AutomaticSize)
     */
    AutomaticSize: Enum.AutomaticSize;
    /**
     * <strong>Deprecated:</strong> This property is deprecated in favor of the <code>Color3</code> property <code>GuiObject.BackgroundColor3</code>, which should be used in new work instead.<br>Determines the color of the <code>GuiObject</code> background.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/GuiObject#BackgroundColor)
     */
    BackgroundColor: BrickColor;
    /**
     * Determines the <code>GuiObject</code> background color.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/GuiObject#BackgroundColor3)
     */
    BackgroundColor3: Color3;
    /**
     * Determines the transparency of the <code>GuiObject</code> background and border.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/GuiObject#BackgroundTransparency)
     */
    BackgroundTransparency: number;
    /**
     * <strong>Deprecated:</strong> This property is deprecated in favor of the <code>Color3</code> property BorderColor3, which should be used in new work instead.<br>Determines the color of the <code>GuiObject</code> border.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/GuiObject#BorderColor)
     */
    BorderColor: BrickColor;
    /**
     * Determines the color of the <code>GuiObject</code> border.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/GuiObject#BorderColor3)
     */
    BorderColor3: Color3;
    /**
     * Determines in what manner the <code>GuiObject</code> border is laid out relative to its dimensions.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/GuiObject#BorderMode)
     */
    BorderMode: Enum.BorderMode;
    /**
     * Determines the pixel width of the <code>GuiObject</code> border.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/GuiObject#BorderSizePixel)
     */
    BorderSizePixel: number;
    /**
     * Determines if descendant <code>GuiObjects</code> outside of the bounds of a parent GUI element should render.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/GuiObject#ClipsDescendants)
     */
    ClipsDescendants: boolean;
    /**
     * <strong>Deprecated:</strong> This property is deprecated. Use <code>UIDragDetector</code> instead, as it supports more input types and can be better customized.<br>Determines whether a <code>GuiObject</code> (and its descendants) can be dragged around the screen.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/GuiObject#Draggable)
     */
    Draggable: boolean;
    /**
     * Determines whether the player's mouse is being actively pressed on the <code>GuiObject</code> or not.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/GuiObject#GuiState)
     */
    readonly GuiState: Enum.GuiState;
    /**
     * Determines whether the <code>GuiButton</code> can be interacted with or not, or if the <code>GuiState</code> of the <code>GuiObject</code> is changing or not.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/GuiObject#Interactable)
     */
    Interactable: boolean;
    /**
     * Controls the sort order of the <code>GuiObject</code> when used with a <code>UIGridStyleLayout</code>.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/GuiObject#LayoutOrder)
     */
    LayoutOrder: number;
    /**
     * Sets the <code>GuiObject</code> which will be selected when the gamepad selector is moved downward.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/GuiObject#NextSelectionDown)
     */
    NextSelectionDown: GuiObject | undefined;
    /**
     * Sets the <code>GuiObject</code> which will be selected when the gamepad selector is moved to the left.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/GuiObject#NextSelectionLeft)
     */
    NextSelectionLeft: GuiObject | undefined;
    /**
     * Sets the <code>GuiObject</code> which will be selected when the gamepad selector is moved to the right.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/GuiObject#NextSelectionRight)
     */
    NextSelectionRight: GuiObject | undefined;
    /**
     * Sets the <code>GuiObject</code> which will be selected when the gamepad selector is moved upward.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/GuiObject#NextSelectionUp)
     */
    NextSelectionUp: GuiObject | undefined;
    /**
     * Determines the pixel and scalar position of the <code>GuiObject</code>.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/GuiObject#Position)
     */
    Position: UDim2;
    /**
     * Determines the number of degrees by which the <code>GuiObject</code> is rotated.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/GuiObject#Rotation)
     */
    Rotation: number;
    /**
     * Determine whether the <code>GuiObject</code> can be selected by a gamepad.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/GuiObject#Selectable)
     */
    Selectable: boolean;
    /**
     * Overrides the default selection adornment used for gamepads.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/GuiObject#SelectionImageObject)
     */
    SelectionImageObject: GuiObject | undefined;
    /**
     * The order of <code>GuiObjects</code> selected by the gamepad UI selection.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/GuiObject#SelectionOrder)
     */
    SelectionOrder: number;
    /**
     * Determines the pixel and scalar size of the <code>GuiObject</code>.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/GuiObject#Size)
     */
    Size: UDim2;
    /**
     * Sets the <code>Size</code> axes that the <code>GuiObject</code> will be based on, relative to the size of its parent.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/GuiObject#SizeConstraint)
     */
    SizeConstraint: Enum.SizeConstraint;
    /**
     * A mixed property of <code>BackgroundTransparency</code> and <code>TextTransparency</code>.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/GuiObject#Transparency)
     */
    Transparency: number;
    /**
     * Determines whether the <code>GuiObject</code> and its descendants will be rendered.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/GuiObject#Visible)
     */
    Visible: boolean;
    /**
     * Determines the order in which a <code>GuiObject</code> renders relative to others.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/GuiObject#ZIndex)
     */
    ZIndex: number;
    /**
     * Smoothly moves a GUI to a new <code>UDim2</code>.
     * @param this An abstract class for all 2D user interface objects.
     * @param endPosition Where the GUI should move to.
     * @param easingDirection The direction in which to ease the GUI to the <em>endPosition</em>.
     * @param easingStyle The style in which to ease the GUI to the <em>endPosition</em>.
     * @param time How long, in seconds, the tween should take to complete.
     * @param override Whether the tween will override an in-progress tween.
     * @param callback A callback function to execute when the tween completes.
     * @returns Whether the tween will play.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/GuiObject#TweenPosition)
     */
    TweenPosition(this: GuiObject, endPosition: UDim2, easingDirection?: CastsToEnum<Enum.EasingDirection>, easingStyle?: CastsToEnum<Enum.EasingStyle>, time?: number, override?: boolean, callback?: (finishedTween: Enum.TweenStatus) => void): boolean;
    /**
     * Smoothly resizes a <code>GuiObject</code> to a new <code>UDim2</code>.
     * @param this An abstract class for all 2D user interface objects.
     * @param endSize The size that the GUI should resize.
     * @param easingDirection The direction in which to ease the GUI to the <em>endSize</em>.
     * @param easingStyle The style in which to ease the GUI to the <em>endSize</em>.
     * @param time How long, in seconds, the tween should take to complete.
     * @param override Whether the tween will override an in-progress tween.
     * @param callback A callback function to execute when the tween completes.
     * @returns Whether the tween will play.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/GuiObject#TweenSize)
     */
    TweenSize(this: GuiObject, endSize: UDim2, easingDirection?: CastsToEnum<Enum.EasingDirection>, easingStyle?: CastsToEnum<Enum.EasingStyle>, time?: number, override?: boolean, callback?: (finishedTween: Enum.TweenStatus) => void): boolean;
    /**
     * Smoothly moves a GUI to a new size and position.
     * @param this An abstract class for all 2D user interface objects.
     * @param endSize The size that the GUI should resize.
     * @param endPosition Where the GUI should move to.
     * @param easingDirection The direction in which to ease the GUI to the <em>endSize</em> and <em>endPosition</em>.
     * @param easingStyle The style in which to ease the GUI to the <em>endSize</em> and <em>endPosition</em>.
     * @param time How long, in seconds, the tween should take to complete.
     * @param override Whether the tween will override an in-progress tween.
     * @param callback A callback function to execute when the tween completes.
     * @returns Whether the tween will play.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/GuiObject#TweenSizeAndPosition)
     */
    TweenSizeAndPosition(this: GuiObject, endSize: UDim2, endPosition: UDim2, easingDirection?: CastsToEnum<Enum.EasingDirection>, easingStyle?: CastsToEnum<Enum.EasingStyle>, time?: number, override?: boolean, callback?: (finishedTween: Enum.TweenStatus) => void): boolean;
    /**
     * <strong>Deprecated:</strong> This property is deprecated. Use <code>UIDragDetector</code> instead, as it supports more input types and can be better customized.<br>Fired when a player begins dragging the object.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/GuiObject#DragBegin)
     */
    readonly DragBegin: RBXScriptSignal<(initialPosition: UDim2) => void>;
    /**
     * <strong>Deprecated:</strong> This property is deprecated. Use <code>UIDragDetector</code> instead, as it supports more input types and can be better customized.<br>Fired when a player stops dragging the object.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/GuiObject#DragStopped)
     */
    readonly DragStopped: RBXScriptSignal<(x: number, y: number) => void>;
    /**
     * Fired when a user begins interacting via a Human-Computer Interface device (Mouse button down, touch begin, keyboard button down, etc).
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/GuiObject#InputBegan)
     */
    readonly InputBegan: RBXScriptSignal<(input: InputObject) => void>;
    /**
     * Fired when a user changes how they're interacting via a Human-Computer Interface device (Mouse button down, touch begin, keyboard button down, etc).
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/GuiObject#InputChanged)
     */
    readonly InputChanged: RBXScriptSignal<(input: InputObject) => void>;
    /**
     * Fired when a user stops interacting via a Human-Computer Interface device (Mouse button down, touch begin, keyboard button down, etc).
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/GuiObject#InputEnded)
     */
    readonly InputEnded: RBXScriptSignal<(input: InputObject) => void>;
    /**
     * Fires when a user moves their mouse into a GUI element.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/GuiObject#MouseEnter)
     */
    readonly MouseEnter: RBXScriptSignal<(x: number, y: number) => void>;
    /**
     * Fires when a user moves their mouse out of a GUI element.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/GuiObject#MouseLeave)
     */
    readonly MouseLeave: RBXScriptSignal<(x: number, y: number) => void>;
    /**
     * Fires whenever a user moves their mouse while it is inside a GUI element.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/GuiObject#MouseMoved)
     */
    readonly MouseMoved: RBXScriptSignal<(x: number, y: number) => void>;
    /**
     * Fires when a user scrolls their mouse wheel back when the mouse is over a GUI element.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/GuiObject#MouseWheelBackward)
     */
    readonly MouseWheelBackward: RBXScriptSignal<(x: number, y: number) => void>;
    /**
     * Fires when a user scrolls their mouse wheel forward when the mouse is over a GUI element.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/GuiObject#MouseWheelForward)
     */
    readonly MouseWheelForward: RBXScriptSignal<(x: number, y: number) => void>;
    /**
     * Fired when the GuiObject is being focused on with the Gamepad selector.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/GuiObject#SelectionGained)
     */
    readonly SelectionGained: RBXScriptSignal<() => void>;
    /**
     * Fired when the Gamepad selector stops focusing on the GuiObject.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/GuiObject#SelectionLost)
     */
    readonly SelectionLost: RBXScriptSignal<() => void>;
    /**
     * Fires when the player starts, continues and stops long-pressing the UI element.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/GuiObject#TouchLongPress)
     */
    readonly TouchLongPress: RBXScriptSignal<(touchPositions: Array<Vector2>, state: Enum.UserInputState) => void>;
    /**
     * Fires when the player moves their finger on the UI element.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/GuiObject#TouchPan)
     */
    readonly TouchPan: RBXScriptSignal<(touchPositions: Array<Vector2>, totalTranslation: Vector2, velocity: Vector2, state: Enum.UserInputState) => void>;
    /**
     * Fires when the player performs a pinch or pull gesture using two fingers on the UI element.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/GuiObject#TouchPinch)
     */
    readonly TouchPinch: RBXScriptSignal<(touchPositions: Array<Vector2>, scale: number, velocity: number, state: Enum.UserInputState) => void>;
    /**
     * Fires when the player performs a rotation gesture using two fingers on the UI element.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/GuiObject#TouchRotate)
     */
    readonly TouchRotate: RBXScriptSignal<(touchPositions: Array<Vector2>, rotation: number, velocity: number, state: Enum.UserInputState) => void>;
    /**
     * Fires when the player performs a swipe gesture on the UI element.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/GuiObject#TouchSwipe)
     */
    readonly TouchSwipe: RBXScriptSignal<(swipeDirection: Enum.SwipeDirection, numberOfTouches: number) => void>;
    /**
     * Fires when the player performs a tap gesture on the UI element.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/GuiObject#TouchTap)
     */
    readonly TouchTap: RBXScriptSignal<(touchPositions: Array<Vector2>) => void>;
}
/**
 * Blends descendants as a group with color/transparency.
 *
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/CanvasGroup)
 */
interface CanvasGroup extends GuiObject {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_CanvasGroup: unique symbol;
    /**
     * Color tint that applies to all descendants.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/CanvasGroup#GroupColor3)
     */
    GroupColor3: Color3;
    /**
     * Transparency that applies to all descendants.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/CanvasGroup#GroupTransparency)
     */
    GroupTransparency: number;
}
/**
 * A <code>GuiObject</code> that renders as a plain rectangle, generally used as a container.
 *
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Frame)
 */
interface Frame extends GuiObject {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_Frame: unique symbol;
    /**
     * Sets what the frame looks like from a selection of pre-determined styles.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Frame#Style)
     */
    Style: Enum.FrameStyle;
}
/**
 * An abstract class for interactive 2D user interface elements.
 *
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/GuiButton)
 */
interface GuiButton extends GuiObject {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_GuiButton: unique symbol;
    /**
     * Determines whether the button automatically changes color when the mouse hovers over or clicks on it.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/GuiButton#AutoButtonColor)
     */
    AutoButtonColor: boolean;
    /**
     * If <code>true</code> while the GUI element is visible, the mouse will not be locked unless the right mouse button is down.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/GuiButton#Modal)
     */
    Modal: boolean;
    /**
     * A boolean property which indicates whether the object has been selected.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/GuiButton#Selected)
     */
    Selected: boolean;
    /**
     * Sets the style of the <code>GuiButton</code> based on a list of pre-determined styles.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/GuiButton#Style)
     */
    Style: Enum.ButtonStyle;
    /**
     * Fires when the button is activated.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/GuiButton#Activated)
     */
    readonly Activated: RBXScriptSignal<(inputObject: InputObject, clickCount: number) => void>;
    /**
     * Fires when the user's mouse fully left clicks the <code>GuiButton</code>.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/GuiButton#MouseButton1Click)
     */
    readonly MouseButton1Click: RBXScriptSignal<() => void>;
    /**
     * Fires when the user presses their left mouse button down on the <code>GuiButton</code>.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/GuiButton#MouseButton1Down)
     */
    readonly MouseButton1Down: RBXScriptSignal<(x: number, y: number) => void>;
    /**
     * Fires when the user releases their left mouse button off of the <code>GuiButton</code>.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/GuiButton#MouseButton1Up)
     */
    readonly MouseButton1Up: RBXScriptSignal<(x: number, y: number) => void>;
    /**
     * Fires when the user's mouse fully right clicks the <code>GuiButton</code>.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/GuiButton#MouseButton2Click)
     */
    readonly MouseButton2Click: RBXScriptSignal<() => void>;
    /**
     * Fires when the user presses their right mouse button down on the <code>GuiButton</code>.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/GuiButton#MouseButton2Down)
     */
    readonly MouseButton2Down: RBXScriptSignal<(x: number, y: number) => void>;
    /**
     * Fires when the user releases their right mouse button off of the <code>GuiButton</code>.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/GuiButton#MouseButton2Up)
     */
    readonly MouseButton2Up: RBXScriptSignal<(x: number, y: number) => void>;
}
/**
 * A 2D user interface element that displays an interactive image.
 *
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/ImageButton)
 */
interface ImageButton extends GuiButton {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_ImageButton: unique symbol;
    /**
     * A texture ID that will be used when the <code>ImageButton</code> is being hovered.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/ImageButton#HoverImage)
     */
    HoverImage: ContentId;
    /**
     * The image content displayed by the <code>ImageButton</code> element. Reads and writes to <code>ImageContent</code>.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/ImageButton#Image)
     */
    Image: ContentId;
    /**
     * Determines how a rendered image will be colorized.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/ImageButton#ImageColor3)
     */
    ImageColor3: Color3;
    /**
     * The image content displayed by the UI element. Supports asset URIs and <code>EditableImage</code> objects.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/ImageButton#ImageContent)
     */
    ImageContent: Content;
    /**
     * The offset in pixels of the sub-area of an image to be displayed.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/ImageButton#ImageRectOffset)
     */
    ImageRectOffset: Vector2;
    /**
     * Determines the size in pixels of the sub-area of an image to be displayed.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/ImageButton#ImageRectSize)
     */
    ImageRectSize: Vector2;
    /**
     * Determines the transparency of the rendered image.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/ImageButton#ImageTransparency)
     */
    ImageTransparency: number;
    /**
     * Indicates whether the Image has finished loading from the Roblox website.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/ImageButton#IsLoaded)
     */
    readonly IsLoaded: boolean;
    /**
     * A texture ID that will be used when an <code>ImageButton</code> is being pressed.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/ImageButton#PressedImage)
     */
    PressedImage: ContentId;
    /**
     * Selects the image resampling mode for the button.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/ImageButton#ResampleMode)
     */
    ResampleMode: Enum.ResamplerMode;
    /**
     * Determines how an image will scale if displayed in a UI element whose size differs from the source image.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/ImageButton#ScaleType)
     */
    ScaleType: Enum.ScaleType;
    /**
     * Sets the slice boundaries of a 9-sliced image.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/ImageButton#SliceCenter)
     */
    SliceCenter: Rect;
    /**
     * Scales the 9-slice edges by the specified ratio.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/ImageButton#SliceScale)
     */
    SliceScale: number;
    /**
     * Sets the tiling scale of the ImageButton.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/ImageButton#TileSize)
     */
    TileSize: UDim2;
}
/**
 * A 2D user interface element that displays interactive text.
 *
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/TextButton)
 */
interface TextButton extends GuiButton {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_TextButton: unique symbol;
    /**
     * A copy of <code>TextButton.Text</code> that contains exactly what is being rendered by the <code>TextButton</code>.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/TextButton#ContentText)
     */
    readonly ContentText: string;
    /**
     * Determines the font used to render text.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/TextButton#Font)
     */
    Font: Enum.Font;
    /**
     * Determines the font used to render text.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/TextButton#FontFace)
     */
    FontFace: Font;
    /**
     * <strong>Deprecated:</strong> This property is deprecated in favor of <code>TextSize</code> which is an integer and not an enum and thus offers far more options for sizes.<br>Determines the font size to be used.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/TextButton#FontSize)
     */
    FontSize: Enum.FontSize;
    /**
     * Scales the spacing between lines of text in the <code>TextButton</code>.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/TextButton#LineHeight)
     */
    LineHeight: number;
    /**
     * Sets whether a <code>TextButton</code> should be <code>GuiBase2d.Localize</code> or not.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/TextButton#LocalizedText)
     */
    readonly LocalizedText: string;
    /**
     * The maximum number of graphemes the <code>TextButton</code> can show.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/TextButton#MaxVisibleGraphemes)
     */
    MaxVisibleGraphemes: number;
    /**
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/TextButton#OpenTypeFeatures)
     */
    OpenTypeFeatures: string;
    /**
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/TextButton#OpenTypeFeaturesError)
     */
    readonly OpenTypeFeaturesError: string;
    /**
     * Determines whether the <code>TextButton</code> renders its text using rich text formatting.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/TextButton#RichText)
     */
    RichText: boolean;
    /**
     * Determines the string rendered by the <code>TextButton</code>.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/TextButton#Text)
     */
    Text: string;
    /**
     * Read-only property which reflects the absolute size of rendered text in offsets.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/TextButton#TextBounds)
     */
    readonly TextBounds: Vector2;
    /**
     * <strong>Deprecated:</strong> This item has been superseded by <code>TextButton.TextColor3</code> which should be used in all new work.<br>Determines the color of text.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/TextButton#TextColor)
     */
    TextColor: BrickColor;
    /**
     * Determines the color of rendered text.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/TextButton#TextColor3)
     */
    TextColor3: Color3;
    /**
     * Direction in which the text is rendered.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/TextButton#TextDirection)
     */
    TextDirection: Enum.TextDirection;
    /**
     * A boolean representation of whether the button's text fits within the size of it.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/TextButton#TextFits)
     */
    readonly TextFits: boolean;
    /**
     * Changes whether text is resized to fit within the <code>TextButton</code>.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/TextButton#TextScaled)
     */
    TextScaled: boolean;
    /**
     * Determines the line height of text in offsets.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/TextButton#TextSize)
     */
    TextSize: number;
    /**
     * Determines the color of the text stroke (outline).
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/TextButton#TextStrokeColor3)
     */
    TextStrokeColor3: Color3;
    /**
     * Determines the transparency of the text stroke (outline).
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/TextButton#TextStrokeTransparency)
     */
    TextStrokeTransparency: number;
    /**
     * Determines the transparency of rendered text.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/TextButton#TextTransparency)
     */
    TextTransparency: number;
    /**
     * Controls the truncation of the text displayed in the <code>TextButton</code>.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/TextButton#TextTruncate)
     */
    TextTruncate: Enum.TextTruncate;
    /**
     * <strong>Deprecated:</strong> This item has been superseded by <code>TextButton.TextWrapped</code> which should be used in all new work.<br>Determines whether or not text should wrap at the edges of the <code>TextButton</code> element's space.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/TextButton#TextWrap)
     */
    TextWrap: boolean;
    /**
     * Determines if text wraps to multiple lines within the <code>TextButton</code> element's space, truncating excess text.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/TextButton#TextWrapped)
     */
    TextWrapped: boolean;
    /**
     * Determines the horizontal alignment of rendered text.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/TextButton#TextXAlignment)
     */
    TextXAlignment: Enum.TextXAlignment;
    /**
     * Determines the vertical alignment of rendered text.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/TextButton#TextYAlignment)
     */
    TextYAlignment: Enum.TextYAlignment;
}
/**
 * An abstract class for non-interactive 2D user interface elements.
 *
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/GuiLabel)
 */
interface GuiLabel extends GuiObject {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_GuiLabel: unique symbol;
}
/**
 * A 2D user interface element that displays a single non-interactive image.
 *
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/ImageLabel)
 */
interface ImageLabel extends GuiLabel {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_ImageLabel: unique symbol;
    /**
     * The image content displayed by the UI element. Reads and writes to <code>ImageContent</code>.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/ImageLabel#Image)
     */
    Image: ContentId;
    /**
     * Determines how a rendered image will be colorized.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/ImageLabel#ImageColor3)
     */
    ImageColor3: Color3;
    /**
     * The image content displayed by the UI element. Supports <a href="../../../projects/assets/index.md#asset-uris">asset URIs</a> and <code>EditableImage</code> objects.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/ImageLabel#ImageContent)
     */
    ImageContent: Content;
    /**
     * The offset in pixels of the sub-area of an image to be displayed.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/ImageLabel#ImageRectOffset)
     */
    ImageRectOffset: Vector2;
    /**
     * Determines the size in pixels of the sub-area of an image to be displayed.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/ImageLabel#ImageRectSize)
     */
    ImageRectSize: Vector2;
    /**
     * Determines the transparency of the rendered image.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/ImageLabel#ImageTransparency)
     */
    ImageTransparency: number;
    /**
     * Indicates whether the image has finished loading from Roblox.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/ImageLabel#IsLoaded)
     */
    readonly IsLoaded: boolean;
    /**
     * Selects the image resampling mode for the label.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/ImageLabel#ResampleMode)
     */
    ResampleMode: Enum.ResamplerMode;
    /**
     * Determines how an image will scale if displayed in a UI element whose size differs from the source image.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/ImageLabel#ScaleType)
     */
    ScaleType: Enum.ScaleType;
    /**
     * Sets the slice boundaries of a 9-sliced image.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/ImageLabel#SliceCenter)
     */
    SliceCenter: Rect;
    /**
     * Scales the 9-slice edges by the specified ratio.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/ImageLabel#SliceScale)
     */
    SliceScale: number;
    /**
     * Sets the tiling size of the <code>ImageLabel</code>.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/ImageLabel#TileSize)
     */
    TileSize: UDim2;
}
/**
 * A 2D user interface element that displays non-interactive text.
 *
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/TextLabel)
 */
interface TextLabel extends GuiLabel {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_TextLabel: unique symbol;
    /**
     * A copy of <code>TextLabel.Text</code> that contains exactly what is being rendered by the <code>TextLabel</code>.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/TextLabel#ContentText)
     */
    readonly ContentText: string;
    /**
     * Determines the font used to render text.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/TextLabel#Font)
     */
    Font: Enum.Font;
    /**
     * Determines the font used to render text.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/TextLabel#FontFace)
     */
    FontFace: Font;
    /**
     * <strong>Deprecated:</strong> This property is deprecated in favor of <code>TextSize</code> which is an integer and not an enum and thus offers far more options for sizes.<br>Determines the font size to be used.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/TextLabel#FontSize)
     */
    FontSize: Enum.FontSize;
    /**
     * Scales the spacing between lines of text in the <code>TextLabel</code>.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/TextLabel#LineHeight)
     */
    LineHeight: number;
    /**
     * Sets whether a <code>TextLabel</code> should be <code>GuiBase2d.Localize</code> or not.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/TextLabel#LocalizedText)
     */
    readonly LocalizedText: string;
    /**
     * The maximum number of graphemes the <code>TextLabel</code> can show.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/TextLabel#MaxVisibleGraphemes)
     */
    MaxVisibleGraphemes: number;
    /**
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/TextLabel#OpenTypeFeatures)
     */
    OpenTypeFeatures: string;
    /**
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/TextLabel#OpenTypeFeaturesError)
     */
    readonly OpenTypeFeaturesError: string;
    /**
     * Determines whether the <code>TextLabel</code> renders its text using rich text formatting.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/TextLabel#RichText)
     */
    RichText: boolean;
    /**
     * Determines the string rendered by the <code>TextLabel</code>.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/TextLabel#Text)
     */
    Text: string;
    /**
     * Read-only property which reflects the absolute size of rendered text in offsets.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/TextLabel#TextBounds)
     */
    readonly TextBounds: Vector2;
    /**
     * <strong>Deprecated:</strong> This item has been superseded by <code>TextLabel.TextColor3</code> which should be used in all new work.<br>Determines the color of text.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/TextLabel#TextColor)
     */
    TextColor: BrickColor;
    /**
     * Determines the color of rendered text.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/TextLabel#TextColor3)
     */
    TextColor3: Color3;
    /**
     * Direction in which the text is rendered.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/TextLabel#TextDirection)
     */
    TextDirection: Enum.TextDirection;
    /**
     * A boolean representation of whether the label's text fits within the size of it.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/TextLabel#TextFits)
     */
    readonly TextFits: boolean;
    /**
     * Changes whether text is resized to fit within the <code>TextLabel</code>.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/TextLabel#TextScaled)
     */
    TextScaled: boolean;
    /**
     * Determines the line height of text in offsets.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/TextLabel#TextSize)
     */
    TextSize: number;
    /**
     * Determines the color of the text stroke (outline).
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/TextLabel#TextStrokeColor3)
     */
    TextStrokeColor3: Color3;
    /**
     * Determines the transparency of the text stroke (outline).
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/TextLabel#TextStrokeTransparency)
     */
    TextStrokeTransparency: number;
    /**
     * Determines the transparency of rendered text.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/TextLabel#TextTransparency)
     */
    TextTransparency: number;
    /**
     * Controls the truncation of the text displayed in the <code>TextLabel</code>.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/TextLabel#TextTruncate)
     */
    TextTruncate: Enum.TextTruncate;
    /**
     * <strong>Deprecated:</strong> This property is simply an alias for <code>TextWrapped</code>. Use the past-tense version instead.<br>Determines whether or not text should wrap at the edges of the <code>TextLabel</code> element's space.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/TextLabel#TextWrap)
     */
    TextWrap: boolean;
    /**
     * Determines if text wraps to multiple lines within the <code>TextLabel</code> element's space, truncating excess text.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/TextLabel#TextWrapped)
     */
    TextWrapped: boolean;
    /**
     * Determines the horizontal alignment of rendered text.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/TextLabel#TextXAlignment)
     */
    TextXAlignment: Enum.TextXAlignment;
    /**
     * Determines the vertical alignment of rendered text.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/TextLabel#TextYAlignment)
     */
    TextYAlignment: Enum.TextYAlignment;
}
/**
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/RelativeGui)
 */
interface RelativeGui extends GuiObject {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_RelativeGui: unique symbol;
}
/**
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/ScrollingFrame)
 */
interface ScrollingFrame extends GuiObject {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_ScrollingFrame: unique symbol;
    /**
     * The size in offsets of the area that is scrollable.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/ScrollingFrame#AbsoluteCanvasSize)
     */
    readonly AbsoluteCanvasSize: Vector2;
    /**
     * The size in offsets of the frame, without the scrollbars.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/ScrollingFrame#AbsoluteWindowSize)
     */
    readonly AbsoluteWindowSize: Vector2;
    /**
     * Determines whether <code>ScrollingFrame.CanvasSize</code> is resized based on child content.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/ScrollingFrame#AutomaticCanvasSize)
     */
    AutomaticCanvasSize: Enum.AutomaticSize;
    /**
     * The Down image on the vertical scrollbar. Size of this is always ScrollBarThickness by ScrollBarThickness. This is also used as the image on the horizontal scroll bar.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/ScrollingFrame#BottomImage)
     */
    BottomImage: ContentId;
    /**
     * The location within the canvas, in offsets, that should be drawn at the top left of the scroll frame.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/ScrollingFrame#CanvasPosition)
     */
    CanvasPosition: Vector2;
    /**
     * Determines the size of the area that is scrollable. The UDim2 is calculated using the parent gui's size, similar to the regular Size property on gui objects.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/ScrollingFrame#CanvasSize)
     */
    CanvasSize: UDim2;
    /**
     * Determines when elastic scrolling is allowed.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/ScrollingFrame#ElasticBehavior)
     */
    ElasticBehavior: Enum.ElasticBehavior;
    /**
     * Indicates the inset behavior of the horizontal scrolling bar.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/ScrollingFrame#HorizontalScrollBarInset)
     */
    HorizontalScrollBarInset: Enum.ScrollBarInset;
    /**
     * The middle image on the vertical scrollbar. The size of this can vary in the y direction, but is always set as <code>ScrollingFrame.ScrollBarThickness</code> in the x direction. This is also used as the middle image on the horizontal scroll bar.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/ScrollingFrame#MidImage)
     */
    MidImage: ContentId;
    /**
     * Determines how a rendered scroll bar image will be colorized.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/ScrollingFrame#ScrollBarImageColor3)
     */
    ScrollBarImageColor3: Color3;
    /**
     * Determines the transparency of the rendered scroll bar image.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/ScrollingFrame#ScrollBarImageTransparency)
     */
    ScrollBarImageTransparency: number;
    /**
     * How thick the scroll bar appears. This applies to both the horizontal and vertical scroll bars. If set to 0, no scroll bars are rendered.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/ScrollingFrame#ScrollBarThickness)
     */
    ScrollBarThickness: number;
    /**
     * Determines the direction scrolling is allowed in this scrolling frame.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/ScrollingFrame#ScrollingDirection)
     */
    ScrollingDirection: Enum.ScrollingDirection;
    /**
     * Determines whether or not scrolling is allowed on the frame. If false, no scroll bars will be rendered.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/ScrollingFrame#ScrollingEnabled)
     */
    ScrollingEnabled: boolean;
    /**
     * The Up image on the vertical scrollbar. The size of this is always ScrollBarThickness by ScrollBarThickness. This is also used as the left image on the horizontal scroll bar.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/ScrollingFrame#TopImage)
     */
    TopImage: ContentId;
    /**
     * Indicates the inset behavior of the vertical scrolling bar.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/ScrollingFrame#VerticalScrollBarInset)
     */
    VerticalScrollBarInset: Enum.ScrollBarInset;
    /**
     * Indicates the side that the vertical scrollbar will be located at.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/ScrollingFrame#VerticalScrollBarPosition)
     */
    VerticalScrollBarPosition: Enum.VerticalScrollBarPosition;
}
/**
 * A 2D user interface element that displays player-editable text.
 *
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/TextBox)
 */
interface TextBox extends GuiObject {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_TextBox: unique symbol;
    /**
     * Determines whether clicking on the TextBox will clear its <code>TextBox.Text</code> property.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/TextBox#ClearTextOnFocus)
     */
    ClearTextOnFocus: boolean;
    /**
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/TextBox#ContentText)
     */
    readonly ContentText: string;
    /**
     * Determines the offset of the text cursor in bytes, or <code>-1</code> if there is no cursor.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/TextBox#CursorPosition)
     */
    CursorPosition: number;
    /**
     * Determines the font used to render text.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/TextBox#Font)
     */
    Font: Enum.Font;
    /**
     * Determines the font used to render text.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/TextBox#FontFace)
     */
    FontFace: Font;
    /**
     * <strong>Deprecated:</strong> This item has been superseded by <code>TextBox.TextSize</code> which should be used in all new work.<br>Determines the font size of a <code>TextBox</code> object.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/TextBox#FontSize)
     */
    FontSize: Enum.FontSize;
    /**
     * Scales the spacing between lines of text in the <code>TextBox</code>.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/TextBox#LineHeight)
     */
    LineHeight: number;
    /**
     * The maximum number of graphemes the <code>TextBox</code> can show.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/TextBox#MaxVisibleGraphemes)
     */
    MaxVisibleGraphemes: number;
    /**
     * When set to true, text inside a TextBox is able to move onto multiple lines. This also enables players to use the enter key to move onto a new line.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/TextBox#MultiLine)
     */
    MultiLine: boolean;
    /**
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/TextBox#OpenTypeFeatures)
     */
    OpenTypeFeatures: string;
    /**
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/TextBox#OpenTypeFeaturesError)
     */
    readonly OpenTypeFeaturesError: string;
    /**
     * Sets the text color that gets used when no text has been entered into the TextBox yet.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/TextBox#PlaceholderColor3)
     */
    PlaceholderColor3: Color3;
    /**
     * Sets the text that gets displayed when no text has been entered into the TextBox yet.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/TextBox#PlaceholderText)
     */
    PlaceholderText: string;
    /**
     * Determines whether the TextBox renders the <code>TextBox.Text</code> string using rich text formatting.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/TextBox#RichText)
     */
    RichText: boolean;
    /**
     * Determines the starting position of a text selection, or -1 if no text is selected.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/TextBox#SelectionStart)
     */
    SelectionStart: number;
    /**
     * If set to true, input native to the platform is used instead of Roblox's built-in keyboard.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/TextBox#ShowNativeInput)
     */
    ShowNativeInput: boolean;
    /**
     * Determines the string rendered by the UI element.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/TextBox#Text)
     */
    Text: string;
    /**
     * The size of a UI element's text in offsets.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/TextBox#TextBounds)
     */
    readonly TextBounds: Vector2;
    /**
     * <strong>Deprecated:</strong> This item has been superseded by <code>TextBox.TextColor3</code> which should be used in all new work.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/TextBox#TextColor)
     */
    TextColor: BrickColor;
    /**
     * Determines the color of rendered text.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/TextBox#TextColor3)
     */
    TextColor3: Color3;
    /**
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/TextBox#TextDirection)
     */
    TextDirection: Enum.TextDirection;
    /**
     * Determines whether the user can change the <code>Text</code>.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/TextBox#TextEditable)
     */
    TextEditable: boolean;
    /**
     * Whether the text fits within the constraints of the TextBox.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/TextBox#TextFits)
     */
    readonly TextFits: boolean;
    /**
     * Changes whether text is resized to fit the GUI object that renders it.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/TextBox#TextScaled)
     */
    TextScaled: boolean;
    /**
     * Determine the line height of text in offsets.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/TextBox#TextSize)
     */
    TextSize: number;
    /**
     * Determines the color of the text stroke (outline).
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/TextBox#TextStrokeColor3)
     */
    TextStrokeColor3: Color3;
    /**
     * Determines the transparency of the text stroke (outline).
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/TextBox#TextStrokeTransparency)
     */
    TextStrokeTransparency: number;
    /**
     * Determines the transparency of rendered text.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/TextBox#TextTransparency)
     */
    TextTransparency: number;
    /**
     * Controls the truncation of the text displayed in this TextBox.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/TextBox#TextTruncate)
     */
    TextTruncate: Enum.TextTruncate;
    /**
     * <strong>Deprecated:</strong> This item has been superseded by <code>TextBox.TextWrapped</code> which should be used in all new work.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/TextBox#TextWrap)
     */
    TextWrap: boolean;
    /**
     * Determines if text wraps to multiple lines within the <code>GuiObject</code> element space, truncating excess text.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/TextBox#TextWrapped)
     */
    TextWrapped: boolean;
    /**
     * Determines the horizontal alignment of rendered text.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/TextBox#TextXAlignment)
     */
    TextXAlignment: Enum.TextXAlignment;
    /**
     * Determines the vertical alignment of rendered text.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/TextBox#TextYAlignment)
     */
    TextYAlignment: Enum.TextYAlignment;
    /**
     * Forces the client to focus on the TextBox.
     * @param this A 2D user interface element that displays player-editable text.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/TextBox#CaptureFocus)
     */
    CaptureFocus(this: TextBox): void;
    /**
     * Returns true if the textbox is focused, or false if it is not.
     * @param this A 2D user interface element that displays player-editable text.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/TextBox#IsFocused)
     */
    IsFocused(this: TextBox): boolean;
    /**
     * Forces the client to unfocus the TextBox.
     * @param this A 2D user interface element that displays player-editable text.
     * @param submitted
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/TextBox#ReleaseFocus)
     */
    ReleaseFocus(this: TextBox, submitted?: boolean): void;
    /**
     * Fires when the client lets their focus leave the <code>TextBox</code>.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/TextBox#FocusLost)
     */
    readonly FocusLost: RBXScriptSignal<(enterPressed: boolean, inputThatCausedFocusLoss: InputObject) => void>;
    /**
     * Fires when the <code>TextBox</code> gains focus.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/TextBox#Focused)
     */
    readonly Focused: RBXScriptSignal<() => void>;
    /**
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/TextBox#ReturnPressedFromOnScreenKeyboard)
     */
    readonly ReturnPressedFromOnScreenKeyboard: RBXScriptSignal<() => void>;
}
/**
 * A GUI object that renders a rectangle, like a <code>Frame</code> does, with a moving video image.
 *
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/VideoFrame)
 */
interface VideoFrame extends GuiObject {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_VideoFrame: unique symbol;
    /**
     * Indicates when the <code>VideoFrame.Video</code> has loaded from Roblox servers and is ready to play.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/VideoFrame#IsLoaded)
     */
    readonly IsLoaded: boolean;
    /**
     * Sets whether or not the <code>VideoFrame.Video</code> repeats once it has finished when it is playing.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/VideoFrame#Looped)
     */
    Looped: boolean;
    /**
     * Indicates whether the <code>VideoFrame.Video</code> is currently playing. It can be set to start or pause playback.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/VideoFrame#Playing)
     */
    Playing: boolean;
    /**
     * Gets the original source resolution of the <code>VideoFrame.Video</code> file.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/VideoFrame#Resolution)
     */
    readonly Resolution: Vector2;
    /**
     * Indicates the length of the <code>VideoFrame.Video</code> in seconds.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/VideoFrame#TimeLength)
     */
    readonly TimeLength: number;
    /**
     * Indicates the progress in seconds of the <code>VideoFrame.Video</code>.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/VideoFrame#TimePosition)
     */
    TimePosition: number;
    /**
     * The content ID of the video file a <code>VideoFrame</code> object is associated with.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/VideoFrame#Video)
     */
    Video: ContentId;
    /**
     * Indicates how loud the <code>VideoFrame.Video</code> is currently playing back.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/VideoFrame#Volume)
     */
    Volume: number;
    /**
     * Sets <code>VideoFrame.Playing</code> to false, pausing playback if the <code>VideoFrame.Video</code> is playing.
     * @param this A GUI object that renders a rectangle, like a <code>Frame</code> does, with a moving video image.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/VideoFrame#Pause)
     */
    Pause(this: VideoFrame): void;
    /**
     * Sets <code>VideoFrame.Playing</code> to true, playing the <code>VideoFrame.Video</code> from the current <code>VideoFrame.TimePosition</code>.
     * @param this A GUI object that renders a rectangle, like a <code>Frame</code> does, with a moving video image.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/VideoFrame#Play)
     */
    Play(this: VideoFrame): void;
    /**
     * Fires whenever the <code>VideoFrame.Video</code> loops.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/VideoFrame#DidLoop)
     */
    readonly DidLoop: RBXScriptSignal<(video: string) => void>;
    /**
     * Fires when the <code>VideoFrame.Video</code> has completed playback and stopped.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/VideoFrame#Ended)
     */
    readonly Ended: RBXScriptSignal<(video: string) => void>;
    /**
     * Fires when the <code>VideoFrame.Video</code> is loaded.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/VideoFrame#Loaded)
     */
    readonly Loaded: RBXScriptSignal<(video: string) => void>;
    /**
     * This event fires whenever the <code>VideoFrame.Video</code> is paused using <code>VideoFrame:Pause()</code> or by setting <code>VideoFrame.Playing</code> to false.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/VideoFrame#Paused)
     */
    readonly Paused: RBXScriptSignal<(video: string) => void>;
    /**
     * Fires whenever the <code>VideoFrame.Video</code> is played using the <code>VideoFrame:Play()</code> function or by setting <code>VideoFrame.Playing</code> to true.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/VideoFrame#Played)
     */
    readonly Played: RBXScriptSignal<(video: string) => void>;
}
/**
 * <code>GuiObject</code> that can display children 3D objects.
 *
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/ViewportFrame)
 */
interface ViewportFrame extends GuiObject {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_ViewportFrame: unique symbol;
    /**
     * The lighting hue applied to the area within the <code>ViewportFrame</code>.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/ViewportFrame#Ambient)
     */
    Ambient: Color3;
    /**
     * <code>Camera</code> that is used to render children objects.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/ViewportFrame#CurrentCamera)
     */
    CurrentCamera: Camera | undefined;
    /**
     * Determines how a rendered image will be colorized.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/ViewportFrame#ImageColor3)
     */
    ImageColor3: Color3;
    /**
     * Determines the transparency of the rendered image.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/ViewportFrame#ImageTransparency)
     */
    ImageTransparency: number;
    /**
     * The color of the emitted light.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/ViewportFrame#LightColor)
     */
    LightColor: Color3;
    /**
     * A <code>Vector3</code> representing the direction of the light source.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/ViewportFrame#LightDirection)
     */
    LightDirection: Vector3;
}
/**
 * The base class of 2D UI containers which render <code>GuiObjects</code> in layers.
 *
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/LayerCollector)
 */
interface LayerCollector extends GuiBase2d {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_LayerCollector: unique symbol;
    /**
     * Toggles the visibility of this <code>LayerCollector</code>.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/LayerCollector#Enabled)
     */
    Enabled: boolean;
    /**
     * Determines if the <code>LayerCollector</code> resets (deletes itself and re-clones into the player's <code>PlayerGui</code>) every time the player's character respawns.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/LayerCollector#ResetOnSpawn)
     */
    ResetOnSpawn: boolean;
    /**
     * Controls how <code>GuiObject.ZIndex</code> behaves on all descendants of this <code>LayerCollector</code>.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/LayerCollector#ZIndexBehavior)
     */
    ZIndexBehavior: Enum.ZIndexBehavior;
}
/**
 * A container for <code>GuiObjects</code> that renders in 3D space facing the camera.
 *
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/BillboardGui)
 */
interface BillboardGui extends LayerCollector {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_BillboardGui: unique symbol;
    /**
     * Controls whether the descendants will receive input events.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/BillboardGui#Active)
     */
    Active: boolean;
    /**
     * Sets the target part or attachment that the <code>BillboardGui</code> is positioned relative to.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/BillboardGui#Adornee)
     */
    Adornee: PVInstance | Attachment | undefined;
    /**
     * Determines whether the <code>BillboardGui</code> will always be rendered on top of other 3D objects.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/BillboardGui#AlwaysOnTop)
     */
    AlwaysOnTop: boolean;
    /**
     * Determines the factor by which the <code>BillboardGui</code> container's light is scaled when <code>LightInfluence</code> is <code>0</code>.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/BillboardGui#Brightness)
     */
    Brightness: number;
    /**
     * Whether portions of <code>GuiObjects</code> that fall outside of the <code>BillboardGui</code> canvas borders will be drawn.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/BillboardGui#ClipsDescendants)
     */
    ClipsDescendants: boolean;
    /**
     * The current distance in studs that the <code>BillboardGui</code> is from the player's camera.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/BillboardGui#CurrentDistance)
     */
    readonly CurrentDistance: number;
    /**
     * Determines the distance in studs at which the <code>BillboardGui</code> will stop scaling larger in size.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/BillboardGui#DistanceLowerLimit)
     */
    DistanceLowerLimit: number;
    /**
     * Determines the size <code>CurrentDistance</code> increments and decrements in studs as the player's camera moves closer and further from the <code>BillboardGui</code>.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/BillboardGui#DistanceStep)
     */
    DistanceStep: number;
    /**
     * Determines the distance in studs at which the <code>BillboardGui</code> will stop scaling smaller in size.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/BillboardGui#DistanceUpperLimit)
     */
    DistanceUpperLimit: number;
    /**
     * Determines how the <code>BillboardGui</code> is offset from its <code>Adornee</code>, relative to the <code>Camera</code> orientation, in units half the dimensions of the model's <code>Camera</code>-aligned bounding box.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/BillboardGui#ExtentsOffset)
     */
    ExtentsOffset: Vector3;
    /**
     * Determines how the <code>BillboardGui</code> is offset from its <code>Adornee</code>, relative to the global axes, in units half the dimensions of the model's axis-aligned bounding box.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/BillboardGui#ExtentsOffsetWorldSpace)
     */
    ExtentsOffsetWorldSpace: Vector3;
    /**
     * Controls how much the <code>BillboardGui</code> is influenced by environmental lighting.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/BillboardGui#LightInfluence)
     */
    LightInfluence: number;
    /**
     * Controls how far away the <code>BillboardGui</code> can be displayed before it stops rendering.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/BillboardGui#MaxDistance)
     */
    MaxDistance: number;
    /**
     * Used by scripts to hide the <code>BillboardGui</code> from a specific player.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/BillboardGui#PlayerToHideFrom)
     */
    PlayerToHideFrom: Player | undefined;
    /**
     * Controls the size that the <code>BillboardGui</code> will have on screen.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/BillboardGui#Size)
     */
    Size: UDim2;
    /**
     * A 2D offset in size-relative units that acts like an anchor point.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/BillboardGui#SizeOffset)
     */
    SizeOffset: Vector2;
    /**
     * Determines how the <code>BillboardGui</code> is offset from its <code>Adornee</code> in studs, relative to the <code>Camera</code> orientation.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/BillboardGui#StudsOffset)
     */
    StudsOffset: Vector3;
    /**
     * Determines how the <code>BillboardGui</code> is offset from its <code>Adornee</code> in studs, relative to the global axes.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/BillboardGui#StudsOffsetWorldSpace)
     */
    StudsOffsetWorldSpace: Vector3;
}
/**
 * Primary container of on-screen 2D user interface elements.
 *
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/ScreenGui)
 */
interface ScreenGui extends LayerCollector {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_ScreenGui: unique symbol;
    /**
     * Whether to clip the contents of this <code>ScreenGui</code> to the device's safe area.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/ScreenGui#ClipToDeviceSafeArea)
     */
    ClipToDeviceSafeArea: boolean;
    /**
     * Controls the Z-index order in which multiple <code>ScreenGui</code> containers are drawn.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/ScreenGui#DisplayOrder)
     */
    DisplayOrder: number;
    /**
     * Determines whether the <code>ScreenGui</code> overflows into the range of Roblox's core UI elements.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/ScreenGui#IgnoreGuiInset)
     */
    IgnoreGuiInset: boolean;
    /**
     * Specifies whether automatic UI compatibility transformations are applied to descendant "fullscreen" <code>GuiObjects</code> on displays with screen cutouts.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/ScreenGui#SafeAreaCompatibility)
     */
    SafeAreaCompatibility: Enum.SafeAreaCompatibility;
    /**
     * Controls the safe area insets that are applied to the contents of the <code>ScreenGui</code>.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/ScreenGui#ScreenInsets)
     */
    ScreenInsets: Enum.ScreenInsets;
}
/**
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/SurfaceGuiBase)
 */
interface SurfaceGuiBase extends LayerCollector {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_SurfaceGuiBase: unique symbol;
    /**
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/SurfaceGuiBase#Active)
     */
    Active: boolean;
    /**
     * <code>BasePart</code> on which to apply the <code>SurfaceGui</code>, overriding the default parent association.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/SurfaceGuiBase#Adornee)
     */
    Adornee: BasePart | undefined;
    /**
     * <code>NormalId</code> face upon which to apply the <code>SurfaceGui</code>.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/SurfaceGuiBase#Face)
     */
    Face: Enum.NormalId;
}
/**
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/AdGui)
 */
interface AdGui extends SurfaceGuiBase {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_AdGui: unique symbol;
    /**
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/AdGui#AdShape)
     */
    AdShape: Enum.AdShape;
    /**
     * Enables the AdGui to serve video ads.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/AdGui#EnableVideoAds)
     */
    EnableVideoAds: boolean;
    /**
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/AdGui#FallbackImage)
     */
    FallbackImage: ContentId;
    /**
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/AdGui#Status)
     */
    readonly Status: Enum.AdUnitStatus;
    /**
     * Used to react to the AdGui events.
     * @param eventInfo Options table for the method: <ul> <li><code>PlayerId</code> – The user ID of the player related to the ad event.</li> <li><code>AdEventType</code> – A <code>AdEventType</code> enum value describing the AdGui   events.</li> </ul>
     * @returns Whether the callback has successfully reacted to the event.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/AdGui#OnAdEvent)
     */
    OnAdEvent: ((eventInfo: object) => boolean) | undefined;
}
/**
 * Container for GuiObjects that are rendered on the surface of a part.
 *
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/SurfaceGui)
 */
interface SurfaceGui extends SurfaceGuiBase {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_SurfaceGui: unique symbol;
    /**
     * Determines whether the <code>SurfaceGui</code> will always be rendered on top of other 3D objects.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/SurfaceGui#AlwaysOnTop)
     */
    AlwaysOnTop: boolean;
    /**
     * Determines the factor by which the <code>SurfaceGui</code> container's light is scaled when <code>LightInfluence</code> is <code>0</code>.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/SurfaceGui#Brightness)
     */
    Brightness: number;
    /**
     * The size of a "virtual screen" in "virtual pixels" which makes <code>SurfaceGuis</code> pixel-to-pixel compatible with <code>ScreenGuis</code>.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/SurfaceGui#CanvasSize)
     */
    CanvasSize: Vector2;
    /**
     * Whether portions of <code>GuiObjects</code> that fall outside of the <code>SurfaceGui</code> canvas borders will be drawn.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/SurfaceGui#ClipsDescendants)
     */
    ClipsDescendants: boolean;
    /**
     * Controls how much the <code>SurfaceGui</code> is influenced by environmental lighting.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/SurfaceGui#LightInfluence)
     */
    LightInfluence: number;
    /**
     * Controls how far away the <code>SurfaceGui</code> can be displayed before it stops rendering.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/SurfaceGui#MaxDistance)
     */
    MaxDistance: number;
    /**
     * Determines the density of pixels used for each world-space stud to render the contents of the <code>SurfaceGui</code>.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/SurfaceGui#PixelsPerStud)
     */
    PixelsPerStud: number;
    /**
     * Determines whether the <code>SurfaceGui</code> will render at a fixed size or scale with its size in studs.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/SurfaceGui#SizingMode)
     */
    SizingMode: Enum.SurfaceGuiSizingMode;
    /**
     * Sets the distance in which left clicking starts acting on the <code>SurfaceGui</code> instead of for the held <code>Tool</code>.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/SurfaceGui#ToolPunchThroughDistance)
     */
    ToolPunchThroughDistance: number;
    /**
     * Layers this <code>SurfaceGui</code> in relation to other <code>SurfaceGuis</code> on the same face.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/SurfaceGui#ZOffset)
     */
    ZOffset: number;
}
/**
 * An abstract class for 3D GUI elements that are rendered in the world.
 *
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/GuiBase3d)
 */
interface GuiBase3d extends GuiBase {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_GuiBase3d: unique symbol;
    /**
     * Sets the color of a GUI object.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/GuiBase3d#Color3)
     */
    Color3: Color3;
    /**
     * Sets the transparency of a GUI object, where 1 is invisible and 0 is completely visible.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/GuiBase3d#Transparency)
     */
    Transparency: number;
    /**
     * Determines whether the object and its descendants will be displayed.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/GuiBase3d#Visible)
     */
    Visible: boolean;
}
/**
 * <strong>Deprecated:</strong> The FloorWire object has been deprecated and should not be used in new work.<br>A FloorWire attempts to make a wire from two of its properties: <code>FloorWire.From</code> and <code>FloorWire.From</code>, which both need to be set to a <code>BasePart</code>.
 *
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/FloorWire)
 */
interface FloorWire extends GuiBase3d {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_FloorWire: unique symbol;
    /**
     * A decimal number between 0 and 1, through which you can control how far all of the decals are along the wire.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/FloorWire#CycleOffset)
     */
    CycleOffset: number;
    /**
     * The object that the FloorWire travels from.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/FloorWire#From)
     */
    From: BasePart | undefined;
    /**
     * The number of studs between each FloorWire segment.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/FloorWire#StudsBetweenTextures)
     */
    StudsBetweenTextures: number;
    /**
     * Sets the texture to be displayed on the FloorWire.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/FloorWire#Texture)
     */
    Texture: ContentId;
    /**
     * Sets the size of the texture used with the FloorWire.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/FloorWire#TextureSize)
     */
    TextureSize: Vector2;
    /**
     * The object that the FloorWire travels to.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/FloorWire#To)
     */
    To: BasePart | undefined;
    /**
     * The speed that the textures flow along the wire.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/FloorWire#Velocity)
     */
    Velocity: number;
    /**
     * The radius of the wire.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/FloorWire#WireRadius)
     */
    WireRadius: number;
}
/**
 * A base class for all objects that adorn <code>Instance</code> classes.
 *
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/InstanceAdornment)
 */
interface InstanceAdornment extends GuiBase3d {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_InstanceAdornment: unique symbol;
    /**
     * Which <code>Instance</code> to adorn.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/InstanceAdornment#Adornee)
     */
    Adornee: Instance | undefined;
}
/**
 * Renders a 3D box around its <code>Adornee</code>.
 *
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/SelectionBox)
 */
interface SelectionBox extends InstanceAdornment {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_SelectionBox: unique symbol;
    /**
     * Determines the thickness of the boxes outlines, in studs.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/SelectionBox#LineThickness)
     */
    LineThickness: number;
    /**
     * <strong>Deprecated:</strong> This property is deprecated in favor of <code>SurfaceColor3</code> which uses the more precise <code>Color3</code> data type instead of a <code>BrickColor</code> used by this property.<br>A <code>BrickColor</code> version of <code>SurfaceColor3</code>.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/SelectionBox#SurfaceColor)
     */
    SurfaceColor: BrickColor;
    /**
     * Determines the color of the box's surfaces.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/SelectionBox#SurfaceColor3)
     */
    SurfaceColor3: Color3;
    /**
     * Determines the transparency of the box's surfaces.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/SelectionBox#SurfaceTransparency)
     */
    SurfaceTransparency: number;
}
/**
 * The PVAdornment class is an abstract class of which the inheritors can be adorned to objects of the PVInstance class.
 *
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/PVAdornment)
 */
interface PVAdornment extends GuiBase3d {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_PVAdornment: unique symbol;
    /**
     * The <code>PVInstance</code> the PVAdornment is attached to.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/PVAdornment#Adornee)
     */
    Adornee: PVInstance | undefined;
}
/**
 * HandleAdornment is an abstract class inherited by 3D handle adornments.
 *
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/HandleAdornment)
 */
interface HandleAdornment extends PVAdornment {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_HandleAdornment: unique symbol;
    /**
     * Determines whether to automatically cull the adornment.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/HandleAdornment#AdornCullingMode)
     */
    AdornCullingMode: Enum.AdornCullingMode;
    /**
     * Forces this object to render on top of all 3D objects in the workspace.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/HandleAdornment#AlwaysOnTop)
     */
    AlwaysOnTop: boolean;
    /**
     * The position and rotation of the object relative to its <code>PVAdornment.Adornee</code>.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/HandleAdornment#CFrame)
     */
    CFrame: CFrame;
    /**
     * The positional offset of the adornment based on the adornee's <code>BasePart.Size</code>.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/HandleAdornment#SizeRelativeOffset)
     */
    SizeRelativeOffset: Vector3;
    /**
     * Determines the draw order of the <code>HandleAdornment</code>.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/HandleAdornment#ZIndex)
     */
    ZIndex: number;
    /**
     * Fires when a user presses down on their left mouse button while hovering over the adornment.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/HandleAdornment#MouseButton1Down)
     */
    readonly MouseButton1Down: RBXScriptSignal<() => void>;
    /**
     * Fires when a user releases their left mouse button while hovering over the adornment.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/HandleAdornment#MouseButton1Up)
     */
    readonly MouseButton1Up: RBXScriptSignal<() => void>;
    /**
     * Fires when a user moves their mouse over the adornment.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/HandleAdornment#MouseEnter)
     */
    readonly MouseEnter: RBXScriptSignal<() => void>;
    /**
     * Fires when a user moves their mouse out of the adornment.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/HandleAdornment#MouseLeave)
     */
    readonly MouseLeave: RBXScriptSignal<() => void>;
}
/**
 * A box that can be adorned to a <code>BasePart</code>.
 *
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/BoxHandleAdornment)
 */
interface BoxHandleAdornment extends HandleAdornment {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_BoxHandleAdornment: unique symbol;
    /**
     * The size of the adornment.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/BoxHandleAdornment#Size)
     */
    Size: Vector3;
}
/**
 * A cone that can be adorned to a <code>BasePart</code>.
 *
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/ConeHandleAdornment)
 */
interface ConeHandleAdornment extends HandleAdornment {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_ConeHandleAdornment: unique symbol;
    /**
     * The height of the cone adornment.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/ConeHandleAdornment#Height)
     */
    Height: number;
    /**
     * The radius of the cone adornment.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/ConeHandleAdornment#Radius)
     */
    Radius: number;
}
/**
 * A cylinder that can be adorned to a <code>BasePart</code>.
 *
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/CylinderHandleAdornment)
 */
interface CylinderHandleAdornment extends HandleAdornment {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_CylinderHandleAdornment: unique symbol;
    /**
     * Angle of cylindrical sector (pie-slice).
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/CylinderHandleAdornment#Angle)
     */
    Angle: number;
    /**
     * The height of the cylinder adornment.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/CylinderHandleAdornment#Height)
     */
    Height: number;
    /**
     * Inner radius of a hollow cylinder.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/CylinderHandleAdornment#InnerRadius)
     */
    InnerRadius: number;
    /**
     * The radius of the cylinder adornment.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/CylinderHandleAdornment#Radius)
     */
    Radius: number;
}
/**
 * An image that can be adorned to a <code>BasePart</code>.
 *
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/ImageHandleAdornment)
 */
interface ImageHandleAdornment extends HandleAdornment {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_ImageHandleAdornment: unique symbol;
    /**
     * The image to draw for the adornment.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/ImageHandleAdornment#Image)
     */
    Image: ContentId;
    /**
     * The size in studs of the image.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/ImageHandleAdornment#Size)
     */
    Size: Vector2;
}
/**
 * A line that can be adorned to a <code>BasePart</code>.
 *
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/LineHandleAdornment)
 */
interface LineHandleAdornment extends HandleAdornment {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_LineHandleAdornment: unique symbol;
    /**
     * The length of the line.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/LineHandleAdornment#Length)
     */
    Length: number;
    /**
     * The thickness of the line in pixels.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/LineHandleAdornment#Thickness)
     */
    Thickness: number;
}
/**
 * The SphereHandleAdornment is a sphere that can be adorned to a BasePart.
 *
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/SphereHandleAdornment)
 */
interface SphereHandleAdornment extends HandleAdornment {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_SphereHandleAdornment: unique symbol;
    /**
     * The radius of the sphere adornment.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/SphereHandleAdornment#Radius)
     */
    Radius: number;
}
/**
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/WireframeHandleAdornment)
 */
interface WireframeHandleAdornment extends HandleAdornment {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_WireframeHandleAdornment: unique symbol;
    /**
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/WireframeHandleAdornment#Scale)
     */
    Scale: Vector3;
    /**
     * @param this
     * @param from
     * @param to
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/WireframeHandleAdornment#AddLine)
     */
    AddLine(this: WireframeHandleAdornment, from: Vector3, to: Vector3): void;
    /**
     * @param this
     * @param points
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/WireframeHandleAdornment#AddLines)
     */
    AddLines(this: WireframeHandleAdornment, points: Array<unknown>): void;
    /**
     * @param this
     * @param points
     * @param loop
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/WireframeHandleAdornment#AddPath)
     */
    AddPath(this: WireframeHandleAdornment, points: Array<unknown>, loop: boolean): void;
    /**
     * @param this
     * @param point
     * @param text
     * @param size
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/WireframeHandleAdornment#AddText)
     */
    AddText(this: WireframeHandleAdornment, point: Vector3, text: string, size?: number): void;
    /**
     * @param this
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/WireframeHandleAdornment#Clear)
     */
    Clear(this: WireframeHandleAdornment): void;
}
/**
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/ParabolaAdornment)
 */
interface ParabolaAdornment extends PVAdornment {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_ParabolaAdornment: unique symbol;
}
/**
 * Renders a 3D sphere around its <code>Adornee</code>.
 *
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/SelectionSphere)
 */
interface SelectionSphere extends PVAdornment {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_SelectionSphere: unique symbol;
    /**
     * <strong>Deprecated:</strong> This property is deprecated in favor of <code>SurfaceColor3</code> which uses the more precise <code>Color3</code> data type instead of a <code>BrickColor</code> used by this property.<br>A <code>BrickColor</code> version of <code>SurfaceColor3</code>.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/SelectionSphere#SurfaceColor)
     */
    SurfaceColor: BrickColor;
    /**
     * Determines the color of the sphere's surface.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/SelectionSphere#SurfaceColor3)
     */
    SurfaceColor3: Color3;
    /**
     * Determines the transparency of the sphere's surface.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/SelectionSphere#SurfaceTransparency)
     */
    SurfaceTransparency: number;
}
/**
 * An abstract class for GUI elements that are adorned to (displayed as attached to) objects deriving from <code>BasePart</code>.
 *
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/PartAdornment)
 */
interface PartAdornment extends GuiBase3d {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_PartAdornment: unique symbol;
    /**
     * Sets the object to adorn to.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/PartAdornment#Adornee)
     */
    Adornee: BasePart | undefined;
}
/**
 * An abstract class for Handle objects, such as <code>ArcHandles</code> and <code>Handles</code>.
 *
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/HandlesBase)
 */
interface HandlesBase extends PartAdornment {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_HandlesBase: unique symbol;
}
/**
 * The <code>ArcHandles</code> object places 3D arc handles around any 3D object that its <code>Adornee</code> is set to.
 *
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/ArcHandles)
 */
interface ArcHandles extends HandlesBase {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_ArcHandles: unique symbol;
    /**
     * Sets the current Axes ArcHandles will show.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/ArcHandles#Axes)
     */
    Axes: Axes;
    /**
     * Fired when the left mouse button goes down on one of the GUI handles.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/ArcHandles#MouseButton1Down)
     */
    readonly MouseButton1Down: RBXScriptSignal<(axis: Enum.Axis) => void>;
    /**
     * Fired when the left mouse button is released on one of the GUI handles.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/ArcHandles#MouseButton1Up)
     */
    readonly MouseButton1Up: RBXScriptSignal<(axis: Enum.Axis) => void>;
    /**
     * Fired when the mouse moves while the MouseButton1Down event has fired, but the left mouse button has not been released yet.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/ArcHandles#MouseDrag)
     */
    readonly MouseDrag: RBXScriptSignal<(axis: Enum.Axis, relativeAngle: number, deltaRadius: number) => void>;
    /**
     * Fired when a mouse "enters" the GUI handle.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/ArcHandles#MouseEnter)
     */
    readonly MouseEnter: RBXScriptSignal<(axis: Enum.Axis) => void>;
    /**
     * Fired when the mouse leaves the GUI handle.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/ArcHandles#MouseLeave)
     */
    readonly MouseLeave: RBXScriptSignal<(axis: Enum.Axis) => void>;
}
/**
 * The Handles object places 3D handles around any object that its Adornee is set to.
 *
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Handles)
 */
interface Handles extends HandlesBase {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_Handles: unique symbol;
    /**
     * Sets which sides the GUI handles will appear.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Handles#Faces)
     */
    Faces: Faces;
    /**
     * Sets the GUI style of the handles. Currently there are only two types; Resize and Movement.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Handles#Style)
     */
    Style: Enum.HandlesStyle;
    /**
     * Fired when the left mouse button goes down on one of the GUI handles.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Handles#MouseButton1Down)
     */
    readonly MouseButton1Down: RBXScriptSignal<(face: Enum.NormalId) => void>;
    /**
     * Fired when the left mouse button is released on one of the GUI handles.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Handles#MouseButton1Up)
     */
    readonly MouseButton1Up: RBXScriptSignal<(face: Enum.NormalId) => void>;
    /**
     * Fired when the mouse moves while the MouseButton1Down event has fired, but the left mouse button has not been released yet.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Handles#MouseDrag)
     */
    readonly MouseDrag: RBXScriptSignal<(face: Enum.NormalId, distance: number) => void>;
    /**
     * Fired when a mouse "enters" the GUI handle.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Handles#MouseEnter)
     */
    readonly MouseEnter: RBXScriptSignal<(face: Enum.NormalId) => void>;
    /**
     * Fired when the mouse leaves the GUI handle.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Handles#MouseLeave)
     */
    readonly MouseLeave: RBXScriptSignal<(face: Enum.NormalId) => void>;
}
/**
 * Highlights a face of a surface in a configurable color.
 *
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/SurfaceSelection)
 */
interface SurfaceSelection extends PartAdornment {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_SurfaceSelection: unique symbol;
    /**
     * Sets which side the SurfaceSelection will appear on, on the adorned <code>BasePart</code>.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/SurfaceSelection#TargetSurface)
     */
    TargetSurface: Enum.NormalId;
}
/**
 * Abstract class for <code>SelectionPartLasso</code> and <code>SelectionPartLasso</code>.
 *
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/SelectionLasso)
 */
interface SelectionLasso extends GuiBase3d {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_SelectionLasso: unique symbol;
    /**
     * The Humanoid that the Lasso belongs to, and will come from.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/SelectionLasso#Humanoid)
     */
    Humanoid: Humanoid | undefined;
}
/**
 * <strong>Deprecated:</strong> SelectionPartLasso has been deprecated. Developers are advised to use the <code>Beam</code> object instead.<br>An instance used to display a "lasso" between a <code>Humanoid</code> Torso and a <code>BasePart</code>.
 *
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/SelectionPartLasso)
 */
interface SelectionPartLasso extends SelectionLasso {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_SelectionPartLasso: unique symbol;
    /**
     * Sets the target of the lasso object.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/SelectionPartLasso#Part)
     */
    Part: BasePart | undefined;
}
/**
 * <strong>Deprecated:</strong> The SelectionPointLasso class is deprecated. It should not be used for new work.
 *
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/SelectionPointLasso)
 */
interface SelectionPointLasso extends SelectionLasso {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_SelectionPointLasso: unique symbol;
    /**
     * Sets the Vector3 target of the lasso object.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/SelectionPointLasso#Point)
     */
    Point: Vector3;
}
/**
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Path2D)
 */
interface Path2D extends GuiBase {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_Path2D: unique symbol;
    /**
     * Connects the first and last control points when enabled.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Path2D#Closed)
     */
    Closed: boolean;
    /**
     * Determines the Color of the <code>Path2D</code>.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Path2D#Color3)
     */
    Color3: Color3;
    /**
     * Determines how thick the <code>Path2D</code> path is.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Path2D#Thickness)
     */
    Thickness: number;
    /**
     * Determines if the <code>Path2D</code> path is rendered or not.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Path2D#Visible)
     */
    Visible: boolean;
    /**
     * Determines the order in which a <code>Path2D</code> path renders relative to other GUIs.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Path2D#ZIndex)
     */
    ZIndex: number;
    /**
     * Returns the bounding size for the <code>Path2D</code>.
     * @param this
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Path2D#GetBoundingRect)
     */
    GetBoundingRect(this: Path2D): Rect;
    /**
     * Returns the <code>Path2DControlPoint</code> for a given index.
     * @param this
     * @param index
     * @returns The control point at the given index.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Path2D#GetControlPoint)
     */
    GetControlPoint(this: Path2D, index: number): Path2DControlPoint;
    /**
     * Returns all the <code>Path2DControlPoints</code> for the <code>Path2D</code>.
     * @param this
     * @returns Table of all the <code>Path2DControlPoints</code>.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Path2D#GetControlPoints)
     */
    GetControlPoints(this: Path2D): Array<unknown>;
    /**
     * Returns the length of the <code>Path2D</code>.
     * @param this
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Path2D#GetLength)
     */
    GetLength(this: Path2D): number;
    /**
     * Returns the maximum allowed number of control points.
     * @param this
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Path2D#GetMaxControlPoints)
     */
    GetMaxControlPoints(this: Path2D): number;
    /**
     * Returns the position at a given value in parameter space.
     * @param this
     * @param t The value to query the <code>Path2D</code> at.
     * @returns The position in parameter space.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Path2D#GetPositionOnCurve)
     */
    GetPositionOnCurve(this: Path2D, t: number): UDim2;
    /**
     * Returns the position at a given value in arc length space.
     * @param this
     * @param t The value to query the Path2D at.
     * @returns The position in arc length space.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Path2D#GetPositionOnCurveArcLength)
     */
    GetPositionOnCurveArcLength(this: Path2D, t: number): UDim2;
    /**
     * Returns the tangent at a given value in parameter space.
     * @param this
     * @param t The value to query the <code>Path2D</code> at.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Path2D#GetTangentOnCurve)
     */
    GetTangentOnCurve(this: Path2D, t: number): Vector2;
    /**
     * Returns the tangent at a given value in arc length space.
     * @param this
     * @param t The value to query the <code>Path2D</code> at.
     * @returns The tangent in arc length space.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Path2D#GetTangentOnCurveArcLength)
     */
    GetTangentOnCurveArcLength(this: Path2D, t: number): Vector2;
    /**
     * Inserts a new control point at a given index.
     * @param this
     * @param index The index to insert at.
     * @param point The control point to insert.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Path2D#InsertControlPoint)
     */
    InsertControlPoint(this: Path2D, index: number, point: Path2DControlPoint): void;
    /**
     * Removes a control at the given index.
     * @param this
     * @param index The index to remove at.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Path2D#RemoveControlPoint)
     */
    RemoveControlPoint(this: Path2D, index: number): void;
    /**
     * Sets all the control points to the specified array, replacing all existing points with new ones.
     * @param this
     * @param controlPoints The new list of control points to set.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Path2D#SetControlPoints)
     */
    SetControlPoints(this: Path2D, controlPoints: Array<unknown>): void;
    /**
     * Updates a control point at the given index.
     * @param this
     * @param index The control point index to update.
     * @param point
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Path2D#UpdateControlPoint)
     */
    UpdateControlPoint(this: Path2D, index: number, point: Path2DControlPoint): void;
    /**
     * Fires any time control points change.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Path2D#ControlPointChanged)
     */
    readonly ControlPointChanged: RBXScriptSignal<() => void>;
}
/**
 * Allows developers to control what <code>GuiObject</code> is currently being selected by the gamepad navigator, as well as check if Roblox's main menu is currently open.
 *
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/GuiService)
 */
interface GuiService extends Instance {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_GuiService: unique symbol;
    /**
     * If activated, the <code>Select</code> button on a Gamepad or <kbd>Backslash</kbd> will automatically set a GUI as the selected object.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/GuiService#AutoSelectGuiEnabled)
     */
    AutoSelectGuiEnabled: boolean;
    /**
     * Toggles whether or not objects in the <code>CoreGui</code> can be navigated using a Gamepad.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/GuiService#CoreGuiNavigationEnabled)
     */
    CoreGuiNavigationEnabled: boolean;
    /**
     * Used to enable and disable the default controller GUI navigation.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/GuiService#GuiNavigationEnabled)
     */
    GuiNavigationEnabled: boolean;
    /**
     * <strong>Deprecated:</strong> This item is deprecated. Do not use it for new work.<br>Indicates whether a modal dialog is visible.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/GuiService#IsModalDialog)
     */
    readonly IsModalDialog: boolean;
    /**
     * <strong>Deprecated:</strong> This item is deprecated. Do not use it for new work.<br>Indicates whether the user is playing on a computer running Windows.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/GuiService#IsWindows)
     */
    readonly IsWindows: boolean;
    /**
     * Returns true if any menu of CoreGui is open.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/GuiService#MenuIsOpen)
     */
    readonly MenuIsOpen: boolean;
    /**
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/GuiService#PreferredTextSize)
     */
    readonly PreferredTextSize: Enum.PreferredTextSize;
    /**
     * Gets the user's preferred transparency as a number between 0 and 1, which indicates how opaque they want the backgrounds of certain UI elements to be. The recommended usage is as a multiplier of an element's BackgroundTransparency. Defaults to 1.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/GuiService#PreferredTransparency)
     */
    readonly PreferredTransparency: number;
    /**
     * Returns <code>true</code> if the user has enabled reduced motion. Defaults to <code>false</code>.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/GuiService#ReducedMotionEnabled)
     */
    readonly ReducedMotionEnabled: boolean;
    /**
     * Sets the GuiObject currently being focused on by the GUI Navigator (used for Gamepads).
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/GuiService#SelectedObject)
     */
    SelectedObject: GuiObject | undefined;
    /**
     * Used to determine the absolute size and position of unobstructed area within top bar space.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/GuiService#TopbarInset)
     */
    readonly TopbarInset: Rect;
    /**
     * Used to enable and disable touch controls and touch control display UI. Defaults to true.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/GuiService#TouchControlsEnabled)
     */
    TouchControlsEnabled: boolean;
    /**
     * <strong>Deprecated:</strong> <br>Creates a gui selection group where gamepad gui navigation will only consider selectable gui objects that are within the group (children of selectionParent).
     * @param this Allows developers to control what <code>GuiObject</code> is currently being selected by the gamepad navigator, as well as check if Roblox's main menu is currently open.
     * @param selectionName
     * @param selectionParent
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/GuiService#AddSelectionParent)
     */
    AddSelectionParent(this: GuiService, selectionName: string, selectionParent: GuiObject): void;
    /**
     * <strong>Deprecated:</strong> <br><strong>AddSelectionTuple</strong> works similarly to <code>GuiService:AddSelectionParent()</code>, but you can give it a tuple of <code>GuiObject</code> that you want to be contained in the group. Beware that the second argument is <em>not</em> a table, but rather the first of several <code>GuiObject</code> in the tuple. To pass the contents of a table, use <code>unpack</code>/<code>unpack</code>: <pre><code class="language-lua">local frame = script.Parent -- Passing various GuiObject individually GuiService:AddSelectionTuple(&quot;InventoryButtons&quot;, frame.Sort, frame.Trash, frame.Drop) -- Unpacking a table of GuiObject (unpack/table.unpack are equivalent) local inventoryButtons = { frame.Sort, frame.Trash, frame.Drop } GuiService:AddSelectionTuple(&quot;InventoryButtons&quot;, unpack(inventoryButtons)) </code></pre>
     * @param this Allows developers to control what <code>GuiObject</code> is currently being selected by the gamepad navigator, as well as check if Roblox's main menu is currently open.
     * @param selectionName The name of the added selection.
     * @param selections The selection(s) added.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/GuiService#AddSelectionTuple)
     */
    AddSelectionTuple(this: GuiService, selectionName: string, selections: Array<GuiObject>): void;
    /**
     * Closes the Inspect Menu, if open.
     * @param this Allows developers to control what <code>GuiObject</code> is currently being selected by the gamepad navigator, as well as check if Roblox's main menu is currently open.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/GuiService#CloseInspectMenu)
     */
    CloseInspectMenu(this: GuiService): void;
    /**
     * @param this Allows developers to control what <code>GuiObject</code> is currently being selected by the gamepad navigator, as well as check if Roblox's main menu is currently open.
     * @param notificationId
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/GuiService#DismissNotification)
     */
    DismissNotification(this: GuiService, notificationId: string): boolean;
    /**
     * Checks if the player Emotes menu is open.
     * @param this Allows developers to control what <code>GuiObject</code> is currently being selected by the gamepad navigator, as well as check if Roblox's main menu is currently open.
     * @returns Indicates whether the Emotes menu is open.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/GuiService#GetEmotesMenuOpen)
     */
    GetEmotesMenuOpen(this: GuiService): boolean;
    /**
     * Returns whether or not the <code>gameplay paused</code> notification has been disabled by the developer.
     * @param this Allows developers to control what <code>GuiObject</code> is currently being selected by the gamepad navigator, as well as check if Roblox's main menu is currently open.
     * @returns Whether or not the <code>gameplay paused</code> notification has been disabled.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/GuiService#GetGameplayPausedNotificationEnabled)
     */
    GetGameplayPausedNotificationEnabled(this: GuiService): boolean;
    /**
     * Returns two <code>Vector2</code> values representing the inset of user GUIs in pixels, from the top left corner of the screen and the bottom right corner of the screen respectively.
     * @param this Allows developers to control what <code>GuiObject</code> is currently being selected by the gamepad navigator, as well as check if Roblox's main menu is currently open.
     * @returns A tuple of two Vector2 values describing the current specified Gui Inset.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/GuiService#GetGuiInset)
     */
    GetGuiInset(this: GuiService): LuaTuple<[
        Vector2,
        Vector2
    ]>;
    /**
     * Returns whether the Inspect and Buy menu functionality is enabled.
     * @param this Allows developers to control what <code>GuiObject</code> is currently being selected by the gamepad navigator, as well as check if Roblox's main menu is currently open.
     * @returns A boolean indicating whether the Inspect Menu feature is enabled.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/GuiService#GetInspectMenuEnabled)
     */
    GetInspectMenuEnabled(this: GuiService): boolean;
    /**
     * Allows a developer to bring up the Inspect menu showing the assets listed in this <code>HumanoidDescription</code> object.
     * @param this Allows developers to control what <code>GuiObject</code> is currently being selected by the gamepad navigator, as well as check if Roblox's main menu is currently open.
     * @param humanoidDescription A <code>HumanoidDescription</code> object that contains the assets to show in the Inspect menu.
     * @param name The name of the player being Inspected to show in the Inspect menu.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/GuiService#InspectPlayerFromHumanoidDescription)
     */
    InspectPlayerFromHumanoidDescription(this: GuiService, humanoidDescription: HumanoidDescription, name: string): void;
    /**
     * Allows the Inspect Menu to appear showing the user that has the given <code>UserId</code>.
     * @param this Allows developers to control what <code>GuiObject</code> is currently being selected by the gamepad navigator, as well as check if Roblox's main menu is currently open.
     * @param userId The <code>UserId</code> of the player to inspect.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/GuiService#InspectPlayerFromUserId)
     */
    InspectPlayerFromUserId(this: GuiService, userId: number): void;
    /**
     * Returns true if the client is using the ten foot interface, which is a special version of Roblox's UI, exclusive to consoles. This is the only guaranteed way to verify if the user is on a console or not.
     * @param this Allows developers to control what <code>GuiObject</code> is currently being selected by the gamepad navigator, as well as check if Roblox's main menu is currently open.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/GuiService#IsTenFootInterface)
     */
    IsTenFootInterface(this: GuiService): boolean;
    /**
     * <strong>Deprecated:</strong> <br>Removes a group that was created with <code>GuiService:AddSelectionParent()</code> or <code>GuiService:AddSelectionTuple()</code>.
     * @param this Allows developers to control what <code>GuiObject</code> is currently being selected by the gamepad navigator, as well as check if Roblox's main menu is currently open.
     * @param selectionName
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/GuiService#RemoveSelectionGroup)
     */
    RemoveSelectionGroup(this: GuiService, selectionName: string): void;
    /**
     * Set GuiService.SelectedObject to a child of provided instance selectionParent that is PlayerGui or its descendants.
     * @param this Allows developers to control what <code>GuiObject</code> is currently being selected by the gamepad navigator, as well as check if Roblox's main menu is currently open.
     * @param selectionParent The parent of selection whose descendants are searched.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/GuiService#Select)
     */
    Select(this: GuiService, selectionParent: Instance): void;
    /**
     * @param this Allows developers to control what <code>GuiObject</code> is currently being selected by the gamepad navigator, as well as check if Roblox's main menu is currently open.
     * @param notificationInfo
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/GuiService#SendNotification)
     */
    SendNotification(this: GuiService, notificationInfo: object): string;
    /**
     * Opens or closes the player Emotes menu.
     * @param this Allows developers to control what <code>GuiObject</code> is currently being selected by the gamepad navigator, as well as check if Roblox's main menu is currently open.
     * @param isOpen
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/GuiService#SetEmotesMenuOpen)
     */
    SetEmotesMenuOpen(this: GuiService, isOpen: boolean): void;
    /**
     * Allows developers to disable the built-in notification when a players gameplay is paused.
     * @param this Allows developers to control what <code>GuiObject</code> is currently being selected by the gamepad navigator, as well as check if Roblox's main menu is currently open.
     * @param enabled Whether or not the built-in notification GUI is disabled.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/GuiService#SetGameplayPausedNotificationEnabled)
     */
    SetGameplayPausedNotificationEnabled(this: GuiService, enabled: boolean): void;
    /**
     * Allows developers to enable or disable default Inspect and Buy functionality.
     * @param this Allows developers to control what <code>GuiObject</code> is currently being selected by the gamepad navigator, as well as check if Roblox's main menu is currently open.
     * @param enabled A boolean indicating whether to enable or disable the Inspect Menu feature.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/GuiService#SetInspectMenuEnabled)
     */
    SetInspectMenuEnabled(this: GuiService, enabled: boolean): void;
    /**
     * Fires when the user <strong>closes</strong> the Roblox coregui escape menu.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/GuiService#MenuClosed)
     */
    readonly MenuClosed: RBXScriptSignal<() => void>;
    /**
     * Fires when the user <strong>opens</strong> the Roblox coregui escape menu.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/GuiService#MenuOpened)
     */
    readonly MenuOpened: RBXScriptSignal<() => void>;
}
/**
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/HapticEffect)
 */
interface HapticEffect extends Instance {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_HapticEffect: unique symbol;
    /**
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/HapticEffect#Looped)
     */
    Looped: boolean;
    /**
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/HapticEffect#Position)
     */
    Position: Vector3;
    /**
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/HapticEffect#Radius)
     */
    Radius: number;
    /**
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/HapticEffect#Type)
     */
    Type: Enum.HapticEffectType;
    /**
     * @param this
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/HapticEffect#Play)
     */
    Play(this: HapticEffect): void;
    /**
     * @param this
     * @param keys
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/HapticEffect#SetWaveformKeys)
     */
    SetWaveformKeys(this: HapticEffect, keys: Array<unknown>): void;
    /**
     * @param this
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/HapticEffect#Stop)
     */
    Stop(this: HapticEffect): void;
}
/**
 * Provides haptic feedback to some gamepad controllers.
 *
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/HapticService)
 */
interface HapticService extends Instance {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_HapticService: unique symbol;
    /**
     * Returns the current vibration value set to the specified <code>UserInputType</code> and <code>VibrationMotor</code>. This will not return anything if <code>SetMotor</code> has not been called prior.
     * @param this Provides haptic feedback to some gamepad controllers.
     * @param inputType The specified <code>UserInputType</code>.
     * @param vibrationMotor The specified <code>VibrationMotor</code>.
     * @returns The current vibration value set to the specified <code>UserInputType</code> and <code>VibrationMotor</code> or nil if <code>SetMotor</code> has not been called prior.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/HapticService#GetMotor)
     */
    GetMotor(this: HapticService, inputType: CastsToEnum<Enum.UserInputType>, vibrationMotor: CastsToEnum<Enum.VibrationMotor>): unknown;
    /**
     * Returns true if the specified motor is available to be used with the specified <code>UserInputType</code>.
     * @param this Provides haptic feedback to some gamepad controllers.
     * @param inputType The specific <code>UserInputType</code> being checked for <code>VibrationMotor</code> support.
     * @param vibrationMotor The specified <code>VibrationMotor</code> checked to see if it supports the specified <code>UserInputType</code>.
     * @returns True if the specified motor is available to be used with the specified <code>UserInputType</code>, false if not.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/HapticService#IsMotorSupported)
     */
    IsMotorSupported(this: HapticService, inputType: CastsToEnum<Enum.UserInputType>, vibrationMotor: CastsToEnum<Enum.VibrationMotor>): boolean;
    /**
     * Returns true if the specified <code>UserInputType</code> supports haptic feedback.
     * @param this Provides haptic feedback to some gamepad controllers.
     * @param inputType The specified <code>UserInputType</code> checked to see if it supports haptic feedback.
     * @returns True if the specified <code>UserInputType</code> supports haptic feedback.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/HapticService#IsVibrationSupported)
     */
    IsVibrationSupported(this: HapticService, inputType: CastsToEnum<Enum.UserInputType>): boolean;
    /**
     * Sets the vibration intensity of the specified <code>UserInputType</code> and <code>VibrationMotor</code>.
     * @param this Provides haptic feedback to some gamepad controllers.
     * @param inputType The specified <code>UserInputType</code>.
     * @param vibrationMotor The specified <code>VibrationMotor</code>.
     * @param vibrationValues How intensely the motor should vibrate. Only uses the first value in the tuple, which should be a number.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/HapticService#SetMotor)
     */
    SetMotor(this: HapticService, inputType: CastsToEnum<Enum.UserInputType>, motor: CastsToEnum<Enum.VibrationMotor>, vibration: number): void;
}
/**
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/HeatmapService)
 */
interface HeatmapService extends Instance {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_HeatmapService: unique symbol;
}
/**
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/HeightmapImporterService)
 */
interface HeightmapImporterService extends Instance {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_HeightmapImporterService: unique symbol;
}
/**
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/HiddenSurfaceRemovalAsset)
 */
interface HiddenSurfaceRemovalAsset extends Instance {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_HiddenSurfaceRemovalAsset: unique symbol;
}
/**
 * A visual effect which you can use to call attention to a specific object within an experience.
 *
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Highlight)
 */
interface Highlight extends Instance {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_Highlight: unique symbol;
    /**
     * The <code>Instance</code> that the <code>Highlight</code> is applied to.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Highlight#Adornee)
     */
    Adornee: Instance | undefined;
    /**
     * Controls how the <code>Highlight</code> effect displays with respect to other objects in the world.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Highlight#DepthMode)
     */
    DepthMode: Enum.HighlightDepthMode;
    /**
     * Sets whether or not the highlight is enabled.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Highlight#Enabled)
     */
    Enabled: boolean;
    /**
     * Sets the <code>Color3</code> value of the highlight's interior.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Highlight#FillColor)
     */
    FillColor: Color3;
    /**
     * Sets the transparency of the highlight's interior.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Highlight#FillTransparency)
     */
    FillTransparency: number;
    /**
     * Sets the <code>Color3</code> value of the highlight's outline.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Highlight#OutlineColor)
     */
    OutlineColor: Color3;
    /**
     * Sets the transparency of the highlight's outline.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Highlight#OutlineTransparency)
     */
    OutlineTransparency: number;
}
/**
 * Allows sending HTTP requests and provides various web-related and JSON methods.
 *
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/HttpService)
 */
interface HttpService extends Instance {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_HttpService: unique symbol;
    /**
     * Indicates whether HTTP requests can be sent to external websites.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/HttpService#HttpEnabled)
     */
    get HttpEnabled(): boolean;
    /**
     * Generates a UUID/GUID random string, optionally with curly braces.
     * @param this Allows sending HTTP requests and provides various web-related and JSON methods.
     * @param wrapInCurlyBraces Whether the returned string should be wrapped in curly braces (<code>{}</code>).
     * @returns The randomly generated UUID.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/HttpService#GenerateGUID)
     */
    GenerateGUID(this: HttpService, wrapInCurlyBraces?: boolean): string;
    /**
     * Returns a <code>Secret</code> from the secrets store.
     * @param this Allows sending HTTP requests and provides various web-related and JSON methods.
     * @param key
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/HttpService#GetSecret)
     */
    GetSecret(this: HttpService, key: string): Secret;
    /**
     * Decodes a JSON string into a Lua table.
     * @param this Allows sending HTTP requests and provides various web-related and JSON methods.
     * @param input The JSON object being decoded.
     * @returns The decoded JSON object as a Lua table.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/HttpService#JSONDecode)
     */
    JSONDecode(this: HttpService, input: string): unknown;
    /**
     * Generate a JSON string from a Lua table.
     * @param this Allows sending HTTP requests and provides various web-related and JSON methods.
     * @param input The input Lua table.
     * @returns The returned JSON string.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/HttpService#JSONEncode)
     */
    JSONEncode(this: HttpService, input: unknown): string;
    /**
     * Replaces URL-unsafe characters with '%' and two hexadecimal characters.
     * @param this Allows sending HTTP requests and provides various web-related and JSON methods.
     * @param input The string (URL) to encode.
     * @returns The encoded string.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/HttpService#UrlEncode)
     */
    UrlEncode(this: HttpService, input: string): string;
    /**
     * Sends an HTTP <code>GET</code> request.
     * @param this Allows sending HTTP requests and provides various web-related and JSON methods.
     * @param url The web address you are requesting data from.
     * @param nocache Whether the request stores (caches) the response.
     * @param headers Used to specify some HTTP request headers.
     * @returns The GET request's response body.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/HttpService#GetAsync)
     */
    GetAsync(this: HttpService, url: string, nocache?: boolean, headers?: HttpHeaders): string;
    /**
     * Sends an HTTP <code>POST</code> request.
     * @param this Allows sending HTTP requests and provides various web-related and JSON methods.
     * @param url The destination address for the data.
     * @param data The data being sent.
     * @param content_type Modifies the value in the <code>Content-Type</code> header sent with the request.
     * @param compress Determines whether the data is compressed (<strong>gzipped</strong>) when sent.
     * @param headers Used to specify some HTTP request headers.
     * @returns The HTTP response sent back indicating the request result.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/HttpService#PostAsync)
     */
    PostAsync(this: HttpService, url: string, data: string, content_type?: CastsToEnum<Enum.HttpContentType>, compress?: boolean, headers?: HttpHeaders): string;
    /**
     * Sends an HTTP request using any HTTP method given a dictionary of information.
     * @param this Allows sending HTTP requests and provides various web-related and JSON methods.
     * @param requestOptions A dictionary containing information to be requested from the server specified.
     * @returns A dictionary containing response information from the server specified.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/HttpService#RequestAsync)
     */
    RequestAsync(this: HttpService, requestOptions: RequestAsyncRequest): RequestAsyncResponse;
}
/**
 * A special object that gives models the functionality of a character.
 *
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Humanoid)
 */
interface Humanoid extends Instance {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_Humanoid: unique symbol;
    /**
     * Sets whether the character will automatically jump when they hit an obstacle as a player on a mobile device.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Humanoid#AutoJumpEnabled)
     */
    AutoJumpEnabled: boolean;
    /**
     * AutoRotate sets whether or not the Humanoid will automatically rotate to face in the direction they are moving in.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Humanoid#AutoRotate)
     */
    AutoRotate: boolean;
    /**
     * When Enabled, AutomaticScalingEnabled causes the size of the character to change in response to the values in the humanoid's child scale values changing.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Humanoid#AutomaticScalingEnabled)
     */
    AutomaticScalingEnabled: boolean;
    /**
     * Determines whether the humanoid's joints break when in the <code>HumanoidStateType.Dead</code> state.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Humanoid#BreakJointsOnDeath)
     */
    BreakJointsOnDeath: boolean;
    /**
     * An offset applied to the Camera's subject position when its CameraSubject is set to this Humanoid.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Humanoid#CameraOffset)
     */
    CameraOffset: Vector3;
    /**
     * <strong>Deprecated:</strong> <br>Selects the <code>HumanoidCollisionType</code> for R15 and Rthro non-player characters.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Humanoid#CollisionType)
     */
    get CollisionType(): Enum.HumanoidCollisionType;
    /**
     * Controls the distance behavior of the humanoid's name and health display.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Humanoid#DisplayDistanceType)
     */
    DisplayDistanceType: Enum.HumanoidDisplayDistanceType;
    /**
     * Sets the text of a Humanoid, displayed above their head.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Humanoid#DisplayName)
     */
    DisplayName: string;
    /**
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Humanoid#EvaluateStateMachine)
     */
    EvaluateStateMachine: boolean;
    /**
     * Describes the <code>Material</code> that the <code>Humanoid</code> is currently standing on. If the <code>Humanoid</code> isn't standing on anything, the value of this property will be <em>Air</em>.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Humanoid#FloorMaterial)
     */
    readonly FloorMaterial: Enum.Material;
    /**
     * Describes the current health of the Humanoid on the range [0, <code>Humanoid.MaxHealth</code>].
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Humanoid#Health)
     */
    Health: number;
    /**
     * Used in conjunction with the <code>DisplayDistanceType</code> property to control the distance from which a humanoid's health bar can be seen.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Humanoid#HealthDisplayDistance)
     */
    HealthDisplayDistance: number;
    /**
     * Controls when the humanoid's health bar is allowed to be displayed.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Humanoid#HealthDisplayType)
     */
    HealthDisplayType: Enum.HumanoidHealthDisplayType;
    /**
     * Determines the distance off the ground the <code>Humanoid.RootPart</code> should be.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Humanoid#HipHeight)
     */
    HipHeight: number;
    /**
     * If <code>true</code>, the <code>Humanoid</code> jumps with an upwards force.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Humanoid#Jump)
     */
    Jump: boolean;
    /**
     * Provides control over the height that the <code>Humanoid</code> jumps to.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Humanoid#JumpHeight)
     */
    JumpHeight: number;
    /**
     * Determines how much upwards force is applied to the <code>Humanoid</code> when jumping.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Humanoid#JumpPower)
     */
    JumpPower: number;
    /**
     * <strong>Deprecated:</strong> This instance only works with the old R6 rig. It will not work with the R15 rig and should not be used in new work not using the R6 rig.<br>A reference to the humanoid's <em>Left Leg</em> part.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Humanoid#LeftLeg)
     */
    LeftLeg: BasePart | undefined;
    /**
     * The maximum value of a humanoid's <code>Health</code>.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Humanoid#MaxHealth)
     */
    MaxHealth: number;
    /**
     * The maximum slope angle that a humanoid can walk on without slipping.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Humanoid#MaxSlopeAngle)
     */
    MaxSlopeAngle: number;
    /**
     * Describes the direction that the <code>Humanoid</code> is walking in.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Humanoid#MoveDirection)
     */
    readonly MoveDirection: Vector3;
    /**
     * Used in conjunction with the <code>Humanoid.DisplayDistanceType</code> property to control the distance from which a humanoid's name can be seen.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Humanoid#NameDisplayDistance)
     */
    NameDisplayDistance: number;
    /**
     * Controls whether a humanoid's name and health bar can be seen behind walls or other objects.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Humanoid#NameOcclusion)
     */
    NameOcclusion: Enum.NameOcclusion;
    /**
     * Determines whether the <code>Humanoid</code> is currently in the <code>HumanoidStateType.PlatformStanding</code> state.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Humanoid#PlatformStand)
     */
    PlatformStand: boolean;
    /**
     * Allows developers to disable the behavior where a player <code>Character|character</code> dies if the Neck <code>Motor6D</code> is removed or disconnected even momentarily.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Humanoid#RequiresNeck)
     */
    RequiresNeck: boolean;
    /**
     * Describes whether this <code>Humanoid</code> is utilizing the legacy R6 character rig, or the new R15 character rig.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Humanoid#RigType)
     */
    RigType: Enum.HumanoidRigType;
    /**
     * <strong>Deprecated:</strong> This instance only works with the old R6 rig. It will not work with the R15 rig and should not be used in new work not using the R6 rig.<br>A reference to the humanoid's <em>Right Leg</em> part.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Humanoid#RightLeg)
     */
    RightLeg: BasePart | undefined;
    /**
     * A reference to the humanoid's <strong>HumanoidRootPart</strong> object.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Humanoid#RootPart)
     */
    readonly RootPart: BasePart | undefined;
    /**
     * A reference to the seat that a <code>Humanoid</code> is currently sitting in, if any.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Humanoid#SeatPart)
     */
    readonly SeatPart: BasePart | undefined;
    /**
     * Describes whether the <code>Humanoid</code> is currently sitting.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Humanoid#Sit)
     */
    Sit: boolean;
    /**
     * Describes the 3D position where the <code>Player</code> controlling the <code>Humanoid</code> last clicked in the world while using a <code>Tool</code>.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Humanoid#TargetPoint)
     */
    TargetPoint: Vector3;
    /**
     * <strong>Deprecated:</strong> This instance only works with the old R6 rig. It will not work with the R15 rig and should not be used in new work not using the R6 rig.<br>A reference to a humanoid's root driving part.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Humanoid#Torso)
     */
    Torso: BasePart | undefined;
    /**
     * Determines whether the <code>JumpHeight</code> (false) or <code>Humanoid.JumpPower</code> (true) property is used.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Humanoid#UseJumpPower)
     */
    UseJumpPower: boolean;
    /**
     * Describes the humanoid's maximum movement speed in studs per second.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Humanoid#WalkSpeed)
     */
    WalkSpeed: number;
    /**
     * A reference to a part whose position is trying to be reached by a humanoid.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Humanoid#WalkToPart)
     */
    WalkToPart: BasePart | undefined;
    /**
     * The position that a humanoid is trying to reach, after a call to <code>Humanoid:MoveTo()</code> is made.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Humanoid#WalkToPoint)
     */
    WalkToPoint: Vector3;
    /**
     * Attaches the specified <code>Accessory</code> to the humanoid's parent.
     * @param this A special object that gives models the functionality of a character.
     * @param accessory The <code>Accessory</code> to be attached.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Humanoid#AddAccessory)
     */
    AddAccessory(this: Humanoid, accessory: Instance): void;
    /**
     * <strong>Deprecated:</strong> This item is deprecated, as it was a part of the unfinished RbxStatus library which would have allowed you to add conditions to a Humanoid. Do not use it for new work.<br>Adds a custom status to the Humanoid.
     * @param this A special object that gives models the functionality of a character.
     * @param status
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Humanoid#AddCustomStatus)
     */
    AddCustomStatus(this: Humanoid, status: string): boolean;
    /**
     * <strong>Deprecated:</strong> This item is deprecated, as it was a part of the unfinished RbxStatus library which would have allowed you to add conditions to a Humanoid. Do not use it for new work.<br>Adds a BoolValue to the Humanoid's <em>Status</em> object.
     * @param this A special object that gives models the functionality of a character.
     * @param status
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Humanoid#AddStatus)
     */
    AddStatus(this: Humanoid, status?: CastsToEnum<Enum.Status>): boolean;
    /**
     * Assembles a tree of <code>Motor6D</code> joints by attaching together <code>Attachment</code> objects in a humanoid's character.
     * @param this A special object that gives models the functionality of a character.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Humanoid#BuildRigFromAttachments)
     */
    BuildRigFromAttachments(this: Humanoid): void;
    /**
     * Sets the <code>Humanoid</code> to enter the given <code>HumanoidStateType</code>.
     * @param this A special object that gives models the functionality of a character.
     * @param state The <code>HumanoidStateType</code> that the <code>Humanoid</code> is to perform.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Humanoid#ChangeState)
     */
    ChangeState(this: Humanoid, state?: CastsToEnum<Enum.HumanoidStateType>): void;
    /**
     * Makes the <code>Humanoid</code> equip the given <code>Tool</code>.
     * @param this A special object that gives models the functionality of a character.
     * @param tool The <code>Tool</code> to equip.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Humanoid#EquipTool)
     */
    EquipTool(this: Humanoid, tool: Instance): void;
    /**
     * Returns an array of <code>Accessory</code> objects that the humanoid's parent is currently wearing.
     * @param this A special object that gives models the functionality of a character.
     * @returns An array of <code>Accessory</code> objects that are parented to the humanoid's parent.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Humanoid#GetAccessories)
     */
    GetAccessories(this: Humanoid): Array<Accessory>;
    /**
     * Returns a copy of the humanoid's cached <code>HumanoidDescription</code> which describes its current look.
     * @param this A special object that gives models the functionality of a character.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Humanoid#GetAppliedDescription)
     */
    GetAppliedDescription(this: Humanoid): HumanoidDescription;
    /**
     * Pass a body part to this function (the body part should be a sibling of Humanoid, and a child of a Model) to get the <code>BodyPartR15</code> of the <code>Part</code>.
     * @param this A special object that gives models the functionality of a character.
     * @param part The specified part being checked to see if it is an R15 body part.
     * @returns The specified part's R15 body part type or unknown if the part is not a body part.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Humanoid#GetBodyPartR15)
     */
    GetBodyPartR15(this: Humanoid, part: Instance): Enum.BodyPartR15;
    /**
     * Returns the <code>Limb</code> enum that is associated with the given <code>Part</code>.
     * @param this A special object that gives models the functionality of a character.
     * @param part The <code>Part</code> for which the <code>Enum.Limb</code> is to be retrieved.
     * @returns The <code>Limb</code> the part corresponds with.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Humanoid#GetLimb)
     */
    GetLimb(this: Humanoid, part: Instance): Enum.Limb;
    /**
     * @param this A special object that gives models the functionality of a character.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Humanoid#GetMoveVelocity)
     */
    GetMoveVelocity(this: Humanoid): Vector3;
    /**
     * <strong>Deprecated:</strong> <br>Returns an array of all <code>AnimationTracks</code> that are currently being played on the <code>Humanoid</code>.
     * @param this A special object that gives models the functionality of a character.
     * @returns An array of currently playing <code>AnimationTracks</code>.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Humanoid#GetPlayingAnimationTracks)
     */
    GetPlayingAnimationTracks(this: Humanoid): Array<AnimationTrack>;
    /**
     * Returns the humanoid's current <code>HumanoidStateType</code>.
     * @param this A special object that gives models the functionality of a character.
     * @returns The current <code>HumanoidStateType</code> of the <code>Humanoid</code>.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Humanoid#GetState)
     */
    GetState(this: Humanoid): Enum.HumanoidStateType;
    /**
     * Returns whether a <code>HumanoidStateType</code> is enabled for the <code>Humanoid</code>.
     * @param this A special object that gives models the functionality of a character.
     * @param state The given <code>HumanoidStateType</code>.
     * @returns Whether the given <code>HumanoidStateType</code> is enabled.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Humanoid#GetStateEnabled)
     */
    GetStateEnabled(this: Humanoid, state: CastsToEnum<Enum.HumanoidStateType>): boolean;
    /**
     * <strong>Deprecated:</strong> This item is deprecated, as it was a part of the unfinished RbxStatus library which would have allowed you to add conditions to a Humanoid. Do not use it for new work.<br>Returns a table of the Humanoid's statuses, and custom statuses.
     * @param this A special object that gives models the functionality of a character.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Humanoid#GetStatuses)
     */
    GetStatuses(this: Humanoid): Array<unknown>;
    /**
     * <strong>Deprecated:</strong> This item is deprecated, as it was a part of the unfinished RbxStatus library which would have allowed you to add conditions to a Humanoid. Do not use it for new work.<br>Returns boolean based on if custom statuses exist.
     * @param this A special object that gives models the functionality of a character.
     * @param status
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Humanoid#HasCustomStatus)
     */
    HasCustomStatus(this: Humanoid, status: string): boolean;
    /**
     * <strong>Deprecated:</strong> This item is deprecated, as it was a part of the unfinished RbxStatus library which would have allowed you to add conditions to a Humanoid. Do not use it for new work.<br>Returns a boolean based on if a status exists.
     * @param this A special object that gives models the functionality of a character.
     * @param status
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Humanoid#HasStatus)
     */
    HasStatus(this: Humanoid, status?: CastsToEnum<Enum.Status>): boolean;
    /**
     * <strong>Deprecated:</strong> This function is deprecated in favor of using <code>Animator:LoadAnimation()</code> directly (the <code>Animator</code> may be created while editing or at runtime).<br>Loads an <code>Animation</code> onto a <code>Humanoid</code>, returning an <code>AnimationTrack</code> that can be used for playback.
     * @param this A special object that gives models the functionality of a character.
     * @param animation The <code>Animation</code> to load.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Humanoid#LoadAnimation)
     */
    LoadAnimation(this: Humanoid, animation: Animation): AnimationTrack;
    /**
     * Causes the <code>Humanoid</code> to walk in the given direction.
     * @param this A special object that gives models the functionality of a character.
     * @param moveDirection The direction to walk in.
     * @param relativeToCamera Set to <code>true</code> if the <code>moveDirection</code> parameter should be taken as relative to the <code>CurrentCamera</code>.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Humanoid#Move)
     */
    Move(this: Humanoid, moveDirection: Vector3, relativeToCamera?: boolean): void;
    /**
     * Causes the <code>Humanoid</code> to attempt to walk to the given location by setting the <code>Humanoid.WalkToPoint</code> and <code>Humanoid.WalkToPart</code> properties.
     * @param this A special object that gives models the functionality of a character.
     * @param location The position to set <code>Humanoid.WalkToPoint</code> to.
     * @param part The <code>BasePart</code> to set <code>Humanoid.WalkToPart</code> to.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Humanoid#MoveTo)
     */
    MoveTo(this: Humanoid, location: Vector3, part?: Instance): void;
    /**
     * Removes all <code>Accessory</code> objects worn by the humanoid's parent.
     * @param this A special object that gives models the functionality of a character.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Humanoid#RemoveAccessories)
     */
    RemoveAccessories(this: Humanoid): void;
    /**
     * <strong>Deprecated:</strong> This item is deprecated, as it was a part of the unfinished RbxStatus library which would have allowed you to add conditions to a Humanoid. Do not use it for new work.<br>Removes the defined custom status from the Status model in the Humanoid..
     * @param this A special object that gives models the functionality of a character.
     * @param status
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Humanoid#RemoveCustomStatus)
     */
    RemoveCustomStatus(this: Humanoid, status: string): boolean;
    /**
     * <strong>Deprecated:</strong> This item is deprecated, as it was a part of the unfinished RbxStatus library which would have allowed you to add conditions to a Humanoid. Do not use it for new work.<br>Removes the defined status from the Status model in the Humanoid.
     * @param this A special object that gives models the functionality of a character.
     * @param status
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Humanoid#RemoveStatus)
     */
    RemoveStatus(this: Humanoid, status?: CastsToEnum<Enum.Status>): boolean;
    /**
     * Dynamically replaces a Humanoid body part with a different part.
     * @param this A special object that gives models the functionality of a character.
     * @param bodyPart The body part to replace. <code>BodyPartR15.Unknown</code> will fail.
     * @param part The <code>Part</code> <code>Instance</code> which will be parented to the character.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Humanoid#ReplaceBodyPartR15)
     */
    ReplaceBodyPartR15(this: Humanoid, bodyPart: CastsToEnum<Enum.BodyPartR15>, part: BasePart): boolean;
    /**
     * Sets whether a given <code>HumanoidStateType</code> is enabled for the <code>Humanoid</code>.
     * @param this A special object that gives models the functionality of a character.
     * @param state The <code>HumanoidStateType</code> to be enabled or disabled.
     * @param enabled <code>true</code> if <code>state</code> is to be enabled, <code>false</code> if <code>state</code> is to be disabled.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Humanoid#SetStateEnabled)
     */
    SetStateEnabled(this: Humanoid, state: CastsToEnum<Enum.HumanoidStateType>, enabled: boolean): void;
    /**
     * Lowers the <code>Humanoid.Health</code> of the <code>Humanoid</code> by the given <em>amount</em> if it is not protected by a <code>ForceField</code>.
     * @param this A special object that gives models the functionality of a character.
     * @param amount The damage, or amount to be deduced from the <code>Humanoid.Health</code>.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Humanoid#TakeDamage)
     */
    TakeDamage(this: Humanoid, amount: number): void;
    /**
     * Unequips any <code>Tool</code> currently equipped by the <code>Humanoid</code>.
     * @param this A special object that gives models the functionality of a character.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Humanoid#UnequipTools)
     */
    UnequipTools(this: Humanoid): void;
    /**
     * Makes the character's look match that of the passed in <code>HumanoidDescription</code>.
     * @param this A special object that gives models the functionality of a character.
     * @param humanoidDescription The <code>HumanoidDescription</code> Instance which you want to set the character to match.
     * @param assetTypeVerification
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Humanoid#ApplyDescription)
     */
    ApplyDescription(this: Humanoid, humanoidDescription: HumanoidDescription, assetTypeVerification?: CastsToEnum<Enum.AssetTypeVerification>): void;
    /**
     * Makes the character's look match that of the passed in <code>HumanoidDescription</code>, even after external changes.
     * @param this A special object that gives models the functionality of a character.
     * @param humanoidDescription The <code>HumanoidDescription</code> instance which you want to set the character to match.
     * @param assetTypeVerification
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Humanoid#ApplyDescriptionReset)
     */
    ApplyDescriptionReset(this: Humanoid, humanoidDescription: HumanoidDescription, assetTypeVerification?: CastsToEnum<Enum.AssetTypeVerification>): void;
    /**
     * Plays emotes and returns if was successfully ran.
     * @param this A special object that gives models the functionality of a character.
     * @param emoteName name of the emote to play.
     * @returns successfully played.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Humanoid#PlayEmote)
     */
    PlayEmote(this: Humanoid, emoteName: string): boolean;
    /**
     * <strong>Deprecated:</strong> <br>Fires when an <code>AnimationTrack</code> begins playing on the <code>Humanoid</code>.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Humanoid#AnimationPlayed)
     */
    readonly AnimationPlayed: RBXScriptSignal<(animationTrack: AnimationTrack) => void>;
    /**
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Humanoid#ApplyDescriptionFinished)
     */
    readonly ApplyDescriptionFinished: RBXScriptSignal<(description: HumanoidDescription) => void>;
    /**
     * Fires when the speed at which a <code>Humanoid</code> is climbing changes.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Humanoid#Climbing)
     */
    readonly Climbing: RBXScriptSignal<(speed: number) => void>;
    /**
     * <strong>Deprecated:</strong> This item is deprecated, as it was a part of the unfinished RbxStatus library which would have allowed you to add conditions to a Humanoid. Do not use it for new work.<br>Fired when a status is added to the Humanoid.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Humanoid#CustomStatusAdded)
     */
    readonly CustomStatusAdded: RBXScriptSignal<(status: string) => void>;
    /**
     * <strong>Deprecated:</strong> This item is deprecated, as it was a part of the unfinished RbxStatus library which would have allowed you to add conditions to a Humanoid. Do not use it for new work.<br>Fired when a status is removed from the Humanoid.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Humanoid#CustomStatusRemoved)
     */
    readonly CustomStatusRemoved: RBXScriptSignal<(status: string) => void>;
    /**
     * Fires when the <code>Humanoid</code> dies.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Humanoid#Died)
     */
    readonly Died: RBXScriptSignal<() => void>;
    /**
     * Fires when the <code>Humanoid</code> enters or leaves the <code>FallingDown</code> <code>HumanoidStateType</code>.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Humanoid#FallingDown)
     */
    readonly FallingDown: RBXScriptSignal<(active: boolean) => void>;
    /**
     * Fires when the <code>Humanoid</code> enters or leaves the <code>Freefall</code> <code>HumanoidStateType</code>.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Humanoid#FreeFalling)
     */
    readonly FreeFalling: RBXScriptSignal<(active: boolean) => void>;
    /**
     * Fires when the <code>Humanoid</code> enters or leaves the <code>GettingUp</code> <code>HumanoidStateType</code>.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Humanoid#GettingUp)
     */
    readonly GettingUp: RBXScriptSignal<(active: boolean) => void>;
    /**
     * Fires when the <code>Humanoid.Health</code> changes (or when the <code>Humanoid.MaxHealth</code> is set).
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Humanoid#HealthChanged)
     */
    readonly HealthChanged: RBXScriptSignal<(health: number) => void>;
    /**
     * Fires when the <code>Humanoid</code> enters and leaves the <code>Jumping</code> <code>HumanoidStateType</code>.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Humanoid#Jumping)
     */
    readonly Jumping: RBXScriptSignal<(active: boolean) => void>;
    /**
     * Fires when the <code>Humanoid</code> finishes walking to a goal declared by <code>Humanoid:MoveTo()</code>.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Humanoid#MoveToFinished)
     */
    readonly MoveToFinished: RBXScriptSignal<(reached: boolean) => void>;
    /**
     * Fires when the <code>Humanoid</code> enters or leaves the <code>PlatformStanding</code> <code>HumanoidStateType</code>.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Humanoid#PlatformStanding)
     */
    readonly PlatformStanding: RBXScriptSignal<(active: boolean) => void>;
    /**
     * Fires when the <code>Humanoid</code> enters or leaves the <code>Ragdoll</code> <code>HumanoidStateType</code>.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Humanoid#Ragdoll)
     */
    readonly Ragdoll: RBXScriptSignal<(active: boolean) => void>;
    /**
     * Fires when the speed at which a <code>Humanoid</code> is running changes.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Humanoid#Running)
     */
    readonly Running: RBXScriptSignal<(speed: number) => void>;
    /**
     * Fired when a <code>Humanoid</code> either sits in a <code>Seat</code> or <code>VehicleSeat</code> or gets up.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Humanoid#Seated)
     */
    readonly Seated: RBXScriptSignal<(active: boolean, currentSeatPart: Seat | VehicleSeat | undefined) => void>;
    /**
     * Fires when the state of the <code>Humanoid</code> is changed.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Humanoid#StateChanged)
     */
    readonly StateChanged: RBXScriptSignal<(oldValue: Enum.HumanoidStateType, newValue: Enum.HumanoidStateType) => void>;
    /**
     * Fires when <code>Humanoid:SetStateEnabled()</code> is called on the <code>Humanoid</code>.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Humanoid#StateEnabledChanged)
     */
    readonly StateEnabledChanged: RBXScriptSignal<(state: Enum.HumanoidStateType, isEnabled: boolean) => void>;
    /**
     * <strong>Deprecated:</strong> This item is deprecated, as it was a part of the unfinished RbxStatus library which would have allowed you to add conditions to a Humanoid. Do not use it for new work.<br>Fired when a status is added to the Humanoid.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Humanoid#StatusAdded)
     */
    readonly StatusAdded: RBXScriptSignal<(status: Enum.Status) => void>;
    /**
     * <strong>Deprecated:</strong> This item is deprecated, as it was a part of the unfinished RbxStatus library which would have allowed you to add conditions to a Humanoid. Do not use it for new work.<br>Fired when a status is removed from the Humanoid.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Humanoid#StatusRemoved)
     */
    readonly StatusRemoved: RBXScriptSignal<(status: Enum.Status) => void>;
    /**
     * Fires when the <code>Humanoid</code> enters or leaves the <code>StrafingNoPhysics</code> <code>HumanoidStateType</code>.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Humanoid#Strafing)
     */
    readonly Strafing: RBXScriptSignal<(active: boolean) => void>;
    /**
     * Fires when the speed at which a <code>Humanoid</code> is swimming in <code>Terrain</code> water changes.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Humanoid#Swimming)
     */
    readonly Swimming: RBXScriptSignal<(speed: number) => void>;
    /**
     * Fires when one of the humanoid's limbs come in contact with another <code>BasePart</code>.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Humanoid#Touched)
     */
    readonly Touched: RBXScriptSignal<(touchingPart: BasePart, humanoidPart: BasePart) => void>;
}
/**
 * Describes the appearance of a Humanoid character including body parts, accessories, colors, scales, animations, and emotes.
 *
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/HumanoidDescription)
 */
interface HumanoidDescription extends Instance {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_HumanoidDescription: unique symbol;
    /**
     * A comma-separated list of asset IDs that will be added as <code>Accessories</code> to a <code>Humanoid</code> rig when <code>applied</code>, usually those attached to its back (such as capes).
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/HumanoidDescription#BackAccessory)
     */
    BackAccessory: string;
    /**
     * Determines the factor by which the shape of a <code>Humanoid</code> is interpolated from the standard R15 body shape (0) to a taller and more slender body type (1).
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/HumanoidDescription#BodyTypeScale)
     */
    BodyTypeScale: number;
    /**
     * When this description is <code>applied</code> to a <code>Humanoid</code>, this determines the <code>Animation.AnimationId</code> to play when its <code>state</code> is <code>Climbing</code>.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/HumanoidDescription#ClimbAnimation)
     */
    ClimbAnimation: number;
    /**
     * Determines by what factor the depth (back-to-front distance) of a <code>Humanoid</code> is scaled.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/HumanoidDescription#DepthScale)
     */
    DepthScale: number;
    /**
     * Determines the asset ID of the Face to be applied to the <code>Humanoid</code>.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/HumanoidDescription#Face)
     */
    Face: number;
    /**
     * A comma-separated list of asset IDs that will be added as <code>Accessories</code> to a <code>Humanoid</code> rig when <code>applied</code>, usually those attached to the front of its face (such as glasses).
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/HumanoidDescription#FaceAccessory)
     */
    FaceAccessory: string;
    /**
     * When this description is <code>applied</code> to a <code>Humanoid</code>, this determines the <code>Animation.AnimationId</code> to play when its <code>state</code> is <code>Freefall</code>.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/HumanoidDescription#FallAnimation)
     */
    FallAnimation: number;
    /**
     * A comma-separated list of asset IDs that will be added as <code>Accessories</code> to a <code>Humanoid</code> rig when <code>applied</code>, usually those attached to front of its torso (such as medals or ties).
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/HumanoidDescription#FrontAccessory)
     */
    FrontAccessory: string;
    /**
     * Determines the <code>Graphic</code> used by a <code>ShirtGraphic</code>.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/HumanoidDescription#GraphicTShirt)
     */
    GraphicTShirt: number;
    /**
     * A comma-separated list of asset IDs that will be added as <code>Accessories</code> to a <code>Humanoid</code> rig when <code>applied</code>, usually those attached to its head resembling hair.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/HumanoidDescription#HairAccessory)
     */
    HairAccessory: string;
    /**
     * A comma-separated list of asset IDs that will be added as <code>Accessories</code> to a <code>Humanoid</code> rig when <code>applied</code>, usually those attached to its head.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/HumanoidDescription#HatAccessory)
     */
    HatAccessory: string;
    /**
     * Determines the asset ID of the Head to be applied to the <code>Humanoid</code>.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/HumanoidDescription#Head)
     */
    Head: number;
    /**
     * Determines the <code>BodyColors.HeadColor3</code> and <code>BodyColors.HeadColor</code> of a <code>Humanoid</code> when <code>applied</code>.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/HumanoidDescription#HeadColor)
     */
    HeadColor: Color3;
    /**
     * Determines by what factor the <strong>Head</strong> object of a <code>Humanoid</code> is scaled, as well as any accessories attached to it.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/HumanoidDescription#HeadScale)
     */
    HeadScale: number;
    /**
     * Determines by what factor the height (top-to-bottom distance) of a <code>Humanoid</code> is scaled, as well as all accessories not attached to its head.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/HumanoidDescription#HeightScale)
     */
    HeightScale: number;
    /**
     * When this description is <code>applied</code> to a <code>Humanoid</code>, this determines the <code>Animation.AnimationId</code> to play when its <code>state</code> is <code>Running</code> at a speed near zero.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/HumanoidDescription#IdleAnimation)
     */
    IdleAnimation: number;
    /**
     * When this description is <code>applied</code> to a <code>Humanoid</code>, this determines the <code>Animation.AnimationId</code> to play when its <code>state</code> is <code>Jumping</code>.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/HumanoidDescription#JumpAnimation)
     */
    JumpAnimation: number;
    /**
     * Determines the asset ID of the LeftArm to be applied to the <code>Humanoid</code>.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/HumanoidDescription#LeftArm)
     */
    LeftArm: number;
    /**
     * Determines the <code>BodyColors.LeftArmColor3</code> and <code>BodyColors.LeftArmColor</code> of a <code>Humanoid</code> when applied.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/HumanoidDescription#LeftArmColor)
     */
    LeftArmColor: Color3;
    /**
     * Determines the asset ID of the LeftLeg to be applied to the <code>Humanoid</code>.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/HumanoidDescription#LeftLeg)
     */
    LeftLeg: number;
    /**
     * Determines the <code>BodyColors.LeftLegColor3</code> and <code>BodyColors.LeftLegColor</code> of a <code>Humanoid</code> when applied.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/HumanoidDescription#LeftLegColor)
     */
    LeftLegColor: Color3;
    /**
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/HumanoidDescription#MoodAnimation)
     */
    MoodAnimation: number;
    /**
     * A comma-separated list of asset IDs that will be added as <code>Accessories</code> to a <code>Humanoid</code> rig when <code>applied</code>, usually those attached to its neck (such as scarves or necklaces).
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/HumanoidDescription#NeckAccessory)
     */
    NeckAccessory: string;
    /**
     * Determines the <code>PantsTemplate</code> used by a <code>Pants</code> instance.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/HumanoidDescription#Pants)
     */
    Pants: number;
    /**
     * Determines how wide (0) or narrow (1) a <code>Humanoid</code> rig is.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/HumanoidDescription#ProportionScale)
     */
    ProportionScale: number;
    /**
     * Determines the asset ID of the RightArm to be applied to the <code>Humanoid</code>.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/HumanoidDescription#RightArm)
     */
    RightArm: number;
    /**
     * Determines the <code>BodyColors.RightArmColor3</code> and <code>BodyColors.RightArmColor</code> of a Humanoid when applied.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/HumanoidDescription#RightArmColor)
     */
    RightArmColor: Color3;
    /**
     * Determines the asset ID of the RightLeg to be applied to the <code>Humanoid</code>.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/HumanoidDescription#RightLeg)
     */
    RightLeg: number;
    /**
     * Determines the <code>BodyColors.RightLegColor3</code> and <code>BodyColors.RightLegColor</code> of a Humanoid when applied.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/HumanoidDescription#RightLegColor)
     */
    RightLegColor: Color3;
    /**
     * When this description is <code>applied</code> to a <code>Humanoid</code>, this determines the <code>Animation.AnimationId</code> to play when its <code>state</code> is <code>Running</code> at a moderate speed.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/HumanoidDescription#RunAnimation)
     */
    RunAnimation: number;
    /**
     * Determines the <code>ShirtTemplate</code> used by a <code>Shirt</code> instance.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/HumanoidDescription#Shirt)
     */
    Shirt: number;
    /**
     * A comma-separated list of asset IDs that will be added as <code>Accessories</code> to a <code>Humanoid</code> rig when <code>applied</code>, usually those attached to its shoulders (such as shoulder-mounted critters).
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/HumanoidDescription#ShouldersAccessory)
     */
    ShouldersAccessory: string;
    /**
     * When this description is <code>applied</code> to a <code>Humanoid</code>, this determines the <code>Animation.AnimationId</code> to play when its <code>state</code> is <code>Swimming</code>.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/HumanoidDescription#SwimAnimation)
     */
    SwimAnimation: number;
    /**
     * Determines the asset ID of the Torso to be applied to the <code>Humanoid</code>.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/HumanoidDescription#Torso)
     */
    Torso: number;
    /**
     * Determines the <code>BodyColors.TorsoColor3</code> and <code>BodyColors.TorsoColor</code> of a Humanoid when applied.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/HumanoidDescription#TorsoColor)
     */
    TorsoColor: Color3;
    /**
     * A comma-separated list of asset IDs that will be added as <code>Accessories</code> to a <code>Humanoid</code> rig when <code>applied</code>, usually those attached to its waist (such as belts).
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/HumanoidDescription#WaistAccessory)
     */
    WaistAccessory: string;
    /**
     * When this description is <code>applied</code> to a <code>Humanoid</code>, this determines the <code>Animation.AnimationId</code> to play when its <code>state</code> is <code>Running</code> at a low speed.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/HumanoidDescription#WalkAnimation)
     */
    WalkAnimation: number;
    /**
     * Determines by what factor the width (left-to-right distance) of a <code>Humanoid</code> is scaled, as well as all accessories not attached to its head.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/HumanoidDescription#WidthScale)
     */
    WidthScale: number;
    /**
     * Adds the emote to the description given a name and its asset ID.
     * @param this Describes the appearance of a Humanoid character including body parts, accessories, colors, scales, animations, and emotes.
     * @param name A string that identifies what emote is being added. Example: <code>"Salute"</code>.
     * @param assetId An emote asset ID.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/HumanoidDescription#AddEmote)
     */
    AddEmote(this: HumanoidDescription, name: string, assetId: number): void;
    /**
     * Returns a table of an avatar's current accessories.
     * @param this Describes the appearance of a Humanoid character including body parts, accessories, colors, scales, animations, and emotes.
     * @param includeRigidAccessories Set to true if rigid accessories from the rigid accessory properties should also be included in the return array. False means only include layered clothing accessories from the AccessoryBlob.
     * @returns Returns an array where each entry specifies for an individual accessory the AccessoryType, AssetId, IsLayered, Order and Puffiness.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/HumanoidDescription#GetAccessories)
     */
    GetAccessories(this: HumanoidDescription, includeRigidAccessories: false): Array<LayeredAccessoryInfo>;
    GetAccessories(this: HumanoidDescription, includeRigidAccessories: boolean): Array<AccessoryInfo>;
    /**
     * Returns a dictionary of emotes that have been <code>added</code> or <code>set</code> to this description.
     * @param this Describes the appearance of a Humanoid character including body parts, accessories, colors, scales, animations, and emotes.
     * @returns A dictionary of emotes where the key is the emote name and the value is an array of emote asset IDs. Example: <pre><code class="language-lua">{     Salute = {3360689775},     Agree = {4849487550},     Disagree = {4849495710} } </code></pre> .
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/HumanoidDescription#GetEmotes)
     */
    GetEmotes(this: HumanoidDescription): EmoteDictionary;
    /**
     * Returns an array of tables describing the equipped emotes that have been <code>set</code>.
     * @param this Describes the appearance of a Humanoid character including body parts, accessories, colors, scales, animations, and emotes.
     * @returns An array of tables describing the name and slot which each emote is equipped. Example: <pre><code class="language-lua">{     {Slot = 3, Name = &quot;Salute&quot;},     {Slot = 2, Name = &quot;Agree&quot;},     {Slot = 1, Name = &quot;Disagree&quot;}, } </code></pre> .
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/HumanoidDescription#GetEquippedEmotes)
     */
    GetEquippedEmotes(this: HumanoidDescription): EquippedEmotes;
    /**
     * Removes any emotes that have been added under the given name.
     * @param this Describes the appearance of a Humanoid character including body parts, accessories, colors, scales, animations, and emotes.
     * @param name The name of the emote as it was <code>set</code> or <code>added</code>.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/HumanoidDescription#RemoveEmote)
     */
    RemoveEmote(this: HumanoidDescription, name: string): void;
    /**
     * Accepts a table that sets the accessories and related properties for an avatar.
     * @param this Describes the appearance of a Humanoid character including body parts, accessories, colors, scales, animations, and emotes.
     * @param accessories Each entry specifies for an individual accessory the AccessoryType, AssetId, IsLayered, Order and Puffiness.
     * @param includeRigidAccessories Set to true if rigid accessories are also included in the passed in array (they would have to not specify Order).
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/HumanoidDescription#SetAccessories)
     */
    SetAccessories(this: HumanoidDescription, accessories: Array<unknown>, includeRigidAccessories: boolean): void;
    /**
     * Sets all of the emotes on this description.
     * @param this Describes the appearance of a Humanoid character including body parts, accessories, colors, scales, animations, and emotes.
     * @param emotes A dictionary of emotes where the key is the emote name and the value is an array of emote asset IDs. Example: <pre><code class="language-lua">{     Salute = {3360689775},     Agree = {4849487550},     Disagree = {4849495710} } </code></pre> .
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/HumanoidDescription#SetEmotes)
     */
    SetEmotes(this: HumanoidDescription, emotes: EmoteDictionary): void;
    /**
     * Sets the currently equipped emotes given an array of emote names.
     * @param this Describes the appearance of a Humanoid character including body parts, accessories, colors, scales, animations, and emotes.
     * @param equippedEmotes An array of emote names. Example: <pre><code class="language-lua">{ &quot;Disagree&quot;, &quot;Agree&quot;, &quot;Salute&quot; } </code></pre> &ndash; OR &ndash; An array of tables describing the name and slot which each emote is equipped. Example: <pre><code class="language-lua">{     {Slot = 3, Name = &quot;Salute&quot;},     {Slot = 2, Name = &quot;Agree&quot;},     {Slot = 1, Name = &quot;Disagree&quot;}, } </code></pre> .
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/HumanoidDescription#SetEquippedEmotes)
     */
    SetEquippedEmotes(this: HumanoidDescription, equippedEmotes: EquippedEmotes): void;
    /**
     * Fires when emotes are added, removed or set on this description.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/HumanoidDescription#EmotesChanged)
     */
    readonly EmotesChanged: RBXScriptSignal<(newEmotes: EmoteDictionary) => void>;
    /**
     * Fires when the equipped emotes are <code>set</code> on this description.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/HumanoidDescription#EquippedEmotesChanged)
     */
    readonly EquippedEmotesChanged: RBXScriptSignal<(newEquippedEmotes: EquippedEmotes) => void>;
}
/**
 * Specifies a control to generate a procedural animation pose using Inverse Kinematics.
 *
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/IKControl)
 */
interface IKControl extends Instance {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_IKControl: unique symbol;
    /**
     * The last part that you are interested in moving your character. For example, the upper arm. Must be an ancestor of <code>EndEffector</code> and be a <code>BasePart</code> or a <code>Bone</code> in your character.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/IKControl#ChainRoot)
     */
    ChainRoot: Instance | undefined;
    /**
     * Toggles the control on and off. True by default.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/IKControl#Enabled)
     */
    Enabled: boolean;
    /**
     * The part that you are interested in moving to reach the <code>Target</code>. For example, the hand of your character. Must be a descendant of <code>ChainRoot</code> and be a <code>BasePart</code> or a <code>Bone</code> in your character.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/IKControl#EndEffector)
     */
    EndEffector: Instance | undefined;
    /**
     * An additional offset applied on top of the <code>EndEffector</code> in its local space to change where it moves.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/IKControl#EndEffectorOffset)
     */
    EndEffectorOffset: CFrame;
    /**
     * An additional offset applied on top of the <code>Target</code> to change where the <code>EndEffector</code> moves.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/IKControl#Offset)
     */
    Offset: CFrame;
    /**
     * An optional instance that determines which way the chain bends. You can use this to specify which way an elbow or knee bends.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/IKControl#Pole)
     */
    Pole: Instance | undefined;
    /**
     * Specifies the order in which controls are solved. Higher values have higher priority.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/IKControl#Priority)
     */
    Priority: number;
    /**
     * Specifies the average number of seconds that it takes for the <code>EndEffector</code> to smoothly reach the <code>Target</code>.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/IKControl#SmoothTime)
     */
    SmoothTime: number;
    /**
     * The object that the <code>EndEffector</code> reaches for or points at. It can be anything that has a position in the world, such as <code>BasePart</code>, <code>Attachment</code>, <code>Bone</code>, or <code>Motor6D</code>.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/IKControl#Target)
     */
    Target: Instance | undefined;
    /**
     * Specifies how the solver satisfies this control.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/IKControl#Type)
     */
    Type: Enum.IKControlType;
    /**
     * Specifies the weight of the IK control target. Should be in the [0, 1] range.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/IKControl#Weight)
     */
    Weight: number;
    /**
     * @param this Specifies a control to generate a procedural animation pose using Inverse Kinematics.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/IKControl#GetChainCount)
     */
    GetChainCount(this: IKControl): number;
    /**
     * @param this Specifies a control to generate a procedural animation pose using Inverse Kinematics.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/IKControl#GetChainLength)
     */
    GetChainLength(this: IKControl): number;
    /**
     * @param this Specifies a control to generate a procedural animation pose using Inverse Kinematics.
     * @param index
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/IKControl#GetNodeLocalCFrame)
     */
    GetNodeLocalCFrame(this: IKControl, index: number): CFrame;
    /**
     * @param this Specifies a control to generate a procedural animation pose using Inverse Kinematics.
     * @param index
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/IKControl#GetNodeWorldCFrame)
     */
    GetNodeWorldCFrame(this: IKControl, index: number): CFrame;
    /**
     * @param this Specifies a control to generate a procedural animation pose using Inverse Kinematics.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/IKControl#GetRawFinalTarget)
     */
    GetRawFinalTarget(this: IKControl): CFrame;
    /**
     * @param this Specifies a control to generate a procedural animation pose using Inverse Kinematics.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/IKControl#GetSmoothedFinalTarget)
     */
    GetSmoothedFinalTarget(this: IKControl): CFrame;
}
/**
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/ILegacyStudioBridge)
 */
interface ILegacyStudioBridge extends Instance {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_ILegacyStudioBridge: unique symbol;
}
/**
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/LegacyStudioBridge)
 */
interface LegacyStudioBridge extends ILegacyStudioBridge {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_LegacyStudioBridge: unique symbol;
}
/**
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/IXPService)
 */
interface IXPService extends Instance {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_IXPService: unique symbol;
}
/**
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/IncrementalPatchBuilder)
 */
interface IncrementalPatchBuilder extends Instance {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_IncrementalPatchBuilder: unique symbol;
    /**
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/IncrementalPatchBuilder#AddPathsToBundle)
     */
    AddPathsToBundle: boolean;
    /**
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/IncrementalPatchBuilder#BuildDebouncePeriod)
     */
    BuildDebouncePeriod: number;
    /**
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/IncrementalPatchBuilder#HighCompression)
     */
    HighCompression: boolean;
    /**
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/IncrementalPatchBuilder#SerializePatch)
     */
    SerializePatch: boolean;
    /**
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/IncrementalPatchBuilder#ZstdCompression)
     */
    ZstdCompression: boolean;
}
/**
 * An object created when an input begins that describes a particular user input.
 *
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/InputObject)
 */
interface InputObject extends Instance {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_InputObject: unique symbol;
    /**
     * A Vector3 describing the Delta between mouse/joystick movements.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/InputObject#Delta)
     */
    Delta: Vector3;
    /**
     * Contains an Enum that describes the kind of input used.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/InputObject#KeyCode)
     */
    KeyCode: Enum.KeyCode;
    /**
     * Describes a positional value of this input.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/InputObject#Position)
     */
    Position: Vector3;
    /**
     * Describes the state of an input being performed, following a specific flow depending on the <code>UserInputType</code>.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/InputObject#UserInputState)
     */
    UserInputState: Enum.UserInputState;
    /**
     * Describes the kind of input being performed (mouse, keyboard, gamepad, touch, etc).
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/InputObject#UserInputType)
     */
    UserInputType: Enum.UserInputType;
    /**
     * @param this An object created when an input begins that describes a particular user input.
     * @param modifierKey
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/InputObject#IsModifierKeyDown)
     */
    IsModifierKeyDown(this: InputObject, modifierKey: CastsToEnum<Enum.ModifierKey>): boolean;
}
/**
 * Used to insert assets from the Roblox website.
 *
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/InsertService)
 */
interface InsertService extends Instance {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_InsertService: unique symbol;
    /**
     * <strong>Deprecated:</strong> This item was never released. Do not use it in new work.<br>Indicates whether ''Free Models'' can be inserted into the game.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/InsertService#AllowInsertFreeModels)
     */
    AllowInsertFreeModels: boolean;
    /**
     * <strong>Deprecated:</strong> This item is deprecated. Do not use it for new work.
     * @param this Used to insert assets from the Roblox website.
     * @param assetId
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/InsertService#ApproveAssetId)
     */
    ApproveAssetId(this: InsertService, assetId: number): void;
    /**
     * <strong>Deprecated:</strong> This item is deprecated. Do not use it for new work.
     * @param this Used to insert assets from the Roblox website.
     * @param assetVersionId
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/InsertService#ApproveAssetVersionId)
     */
    ApproveAssetVersionId(this: InsertService, assetVersionId: number): void;
    /**
     * <strong>Deprecated:</strong> This function has been superseded by <code>InsertService:LoadAsset()</code> which should be used in all new work.<br>Inserts <code>Instance</code> into <code>Workspace</code>.
     * @param this Used to insert assets from the Roblox website.
     * @param instance
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/InsertService#Insert)
     */
    Insert(this: InsertService, instance: Instance): void;
    /**
     * Creates a new <code>MeshPart</code> with specified fidelity values.
     * @param this Used to insert assets from the Roblox website.
     * @param meshId Mesh asset ID.
     * @param collisionFidelity Set <code>MeshPart.CollisionFidelity</code>.
     * @param renderFidelity Set <code>MeshPart.RenderFidelity</code>.
     * @returns New <code>MeshPart</code> instance.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/InsertService#CreateMeshPartAsync)
     */
    CreateMeshPartAsync(this: InsertService, meshId: ContentId, collisionFidelity: CastsToEnum<Enum.CollisionFidelity>, renderFidelity: CastsToEnum<Enum.RenderFidelity>): MeshPart;
    /**
     * <strong>Deprecated:</strong> This item is deprecated. Do not use it for new work.
     * @param this Used to insert assets from the Roblox website.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/InsertService#GetBaseCategories)
     */
    GetBaseCategories(this: InsertService): Array<unknown>;
    /**
     * <strong>Deprecated:</strong> <a href="https://devforum.roblox.com/t/sunsetting-sets/189402">Sets have been removed</a> from Roblox.<br>Returns an array of dictionaries, containing information about various Roblox approved sets.
     * @param this Used to insert assets from the Roblox website.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/InsertService#GetBaseSets)
     */
    GetBaseSets(this: InsertService): Array<SetInfo>;
    /**
     * <strong>Deprecated:</strong> <a href="https://devforum.roblox.com/t/sunsetting-sets/189402">Sets have been removed</a> from Roblox.<br>Returns the most recently uploaded models in the specified category.
     * @param this Used to insert assets from the Roblox website.
     * @param categoryId
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/InsertService#GetCollection)
     */
    GetCollection(this: InsertService, categoryId: number): Array<CollectionInfo>;
    /**
     * Retrieves a list of free Decals from the Catalog.
     * @param this Used to insert assets from the Roblox website.
     * @param searchText String used to search for free decals in the Catalog.
     * @param pageNum The page number in the Catalog to return.
     * @returns A single table (of returned free decals) wrapped in a table.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/InsertService#GetFreeDecals)
     */
    GetFreeDecals(this: InsertService, searchText: string, pageNum: number): [
        Array<FreeSearchResult>
    ];
    /**
     * Retrieves a list of Free Models from the Catalog.
     * @param this Used to insert assets from the Roblox website.
     * @param searchText String used to search for free decals in the Catalog.
     * @param pageNum The page number in the Catalog to return.
     * @returns A single table (of returned free models) wrapped in a table.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/InsertService#GetFreeModels)
     */
    GetFreeModels(this: InsertService, searchText: string, pageNum: number): [
        Array<FreeSearchResult>
    ];
    /**
     * Returns the latest AssetVersionId of an asset for assets created by the place creator. Can be used in combination with <code>InsertService:LoadAssetVersion()</code> to load the latest version of a model, even if it gets updated while the game is running.
     * @param this Used to insert assets from the Roblox website.
     * @param assetId
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/InsertService#GetLatestAssetVersionAsync)
     */
    GetLatestAssetVersionAsync(this: InsertService, assetId: number): number;
    /**
     * <strong>Deprecated:</strong> This item is deprecated. Do not use it for new work.
     * @param this Used to insert assets from the Roblox website.
     * @param userId
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/InsertService#GetUserCategories)
     */
    GetUserCategories(this: InsertService, userId: number): Array<unknown>;
    /**
     * <strong>Deprecated:</strong> <a href="https://devforum.roblox.com/t/sunsetting-sets/189402">Sets have been removed</a> from Roblox.<br>Returns an array of dictionaries, containing information about sets owned by the user.
     * @param this Used to insert assets from the Roblox website.
     * @param userId
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/InsertService#GetUserSets)
     */
    GetUserSets(this: InsertService, userId: number): Array<SetInfo>;
    /**
     * Returns a <code>Model</code> containing the asset.
     * @param this Used to insert assets from the Roblox website.
     * @param assetId The asset ID of the asset being loaded.
     * @returns An instance of the loaded asset.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/InsertService#LoadAsset)
     */
    LoadAsset(this: InsertService, assetId: number): Model;
    /**
     * Returns a model inserted into <code>InsertService</code> containing the asset with the given assetVersionId.
     * @param this Used to insert assets from the Roblox website.
     * @param assetVersionId
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/InsertService#LoadAssetVersion)
     */
    LoadAssetVersion(this: InsertService, assetVersionId: number): Model;
    /**
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/InsertService#InternalDelete)
     */
    readonly InternalDelete: RBXScriptSignal<(instance: Instance) => void>;
}
/**
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/InternalSyncItem)
 */
interface InternalSyncItem extends Instance {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_InternalSyncItem: unique symbol;
}
/**
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/InternalSyncService)
 */
interface InternalSyncService extends Instance {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_InternalSyncService: unique symbol;
}
/**
 * The base class for joints.
 *
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/JointInstance)
 */
interface JointInstance extends Instance {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_JointInstance: unique symbol;
    /**
     * Determines if the joint is currently active in the world.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/JointInstance#Active)
     */
    readonly Active: boolean;
    /**
     * Determines how the offset point is attached to <code>JointInstance.Part0</code>.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/JointInstance#C0)
     */
    C0: CFrame;
    /**
     * Is subtracted from the <code>JointInstance.C0</code> property to create an offset point for <code>JointInstance.Part1</code>.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/JointInstance#C1)
     */
    C1: CFrame;
    /**
     * Sets whether the joint is active or not.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/JointInstance#Enabled)
     */
    Enabled: boolean;
    /**
     * The first <code>BasePart</code> that the joint connects.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/JointInstance#Part0)
     */
    Part0?: BasePart;
    /**
     * The second <code>BasePart</code> that the joint connects.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/JointInstance#Part1)
     */
    Part1?: BasePart;
}
/**
 * The base class for classic motor joints.
 *
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/DynamicRotate)
 */
interface DynamicRotate extends JointInstance {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_DynamicRotate: unique symbol;
    /**
     * The base angle of the DynamicRotate object, in radians.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/DynamicRotate#BaseAngle)
     */
    BaseAngle: number;
}
/**
 * <strong>Deprecated:</strong> This class works alongside the deprecated <code>SurfaceType</code> and should not be used for future work; use <code>HingeConstraint</code> instead.
 *
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/RotateP)
 */
interface RotateP extends DynamicRotate {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_RotateP: unique symbol;
}
/**
 * <strong>Deprecated:</strong> This class works alongside the deprecated <code>SurfaceType</code> and should not be used for future work; use <code>HingeConstraint</code> instead.
 *
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/RotateV)
 */
interface RotateV extends DynamicRotate {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_RotateV: unique symbol;
}
/**
 * <strong>Deprecated:</strong> This joint type has been deprecated and should not be used in new work.<br>Glue is a type of joint that can break when enough force is applied.
 *
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Glue)
 */
interface Glue extends JointInstance {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_Glue: unique symbol;
    /**
     * Determines the face of a <code>Glue</code>.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Glue#F0)
     */
    F0: Vector3;
    /**
     * Determines the face of a <code>Glue</code>.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Glue#F1)
     */
    F1: Vector3;
    /**
     * Determines the face of a <code>Glue</code>.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Glue#F2)
     */
    F2: Vector3;
    /**
     * Determines the face of a <code>Glue</code>.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Glue#F3)
     */
    F3: Vector3;
}
/**
 * <strong>Deprecated:</strong> <br>ManualSurfaceJointInstance is the base class for <code>ManualGlue</code> and <code>ManualWeld</code>.
 *
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/ManualSurfaceJointInstance)
 */
interface ManualSurfaceJointInstance extends JointInstance {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_ManualSurfaceJointInstance: unique symbol;
}
/**
 * <strong>Deprecated:</strong> <br>ManualGlue is a joint created in a similar manner to the <code>ManualWeld</code> class. It functions identically to the <code>Glue</code> class.
 *
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/ManualGlue)
 */
interface ManualGlue extends ManualSurfaceJointInstance {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_ManualGlue: unique symbol;
}
/**
 * <strong>Deprecated:</strong> <br>Holds two parts together and functions identically to <code>Weld</code>.
 *
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/ManualWeld)
 */
interface ManualWeld extends ManualSurfaceJointInstance {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_ManualWeld: unique symbol;
}
/**
 * Makes a movable <code>JointInstance</code> between two parts.
 *
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Motor)
 */
interface Motor extends JointInstance {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_Motor: unique symbol;
    /**
     * Displays the current rotation of the motor in radians.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Motor#CurrentAngle)
     */
    CurrentAngle: number;
    /**
     * The desired angle to turn the motor to in radians.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Motor#DesiredAngle)
     */
    DesiredAngle: number;
    /**
     * The maximum velocity the motor can use to reach <code>Motor.DesiredAngle</code> measured in radians per physics frame (1/60th of a second).
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Motor#MaxVelocity)
     */
    MaxVelocity: number;
    /**
     * Sets <code>Motor.DesiredAngle</code> of the motor.
     * @param this Makes a movable <code>JointInstance</code> between two parts.
     * @param value
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Motor#SetDesiredAngle)
     */
    SetDesiredAngle(this: Motor, value: number): void;
}
/**
 * Creates an animatable joint between two <code>BaseParts</code>.
 *
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Motor6D)
 */
interface Motor6D extends Motor {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_Motor6D: unique symbol;
    /**
     * Describes the current animation offset of the <code>Motor6D</code> joint.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Motor6D#Transform)
     */
    Transform: CFrame;
}
/**
 * <strong>Deprecated:</strong> This class works alongside the deprecated <code>SurfaceType</code> and should not be used for future work; use <code>HingeConstraint</code> instead.
 *
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Rotate)
 */
interface Rotate extends JointInstance {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_Rotate: unique symbol;
}
/**
 * <strong>Deprecated:</strong> <br>Holds two parts together and functions identically to <code>Weld</code>.
 *
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Snap)
 */
interface Snap extends JointInstance {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_Snap: unique symbol;
}
/**
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/VelocityMotor)
 */
interface VelocityMotor extends JointInstance {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_VelocityMotor: unique symbol;
    /**
     * Displays the angle that the motor is at in radians.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/VelocityMotor#CurrentAngle)
     */
    CurrentAngle: number;
    /**
     * The desired angle to be reached. The motor will attempt to reach this angle.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/VelocityMotor#DesiredAngle)
     */
    DesiredAngle: number;
    /**
     * The <code>Hole</code> linked to this VelocityMotor.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/VelocityMotor#Hole)
     */
    Hole: Hole | undefined;
    /**
     * The maximum amount of velocity able to be reached.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/VelocityMotor#MaxVelocity)
     */
    MaxVelocity: number;
}
/**
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Weld)
 */
interface Weld extends JointInstance {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_Weld: unique symbol;
}
/**
 * <strong>Deprecated:</strong> This service has been deprecated in favor of <a href="../../../physics/mechanical-constraints.md">constraints</a> which should be used for surface connections instead<br>A service that stores joints created by surface connections.
 *
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/JointsService)
 */
interface JointsService extends Instance {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_JointsService: unique symbol;
    /**
     * Will remove any 'create joints' that were made visible via the <code>JointsService:ShowPermissibleJoints()</code> method.
     * @param this <strong>Deprecated:</strong> This service has been deprecated in favor of <a href="../../../physics/mechanical-constraints.md">constraints</a> which should be used for surface connections instead<br>A service that stores joints created by surface connections.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/JointsService#ClearJoinAfterMoveJoints)
     */
    ClearJoinAfterMoveJoints(this: JointsService): void;
    /**
     * Updates all visible joints for the parts assigned by the <code>JointsService:SetJoinAfterMoveTarget()</code> and <code>JointsService:SetJoinAfterMoveInstance()</code> methods.
     * @param this <strong>Deprecated:</strong> This service has been deprecated in favor of <a href="../../../physics/mechanical-constraints.md">constraints</a> which should be used for surface connections instead<br>A service that stores joints created by surface connections.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/JointsService#CreateJoinAfterMoveJoints)
     */
    CreateJoinAfterMoveJoints(this: JointsService): void;
    /**
     * Sets the PVInstance that will be connected with the target PVInstance specified by <code>JointsService:SetJoinAfterMoveTarget()</code>.
     * @param this <strong>Deprecated:</strong> This service has been deprecated in favor of <a href="../../../physics/mechanical-constraints.md">constraints</a> which should be used for surface connections instead<br>A service that stores joints created by surface connections.
     * @param joinInstance
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/JointsService#SetJoinAfterMoveInstance)
     */
    SetJoinAfterMoveInstance(this: JointsService, joinInstance: PVInstance): void;
    /**
     * Sets the PVInstance that will be connected with the PVInstance specified by <code>JointsService:SetJoinAfterMoveInstance()</code>.
     * @param this <strong>Deprecated:</strong> This service has been deprecated in favor of <a href="../../../physics/mechanical-constraints.md">constraints</a> which should be used for surface connections instead<br>A service that stores joints created by surface connections.
     * @param joinTarget
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/JointsService#SetJoinAfterMoveTarget)
     */
    SetJoinAfterMoveTarget(this: JointsService, joinTarget: PVInstance): void;
    /**
     * When used it will visibly display a potential surface connection between the two <code>BasePart</code>, which were set with <code>JointsService:SetJoinAfterMoveTarget()</code> and <code>JointsService:SetJoinAfterMoveInstance()</code>.
     * @param this <strong>Deprecated:</strong> This service has been deprecated in favor of <a href="../../../physics/mechanical-constraints.md">constraints</a> which should be used for surface connections instead<br>A service that stores joints created by surface connections.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/JointsService#ShowPermissibleJoints)
     */
    ShowPermissibleJoints(this: JointsService): void;
}
/**
 * A Keyframe holds the <code>Poses</code> applied to joints in a <code>Model</code> at a given point of time in an animation. <code>Keyframes</code> are interpolated between during animation playback.
 *
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Keyframe)
 */
interface Keyframe extends Instance {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_Keyframe: unique symbol;
    /**
     * The <code>Keyframe</code> time position (in seconds) in an animation. This determines the time at which the <code>Poses</code> inside the keyframe will be shown.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Keyframe#Time)
     */
    Time: number;
    /**
     * Adds a <code>KeyframeMarker</code> to the <code>Keyframe</code> by parenting it to the keyframe.
     * @param this A Keyframe holds the <code>Poses</code> applied to joints in a <code>Model</code> at a given point of time in an animation. <code>Keyframes</code> are interpolated between during animation playback.
     * @param marker The <code>KeyframeMarker</code> being parented to the <code>Keyframe</code>.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Keyframe#AddMarker)
     */
    AddMarker(this: Keyframe, marker: KeyframeMarker): void;
    /**
     * Adds a <code>Pose</code> to the <code>Keyframe</code> by parenting it to the keyframe.
     * @param this A Keyframe holds the <code>Poses</code> applied to joints in a <code>Model</code> at a given point of time in an animation. <code>Keyframes</code> are interpolated between during animation playback.
     * @param pose The <code>Pose</code> to be added.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Keyframe#AddPose)
     */
    AddPose(this: Keyframe, pose: Instance): void;
    /**
     * Returns an array containing all <code>KeyframeMarkers</code> that have been added to the <code>Keyframe</code>.
     * @param this A Keyframe holds the <code>Poses</code> applied to joints in a <code>Model</code> at a given point of time in an animation. <code>Keyframes</code> are interpolated between during animation playback.
     * @returns An array containing all <code>KeyframeMarkers</code> that have been added to the <code>Keyframe</code>.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Keyframe#GetMarkers)
     */
    GetMarkers(this: Keyframe): Array<KeyframeMarker>;
    /**
     * Returns an array containing all <code>Poses</code> that have been added to a <code>Keyframe</code>.
     * @param this A Keyframe holds the <code>Poses</code> applied to joints in a <code>Model</code> at a given point of time in an animation. <code>Keyframes</code> are interpolated between during animation playback.
     * @returns An array of <code>Poses</code>.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Keyframe#GetPoses)
     */
    GetPoses(this: Keyframe): Array<Pose>;
    /**
     * Removes a <code>KeyframeMarker</code> from the <code>Keyframe</code> by settings its <code>Instance.Parent</code> to nil.
     * @param this A Keyframe holds the <code>Poses</code> applied to joints in a <code>Model</code> at a given point of time in an animation. <code>Keyframes</code> are interpolated between during animation playback.
     * @param marker The marker being removed from the <code>Keyframe</code>.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Keyframe#RemoveMarker)
     */
    RemoveMarker(this: Keyframe, marker: KeyframeMarker): void;
    /**
     * Removes a <code>Pose</code> from the <code>Keyframe</code> by setting its <code>Instance.Parent</code> to nil.
     * @param this A Keyframe holds the <code>Poses</code> applied to joints in a <code>Model</code> at a given point of time in an animation. <code>Keyframes</code> are interpolated between during animation playback.
     * @param pose The <code>Pose</code> to be removed.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Keyframe#RemovePose)
     */
    RemovePose(this: Keyframe, pose: Instance): void;
}
/**
 * An instance meant to represent an event that will eventually be fired when a <code>Keyframe</code> is hit.
 *
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/KeyframeMarker)
 */
interface KeyframeMarker extends Instance {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_KeyframeMarker: unique symbol;
    /**
     * A value that is specified for a <code>KeyframeMarker</code>.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/KeyframeMarker#Value)
     */
    Value: string;
}
/**
 * Provides functions to load and preview <code>KeyframeSequence</code>.
 *
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/KeyframeSequenceProvider)
 */
interface KeyframeSequenceProvider extends Instance {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_KeyframeSequenceProvider: unique symbol;
    /**
     * Generates a temporary asset ID from a <code>KeyframeSequence</code> that can be used for localized testing of an animation. Generates an <em>active://</em> URL.
     * @param this Provides functions to load and preview <code>KeyframeSequence</code>.
     * @param keyframeSequence The <code>KeyframeSequence</code> to be used.
     * @returns A temporary asset ID generated for localized animation playback.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/KeyframeSequenceProvider#RegisterActiveKeyframeSequence)
     */
    RegisterActiveKeyframeSequence(this: KeyframeSequenceProvider, keyframeSequence: Instance): ContentId;
    /**
     * Generates a temporary asset ID from a <code>KeyframeSequence</code> that can be used for localized testing of an animation. Generates a hash.
     * @param this Provides functions to load and preview <code>KeyframeSequence</code>.
     * @param keyframeSequence The <code>KeyframeSequence</code> to be used.
     * @returns A temporary asset ID generated for localized animation playback.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/KeyframeSequenceProvider#RegisterKeyframeSequence)
     */
    RegisterKeyframeSequence(this: KeyframeSequenceProvider, keyframeSequence: Instance): ContentId;
    /**
     * This function returns an <code>InventoryPages</code> object which can be used to iterate over animations owned by a specific user.
     * @param this Provides functions to load and preview <code>KeyframeSequence</code>.
     * @param userId The user ID of the user.
     * @returns An <code>InventoryPages</code> of animations.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/KeyframeSequenceProvider#GetAnimations)
     */
    GetAnimations(this: KeyframeSequenceProvider, userId: number): InventoryPages<number>;
    /**
     * Returns a KeyframeSequence based on the specified assetId asynchronously.
     * @param this Provides functions to load and preview <code>KeyframeSequence</code>.
     * @param assetId The content ID of the animation.
     * @returns The <code>KeyframeSequence</code> found.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/KeyframeSequenceProvider#GetKeyframeSequenceAsync)
     */
    GetKeyframeSequenceAsync(this: KeyframeSequenceProvider, assetId: string): KeyframeSequence;
}
/**
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/LSPFileSyncService)
 */
interface LSPFileSyncService extends Instance {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_LSPFileSyncService: unique symbol;
}
/**
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/LanguageService)
 */
interface LanguageService extends Instance {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_LanguageService: unique symbol;
}
/**
 * Light is a root class for dynamic lighting related objects.
 *
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Light)
 */
interface Light extends Instance {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_Light: unique symbol;
    /**
     * Sets how bright the emitted light is, defaults to 1.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Light#Brightness)
     */
    Brightness: number;
    /**
     * The color of the emitted light.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Light#Color)
     */
    Color: Color3;
    /**
     * If set to true, light will be emitted from the source object.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Light#Enabled)
     */
    Enabled: boolean;
    /**
     * If set to true, will project shadows if light is blocked by an obstacle.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Light#Shadows)
     */
    Shadows: boolean;
}
/**
 * A light source that emits illumination from a single point.
 *
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/PointLight)
 */
interface PointLight extends Light {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_PointLight: unique symbol;
    /**
     * The size of the area that the PointLight will illuminate.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/PointLight#Range)
     */
    Range: number;
}
/**
 * A light source that emits light directionally in the shape of a cone with a spherical base.
 *
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/SpotLight)
 */
interface SpotLight extends Light {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_SpotLight: unique symbol;
    /**
     * The angle of which the light is shone from the SpotLight.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/SpotLight#Angle)
     */
    Angle: number;
    /**
     * Sets the side of the parent that the SpotLight comes from.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/SpotLight#Face)
     */
    Face: Enum.NormalId;
    /**
     * The size of the area that the SpotLight will illuminate.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/SpotLight#Range)
     */
    Range: number;
}
/**
 * A light source that emits illumination of a specified color and brightness from a face for a specified range.
 *
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/SurfaceLight)
 */
interface SurfaceLight extends Light {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_SurfaceLight: unique symbol;
    /**
     * The angle of which the light is shone from the SurfaceLight.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/SurfaceLight#Angle)
     */
    Angle: number;
    /**
     * Sets the side of the parent that the SurfaceLight comes from.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/SurfaceLight#Face)
     */
    Face: Enum.NormalId;
    /**
     * The distance from the SurfaceLight's face that will illuminate.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/SurfaceLight#Range)
     */
    Range: number;
}
/**
 * The <code>Lighting</code> service controls global lighting in an experience. It includes a range of adjustable properties that you can use to change how lighting appears and interacts with other objects.
 *
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Lighting)
 */
interface Lighting extends Instance {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_Lighting: unique symbol;
    /**
     * The lighting hue applied to areas that are occluded from the sky, such as indoor areas.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Lighting#Ambient)
     */
    Ambient: Color3;
    /**
     * The intensity of illumination in the place.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Lighting#Brightness)
     */
    Brightness: number;
    /**
     * A numerical representation (in hours) of the current time of day used by <code>Lighting</code>.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Lighting#ClockTime)
     */
    ClockTime: number;
    /**
     * The hue represented in light reflected in the opposite surfaces to those facing the sun or moon.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Lighting#ColorShift_Bottom)
     */
    ColorShift_Bottom: Color3;
    /**
     * The hue represented in light reflected from surfaces facing the sun or moon.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Lighting#ColorShift_Top)
     */
    ColorShift_Top: Color3;
    /**
     * Ambient light that is derived from the environment.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Lighting#EnvironmentDiffuseScale)
     */
    EnvironmentDiffuseScale: number;
    /**
     * Specular light derived from environment.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Lighting#EnvironmentSpecularScale)
     */
    EnvironmentSpecularScale: number;
    /**
     * The exposure compensation value.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Lighting#ExposureCompensation)
     */
    ExposureCompensation: number;
    /**
     * A <code>Color3</code> value giving the hue of <code>Lighting</code> fog.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Lighting#FogColor)
     */
    FogColor: Color3;
    /**
     * The depth from the <code>Workspace.CurrentCamera</code>, in studs, at which fog will be completely opaque.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Lighting#FogEnd)
     */
    FogEnd: number;
    /**
     * The depth from the <code>Workspace.CurrentCamera</code>, in studs, at which fog begins to show.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Lighting#FogStart)
     */
    FogStart: number;
    /**
     * The geographic latitude, in degrees, of the scene, influencing the result of <code>Lighting</code> time on the position of the sun and moon.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Lighting#GeographicLatitude)
     */
    GeographicLatitude: number;
    /**
     * Toggles voxel-based dynamic lighting for the place.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Lighting#GlobalShadows)
     */
    GlobalShadows: boolean;
    /**
     * The lighting hue applied to outdoor areas.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Lighting#OutdoorAmbient)
     */
    OutdoorAmbient: Color3;
    /**
     * <strong>Deprecated:</strong> This item is no longer supported as the outlines feature was removed from the Roblox platform.<br>Determines whether outlines are enabled or disabled in a place.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Lighting#Outlines)
     */
    Outlines: boolean;
    /**
     * <strong>Deprecated:</strong> This item is deprecated and has no current functionality. Do not use it for new work.<br>This is supposed to change the color of player shadows, but currently doesn't do anything.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Lighting#ShadowColor)
     */
    ShadowColor: Color3;
    /**
     * Controls how blurry the shadows are.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Lighting#ShadowSoftness)
     */
    ShadowSoftness: number;
    /**
     * A 24-hour string representation of the current time of day used by <code>Lighting</code>.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Lighting#TimeOfDay)
     */
    TimeOfDay: string;
    /**
     * Returns the number of minutes that have passed after midnight for the purposes of lighting.
     * @param this The <code>Lighting</code> service controls global lighting in an experience. It includes a range of adjustable properties that you can use to change how lighting appears and interacts with other objects.
     * @returns The number of minutes after midnight.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Lighting#GetMinutesAfterMidnight)
     */
    GetMinutesAfterMidnight(this: Lighting): number;
    /**
     * Returns a <code>Vector3</code> representing the direction of the moon.
     * @param this The <code>Lighting</code> service controls global lighting in an experience. It includes a range of adjustable properties that you can use to change how lighting appears and interacts with other objects.
     * @returns <code>Vector3</code> representing the direction of the moon.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Lighting#GetMoonDirection)
     */
    GetMoonDirection(this: Lighting): Vector3;
    /**
     * Returns the moon's current phase.
     * @param this The <code>Lighting</code> service controls global lighting in an experience. It includes a range of adjustable properties that you can use to change how lighting appears and interacts with other objects.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Lighting#GetMoonPhase)
     */
    GetMoonPhase(this: Lighting): number;
    /**
     * Returns a <code>Vector3</code> representing the direction of the sun.
     * @param this The <code>Lighting</code> service controls global lighting in an experience. It includes a range of adjustable properties that you can use to change how lighting appears and interacts with other objects.
     * @returns <code>Vector3</code> representing the direction of the sun.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Lighting#GetSunDirection)
     */
    GetSunDirection(this: Lighting): Vector3;
    /**
     * Sets <code>TimeOfDay</code> and <code>ClockTime</code> to the given number of minutes after midnight.
     * @param this The <code>Lighting</code> service controls global lighting in an experience. It includes a range of adjustable properties that you can use to change how lighting appears and interacts with other objects.
     * @param minutes The number of minutes after midnight.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Lighting#SetMinutesAfterMidnight)
     */
    SetMinutesAfterMidnight(this: Lighting, minutes: number): void;
    /**
     * This event fires when a <code>Lighting</code> property is changed or a <code>Sky</code> is added or removed from <code>Lighting</code>.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Lighting#LightingChanged)
     */
    readonly LightingChanged: RBXScriptSignal<(skyChanged: boolean) => void>;
}
/**
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/LinkingService)
 */
interface LinkingService extends Instance {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_LinkingService: unique symbol;
}
/**
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/LiveScriptingService)
 */
interface LiveScriptingService extends Instance {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_LiveScriptingService: unique symbol;
}
/**
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/LiveSyncService)
 */
interface LiveSyncService extends Instance {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_LiveSyncService: unique symbol;
    /**
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/LiveSyncService#HasSyncedInstances)
     */
    readonly HasSyncedInstances: boolean;
    /**
     * @param this
     * @param instance
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/LiveSyncService#GetSyncState)
     */
    GetSyncState(this: LiveSyncService, instance: Instance): unknown;
    /**
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/LiveSyncService#SyncStatusChanged)
     */
    readonly SyncStatusChanged: RBXScriptSignal<(instance: Instance) => void>;
}
/**
 * Handles automated translation.
 *
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/LocalizationService)
 */
interface LocalizationService extends Instance {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_LocalizationService: unique symbol;
    /**
     * The locale ID used for localizing core and internal features.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/LocalizationService#RobloxLocaleId)
     */
    readonly RobloxLocaleId: string;
    /**
     * The locale id that the local player has set for their operating system.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/LocalizationService#SystemLocaleId)
     */
    readonly SystemLocaleId: string;
    /**
     * Returns a list of <code>LocalizationTable</code> objects used for localizing core scripts.
     * @param this Handles automated translation.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/LocalizationService#GetCorescriptLocalizations)
     */
    GetCorescriptLocalizations(this: LocalizationService): Array<Instance>;
    /**
     * Gets all entries used for automated localization.
     * @param this Handles automated translation.
     * @param instance
     * @returns An array of arrays, where each array is in the same format as described in <code>LocalizationTable:GetEntries()</code>.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/LocalizationService#GetTableEntries)
     */
    GetTableEntries(this: LocalizationService, instance?: Instance): Array<unknown>;
    /**
     * Returns a <code>Translator</code> to be used for translations using the locale data loaded.
     * @param this Handles automated translation.
     * @param player The <code>Player</code> that you are getting the <code>Translator</code> for.
     * @returns The <code>Translator</code> instance for the specified locale.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/LocalizationService#GetTranslatorForPlayer)
     */
    GetTranslatorForPlayer(this: LocalizationService, player: Player): Translator;
    /**
     * Returns country/region code string according to player's client IP geolocation.
     * @param this Handles automated translation.
     * @param player The player that you are getting country/region information for.
     * @returns A string indicating the country/region code of a player.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/LocalizationService#GetCountryRegionForPlayerAsync)
     */
    GetCountryRegionForPlayerAsync(this: LocalizationService, player: Instance): string;
    /**
     * Yields until the cloud <code>LocalizationTable</code> for the argument locale has been loaded - if available. Returns a <code>Translator</code> instance to be used for translations for the provided locale.
     * @param this Handles automated translation.
     * @param locale A Roblox supported language or locale code.
     * @returns The <code>Translator</code> instance for the specified locale.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/LocalizationService#GetTranslatorForLocaleAsync)
     */
    GetTranslatorForLocaleAsync(this: LocalizationService, locale: string): Translator;
    /**
     * Yields until the cloud <code>LocalizationTable</code> for the player's locale has been loaded - if available. Returns a <code>Translator</code> instance to be used for translations for the provided locale.
     * @param this Handles automated translation.
     * @param player The <code>Player</code> that you are getting the <code>Translator</code> for.
     * @returns The <code>Translator</code> instance for the specified locale.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/LocalizationService#GetTranslatorForPlayerAsync)
     */
    GetTranslatorForPlayerAsync(this: LocalizationService, player: Player): Translator;
}
/**
 * A LocalizationTable is a database of translations. It contains source strings and translations for various languages.
 *
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/LocalizationTable)
 */
interface LocalizationTable extends Instance {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_LocalizationTable: unique symbol;
    /**
     * <strong>Deprecated:</strong> This item has been superseded by <code>LocalizationTable.SourceLocaleId</code> which should be used in all new work.<br>The default IETF tag to use if the ''languageKey'' parameter is excluded from the <code>LocalizationTable:GetString()</code> method.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/LocalizationTable#DevelopmentLanguage)
     */
    DevelopmentLanguage: string;
    /**
     * <strong>Deprecated:</strong> This item is deprecated. Do not use it for new work.<br>The object that is being targeted for localization by this table. Localization is applied to it and all of it's descendants.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/LocalizationTable#Root)
     */
    Root: Instance | undefined;
    /**
     * The locale of source strings.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/LocalizationTable#SourceLocaleId)
     */
    SourceLocaleId: string;
    /**
     * <strong>Deprecated:</strong> This item has been superseded by <code>LocalizationTable:GetEntries()</code> which should be used in all new work.
     * @param this A LocalizationTable is a database of translations. It contains source strings and translations for various languages.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/LocalizationTable#GetContents)
     */
    GetContents(this: LocalizationTable): string;
    /**
     * Returns an array of dictionaries, where each dictionary represents an entry of localization data.
     * @param this A LocalizationTable is a database of translations. It contains source strings and translations for various languages.
     * @returns An array of dictionaries, where each dictionary represents an entry of localization data.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/LocalizationTable#GetEntries)
     */
    GetEntries(this: LocalizationTable): Array<LocalizationEntry>;
    /**
     * <strong>Deprecated:</strong> This item has been superseded by <code>LocalizationTable:GetTranslator()</code> which should be used in all new work.<br>Returns a translation based on the specified language and key.
     * @param this A LocalizationTable is a database of translations. It contains source strings and translations for various languages.
     * @param targetLocaleId Specified language.
     * @param key An optional unique key for fast hash lookups in code. If it is non-empty it must be unique in the table.
     * @returns Translated string.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/LocalizationTable#GetString)
     */
    GetString(this: LocalizationTable, targetLocaleId: string, key: string): string;
    /**
     * Returns a <code>Translator</code> for entries in this LocalizationTable, in the specified language.
     * @param this A LocalizationTable is a database of translations. It contains source strings and translations for various languages.
     * @param localeId
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/LocalizationTable#GetTranslator)
     */
    GetTranslator(this: LocalizationTable, localeId: string): Translator;
    /**
     * Removes an entry from the LocalizationTable, using the specified <code>key</code>, <code>source</code>, and <code>context</code> to narrow down the specific entry to be removed.
     * @param this A LocalizationTable is a database of translations. It contains source strings and translations for various languages.
     * @param key
     * @param source
     * @param context
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/LocalizationTable#RemoveEntry)
     */
    RemoveEntry(this: LocalizationTable, key: string, source: string, context: string): void;
    /**
     * Removes a single language translation from the LocalizationTable, using the provided <code>key</code>, <code>source</code>, <code>context</code>, and <code>localeId</code> to narrow down the specific entry to be removed.
     * @param this A LocalizationTable is a database of translations. It contains source strings and translations for various languages.
     * @param key
     * @param source
     * @param context
     * @param localeId
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/LocalizationTable#RemoveEntryValue)
     */
    RemoveEntryValue(this: LocalizationTable, key: string, source: string, context: string, localeId: string): void;
    /**
     * <strong>Deprecated:</strong> This item has been superseded by <code>LocalizationTable:RemoveEntry()</code> which should be used in all new work<br>Deprecated in favor of <code>LocalizationTable:RemoveEntry()</code>.
     * @param this A LocalizationTable is a database of translations. It contains source strings and translations for various languages.
     * @param key
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/LocalizationTable#RemoveKey)
     */
    RemoveKey(this: LocalizationTable, key: string): void;
    /**
     * Removes all translations from the LocalizationTable with the specified localeId.
     * @param this A LocalizationTable is a database of translations. It contains source strings and translations for various languages.
     * @param localeId
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/LocalizationTable#RemoveTargetLocale)
     */
    RemoveTargetLocale(this: LocalizationTable, localeId: string): void;
    /**
     * <strong>Deprecated:</strong> This item has been superseded by <code>LocalizationTable:SetEntries()</code> which should be used in all new work<br>Sets the contents of the LocalizationTable, via the legacy JSON format.
     * @param this A LocalizationTable is a database of translations. It contains source strings and translations for various languages.
     * @param contents
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/LocalizationTable#SetContents)
     */
    SetContents(this: LocalizationTable, contents: string): void;
    /**
     * Sets the contents of the LocalizationTable.
     * @param this A LocalizationTable is a database of translations. It contains source strings and translations for various languages.
     * @param entries
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/LocalizationTable#SetEntries)
     */
    SetEntries(this: LocalizationTable, entries: Array<LocalizationEntry>): void;
    /**
     * <strong>Deprecated:</strong> This item has been superseded by <code>LocalizationTable:SetEntries()</code> which should be used in all new work
     * @param this A LocalizationTable is a database of translations. It contains source strings and translations for various languages.
     * @param key
     * @param targetLocaleId
     * @param text
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/LocalizationTable#SetEntry)
     */
    SetEntry(this: LocalizationTable, key: string, targetLocaleId: string, text: string): void;
    /**
     * Sets the <strong>Context</strong> field of a LocalizationTable entry to <code>newContext</code>, using the specified <code>key</code>, <code>source</code>, and <code>context</code> to narrow down the entry that will have this change applied.
     * @param this A LocalizationTable is a database of translations. It contains source strings and translations for various languages.
     * @param key
     * @param source
     * @param context
     * @param newContext
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/LocalizationTable#SetEntryContext)
     */
    SetEntryContext(this: LocalizationTable, key: string, source: string, context: string, newContext: string): void;
    /**
     * Sets the <strong>Example</strong> field of a LocalizationTable entry to <code>example</code>, using the specified <code>key</code>, <code>source</code>, and <code>context</code> to narrow down the entry that will have this change applied.
     * @param this A LocalizationTable is a database of translations. It contains source strings and translations for various languages.
     * @param key
     * @param source
     * @param context
     * @param example
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/LocalizationTable#SetEntryExample)
     */
    SetEntryExample(this: LocalizationTable, key: string, source: string, context: string, example: string): void;
    /**
     * Sets the <strong>Key</strong> field of a LocalizationTable entry to <code>newKey</code>, using the specified <code>key</code>, <code>source</code>, and <code>context</code> to narrow down the entry that will have this change applied.
     * @param this A LocalizationTable is a database of translations. It contains source strings and translations for various languages.
     * @param key
     * @param source
     * @param context
     * @param newKey
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/LocalizationTable#SetEntryKey)
     */
    SetEntryKey(this: LocalizationTable, key: string, source: string, context: string, newKey: string): void;
    /**
     * Sets the <strong>Source</strong> field of a LocalizationTable entry to <code>newSource</code>, using the specified <code>key</code>, <code>source</code>, and <code>context</code> to narrow down the entry that will have this change applied.
     * @param this A LocalizationTable is a database of translations. It contains source strings and translations for various languages.
     * @param key
     * @param source
     * @param context
     * @param newSource
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/LocalizationTable#SetEntrySource)
     */
    SetEntrySource(this: LocalizationTable, key: string, source: string, context: string, newSource: string): void;
    /**
     * Sets the text of the specified localeId in a LocalizationTable entry, using the specified <code>key</code>, <code>source</code>, and <code>context</code> to narrow down the entry that will have this change applied.
     * @param this A LocalizationTable is a database of translations. It contains source strings and translations for various languages.
     * @param key
     * @param source
     * @param context
     * @param localeId
     * @param text
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/LocalizationTable#SetEntryValue)
     */
    SetEntryValue(this: LocalizationTable, key: string, source: string, context: string, localeId: string, text: string): void;
}
/**
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/CloudLocalizationTable)
 */
interface CloudLocalizationTable extends LocalizationTable {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_CloudLocalizationTable: unique symbol;
}
/**
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/LodDataEntity)
 */
interface LodDataEntity extends Instance {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_LodDataEntity: unique symbol;
    /**
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/LodDataEntity#EntityLodEnabled)
     */
    EntityLodEnabled: boolean;
}
/**
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/LodDataService)
 */
interface LodDataService extends Instance {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_LodDataService: unique symbol;
}
/**
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/LogReporterService)
 */
interface LogReporterService extends Instance {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_LogReporterService: unique symbol;
}
/**
 * A service that allows you to read outputted text.
 *
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/LogService)
 */
interface LogService extends Instance {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_LogService: unique symbol;
    /**
     * Clears the Roblox Studio output window.
     * @param this A service that allows you to read outputted text.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/LogService#ClearOutput)
     */
    ClearOutput(this: LogService): void;
    /**
     * Returns a table of tables, each with the message string, message type, and timestamp of a message that the client displays in the output window.
     * @param this A service that allows you to read outputted text.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/LogService#GetLogHistory)
     */
    GetLogHistory(this: LogService): Array<LogInfo>;
    /**
     * Fires when the client outputs text.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/LogService#MessageOut)
     */
    readonly MessageOut: RBXScriptSignal<(message: string, messageType: Enum.MessageType) => void>;
}
/**
 * The base class for all objects which contain Lua code.
 *
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/LuaSourceContainer)
 */
interface LuaSourceContainer extends Instance {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_LuaSourceContainer: unique symbol;
}
/**
 * The base class for all script objects which run automatically.
 *
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/BaseScript)
 */
interface BaseScript extends LuaSourceContainer {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_BaseScript: unique symbol;
    /**
     * Determines whether a <code>BaseScript</code> will run or not.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/BaseScript#Disabled)
     */
    Disabled: boolean;
    /**
     * Determines whether a <code>BaseScript</code> will run or not.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/BaseScript#Enabled)
     */
    Enabled: boolean;
    /**
     * <strong>Deprecated:</strong> This property is now replaced by <a href="../../../projects/assets/packages.md">packages</a> which has greater functionality.<br>The content ID of an uploaded script. When set binds the uploaded code to the script's <code>Script.Source</code>.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/BaseScript#LinkedSource)
     */
    LinkedSource: ContentId;
    /**
     * Determines the context under which the script will run.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/BaseScript#RunContext)
     */
    get RunContext(): Enum.RunContext;
}
/**
 * An object that contains and runs Lua code on the server.
 *
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Script)
 */
interface Script extends BaseScript {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_Script: unique symbol;
    /**
     * The code to be executed.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Script#Source)
     */
    Source: ProtectedString;
}
/**
 * An object that contains and runs Lua code on the client (player's device) instead of the server.
 *
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/LocalScript)
 */
interface LocalScript extends Script {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_LocalScript: unique symbol;
}
/**
 * A script type that runs once when <code>require()</code> is called with it. Returns exactly one value, usually a table of functions, to used by other scripts. Useful for compartmentalizing code.
 *
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/ModuleScript)
 */
interface ModuleScript extends LuaSourceContainer {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_ModuleScript: unique symbol;
    /**
     * <strong>Deprecated:</strong> This property is now replaced by <a href="../../../projects/assets/packages.md">packages</a> which has greater functionality.<br>Used to store a URL that points to an online script source. Binds the online code to the script's <code>Script.Source</code>.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/ModuleScript#LinkedSource)
     */
    LinkedSource: ContentId;
    /**
     * The code to be executed.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/ModuleScript#Source)
     */
    Source: ProtectedString;
}
/**
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/LuauScriptAnalyzerService)
 */
interface LuauScriptAnalyzerService extends Instance {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_LuauScriptAnalyzerService: unique symbol;
}
/**
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/MLModelDeliveryService)
 */
interface MLModelDeliveryService extends Instance {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_MLModelDeliveryService: unique symbol;
}
/**
 * Represents a list of strings markers in chronological order.
 *
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/MarkerCurve)
 */
interface MarkerCurve extends Instance {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_MarkerCurve: unique symbol;
    /**
     * Returns the number of markers in the MarkerCurve.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/MarkerCurve#Length)
     */
    readonly Length: number;
    /**
     * Returns the time and string value of the marker at the provided index.
     * @param this Represents a list of strings markers in chronological order.
     * @param index
     * @returns A table containing the time and value of the marker at the provided index.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/MarkerCurve#GetMarkerAtIndex)
     */
    GetMarkerAtIndex(this: MarkerCurve, index: number): object;
    /**
     * Returns the time and string value of all markers in the MarkerCurve.
     * @param this Represents a list of strings markers in chronological order.
     * @returns An array of tables containing the time and value of all markers in the MarkerCurve.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/MarkerCurve#GetMarkers)
     */
    GetMarkers(this: MarkerCurve): Array<unknown>;
    /**
     * Inserts a marker with the provided string value at the provided time.
     * @param this Represents a list of strings markers in chronological order.
     * @param time Time at which the marker should be added.
     * @param marker String value associated with this marker.
     * @returns A table containing a boolean and a number. The boolean is <code>true</code> if the call adds a new marker and <code>false</code> if it modifies an existing marker at the provided time. The number is the index of the added marker.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/MarkerCurve#InsertMarkerAtTime)
     */
    InsertMarkerAtTime(this: MarkerCurve, time: number, marker: string): Array<unknown>;
    /**
     * Remove several markers in the MarkerCurve starting at the provided index.
     * @param this Represents a list of strings markers in chronological order.
     * @param startingIndex Index of the first marker to be removed in the MarkerCurve.
     * @param count How many markers to remove starting from the startingIndex.
     * @returns How many markers were actually removed (can be less than count if the MarkerCurve was too few markers).
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/MarkerCurve#RemoveMarkerAtIndex)
     */
    RemoveMarkerAtIndex(this: MarkerCurve, startingIndex: number, count?: number): number;
}
/**
 * The service responsible for in-experience transactions.
 *
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/MarketplaceService)
 */
interface MarketplaceService extends Instance {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_MarketplaceService: unique symbol;
    /**
     * Prompts a user to purchase multiple avatar items with the given <code>assetId</code> or <code>bundleId</code>.
     * @param this The service responsible for in-experience transactions.
     * @param player The user to prompt to purchase items.
     * @param lineItems An array of avatar items to be included in the bulk purchase. Each line item contains the following structure: <pre><code class="language-lua">{   Type: MarketplaceProductType,   Id: string } </code></pre> Each line item contains the following pairs: <ul> <li><code>Type</code>: The corresponding <code>MarketplaceProductType</code> (Enum).</li> <li><code>Id</code>: The ID of the asset or bundle.</li> </ul>
     * @param options Not available at this time.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/MarketplaceService#PromptBulkPurchase)
     */
    PromptBulkPurchase(this: MarketplaceService, player: Player, lineItems: Array<unknown>, options: object): void;
    /**
     * Prompts a user to purchase a bundle with the given <code>bundleId</code>.
     * @param this The service responsible for in-experience transactions.
     * @param player
     * @param bundleId
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/MarketplaceService#PromptBundlePurchase)
     */
    PromptBundlePurchase(this: MarketplaceService, player: Instance, bundleId: number): void;
    /**
     * Prompts a user to cancel a subscription for the given <code>subscriptionId</code>.
     * @param this The service responsible for in-experience transactions.
     * @param user
     * @param subscriptionId
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/MarketplaceService#PromptCancelSubscription)
     */
    PromptCancelSubscription(this: MarketplaceService, user: Player, subscriptionId: string): void;
    /**
     * Prompts a user to purchase a pass with the given <code>gamePassId</code>.
     * @param this The service responsible for in-experience transactions.
     * @param player
     * @param gamePassId
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/MarketplaceService#PromptGamePassPurchase)
     */
    PromptGamePassPurchase(this: MarketplaceService, player: Instance, gamePassId: number): void;
    /**
     * Prompts a user to purchase Roblox Premium.
     * @param this The service responsible for in-experience transactions.
     * @param player The user being prompted to purchase Premium.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/MarketplaceService#PromptPremiumPurchase)
     */
    PromptPremiumPurchase(this: MarketplaceService, player: Instance): void;
    /**
     * Prompts a user to purchase a developer product with the given <code>productId</code>.
     * @param this The service responsible for in-experience transactions.
     * @param player
     * @param productId
     * @param equipIfPurchased
     * @param currencyType
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/MarketplaceService#PromptProductPurchase)
     */
    PromptProductPurchase(this: MarketplaceService, player: Player, productId: number, equipIfPurchased?: boolean, currencyType?: CastsToEnum<Enum.CurrencyType>): void;
    /**
     * Prompts a user to purchase an item with the given <code>assetId</code>. Does not work for USD Creator Store purchases.
     * @param this The service responsible for in-experience transactions.
     * @param player
     * @param assetId
     * @param equipIfPurchased
     * @param currencyType Ignored.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/MarketplaceService#PromptPurchase)
     */
    PromptPurchase(this: MarketplaceService, player: Player, assetId: number, equipIfPurchased?: boolean, currencyType?: CastsToEnum<Enum.CurrencyType>): void;
    /**
     * Prompts a user to purchase a subscription for the given <code>subscriptionId</code>.
     * @param this The service responsible for in-experience transactions.
     * @param user The <code>Player</code> object to be prompted to subscribe.
     * @param subscriptionId The ID of the subscription to subscribe to.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/MarketplaceService#PromptSubscriptionPurchase)
     */
    PromptSubscriptionPurchase(this: MarketplaceService, user: Player, subscriptionId: string): void;
    /**
     * Returns a <code>Pages</code> object which contains information for all of the current experience's developer products.
     * @param this The service responsible for in-experience transactions.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/MarketplaceService#GetDeveloperProductsAsync)
     */
    GetDeveloperProductsAsync(this: MarketplaceService): StandardPages<{
        Description: string;
        PriceInRobux: number;
        ProductId: number;
        IconImageAssetId: number;
        Name: string;
    }>;
    /**
     * Returns the product information of an asset using its asset ID.
     * @param this The service responsible for in-experience transactions.
     * @param assetId The asset ID of the specified product.
     * @param infoType An <code>InfoType</code> enum value specifying the type of information being retrieved.
     * @returns A dictionary containing information about the queried item, described in the previous tables.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/MarketplaceService#GetProductInfo)
     */
    GetProductInfo(this: MarketplaceService, id: number): AssetProductInfo;
    GetProductInfo(this: MarketplaceService, id: number, infoType: CastsToEnum<Enum.InfoType.Asset>): AssetProductInfo;
    GetProductInfo(this: MarketplaceService, id: number, infoType: CastsToEnum<Enum.InfoType.Bundle>): BundleInfo;
    GetProductInfo(this: MarketplaceService, id: number, infoType: CastsToEnum<Enum.InfoType.GamePass>): GamePassProductInfo;
    GetProductInfo(this: MarketplaceService, id: number, infoType: CastsToEnum<Enum.InfoType.Product>): DeveloperProductInfo;
    GetProductInfo(this: MarketplaceService, id: number, infoType: CastsToEnum<Enum.InfoType.Subscription>): SubscriptionProductInfo;
    GetProductInfo(this: MarketplaceService, id: number, infoType?: CastsToEnum<Enum.InfoType>): AssetProductInfo | BundleInfo | GamePassProductInfo | DeveloperProductInfo | SubscriptionProductInfo;
    /**
     * Returns the product information of a subscription for the given <code>subscriptionId</code>.
     * @param this The service responsible for in-experience transactions.
     * @param subscriptionId The ID of the subscription to check.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/MarketplaceService#GetSubscriptionProductInfoAsync)
     */
    GetSubscriptionProductInfoAsync(this: MarketplaceService, subscriptionId: string): SubscriptionInfo;
    /**
     * Returns a table that contains the details of the user's subscription for a given <code>subscriptionId</code>.
     * @param this The service responsible for in-experience transactions.
     * @param user The <code>Player</code> object whose subscription details you want to check.
     * @param subscriptionId The ID of the subscription to check.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/MarketplaceService#GetUserSubscriptionDetailsAsync)
     */
    GetUserSubscriptionDetailsAsync(this: MarketplaceService, user: Player, subscriptionId: string): UserSubscriptionDetails;
    /**
     * Returns an <code>Array</code> that contains up to one year of the user's subscription payment history for the given <code>subscriptionId</code>.
     * @param this The service responsible for in-experience transactions.
     * @param user
     * @param subscriptionId
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/MarketplaceService#GetUserSubscriptionPaymentHistoryAsync)
     */
    GetUserSubscriptionPaymentHistoryAsync(this: MarketplaceService, user: Player, subscriptionId: string): Array<UserSubscriptionPaymentHistory>;
    /**
     * Returns a <code>table</code> that contains the subscription status of the user for the given <code>subscriptionId</code>.
     * @param this The service responsible for in-experience transactions.
     * @param user The <code>Player</code> object whose subscription status you want to check.
     * @param subscriptionId The ID of the subscription to check for.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/MarketplaceService#GetUserSubscriptionStatusAsync)
     */
    GetUserSubscriptionStatusAsync(this: MarketplaceService, user: Player, subscriptionId: string): UserSubscriptionStatus;
    /**
     * Returns whether the given user has the given asset.
     * @param this The service responsible for in-experience transactions.
     * @param player The <code>Player</code> whose inventory is tested for ownership of the given asset.
     * @param assetId The asset ID for which the given player's inventory is tested.
     * @returns Indicates whether the given player's inventory contains the given asset.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/MarketplaceService#PlayerOwnsAsset)
     */
    PlayerOwnsAsset(this: MarketplaceService, player: Instance, assetId: number): boolean;
    /**
     * Returns whether the given player owns the given bundle.
     * @param this The service responsible for in-experience transactions.
     * @param player The <code>Player</code> whose inventory is tested for ownership of the given bundle.
     * @param bundleId The bundle ID for which the given player's inventory is tested.
     * @returns Indicates whether the given player's inventory contains the given bundle.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/MarketplaceService#PlayerOwnsBundle)
     */
    PlayerOwnsBundle(this: MarketplaceService, player: Player, bundleId: number): boolean;
    /**
     * Returns true if the player with the given <code>UserId</code> owns the pass with the given <code>gamePassId</code>.
     * @param this The service responsible for in-experience transactions.
     * @param userId The <code>UserId</code> of the <code>Player</code> whose inventory you're checking.
     * @param gamePassId The pass ID you want to check for. Not to be confused with an asset ID.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/MarketplaceService#UserOwnsGamePassAsync)
     */
    UserOwnsGamePassAsync(this: MarketplaceService, userId: number, gamePassId: number): boolean;
    /**
     * Fires when a purchase prompt for bulk avatar items is closed.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/MarketplaceService#PromptBulkPurchaseFinished)
     */
    readonly PromptBulkPurchaseFinished: RBXScriptSignal<(player: Instance, status: Enum.MarketplaceBulkPurchasePromptStatus, results: object) => void>;
    /**
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/MarketplaceService#PromptBundlePurchaseFinished)
     */
    readonly PromptBundlePurchaseFinished: RBXScriptSignal<(player: Instance, bundleId: number, wasPurchased: boolean) => void>;
    /**
     * Fires when a purchase prompt for a pass is closed.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/MarketplaceService#PromptGamePassPurchaseFinished)
     */
    readonly PromptGamePassPurchaseFinished: RBXScriptSignal<(player: Instance, gamePassId: number, wasPurchased: boolean) => void>;
    /**
     * Fires when a purchase prompt for Roblox Premium is closed.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/MarketplaceService#PromptPremiumPurchaseFinished)
     */
    readonly PromptPremiumPurchaseFinished: RBXScriptSignal<() => void>;
    /**
     * Fires when a purchase prompt for a developer product is closed. Do not use this event to process purchases.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/MarketplaceService#PromptProductPurchaseFinished)
     */
    readonly PromptProductPurchaseFinished: RBXScriptSignal<(userId: number, productId: number, isPurchased: boolean) => void>;
    /**
     * Fires when a purchase prompt for an affiliate gear sale or other asset is closed. Does <strong>not</strong> fire for developer product or pass prompts.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/MarketplaceService#PromptPurchaseFinished)
     */
    readonly PromptPurchaseFinished: RBXScriptSignal<(player: Instance, assetId: number, isPurchased: boolean) => void>;
    /**
     * Fires when a purchase prompt for a subscription is closed.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/MarketplaceService#PromptSubscriptionPurchaseFinished)
     */
    readonly PromptSubscriptionPurchaseFinished: RBXScriptSignal<(user: Player, subscriptionId: string, didTryPurchasing: boolean) => void>;
    /**
     * A callback to process receipts of developer product purchases.
     * @param receiptInfo The <code>receiptInfo</code> table passed to this callback contains the following data: <ul> <li><code>PurchaseId</code> &mdash; A unique identifier for the specific purchase.</li> <li><code>PlayerId</code> &mdash; The user ID of the user who made the purchase.</li> <li><code>ProductId</code> &mdash; The ID of the purchased product.</li> <li><code>PlaceIdWherePurchased</code> &mdash; The place ID in which the purchase   was made. Depending on where the user is during gameplay, the   purchase place's ID can be the same as or different from the current   place's ID.</li> <li><code>CurrencySpent</code> &mdash; The amount of currency spent in the   transaction.</li> <li><code>CurrencyType</code> &mdash; The type of currency spent in the purchase;   always <code>CurrencyType.Robux</code>.</li> </ul>
     * @returns An enum that represents how the developer product receipt was processed. <ul> <li><code>PurchaseGranted</code>:</li> <li>Indicates that the experience successfully granted the player the     developer product.</li> <li>Indicates to Roblox that the developer product sale was     successful.</li> <li><code>NotProcessedYet</code>:</li> <li>Indicates that the experience failed to grant the player the     developer product.</li> </ul>
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/MarketplaceService#ProcessReceipt)
     */
    ProcessReceipt: ((receiptInfo: ReceiptInfo) => Enum.ProductPurchaseDecision) | undefined;
}
/**
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/MaterialGenerationService)
 */
interface MaterialGenerationService extends Instance {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_MaterialGenerationService: unique symbol;
}
/**
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/MaterialGenerationSession)
 */
interface MaterialGenerationSession extends Instance {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_MaterialGenerationSession: unique symbol;
}
/**
 * The game service responsible for managing materials.
 *
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/MaterialService)
 */
interface MaterialService extends Instance {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_MaterialService: unique symbol;
    /**
     * Get the override <code>MaterialVariant</code> name of specified Material type.
     * @param this The game service responsible for managing materials.
     * @param material Material type to be fetched.
     * @returns MaterialVariant name currently set as override.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/MaterialService#GetBaseMaterialOverride)
     */
    GetBaseMaterialOverride(this: MaterialService, material: CastsToEnum<Enum.Material>): string;
    /**
     * Get the effective MaterialVariant reference given a name and Material.
     * @param this The game service responsible for managing materials.
     * @param material BaseMaterial of MaterialVariant.
     * @param name Name of MaterialVariant.
     * @returns A MaterialVariant instance that matches parameters.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/MaterialService#GetMaterialVariant)
     */
    GetMaterialVariant(this: MaterialService, material: CastsToEnum<Enum.Material>, name: string): MaterialVariant;
    /**
     * Set a <code>MaterialVariant</code> name that overrides a built-in material.
     * @param this The game service responsible for managing materials.
     * @param material The Material type to be changed.
     * @param name Name of the MaterialVariant object.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/MaterialService#SetBaseMaterialOverride)
     */
    SetBaseMaterialOverride(this: MaterialService, material: CastsToEnum<Enum.Material>, name: string): void;
}
/**
 * Represent a variant of a Material.
 *
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/MaterialVariant)
 */
interface MaterialVariant extends Instance {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_MaterialVariant: unique symbol;
    /**
     * Category Material this variant belongs to.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/MaterialVariant#BaseMaterial)
     */
    get BaseMaterial(): Enum.Material;
    /**
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/MaterialVariant#CustomPhysicalProperties)
     */
    CustomPhysicalProperties: PhysicalProperties;
    /**
     * Determines texture tiling method.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/MaterialVariant#MaterialPattern)
     */
    MaterialPattern: Enum.MaterialPattern;
    /**
     * Determines the scale of textures.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/MaterialVariant#StudsPerTile)
     */
    StudsPerTile: number;
}
/**
 * Provides access to a hash map within <code>MemoryStoreService</code>.
 *
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/MemoryStoreHashMap)
 */
interface MemoryStoreHashMap extends Instance {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_MemoryStoreHashMap: unique symbol;
    /**
     * Retrieves the value of a key in the hash map.
     * @param this Provides access to a hash map within <code>MemoryStoreService</code>.
     * @param key The key whose value you want to retrieve.
     * @returns The value, or nil if the key doesn't exist.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/MemoryStoreHashMap#GetAsync)
     */
    GetAsync(this: MemoryStoreHashMap, key: string): unknown;
    /**
     * Returns a <code>MemoryStoreHashMapPages</code> object for enumerating through items in the hash map.
     * @param this Provides access to a hash map within <code>MemoryStoreService</code>.
     * @param count Maximum possible number of items that can be returned.
     * @returns A <code>MemoryStoreHashMapPages</code> instance that enumerates the items as <code>MemoryStoreHashMapPages</code> instances.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/MemoryStoreHashMap#ListItemsAsync)
     */
    ListItemsAsync(this: MemoryStoreHashMap, count: number): MemoryStoreHashMapPages;
    /**
     * Removes an item from the hash map.
     * @param this Provides access to a hash map within <code>MemoryStoreService</code>.
     * @param key The key to remove.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/MemoryStoreHashMap#RemoveAsync)
     */
    RemoveAsync(this: MemoryStoreHashMap, key: string): void;
    /**
     * Sets the value of a key in the hash map.
     * @param this Provides access to a hash map within <code>MemoryStoreService</code>.
     * @param key The key whose value to set.
     * @param value The value to set.
     * @param expiration Item expiration in seconds, after which the item is automatically removed from the hash map. The maximum expiration time is 45 days (3,888,000 seconds).
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/MemoryStoreHashMap#SetAsync)
     */
    SetAsync(this: MemoryStoreHashMap, key: string, value: unknown, expiration: number): boolean;
    /**
     * Retrieves the value of a key from a hash map and lets you update it to a new value.
     * @param this Provides access to a hash map within <code>MemoryStoreService</code>.
     * @param key The key whose value you want to update.
     * @param transformFunction The transform function, which you provide. This function takes the old value as an input and returns the new value.
     * @param expiration Item expiration in seconds, after which the item is automatically removed from the hash map. The maximum expiration time is 45 days (3,888,000 seconds).
     * @returns The last value returned by the transform function.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/MemoryStoreHashMap#UpdateAsync)
     */
    UpdateAsync(this: MemoryStoreHashMap, key: string, transformFunction: Callback, expiration: number): unknown;
}
/**
 * Provides access to a queue within MemoryStore.
 *
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/MemoryStoreQueue)
 */
interface MemoryStoreQueue extends Instance {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_MemoryStoreQueue: unique symbol;
    /**
     * Adds an item to the queue.
     * @param this Provides access to a queue within MemoryStore.
     * @param value The value of the item to add to the queue.
     * @param expiration Item expiration time, in seconds, after which the item will be automatically removed from the queue.
     * @param priority Item priority. Items with higher priority are retrieved from the queue before items with lower priority.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/MemoryStoreQueue#AddAsync)
     */
    AddAsync(this: MemoryStoreQueue, value: unknown, expiration: number, priority?: number): void;
    /**
     * Reads one or more items from the queue.
     * @param this Provides access to a queue within MemoryStore.
     * @param count Number of items to read. The maximum allowed value of this parameter is 100.
     * @param allOrNothing Controls the behavior of the method in the case the queue has fewer than <code>count</code> items: if set to false the method returns all available items; if set to true, it returns no items. The default value is false.
     * @param waitTimeout The duration, in seconds, for which the method will wait if the required number of items is not immediately available in the queue. Reads are attempted every two seconds during this period. This parameter can be set to zero to indicate no wait. If this parameter is not provided or set to -1, the method will wait indefinitely.
     * @returns A tuple of two elements. The first element is an array of item values read from the queue. The second element is a string identifier that should be passed to <code>MemoryStoreQueue:RemoveAsync()</code> to permanently remove these items from the queue.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/MemoryStoreQueue#ReadAsync)
     */
    ReadAsync(this: MemoryStoreQueue, count: number, allOrNothing?: boolean, waitTimeout?: number): LuaTuple<[
        items: Array<unknown>,
        id: string
    ]>;
    /**
     * Removes an item or items previously read from the queue.
     * @param this Provides access to a queue within MemoryStore.
     * @param id Identifies the items to delete. Use the value returned by <code>MemoryStoreQueue:ReadAsync()</code>.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/MemoryStoreQueue#RemoveAsync)
     */
    RemoveAsync(this: MemoryStoreQueue, id: string): void;
}
/**
 * Exposes methods to access specific primitives within MemoryStore.
 *
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/MemoryStoreService)
 */
interface MemoryStoreService extends Instance {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_MemoryStoreService: unique symbol;
    /**
     * Returns a <code>MemoryStoreHashMap</code> instance for the provided name.
     * @param this Exposes methods to access specific primitives within MemoryStore.
     * @param name The name of the hash map.
     * @returns A <code>MemoryStoreHashMap</code> instance for the provided name.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/MemoryStoreService#GetHashMap)
     */
    GetHashMap(this: MemoryStoreService, name: string): MemoryStoreHashMap;
    /**
     * Returns a <code>MemoryStoreQueue</code> instance for the provided name.
     * @param this Exposes methods to access specific primitives within MemoryStore.
     * @param name Name of the queue.
     * @param invisibilityTimeout <strong>(Optional)</strong> Invisibility timeout, in seconds, for read operations through this queue instance. If not provided, defaults to 30 seconds.
     * @returns A <code>MemoryStoreQueue</code> instance for the provided name.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/MemoryStoreService#GetQueue)
     */
    GetQueue(this: MemoryStoreService, name: string, invisibilityTimeout?: number): MemoryStoreQueue;
    /**
     * Returns a <code>MemoryStoreSortedMap</code> instance for the provided name.
     * @param this Exposes methods to access specific primitives within MemoryStore.
     * @param name Name of the sorted map.
     * @returns A <code>MemoryStoreSortedMap</code> instance for the provided name.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/MemoryStoreService#GetSortedMap)
     */
    GetSortedMap(this: MemoryStoreService, name: string): MemoryStoreSortedMap;
}
/**
 * Provides access to a sorted map within <code>MemoryStoreService</code>.
 *
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/MemoryStoreSortedMap)
 */
interface MemoryStoreSortedMap extends Instance {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_MemoryStoreSortedMap: unique symbol;
    /**
     * Retrieves the value and sort key of a key in the sorted map.
     * @param this Provides access to a sorted map within <code>MemoryStoreService</code>.
     * @param key Key whose value and sort key to retrieve.
     * @returns A tuple of two values: <ul> <li>Key value, or nil -- if there's no item with the specified key.</li> <li>Sort key, or nil -- if there's no sort key associated with the   specified key.</li> </ul>
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/MemoryStoreSortedMap#GetAsync)
     */
    GetAsync(this: MemoryStoreSortedMap, key: string): LuaTuple<[
        key?: string,
        sortKey?: string | number
    ]>;
    /**
     * Retrieves items within a sorted range of keys and sort keys.
     * @param this Provides access to a sorted map within <code>MemoryStoreService</code>.
     * @param direction Sort direction, ascending or descending.
     * @param count The number of items to retrieve; the maximum allowed value for this parameter is 200.
     * @param exclusiveLowerBound <strong>(Optional)</strong> Lower bound, exclusive, for the returned keys. This is provided as a table where one or both of key and sort key can be specified: { key: string, sortKey: Variant } .
     * @param exclusiveUpperBound <strong>(Optional)</strong> Upper bound, exclusive, for the returned keys. This is provided as a table where one or both of key and sort key can be specified: { key: string, sortKey: Variant } .
     * @returns Item keys, values and sort keys in the requested range.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/MemoryStoreSortedMap#GetRangeAsync)
     */
    GetRangeAsync(this: MemoryStoreSortedMap, direction: CastsToEnum<Enum.SortDirection>, count: number, exclusiveLowerBound?: {
        key?: string;
        sortKey?: string | number;
    }, exclusiveUpperBound?: {
        key?: string;
        sortKey?: string | number;
    }): Array<{
        key: string;
        value: unknown;
        sortKey?: string | number;
    }>;
    /**
     * Removes the provided key from the sorted map.
     * @param this Provides access to a sorted map within <code>MemoryStoreService</code>.
     * @param key Key to remove.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/MemoryStoreSortedMap#RemoveAsync)
     */
    RemoveAsync(this: MemoryStoreSortedMap, key: string): void;
    /**
     * Sets the value of a key.
     * @param this Provides access to a sorted map within <code>MemoryStoreService</code>.
     * @param key Key whose value to set.
     * @param value Key value to set.
     * @param expiration Item expiration, in seconds. The item is automatically removed from the sorted map once the expiration duration is reached. The maximum expiration time is 45 days (3,888,000 seconds).
     * @param sortKey <strong>(Optional)</strong> Sort key to set for this key. Accepted types are a number (integer or decimal) or a string.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/MemoryStoreSortedMap#SetAsync)
     */
    SetAsync(this: MemoryStoreSortedMap, key: string, value: unknown, expiration: number, sortKey?: string | number): boolean;
    /**
     * Retrieves the value and sort key of a key from a sorted map and updates it with a new value and sort key.
     * @param this Provides access to a sorted map within <code>MemoryStoreService</code>.
     * @param key Key whose value to update.
     * @param transformFunction A function which you need to provide. The function takes the key's old value and old sort key as input and returns the new value and new sort key.
     * @param expiration Item expiration time, in seconds, after which the item will be automatically removed from the sorted map. The maximum expiration time is 45 days (3,888,000 seconds).
     * @returns The return value is a tuple of the last value and sort key returned by the transform function.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/MemoryStoreSortedMap#UpdateAsync)
     */
    UpdateAsync<T>(this: MemoryStoreSortedMap, key: string, transformFunction: (value: unknown) => T, expiration: number): T;
}
/**
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/MessageBusConnection)
 */
interface MessageBusConnection extends Instance {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_MessageBusConnection: unique symbol;
}
/**
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/MessageBusService)
 */
interface MessageBusService extends Instance {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_MessageBusService: unique symbol;
}
/**
 * Allows servers of the same experience to communicate with each other.
 *
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/MessagingService)
 */
interface MessagingService extends Instance {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_MessagingService: unique symbol;
    /**
     * Invokes the supplied callback whenever a message is pushed to the topic.
     * @param this Allows servers of the same experience to communicate with each other.
     * @param topic Determines where the message is sent.
     * @param message The data to include in the message.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/MessagingService#PublishAsync)
     */
    PublishAsync(this: MessagingService, topic: string, message: unknown): void;
    /**
     * Begins listening to the given topic.
     * @param this Allows servers of the same experience to communicate with each other.
     * @param topic Determines where to listen for messages.
     * @param callback Function to be invoked whenever a message is received.
     * @returns Connection that can be used to unsubscribe from the topic.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/MessagingService#SubscribeAsync)
     */
    SubscribeAsync(this: MessagingService, topic: string, callback: (message: {
        Data: unknown;
        Sent: number;
    }) => void): RBXScriptConnection;
}
/**
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/MetaBreakpoint)
 */
interface MetaBreakpoint extends Instance {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_MetaBreakpoint: unique symbol;
}
/**
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/MetaBreakpointContext)
 */
interface MetaBreakpointContext extends Instance {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_MetaBreakpointContext: unique symbol;
}
/**
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/MetaBreakpointManager)
 */
interface MetaBreakpointManager extends Instance {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_MetaBreakpointManager: unique symbol;
}
/**
 * Legacy object that contains members useful for pointer input.
 *
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Mouse)
 */
interface Mouse extends Instance {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_Mouse: unique symbol;
    /**
     * The <code>CFrame</code> of the mouse's position in 3D space.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Mouse#Hit)
     */
    readonly Hit: CFrame;
    /**
     * The content ID of the image used as the <code>Mouse</code> icon.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Mouse#Icon)
     */
    Icon: ContentId;
    /**
     * A <code>CFrame</code> positioned at the <code>Workspace.CurrentCamera</code> and oriented toward the mouse's 3D position.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Mouse#Origin)
     */
    readonly Origin: CFrame;
    /**
     * The object in 3D space the <code>mouse</code> is pointing to.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Mouse#Target)
     */
    readonly Target: BasePart | undefined;
    /**
     * Determines an object (and its descendants) to be ignored when determining <code>Mouse.Hit</code> and <code>Mouse.Target</code>.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Mouse#TargetFilter)
     */
    TargetFilter: Instance | undefined;
    /**
     * Indicates the <code>NormalId</code> of the <code>BasePart</code> surface at which the mouse is pointing.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Mouse#TargetSurface)
     */
    readonly TargetSurface: Enum.NormalId;
    /**
     * A <code>Ray</code> directed towards the mouse's world position, originating from the <code>Workspace.CurrentCamera</code> world position.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Mouse#UnitRay)
     */
    readonly UnitRay: Ray;
    /**
     * Describes the width of the game window in pixels.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Mouse#ViewSizeX)
     */
    readonly ViewSizeX: number;
    /**
     * Describes the height of the game window in pixels.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Mouse#ViewSizeY)
     */
    readonly ViewSizeY: number;
    /**
     * Describes the X (horizontal) component of the mouse's position on the screen.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Mouse#X)
     */
    readonly X: number;
    /**
     * Describes the Y (vertical) component of the mouse's screen position.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Mouse#Y)
     */
    readonly Y: number;
    /**
     * Fires when the left mouse button is pressed.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Mouse#Button1Down)
     */
    readonly Button1Down: RBXScriptSignal<() => void>;
    /**
     * Fires when the left mouse button is released.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Mouse#Button1Up)
     */
    readonly Button1Up: RBXScriptSignal<() => void>;
    /**
     * Fires when the right mouse button is pressed.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Mouse#Button2Down)
     */
    readonly Button2Down: RBXScriptSignal<() => void>;
    /**
     * Fired when the right mouse button is released.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Mouse#Button2Up)
     */
    readonly Button2Up: RBXScriptSignal<() => void>;
    /**
     * Fired during every heartbeat that the mouse isn't being passed to another mouse event.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Mouse#Idle)
     */
    readonly Idle: RBXScriptSignal<() => void>;
    /**
     * <strong>Deprecated:</strong> Mouse events have been superseded by <code>UserInputService</code> which should be used in all new work.<br>Fires when a Key is pressed.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Mouse#KeyDown)
     */
    readonly KeyDown: RBXScriptSignal<(key: string) => void>;
    /**
     * <strong>Deprecated:</strong> Mouse events have been superseded by <code>UserInputService</code> which should be used in all new work.<br>Fires when a Key is released.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Mouse#KeyUp)
     */
    readonly KeyUp: RBXScriptSignal<(key: string) => void>;
    /**
     * Fired when the mouse is moved.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Mouse#Move)
     */
    readonly Move: RBXScriptSignal<() => void>;
    /**
     * Fires when the mouse wheel is scrolled backwards.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Mouse#WheelBackward)
     */
    readonly WheelBackward: RBXScriptSignal<() => void>;
    /**
     * Fires when the mouse wheel is scrolled forwards.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Mouse#WheelForward)
     */
    readonly WheelForward: RBXScriptSignal<() => void>;
}
/**
 * The PlayerMouse behaves identically to the <code>Mouse</code> object that is obtained using <code>Tool.Equipped</code>. Both PlayerMouse and <code>Mouse</code> are legacy APIs, superseded by <code>UserInputService</code>.
 *
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/PlayerMouse)
 */
interface PlayerMouse extends Mouse {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_PlayerMouse: unique symbol;
}
/**
 * The NetworkMarker is used to tell the client when the server has finished loading the world for the client.
 *
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/NetworkMarker)
 */
interface NetworkMarker extends Instance {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_NetworkMarker: unique symbol;
    /**
     * Fired when the server has finished replicating the world to the client.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/NetworkMarker#Received)
     */
    readonly Received: RBXScriptSignal<() => void>;
}
/**
 * An instance used to prevent collisions between two specific parts.
 *
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/NoCollisionConstraint)
 */
interface NoCollisionConstraint extends Instance {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_NoCollisionConstraint: unique symbol;
    /**
     * Determines whether the two linked <code>BaseParts</code> will collide with each other.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/NoCollisionConstraint#Enabled)
     */
    Enabled: boolean;
    /**
     * The second <code>BasePart</code> that the constraint connects.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/NoCollisionConstraint#Part0)
     */
    Part0: BasePart | undefined;
    /**
     * The first <code>BasePart</code> that the constraint connects.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/NoCollisionConstraint#Part1)
     */
    Part1: BasePart | undefined;
}
/**
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Noise)
 */
interface Noise extends Instance {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_Noise: unique symbol;
}
/**
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/OmniRecommendationsService)
 */
interface OmniRecommendationsService extends Instance {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_OmniRecommendationsService: unique symbol;
}
/**
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/OpenCloudApiV1)
 */
interface OpenCloudApiV1 extends Instance {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_OpenCloudApiV1: unique symbol;
    /**
     * @param this
     * @param name
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/OpenCloudApiV1#CreateModel)
     */
    CreateModel(this: OpenCloudApiV1, name: string): OpenCloudModel;
    /**
     * @param this
     * @param user
     * @param userNotification
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/OpenCloudApiV1#CreateUserNotificationAsync)
     */
    CreateUserNotificationAsync(this: OpenCloudApiV1, user: string, userNotification: OpenCloudModel): OpenCloudModel;
}
/**
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/OpenCloudService)
 */
interface OpenCloudService extends Instance {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_OpenCloudService: unique symbol;
    /**
     * @param this
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/OpenCloudService#GetApiV1)
     */
    GetApiV1(this: OpenCloudService): OpenCloudApiV1;
    /**
     * @param this
     * @param version
     * @param methodName
     * @param arguments
     * @param headers
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/OpenCloudService#InvokeAsync)
     */
    InvokeAsync(this: OpenCloudService, version: string, methodName: string, arguments: object, headers?: object): object;
}
/**
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/OperationGraph)
 */
interface OperationGraph extends Instance {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_OperationGraph: unique symbol;
}
/**
 * Abstract class for all objects that have a physical location in the world, specifically <code>BaseParts</code> and <code>Models</code>.
 *
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/PVInstance)
 */
interface PVInstance extends Instance {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_PVInstance: unique symbol;
    /**
     * Gets the pivot of a <code>PVInstance</code>.
     * @param this Abstract class for all objects that have a physical location in the world, specifically <code>BaseParts</code> and <code>Models</code>.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/PVInstance#GetPivot)
     */
    GetPivot(this: PVInstance): CFrame;
    /**
     * Transforms the <code>PVInstance</code> along with all of its descendant <code>PVInstances</code> such that the pivot is now located at the specified <code>CFrame</code>.
     * @param this Abstract class for all objects that have a physical location in the world, specifically <code>BaseParts</code> and <code>Models</code>.
     * @param targetCFrame The <code>CFrame</code> that the <code>PVInstance</code> pivot should equal after moving it.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/PVInstance#PivotTo)
     */
    PivotTo(this: PVInstance, targetCFrame: CFrame): void;
}
/**
 * The abstract base class for in-world objects that physically interact.
 *
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/BasePart)
 */
interface BasePart extends PVInstance {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_BasePart: unique symbol;
    /**
     * Determines whether a part is immovable by physics.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/BasePart#Anchored)
     */
    Anchored: boolean;
    /**
     * The angular velocity of the part's assembly.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/BasePart#AssemblyAngularVelocity)
     */
    AssemblyAngularVelocity: Vector3;
    /**
     * The center of mass of the part's assembly in world space.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/BasePart#AssemblyCenterOfMass)
     */
    readonly AssemblyCenterOfMass: Vector3;
    /**
     * The linear velocity of the part's assembly.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/BasePart#AssemblyLinearVelocity)
     */
    AssemblyLinearVelocity: Vector3;
    /**
     * The total mass of the part's assembly.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/BasePart#AssemblyMass)
     */
    readonly AssemblyMass: number;
    /**
     * A reference to the root part of the assembly.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/BasePart#AssemblyRootPart)
     */
    readonly AssemblyRootPart: BasePart | undefined;
    /**
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/BasePart#AudioCanCollide)
     */
    AudioCanCollide: boolean;
    /**
     * <strong>Deprecated:</strong> <br>Determines the first parameter for the SurfaceType on the Back face of a part (+Z direction).
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/BasePart#BackParamA)
     */
    BackParamA: number;
    /**
     * <strong>Deprecated:</strong> <br>Determines the second parameter for the SurfaceType on the Back face of a part (+Z direction).
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/BasePart#BackParamB)
     */
    BackParamB: number;
    /**
     * Determines the type of surface for the Back face of a part (+Z direction).
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/BasePart#BackSurface)
     */
    BackSurface: Enum.SurfaceType;
    /**
     * <strong>Deprecated:</strong> <br>Determines the kind of input for the Back face of a part (+Z direction).
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/BasePart#BackSurfaceInput)
     */
    BackSurfaceInput: Enum.InputType;
    /**
     * <strong>Deprecated:</strong> <br>Determines the first parameter for the SurfaceType on the Bottom face of a part (-Y direction).
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/BasePart#BottomParamA)
     */
    BottomParamA: number;
    /**
     * <strong>Deprecated:</strong> <br>Determines the second parameter for the SurfaceType on the Bottom face of a part (-Y direction).
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/BasePart#BottomParamB)
     */
    BottomParamB: number;
    /**
     * Determines the type of surface for the Bottom face of a part (-Y direction).
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/BasePart#BottomSurface)
     */
    BottomSurface: Enum.SurfaceType;
    /**
     * <strong>Deprecated:</strong> <br>Determines the kind of input for the Bottom face of a part (-Y direction).
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/BasePart#BottomSurfaceInput)
     */
    BottomSurfaceInput: Enum.InputType;
    /**
     * Determines the color of a part.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/BasePart#BrickColor)
     */
    BrickColor: BrickColor;
    /**
     * Determines the position and orientation of the <code>BasePart</code> in the world.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/BasePart#CFrame)
     */
    CFrame: CFrame;
    /**
     * Determines whether a part may collide with other parts.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/BasePart#CanCollide)
     */
    CanCollide: boolean;
    /**
     * Determines whether the part is considered during spatial query operations.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/BasePart#CanQuery)
     */
    CanQuery: boolean;
    /**
     * Determines if <code>Touched</code> and <code>TouchEnded</code> events fire on the part.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/BasePart#CanTouch)
     */
    CanTouch: boolean;
    /**
     * Determines whether or not a part casts a shadow.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/BasePart#CastShadow)
     */
    CastShadow: boolean;
    /**
     * Describes the world position in which a part's center of mass is located.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/BasePart#CenterOfMass)
     */
    readonly CenterOfMass: Vector3;
    /**
     * Describes the name of a part's collision group.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/BasePart#CollisionGroup)
     */
    CollisionGroup: string;
    /**
     * <strong>Deprecated:</strong> <br>Describes the automatically set ID number of a part's collision group.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/BasePart#CollisionGroupId)
     */
    CollisionGroupId: number;
    /**
     * Determines the color of a part.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/BasePart#Color)
     */
    Color: Color3;
    /**
     * Indicates the current physical properties of the part.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/BasePart#CurrentPhysicalProperties)
     */
    readonly CurrentPhysicalProperties: PhysicalProperties;
    /**
     * Determines several physical properties of a part.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/BasePart#CustomPhysicalProperties)
     */
    CustomPhysicalProperties: PhysicalProperties | undefined;
    /**
     * <strong>Deprecated:</strong> This is only one of multiple physics-related properties. It has been deprecated in favor of <code>BasePart.CustomPhysicalProperties</code>, which combines these properties into one.<br>Used to control the Elasticity of the part, but it no longer does anything.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/BasePart#Elasticity)
     */
    Elasticity: number;
    /**
     * Used to enable or disable aerodynamic forces on parts and assemblies.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/BasePart#EnableFluidForces)
     */
    EnableFluidForces: boolean;
    /**
     * The <code>CFrame</code> of the physical extents of the <code>BasePart</code>.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/BasePart#ExtentsCFrame)
     */
    readonly ExtentsCFrame: CFrame;
    /**
     * The actual physical size of the <code>BasePart</code> as regarded by the physics engine.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/BasePart#ExtentsSize)
     */
    readonly ExtentsSize: Vector3;
    /**
     * <strong>Deprecated:</strong> This is only one of multiple physics-related properties. It has been deprecated in favor of <code>BasePart.CustomPhysicalProperties</code>, which combines these properties into one.<br>Used to control the Friction of the part, but now it no longer does anything.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/BasePart#Friction)
     */
    Friction: number;
    /**
     * <strong>Deprecated:</strong> <br>Determines the first parameter for the SurfaceType on the Front face of a part (-Z direction).
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/BasePart#FrontParamA)
     */
    FrontParamA: number;
    /**
     * <strong>Deprecated:</strong> <br>Determines the second parameter for the SurfaceType on the Front face of a part (-Z direction).
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/BasePart#FrontParamB)
     */
    FrontParamB: number;
    /**
     * Determines the type of surface for the Front face of a part (-Z direction).
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/BasePart#FrontSurface)
     */
    FrontSurface: Enum.SurfaceType;
    /**
     * <strong>Deprecated:</strong> <br>Determines the kind of input for the Front face of a part (-Z direction).
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/BasePart#FrontSurfaceInput)
     */
    FrontSurfaceInput: Enum.InputType;
    /**
     * <strong>Deprecated:</strong> <br>Determines the first parameter for the SurfaceType on the Left face of a part (-Z direction).
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/BasePart#LeftParamA)
     */
    LeftParamA: number;
    /**
     * <strong>Deprecated:</strong> <br>Determines the second parameter for the SurfaceType on the Left face of a part (-Z direction).
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/BasePart#LeftParamB)
     */
    LeftParamB: number;
    /**
     * Determines the type of surface for the Left face of a part (-X direction).
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/BasePart#LeftSurface)
     */
    LeftSurface: Enum.SurfaceType;
    /**
     * <strong>Deprecated:</strong> <br>Determines the kind of input for the Left face of a part (+X direction).
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/BasePart#LeftSurfaceInput)
     */
    LeftSurfaceInput: Enum.InputType;
    /**
     * Determines a multiplier for <code>BasePart.Transparency</code> that is only visible to the local client.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/BasePart#LocalTransparencyModifier)
     */
    LocalTransparencyModifier: number;
    /**
     * Determines whether a part is selectable in Studio.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/BasePart#Locked)
     */
    Locked: boolean;
    /**
     * Describes the mass of the part, the product of its density and volume.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/BasePart#Mass)
     */
    readonly Mass: number;
    /**
     * Determines whether the part contributes to the total mass or inertia of its rigid body.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/BasePart#Massless)
     */
    Massless: boolean;
    /**
     * Determines the texture and default physical properties of a part.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/BasePart#Material)
     */
    Material: Enum.Material;
    /**
     * The name of <code>MaterialVariant</code>.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/BasePart#MaterialVariant)
     */
    MaterialVariant: string;
    /**
     * Describes the rotation of the part in the world.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/BasePart#Orientation)
     */
    Orientation: Vector3;
    /**
     * Specifies the offset of the part's pivot from its <code>CFrame</code>.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/BasePart#PivotOffset)
     */
    PivotOffset: CFrame;
    /**
     * Describes the position of the part in the world.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/BasePart#Position)
     */
    Position: Vector3;
    /**
     * Time since last recorded physics update.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/BasePart#ReceiveAge)
     */
    readonly ReceiveAge: number;
    /**
     * Determines how much a part reflects the skybox.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/BasePart#Reflectance)
     */
    Reflectance: number;
    /**
     * Describes the smallest change in size allowable by the Resize method.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/BasePart#ResizeIncrement)
     */
    readonly ResizeIncrement: number;
    /**
     * Describes the faces on which a part may be resized.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/BasePart#ResizeableFaces)
     */
    readonly ResizeableFaces: Faces;
    /**
     * <strong>Deprecated:</strong> <br>Determines the first parameter for the SurfaceType on the Right face of a part (-X direction).
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/BasePart#RightParamA)
     */
    RightParamA: number;
    /**
     * <strong>Deprecated:</strong> <br>Determines the second parameter for the SurfaceType on the Right face of a part (-X direction).
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/BasePart#RightParamB)
     */
    RightParamB: number;
    /**
     * Determines the type of surface for the Right face of a part (+X direction).
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/BasePart#RightSurface)
     */
    RightSurface: Enum.SurfaceType;
    /**
     * <strong>Deprecated:</strong> <br>Determines the kind of input for the Right face of a part (-X direction).
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/BasePart#RightSurfaceInput)
     */
    RightSurfaceInput: Enum.InputType;
    /**
     * The main rule in determining the root part of an assembly.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/BasePart#RootPriority)
     */
    RootPriority: number;
    /**
     * <strong>Deprecated:</strong> This property is deprecated. Use <code>AssemblyAngularVelocity</code> instead.<br>Determines a part's change in orientation over time.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/BasePart#RotVelocity)
     */
    RotVelocity: Vector3;
    /**
     * The rotation of the part in degrees for the three axes.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/BasePart#Rotation)
     */
    Rotation: Vector3;
    /**
     * Determines the dimensions of a part (length, width, height).
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/BasePart#Size)
     */
    Size: Vector3;
    /**
     * <strong>Deprecated:</strong> This item is deprecated. See <code>BasePart.CustomPhysicalProperties</code> to see how to configure the physical properties of BaseParts. Do not use it for new work.<br>The ratio of the part's density to the density of water determined by the <code>BasePart.Material</code>.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/BasePart#SpecificGravity)
     */
    readonly SpecificGravity: number;
    /**
     * <strong>Deprecated:</strong> <br>Determines the first parameter for the SurfaceType on the Top face of a part (+Y direction).
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/BasePart#TopParamA)
     */
    TopParamA: number;
    /**
     * <strong>Deprecated:</strong> <br>Determines the second parameter for the SurfaceType on the Top face of a part (+Y direction).
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/BasePart#TopParamB)
     */
    TopParamB: number;
    /**
     * Determines the type of surface for the Top face of a part (+Y direction).
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/BasePart#TopSurface)
     */
    TopSurface: Enum.SurfaceType;
    /**
     * <strong>Deprecated:</strong> <br>Determines the kind of input for the Top face of a part (+Y direction).
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/BasePart#TopSurfaceInput)
     */
    TopSurfaceInput: Enum.InputType;
    /**
     * Determines how much a part can be seen through (the inverse of part opacity).
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/BasePart#Transparency)
     */
    Transparency: number;
    /**
     * <strong>Deprecated:</strong> This property is deprecated. Use <code>AssemblyLinearVelocity</code> instead.<br>Determines a part's change in position over time.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/BasePart#Velocity)
     */
    Velocity: Vector3;
    /**
     * @param this The abstract base class for in-world objects that physically interact.
     * @param angAcceleration
     * @param angVelocity
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/BasePart#AngularAccelerationToTorque)
     */
    AngularAccelerationToTorque(this: BasePart, angAcceleration: Vector3, angVelocity?: Vector3): Vector3;
    /**
     * Apply an angular impulse to the assembly.
     * @param this The abstract base class for in-world objects that physically interact.
     * @param impulse An angular impulse vector to be applied to the assembly.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/BasePart#ApplyAngularImpulse)
     */
    ApplyAngularImpulse(this: BasePart, impulse: Vector3): void;
    /**
     * Apply an impulse to the assembly at the assembly's <code>center of mass</code>.
     * @param this The abstract base class for in-world objects that physically interact.
     * @param impulse A linear impulse vector to be applied to the assembly.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/BasePart#ApplyImpulse)
     */
    ApplyImpulse(this: BasePart, impulse: Vector3): void;
    /**
     * Apply an impulse to the assembly at specified position.
     * @param this The abstract base class for in-world objects that physically interact.
     * @param impulse An impulse vector to be applied to the assembly.
     * @param position The position, in world space, to apply the impulse.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/BasePart#ApplyImpulseAtPosition)
     */
    ApplyImpulseAtPosition(this: BasePart, impulse: Vector3, position: Vector3): void;
    /**
     * <strong>Deprecated:</strong> <br>Breaks any surface connection with any adjacent part, including <code>Weld</code> and other <code>JointInstance</code>.
     * @param this The abstract base class for in-world objects that physically interact.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/BasePart#BreakJoints)
     */
    BreakJoints(this: BasePart): void;
    /**
     * Returns whether the parts can collide with each other.
     * @param this The abstract base class for in-world objects that physically interact.
     * @param part The specified part being checked for collidability.
     * @returns Whether the parts can collide with each other.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/BasePart#CanCollideWith)
     */
    CanCollideWith(this: BasePart, part: BasePart): boolean;
    /**
     * Checks whether you can set a part's network ownership.
     * @param this The abstract base class for in-world objects that physically interact.
     * @returns Whether you can modify or read the network ownership and the reason.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/BasePart#CanSetNetworkOwnership)
     */
    CanSetNetworkOwnership(this: BasePart): LuaTuple<[
        boolean,
        string | undefined
    ]>;
    /**
     * @param this The abstract base class for in-world objects that physically interact.
     * @param position
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/BasePart#GetClosestPointOnSurface)
     */
    GetClosestPointOnSurface(this: BasePart, position: Vector3): Vector3;
    /**
     * Returns a table of parts connected to the object by any kind of rigid joint.
     * @param this The abstract base class for in-world objects that physically interact.
     * @param recursive A table of parts connected to the object by any kind of <code>joint</code>.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/BasePart#GetConnectedParts)
     */
    GetConnectedParts(this: BasePart, recursive?: boolean): Array<BasePart>;
    /**
     * Return all Joints or Constraints that is connected to this Part.
     * @param this The abstract base class for in-world objects that physically interact.
     * @returns An array of all Joints or Constraints connected to the Part.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/BasePart#GetJoints)
     */
    GetJoints(this: BasePart): Array<Constraint | JointInstance>;
    /**
     * Returns the value of the <code>Mass</code> property.
     * @param this The abstract base class for in-world objects that physically interact.
     * @returns The part's mass.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/BasePart#GetMass)
     */
    GetMass(this: BasePart): number;
    /**
     * Returns the current player who is the network owner of this part, or nil in case of the server.
     * @param this The abstract base class for in-world objects that physically interact.
     * @returns The current player who is the network owner of this part, or nil in case of the server.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/BasePart#GetNetworkOwner)
     */
    GetNetworkOwner(this: BasePart): Player | undefined;
    /**
     * Returns true if the game engine automatically decides the network owner for this part.
     * @param this The abstract base class for in-world objects that physically interact.
     * @returns Whether the game engine automatically decides the network owner for this part.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/BasePart#GetNetworkOwnershipAuto)
     */
    GetNetworkOwnershipAuto(this: BasePart): boolean;
    /**
     * @param this The abstract base class for in-world objects that physically interact.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/BasePart#GetNoCollisionConstraints)
     */
    GetNoCollisionConstraints(this: BasePart): Array<Instance>;
    /**
     * <strong>Deprecated:</strong> This item is been deprecated since interpolation is now applied to the <code>CFrame</code> directly. Do not use it for new work.<br>OBSOLETE. Returns a CFrame describing where the part is being rendered at.
     * @param this The abstract base class for in-world objects that physically interact.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/BasePart#GetRenderCFrame)
     */
    GetRenderCFrame(this: BasePart): CFrame;
    /**
     * Returns the base part of an assembly of parts.
     * @param this The abstract base class for in-world objects that physically interact.
     * @returns The base part of an assembly (a collection of parts connected together).
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/BasePart#GetRootPart)
     */
    GetRootPart(this: BasePart): BasePart;
    /**
     * Returns a table of all <code>BasePart.CanCollide</code> true parts that intersect with this part.
     * @param this The abstract base class for in-world objects that physically interact.
     * @returns A table of all parts that intersect and can collide with this part.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/BasePart#GetTouchingParts)
     */
    GetTouchingParts(this: BasePart): Array<BasePart>;
    /**
     * Returns the linear velocity of the part's assembly at the given position relative to this part.
     * @param this The abstract base class for in-world objects that physically interact.
     * @param position
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/BasePart#GetVelocityAtPosition)
     */
    GetVelocityAtPosition(this: BasePart, position: Vector3): Vector3;
    /**
     * Returns true if the object is connected to a part that will hold it in place (eg an <code>Anchored</code> part), otherwise returns false.
     * @param this The abstract base class for in-world objects that physically interact.
     * @returns Whether the object is connected to a part that will hold it in place.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/BasePart#IsGrounded)
     */
    IsGrounded(this: BasePart): boolean;
    /**
     * <strong>Deprecated:</strong> SurfaceType based joining is deprecated, do not use MakeJoints for new projects. <code>WeldConstraints</code> and <code>HingeConstraints</code> should be used instead.<br>Creates a joint on any side of the object that has a surface ID that can make a joint.
     * @param this The abstract base class for in-world objects that physically interact.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/BasePart#MakeJoints)
     */
    MakeJoints(this: BasePart): void;
    /**
     * Changes the size of an object just like using the Studio resize tool.
     * @param this The abstract base class for in-world objects that physically interact.
     * @param normalId The side to resize.
     * @param deltaAmount How much to grow/shrink on the specified side.
     * @returns Whether the part is resized.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/BasePart#Resize)
     */
    Resize(this: BasePart, normalId: CastsToEnum<Enum.NormalId>, deltaAmount: number): boolean;
    /**
     * Sets the given player as network owner for this and all connected parts.
     * @param this The abstract base class for in-world objects that physically interact.
     * @param playerInstance The player being given network ownership of the part.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/BasePart#SetNetworkOwner)
     */
    SetNetworkOwner(this: BasePart, playerInstance?: Player): void;
    /**
     * Lets the game engine dynamically decide who will handle the part's physics (one of the clients or the server).
     * @param this The abstract base class for in-world objects that physically interact.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/BasePart#SetNetworkOwnershipAuto)
     */
    SetNetworkOwnershipAuto(this: BasePart): void;
    /**
     * @param this The abstract base class for in-world objects that physically interact.
     * @param torque
     * @param angVelocity
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/BasePart#TorqueToAngularAcceleration)
     */
    TorqueToAngularAcceleration(this: BasePart, torque: Vector3, angVelocity?: Vector3): Vector3;
    /**
     * Creates a new <code>IntersectOperation</code> from the overlapping geometry of the part and the other parts in the given array.
     * @param this The abstract base class for in-world objects that physically interact.
     * @param parts The objects taking part in the intersection.
     * @param collisionfidelity The <code>CollisionFidelity</code> value for the resulting <code>IntersectOperation</code>.
     * @param renderFidelity The <code>RenderFidelity</code> value of the resulting <code>PartOperation</code>.
     * @returns Resulting <code>IntersectOperation</code> with default name <strong>Intersect</strong>.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/BasePart#IntersectAsync)
     */
    IntersectAsync(this: BasePart, parts: Array<Instance>, collisionfidelity?: CastsToEnum<Enum.CollisionFidelity>, renderFidelity?: CastsToEnum<Enum.RenderFidelity>): Instance | undefined;
    /**
     * Creates a new <code>UnionOperation</code> from the part, minus the geometry occupied by the parts in the given array.
     * @param this The abstract base class for in-world objects that physically interact.
     * @param parts The objects taking part in the subtraction.
     * @param collisionfidelity The <code>CollisionFidelity</code> value for the resulting <code>UnionOperation</code>.
     * @param renderFidelity The <code>RenderFidelity</code> value of the resulting <code>PartOperation</code>.
     * @returns Resulting <code>UnionOperation</code> with default name <strong>Union</strong>.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/BasePart#SubtractAsync)
     */
    SubtractAsync(this: BasePart, parts: Array<BasePart>, collisionfidelity?: CastsToEnum<Enum.CollisionFidelity>): UnionOperation | undefined;
    /**
     * Creates a new <code>UnionOperation</code> from the part, plus the geometry occupied by the parts in the given array.
     * @param this The abstract base class for in-world objects that physically interact.
     * @param parts The objects taking part in the union with the calling part.
     * @param collisionfidelity The <code>CollisionFidelity</code> value for the resulting <code>UnionOperation</code>.
     * @param renderFidelity The <code>RenderFidelity</code> value of the resulting <code>PartOperation</code>.
     * @returns Resulting <code>UnionOperation</code> with default name <strong>Union</strong>.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/BasePart#UnionAsync)
     */
    UnionAsync(this: BasePart, parts: Array<BasePart>, collisionfidelity?: CastsToEnum<Enum.CollisionFidelity>): UnionOperation;
    /**
     * <strong>Deprecated:</strong> This event is deprecated in favor of <code>BasePart.Touched</code>.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/BasePart#LocalSimulationTouched)
     */
    readonly LocalSimulationTouched: RBXScriptSignal<(part: BasePart) => void>;
    /**
     * <strong>Deprecated:</strong> This event is deprecated. Do not use it for new work.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/BasePart#OutfitChanged)
     */
    readonly OutfitChanged: RBXScriptSignal<() => void>;
    /**
     * <strong>Deprecated:</strong> This event is deprecated in favor of <code>BasePart.TouchEnded</code>, which should be used instead.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/BasePart#StoppedTouching)
     */
    readonly StoppedTouching: RBXScriptSignal<(otherPart: BasePart) => void>;
    /**
     * Fires when a part stops touching another part as a result of physical movement.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/BasePart#TouchEnded)
     */
    readonly TouchEnded: RBXScriptSignal<(otherPart: BasePart) => void>;
    /**
     * Fires when a part touches another part as a result of physical movement.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/BasePart#Touched)
     */
    readonly Touched: RBXScriptSignal<(otherPart: BasePart) => void>;
}
/**
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/CornerWedgePart)
 */
interface CornerWedgePart extends BasePart {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_CornerWedgePart: unique symbol;
}
/**
 * The FormFactorPart class is an abstract class. It inherits from the BasePart class and adds the FormFactor property to classes that inherit from it.
 *
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/FormFactorPart)
 */
interface FormFactorPart extends BasePart {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_FormFactorPart: unique symbol;
    /**
     * <strong>Deprecated:</strong> This property has been deprecated and should not be used in new work.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/FormFactorPart#FormFactor)
     */
    FormFactor: Enum.FormFactor;
}
/**
 * A common type of <code>BasePart</code> that comes in different primitive shapes.
 *
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Part)
 */
interface Part extends FormFactorPart {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_Part: unique symbol;
    /**
     * Sets the overall shape of the object.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Part#Shape)
     */
    Shape: Enum.PartType;
}
/**
 * Historically a form of <code>Seat</code> that wouldn't place the player in a sitting pose. This object is no longer create-able and cannot be used by developers.
 *
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Platform)
 */
interface Platform extends Part {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_Platform: unique symbol;
    /**
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Platform#RemoteCreateMotor6D)
     */
    readonly RemoteCreateMotor6D: RBXScriptSignal<(humanoid: Instance) => void>;
    /**
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Platform#RemoteDestroyMotor6D)
     */
    readonly RemoteDestroyMotor6D: RBXScriptSignal<() => void>;
}
/**
 * A type of <code>BasePart</code> that characters can 'sit' in. When a character touches an enabled Seat object, it will be attached to the part by a <code>Weld</code> and the default character scripts will play a sitting animation.
 *
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Seat)
 */
interface Seat extends Part {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_Seat: unique symbol;
    /**
     * Whether or not the seat is usable. If set to true, the seat will act as a normal part.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Seat#Disabled)
     */
    Disabled: boolean;
    /**
     * The humanoid that is sitting in the seat.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Seat#Occupant)
     */
    readonly Occupant: Humanoid | undefined;
    /**
     * Forces the character with the specified <code>Humanoid</code> to sit in the Seat.
     * @param this A type of <code>BasePart</code> that characters can 'sit' in. When a character touches an enabled Seat object, it will be attached to the part by a <code>Weld</code> and the default character scripts will play a sitting animation.
     * @param humanoid
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Seat#Sit)
     */
    Sit(this: Seat, humanoid: Instance): void;
    /**
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Seat#RemoteCreateSeatWeld)
     */
    readonly RemoteCreateSeatWeld: RBXScriptSignal<(humanoid: Instance) => void>;
    /**
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Seat#RemoteDestroySeatWeld)
     */
    readonly RemoteDestroySeatWeld: RBXScriptSignal<() => void>;
}
/**
 * <strong>Deprecated:</strong> The SkateboardPlatform object has been deprecated and is no longer supported by Roblox. Developers looking to create skateboards or similar vehicles are advised to program their own systems. Additionally, the <code>VehicleSeat</code> object can be used to quickly create simple vehicles.<br>A SkateboardPlatform can be used to create a skateboard. When characters get on a skateboard, they are stuck to it until they press the escape key. Until then, the character uses skateboard animations and travels faster than a walking character.
 *
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/SkateboardPlatform)
 */
interface SkateboardPlatform extends Part {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_SkateboardPlatform: unique symbol;
    /**
     * The SkateboardPlatform's active SkateboardController.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/SkateboardPlatform#Controller)
     */
    readonly Controller: SkateboardController | undefined;
    /**
     * The <code>Humanoid</code> that is controlling the SkateboardPlatform.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/SkateboardPlatform#ControllingHumanoid)
     */
    readonly ControllingHumanoid: Humanoid | undefined;
    /**
     * The direction of movement, tied to the keys A and D. Must be 1 (right), 0 (straight), or -1 (left). Will refresh back to 0 unless constantly set.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/SkateboardPlatform#Steer)
     */
    Steer: number;
    /**
     * If true, wheels won't roll without user input.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/SkateboardPlatform#StickyWheels)
     */
    StickyWheels: boolean;
    /**
     * The direction of movement, tied to the keys W and S. Must be an integer 1 (forward), 0 (null), or -1 (reverse). Will refresh back to 0 unless constantly set.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/SkateboardPlatform#Throttle)
     */
    Throttle: number;
    /**
     * Adds ''impulseWorld'' to the SkateboardPlatform's <code>BasePart.Velocity</code>.
     * @param this <strong>Deprecated:</strong> The SkateboardPlatform object has been deprecated and is no longer supported by Roblox. Developers looking to create skateboards or similar vehicles are advised to program their own systems. Additionally, the <code>VehicleSeat</code> object can be used to quickly create simple vehicles.<br>A SkateboardPlatform can be used to create a skateboard. When characters get on a skateboard, they are stuck to it until they press the escape key. Until then, the character uses skateboard animations and travels faster than a walking character.
     * @param impulseWorld
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/SkateboardPlatform#ApplySpecificImpulse)
     */
    ApplySpecificImpulse(this: SkateboardPlatform, impulseWorld: Vector3): void;
    /**
     * Fired when the skateboard is equipped.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/SkateboardPlatform#Equipped)
     */
    readonly Equipped: RBXScriptSignal<(humanoid: Instance, skateboardController: Instance) => void>;
    /**
     * Fired when the SkateboardPlatform's <code>SkateboardPlatform.ControllingHumanoid</code> changes the force being used on the SkateboardPlatform.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/SkateboardPlatform#MoveStateChanged)
     */
    readonly MoveStateChanged: RBXScriptSignal<(newState: Enum.MoveState, oldState: Enum.MoveState) => void>;
    /**
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/SkateboardPlatform#RemoteCreateMotor6D)
     */
    readonly RemoteCreateMotor6D: RBXScriptSignal<(humanoid: Instance) => void>;
    /**
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/SkateboardPlatform#RemoteDestroyMotor6D)
     */
    readonly RemoteDestroyMotor6D: RBXScriptSignal<() => void>;
    /**
     * Fired whenever the skateboard is unequipped.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/SkateboardPlatform#Unequipped)
     */
    readonly Unequipped: RBXScriptSignal<(humanoid: Instance) => void>;
}
/**
 * <code>SpawnLocations</code>, or "spawns" determine where a <code>Player</code> respawns when they die. They can be configured to allow only certain players to use each spawn, using <code>Teams</code>. They also control how <code>ForceFields</code> are set up for newly-spawned players.
 *
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/SpawnLocation)
 */
interface SpawnLocation extends Part {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_SpawnLocation: unique symbol;
    /**
     * Allows a <code>Player</code> to join the team by touching the <code>SpawnLocation</code>. When set to true, if a <code>Player</code> character comes into contact with the <code>SpawnLocation</code>, the player's <code>Player.TeamColor</code> will be set to <code>SpawnLocation.TeamColor</code>.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/SpawnLocation#AllowTeamChangeOnTouch)
     */
    AllowTeamChangeOnTouch: boolean;
    /**
     * The length of time, in seconds, that a <code>ForceField</code> will be applied to a <code>Player</code> character spawning at this <code>SpawnLocation</code>. If Duration is zero, the <code>ForceField</code> is never created, and it will not trigger the <code>Instance.DescendantAdded</code> or <code>Instance.ChildAdded</code> events.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/SpawnLocation#Duration)
     */
    Duration: number;
    /**
     * Sets whether or not the <code>SpawnLocation</code> is enabled. When disabled players cannot spawn at the <code>SpawnLocation</code> and the AllowTeamChangeOnTouch functionality is disabled.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/SpawnLocation#Enabled)
     */
    Enabled: boolean;
    /**
     * Whether or not a <code>SpawnLocation</code> is affiliated with a specific team. This means that any <code>Player</code>, of any <code>Team</code>, can spawn on it if this property is set to true.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/SpawnLocation#Neutral)
     */
    Neutral: boolean;
    /**
     * Sets what team the <code>SpawnLocation</code> is affiliated to. If <code>SpawnLocation.Neutral</code> property is false, only <code>Players</code> with the same <code>Player.TeamColor</code> as the spawn's TeamColor will be able to spawn there.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/SpawnLocation#TeamColor)
     */
    TeamColor: BrickColor;
}
/**
 * A type of <code>BasePart</code> that has a wedge shape.
 *
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/WedgePart)
 */
interface WedgePart extends FormFactorPart {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_WedgePart: unique symbol;
}
/**
 * Terrain lets you to create dynamically morphable environments.
 *
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Terrain)
 */
interface Terrain extends BasePart {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_Terrain: unique symbol;
    /**
     * <strong>Deprecated:</strong> Sets the specified terrain voxel's material to ''Water'' and sets its occupancy to 1.<br>Returns true if the current game is using the smooth terrain system.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Terrain#IsSmooth)
     */
    readonly IsSmooth: boolean;
    /**
     * Displays the boundaries of the largest possible editable region.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Terrain#MaxExtents)
     */
    readonly MaxExtents: Region3int16;
    /**
     * The tint of the Terrain water.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Terrain#WaterColor)
     */
    WaterColor: Color3;
    /**
     * Controls how opaque the Terrain's water reflections are.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Terrain#WaterReflectance)
     */
    WaterReflectance: number;
    /**
     * The transparency of the Terrain water.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Terrain#WaterTransparency)
     */
    WaterTransparency: number;
    /**
     * Sets the maximum height of the Terrain water waves in studs.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Terrain#WaterWaveSize)
     */
    WaterWaveSize: number;
    /**
     * Sets how many times the Terrain water waves will move up and down per minute.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Terrain#WaterWaveSpeed)
     */
    WaterWaveSpeed: number;
    /**
     * <strong>Deprecated:</strong> This item is a deprecated function of a legacy <code>Terrain</code> engine that has been removed. Do not use it for new work.<br><em>(OBSOLETE)</em> No longer does anything.
     * @param this Terrain lets you to create dynamically morphable environments.
     * @param x
     * @param y
     * @param z
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Terrain#AutowedgeCell)
     */
    AutowedgeCell(this: Terrain, x: number, y: number, z: number): boolean;
    /**
     * <strong>Deprecated:</strong> This item is a deprecated function of a legacy <code>Terrain</code> engine that has been removed. Do not use it for new work.<br><em>(OBSOLETE)</em> No longer does anything.
     * @param this Terrain lets you to create dynamically morphable environments.
     * @param region
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Terrain#AutowedgeCells)
     */
    AutowedgeCells(this: Terrain, region: Region3int16): void;
    /**
     * Returns the world position of the center of the terrain cell (x, y, z).
     * @param this Terrain lets you to create dynamically morphable environments.
     * @param x
     * @param y
     * @param z
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Terrain#CellCenterToWorld)
     */
    CellCenterToWorld(this: Terrain, x: number, y: number, z: number): Vector3;
    /**
     * Returns the position of the lower-left-forward corner of the grid cell (x, y, z).
     * @param this Terrain lets you to create dynamically morphable environments.
     * @param x
     * @param y
     * @param z
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Terrain#CellCornerToWorld)
     */
    CellCornerToWorld(this: Terrain, x: number, y: number, z: number): Vector3;
    /**
     * Clears the terrain.
     * @param this Terrain lets you to create dynamically morphable environments.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Terrain#Clear)
     */
    Clear(this: Terrain): void;
    /**
     * Stores a chunk of terrain into a <code>TerrainRegion</code> object so it can be loaded back later. Note: <code>TerrainRegion</code> data does not replicate between server and client.
     * @param this Terrain lets you to create dynamically morphable environments.
     * @param region
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Terrain#CopyRegion)
     */
    CopyRegion(this: Terrain, region: Region3int16): TerrainRegion;
    /**
     * Returns the number of non-empty cells in the Terrain.
     * @param this Terrain lets you to create dynamically morphable environments.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Terrain#CountCells)
     */
    CountCells(this: Terrain): number;
    /**
     * Fills a ball of smooth terrain in a given space.
     * @param this Terrain lets you to create dynamically morphable environments.
     * @param center The position of the center of the terrain ball.
     * @param radius The radius in studs of the terrain ball.
     * @param material The <code>Material</code> of the terrain ball.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Terrain#FillBall)
     */
    FillBall(this: Terrain, center: Vector3, radius: number, material: CastsToEnum<Enum.Material>): void;
    /**
     * Fills a block of smooth terrain with a given location, rotation, size, and material.
     * @param this Terrain lets you to create dynamically morphable environments.
     * @param cframe The position and orientation of the terrain block.
     * @param size The size in studs of the square block - both the height and width.
     * @param material The <code>Material</code> of the terrain block.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Terrain#FillBlock)
     */
    FillBlock(this: Terrain, cframe: CFrame, size: Vector3, material: CastsToEnum<Enum.Material>): void;
    /**
     * Fills a cylinder of smooth terrain in a given space.
     * @param this Terrain lets you to create dynamically morphable environments.
     * @param cframe The position and orientation of the terrain cylinder.
     * @param height The height in studs of the terrain cylinder.
     * @param radius The radius in studs of the terrain cylinder.
     * @param material The <code>Material</code> of the terrain cylinder.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Terrain#FillCylinder)
     */
    FillCylinder(this: Terrain, cframe: CFrame, height: number, radius: number, material: CastsToEnum<Enum.Material>): void;
    /**
     * Fills a <code>Region3</code> space with smooth terrain.
     * @param this Terrain lets you to create dynamically morphable environments.
     * @param region
     * @param resolution
     * @param material
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Terrain#FillRegion)
     */
    FillRegion(this: Terrain, region: Region3, resolution: number, material: CastsToEnum<Enum.Material>): void;
    /**
     * Fills a wedge-shaped volume of Terrain with the given <code>Material</code> and the area's CFrame and Size.
     * @param this Terrain lets you to create dynamically morphable environments.
     * @param cframe The position and orientation of the wedge to fill.
     * @param size The size of the wedge to fill.
     * @param material The material with which the wedge will be filled.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Terrain#FillWedge)
     */
    FillWedge(this: Terrain, cframe: CFrame, size: Vector3, material: CastsToEnum<Enum.Material>): void;
    /**
     * <strong>Deprecated:</strong> This item is a deprecated function of a legacy <code>Terrain</code> engine that has been removed. Do not use it for new work.<br>Returns the closest CellMaterial from the legacy terrain engine that matches the smooth terrain voxel specified.
     * @param this Terrain lets you to create dynamically morphable environments.
     * @param x
     * @param y
     * @param z
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Terrain#GetCell)
     */
    GetCell(this: Terrain, x: number, y: number, z: number): unknown;
    /**
     * Returns current terrain material color for specified terrain material.
     * @param this Terrain lets you to create dynamically morphable environments.
     * @param material
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Terrain#GetMaterialColor)
     */
    GetMaterialColor(this: Terrain, material: CastsToEnum<Enum.Material>): Color3;
    /**
     * <strong>Deprecated:</strong> This item is a deprecated function of a legacy <code>Terrain</code> engine that has been removed. Do not use it for new work.<br>Returns if the cell is a water cell.
     * @param this Terrain lets you to create dynamically morphable environments.
     * @param x
     * @param y
     * @param z
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Terrain#GetWaterCell)
     */
    GetWaterCell(this: Terrain, x: number, y: number, z: number): unknown;
    /**
     * Applies a chunk of terrain to the Terrain object. Note: <code>TerrainRegion</code> data does not replicate between server and client.
     * @param this Terrain lets you to create dynamically morphable environments.
     * @param region
     * @param corner
     * @param pasteEmptyCells
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Terrain#PasteRegion)
     */
    PasteRegion(this: Terrain, region: TerrainRegion, corner: Vector3int16, pasteEmptyCells: boolean): void;
    /**
     * Returns a region of terrain voxel data in table format based on the channel names.
     * @param this Terrain lets you to create dynamically morphable environments.
     * @param region Target region to read from. Must be aligned to the voxel grid. Will throw an error if region is too large; limit is currently 4194304 voxels&sup3;.
     * @param resolution Voxel resolution. Must be 4.
     * @param channelIds Array of channel IDs (strings) that need to be accessed from the voxel data. Each channel ID represents a type of data that's stored in voxel. Current supported IDs are <code>{"SolidMaterial", "SolidOccupancy", "LiquidOccupancy"}</code>.
     * @returns Returns voxel data as a dictionary based on the <code>channelIds</code> input. Keys represent each channel ID with their respective value as an array of 3D data. <ul> <li><code>SolidMaterial</code> — The <code>Material</code> material of the voxel. Note   that <code>Water</code> is not supported anymore; instead, a   voxel that contains water will have a value of <code>LiquidOccupancy</code>.</li> <li><code>SolidOccupancy</code> — The occupancy of the voxel's material as   specified in the <code>SolidMaterial</code> channel. This is a value between 0   (empty) and 1 (full).</li> <li><code>LiquidOccupancy</code> — Specifies the occupancy of the   <code>Water</code> material in a voxel as a value between 0 (no   water) and 1 (full of water). If the <code>SolidOccupancy</code> is 1 and the   <code>SolidMaterial</code> is not <code>Air</code>, this will be 0.</li> </ul> The dictionary also contains a <code>Size</code> key with a value representing the 3D array size of each channel data.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Terrain#ReadVoxelChannels)
     */
    ReadVoxelChannels(this: Terrain, region: Region3, resolution: number, channelIds: Array<unknown>): object;
    /**
     * Returns a certain region of smooth terrain in table format.
     * @param this Terrain lets you to create dynamically morphable environments.
     * @param region Target region to read from. Must be aligned to the voxel grid. Will throw an error if region is too large. The limit is currently 4194304 voxels^3.
     * @param resolution Voxel resolution. Must be 4.
     * @returns Returns raw voxel data as two 3D arrays. <ul> <li><code>materials</code> - 3D array of <code>Material</code> from the target area. Also   contains a Size field, equal to the dimensions of the nested arrays.</li> <li><code>occupancies</code> - 3D array of occupancy values from the target area.   Also contains a Size field, equal to the dimensions of the nested   arrays.</li> </ul>
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Terrain#ReadVoxels)
     */
    ReadVoxels(this: Terrain, region: Region3, resolution: number): LuaTuple<[
        ReadVoxelsArray<Enum.Material>,
        ReadVoxelsArray<number>
    ]>;
    /**
     * Replaces the terrain of a material within a region with another material.
     * @param this Terrain lets you to create dynamically morphable environments.
     * @param region The region in which the replacement operation will occur.
     * @param resolution The resolution at which the replacement operation will take place; at the moment this must be exactly 4.
     * @param sourceMaterial The old material that shall be replaced.
     * @param targetMaterial The new material.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Terrain#ReplaceMaterial)
     */
    ReplaceMaterial(this: Terrain, region: Region3, resolution: number, sourceMaterial: CastsToEnum<Enum.Material>, targetMaterial: CastsToEnum<Enum.Material>): void;
    /**
     * <strong>Deprecated:</strong> This item is a deprecated function of a legacy <code>Terrain</code> engine that has been removed. Do not use it for new work.<br>Sets the occupancy and material of a specific terrain voxel.
     * @param this Terrain lets you to create dynamically morphable environments.
     * @param x
     * @param y
     * @param z
     * @param material
     * @param block
     * @param orientation
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Terrain#SetCell)
     */
    SetCell(this: Terrain, x: number, y: number, z: number, material: CastsToEnum<Enum.CellMaterial>, block: CastsToEnum<Enum.CellBlock>, orientation: CastsToEnum<Enum.CellOrientation>): void;
    /**
     * <strong>Deprecated:</strong> This item is a deprecated function of a legacy <code>Terrain</code> engine that has been removed. Do not use it for new work.<br>Sets the occupancy and material of all terrain voxels in a specific region.
     * @param this Terrain lets you to create dynamically morphable environments.
     * @param region
     * @param material
     * @param block
     * @param orientation
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Terrain#SetCells)
     */
    SetCells(this: Terrain, region: Region3int16, material: CastsToEnum<Enum.CellMaterial>, block: CastsToEnum<Enum.CellBlock>, orientation: CastsToEnum<Enum.CellOrientation>): void;
    /**
     * Sets current terrain material color for specified terrain material.
     * @param this Terrain lets you to create dynamically morphable environments.
     * @param material
     * @param value
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Terrain#SetMaterialColor)
     */
    SetMaterialColor(this: Terrain, material: CastsToEnum<Enum.Material>, value: Color3): void;
    /**
     * <strong>Deprecated:</strong> This item is a deprecated function of a legacy <code>Terrain</code> engine that has been removed. Do not use it for new work.<br>Sets the specified terrain voxel's material to ''Water'' and sets its occupancy to 1.
     * @param this Terrain lets you to create dynamically morphable environments.
     * @param x
     * @param y
     * @param z
     * @param force
     * @param direction
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Terrain#SetWaterCell)
     */
    SetWaterCell(this: Terrain, x: number, y: number, z: number, force: CastsToEnum<Enum.WaterForce>, direction: CastsToEnum<Enum.WaterDirection>): void;
    /**
     * Returns the grid cell location that contains the point <strong>position</strong>.
     * @param this Terrain lets you to create dynamically morphable environments.
     * @param position
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Terrain#WorldToCell)
     */
    WorldToCell(this: Terrain, position: Vector3): Vector3;
    /**
     * Returns the grid cell location that contains the point position, preferring empty grid cells when position is on a grid edge.
     * @param this Terrain lets you to create dynamically morphable environments.
     * @param position
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Terrain#WorldToCellPreferEmpty)
     */
    WorldToCellPreferEmpty(this: Terrain, position: Vector3): Vector3;
    /**
     * Returns the grid cell location that contains the point position, preferring non-empty grid cells when position is on a grid edge.
     * @param this Terrain lets you to create dynamically morphable environments.
     * @param position
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Terrain#WorldToCellPreferSolid)
     */
    WorldToCellPreferSolid(this: Terrain, position: Vector3): Vector3;
    /**
     * Sets a region of terrain using a dictionary of voxel channel data.
     * @param this Terrain lets you to create dynamically morphable environments.
     * @param region Target region to write to. Must be aligned to the voxel grid. Will throw an error if region is too large; limit is currently 4194304 voxels&sup3;.
     * @param resolution Voxel resolution. Must be 4.
     * @param channels Dictionary of voxel data similar to the return value of <code>ReadVoxelChannels()</code>. Keys represent each channel ID with their respective value as an array of 3D data. The dictionary can support single or multiple channel inputs. <ul> <li><code>SolidMaterial</code> — The <code>Material</code> material of the voxel. Note   that <code>Water</code> is not supported anymore; instead, a   voxel that contains only water should be entered as   <code>SolidMaterial = Enum.Material.Air, LiquidOccupancy = x</code>, where <code>x</code>   is a number between 0 (exclusive) and 1 (inclusive).</li> <li><code>SolidOccupancy</code> — The occupancy of the voxel's material as   specified in the <code>SolidMaterial</code> channel. This should be a value   between 0 (empty) and 1 (full).</li> <li><code>LiquidOccupancy</code> — Specifies the occupancy of the   <code>Water</code> material in a voxel as a value between 0 (no   water) and 1 (full of water). If the <code>SolidOccupancy</code> is 1 and the   <code>SolidMaterial</code> is not <code>Air</code>, this will be 0.</li> </ul>
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Terrain#WriteVoxelChannels)
     */
    WriteVoxelChannels(this: Terrain, region: Region3, resolution: number, channels: VoxelChannels): void;
    /**
     * Sets a certain region of smooth terrain using table format.
     * @param this Terrain lets you to create dynamically morphable environments.
     * @param region Target region to write to. Must be aligned to the voxel grid. Will throw an error if region is too large.
     * @param resolution Voxel resolution. Must be 4.
     * @param materials 3D array of Enum.Material. Dimensions must exactly match the size of the target region in voxels.
     * @param occupancy 3D array of voxel occupancies (number between 0 and 1). Dimensions must exactly match the size of the target region in voxels.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Terrain#WriteVoxels)
     */
    WriteVoxels(this: Terrain, region: Region3, resolution: number, materials: Array<Array<Array<CastsToEnum<Enum.Material>>>>, occupancy: Array<Array<Array<number>>>): void;
}
/**
 * Abstract intermediate class that manages physical geometry properties for PartOperations and MeshParts.
 *
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/TriangleMeshPart)
 */
interface TriangleMeshPart extends BasePart {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_TriangleMeshPart: unique symbol;
    /**
     * Determines the level of detail the part's physics will adhere to its mesh.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/TriangleMeshPart#CollisionFidelity)
     */
    get CollisionFidelity(): Enum.CollisionFidelity;
    /**
     * Determines the geometric representation used to compute aerodynamic forces and torques.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/TriangleMeshPart#FluidFidelity)
     */
    get FluidFidelity(): Enum.FluidFidelity;
    /**
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/TriangleMeshPart#MeshSize)
     */
    readonly MeshSize: Vector3;
}
/**
 * A form of <code>BasePart</code> that includes a physically simulated custom mesh.
 *
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/MeshPart)
 */
interface MeshPart extends TriangleMeshPart {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_MeshPart: unique symbol;
    /**
     * Determines whether to render both faces of polygons in the mesh.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/MeshPart#DoubleSided)
     */
    get DoubleSided(): boolean;
    /**
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/MeshPart#HasJointOffset)
     */
    get HasJointOffset(): boolean;
    /**
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/MeshPart#HasSkinnedMesh)
     */
    get HasSkinnedMesh(): boolean;
    /**
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/MeshPart#JointOffset)
     */
    get JointOffset(): Vector3;
    /**
     * The mesh that is displayed on the <code>MeshPart</code>. Supports <a href="../../../projects/assets/index.md#asset-uris">asset URIs</a> and <code>EditableMesh</code> objects.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/MeshPart#MeshContent)
     */
    get MeshContent(): Content;
    /**
     * The <a href="../../../projects/assets/index.md#asset-uris">asset URIs</a> of the mesh that is displayed on the <code>MeshPart</code>. Reads and writes to <code>MeshContent</code>.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/MeshPart#MeshId)
     */
    get MeshId(): ContentId;
    /**
     * The level of detail used to render the <code>MeshPart</code>.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/MeshPart#RenderFidelity)
     */
    get RenderFidelity(): Enum.RenderFidelity;
    /**
     * The texture applied to the <code>MeshPart</code>. Supports <a href="../../../projects/assets/index.md#asset-uris">asset URIs</a> and <code>EditableImage</code> objects.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/MeshPart#TextureContent)
     */
    TextureContent: Content;
    /**
     * The texture applied to the <code>MeshPart</code>. Reads and writes to <code>TextureContent</code>.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/MeshPart#TextureID)
     */
    TextureID: ContentId;
    /**
     * Overwrites the <code>MeshContent</code>, <code>TextureContent</code>, and collision geometry properties of this <code>MeshPart</code> from the given source <code>meshPart</code>.
     * @param this A form of <code>BasePart</code> that includes a physically simulated custom mesh.
     * @param meshPart
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/MeshPart#ApplyMesh)
     */
    ApplyMesh(this: MeshPart, meshPart: Instance): void;
}
/**
 * An abstract class that all parts based on solid modeling inherit from.
 *
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/PartOperation)
 */
interface PartOperation extends TriangleMeshPart {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_PartOperation: unique symbol;
    /**
     * The level of detail used to render the solid modeled part.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/PartOperation#RenderFidelity)
     */
    get RenderFidelity(): Enum.RenderFidelity;
    /**
     * An angle in degrees which affects the smooth shading of a solid modeled part.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/PartOperation#SmoothingAngle)
     */
    get SmoothingAngle(): number;
    /**
     * The number of polygons in this solid model.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/PartOperation#TriangleCount)
     */
    readonly TriangleCount: number;
    /**
     * Sets whether the <code>PartOperation</code> can be recolored using inherited color properties.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/PartOperation#UsePartColor)
     */
    UsePartColor: boolean;
    /**
     * Substitutes the geometry of this <code>PartOperation</code> with the geometry of another <code>PartOperation</code>.
     * @param this An abstract class that all parts based on solid modeling inherit from.
     * @param source The <code>PartOperation</code> whose geometry will substitute the geometry of this <code>PartOperation</code>.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/PartOperation#SubstituteGeometry)
     */
    SubstituteGeometry(this: PartOperation, source: Instance): void;
}
/**
 * Result of parts that have been intersected into a single solid model.
 *
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/IntersectOperation)
 */
interface IntersectOperation extends PartOperation {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_IntersectOperation: unique symbol;
}
/**
 * Result of a part that has been negated for use in solid modeling.
 *
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/NegateOperation)
 */
interface NegateOperation extends PartOperation {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_NegateOperation: unique symbol;
}
/**
 * Result of parts that have been joined together into a single solid model.
 *
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/UnionOperation)
 */
interface UnionOperation extends PartOperation {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_UnionOperation: unique symbol;
}
/**
 * Similar to a <code>Part</code> but with a different visual <code>Style</code> and the important distinction that default characters are able to climb it.
 *
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/TrussPart)
 */
interface TrussPart extends BasePart {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_TrussPart: unique symbol;
    /**
     * Sets what the truss looks like.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/TrussPart#Style)
     */
    Style: Enum.Style;
}
/**
 * A seat object that can be used to control a vehicle.
 *
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/VehicleSeat)
 */
interface VehicleSeat extends BasePart {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_VehicleSeat: unique symbol;
    /**
     * Displays how many hinges are detected by the VehicleSeat. Useful for debugging vehicle designs.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/VehicleSeat#AreHingesDetected)
     */
    readonly AreHingesDetected: number;
    /**
     * Toggles whether the <code>VehicleSeat</code> is active or not.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/VehicleSeat#Disabled)
     */
    Disabled: boolean;
    /**
     * If true, a fancy speed bar will be displayed speed on screen that tells you what speed the Vehicle is moving at.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/VehicleSeat#HeadsUpDisplay)
     */
    HeadsUpDisplay: boolean;
    /**
     * The maximum speed that can be attained.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/VehicleSeat#MaxSpeed)
     */
    MaxSpeed: number;
    /**
     * The humanoid that is sitting in the seat.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/VehicleSeat#Occupant)
     */
    readonly Occupant: Humanoid | undefined;
    /**
     * The direction of movement, tied to the keys A and D. Must be one of 1 (right), 0 (straight), or -1 (left). Will refresh back to 0 unless constantly set.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/VehicleSeat#Steer)
     */
    Steer: number;
    /**
     * Functions identically to <code>VehicleSeat.Steer</code>, but the value is not an integer.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/VehicleSeat#SteerFloat)
     */
    SteerFloat: number;
    /**
     * The direction of movement, tied to the keys W and S. Must be an integer 1 (forward) 0 (null) or -1 (reverse). Will refresh back to 0 unless constantly set.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/VehicleSeat#Throttle)
     */
    Throttle: number;
    /**
     * Functions identically to <code>VehicleSeat.Throttle</code>, but the value is not an integer.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/VehicleSeat#ThrottleFloat)
     */
    ThrottleFloat: number;
    /**
     * How fast the vehicles will be able to attain <code>VehicleSeat.MaxSpeed</code>. The greater the number, the faster it will reach the maximum speed.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/VehicleSeat#Torque)
     */
    Torque: number;
    /**
     * The speed at which the vehicle will turn. Higher numbers can cause problems and are not necessarily better.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/VehicleSeat#TurnSpeed)
     */
    TurnSpeed: number;
    /**
     * Forces the character with the specified <code>Humanoid</code> to sit in the VehicleSeat.
     * @param this A seat object that can be used to control a vehicle.
     * @param humanoid The humanoid being forced to sit in the VehicleSeat.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/VehicleSeat#Sit)
     */
    Sit(this: VehicleSeat, humanoid: Instance): void;
    /**
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/VehicleSeat#RemoteCreateSeatWeld)
     */
    readonly RemoteCreateSeatWeld: RBXScriptSignal<(humanoid: Instance) => void>;
    /**
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/VehicleSeat#RemoteDestroySeatWeld)
     */
    readonly RemoteDestroySeatWeld: RBXScriptSignal<() => void>;
}
/**
 * Models are container objects, meaning they group objects together. They are best used to hold collections of <code>BaseParts</code> and have a number of functions that extend their functionality.
 *
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Model)
 */
interface Model extends PVInstance {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_Model: unique symbol;
    /**
     * Controls the model streaming behavior on <code>Models</code> when instance streaming is enabled.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Model#ModelStreamingMode)
     */
    ModelStreamingMode: Enum.ModelStreamingMode;
    /**
     * The primary part of the <code>Model</code>, or <code>nil</code> if not explicitly set.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Model#PrimaryPart)
     */
    PrimaryPart: BasePart | undefined;
    /**
     * Determines where the pivot of a <code>Model</code> which does <strong>not</strong> have a set <code>Model.PrimaryPart</code> is located.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Model#WorldPivot)
     */
    WorldPivot: CFrame;
    /**
     * Sets this model to be persistent for the specified player. <code>Model.ModelStreamingMode</code> must be set to <strong>PersistentPerPlayer</strong> for behavior to be changed as a result of addition.
     * @param this Models are container objects, meaning they group objects together. They are best used to hold collections of <code>BaseParts</code> and have a number of functions that extend their functionality.
     * @param playerInstance
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Model#AddPersistentPlayer)
     */
    AddPersistentPlayer(this: Model, playerInstance?: Player): void;
    /**
     * <strong>Deprecated:</strong> <br>Breaks connections between <code>BaseParts</code>, including surface connections with any adjacent parts, <code>WeldConstraints</code> and all <code>Welds</code> and other <code>JointInstances</code>.
     * @param this Models are container objects, meaning they group objects together. They are best used to hold collections of <code>BaseParts</code> and have a number of functions that extend their functionality.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Model#BreakJoints)
     */
    BreakJoints(this: Model): void;
    /**
     * Returns a description of a volume that contains all parts of a Model.
     * @param this Models are container objects, meaning they group objects together. They are best used to hold collections of <code>BaseParts</code> and have a number of functions that extend their functionality.
     * @returns A <code>CFrame</code> representing the orientation of the volume followed by a <code>Vector3</code> representing the size of the volume.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Model#GetBoundingBox)
     */
    GetBoundingBox(this: Model): LuaTuple<[
        CFrame,
        Vector3
    ]>;
    /**
     * Returns the size of the smallest bounding box that contains all of the <code>BaseParts</code> in the <code>Model</code>, aligned with the <code>Model.PrimaryPart</code> if it is set.
     * @param this Models are container objects, meaning they group objects together. They are best used to hold collections of <code>BaseParts</code> and have a number of functions that extend their functionality.
     * @returns The <code>Vector3</code> extents size of the <code>Model</code>.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Model#GetExtentsSize)
     */
    GetExtentsSize(this: Model): Vector3;
    /**
     * <strong>Deprecated:</strong> This function has been deprecated as it did not provide reliable results. You can instead use <code>Model:GetPrimaryPartCFrame()</code> to retrieve the <code>CFrame</code> of the model's primary part.<br>This value historically returned the CFrame of a central position in the model.
     * @param this Models are container objects, meaning they group objects together. They are best used to hold collections of <code>BaseParts</code> and have a number of functions that extend their functionality.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Model#GetModelCFrame)
     */
    GetModelCFrame(this: Model): CFrame;
    /**
     * <strong>Deprecated:</strong> This item is deprecated. Do not use it for new work. Developers can instead use <code>Model.GetExtentsSize</code>.<br>Returns the Vector3 size of the Model.
     * @param this Models are container objects, meaning they group objects together. They are best used to hold collections of <code>BaseParts</code> and have a number of functions that extend their functionality.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Model#GetModelSize)
     */
    GetModelSize(this: Model): Vector3;
    /**
     * Returns all the <code>Player</code> objects that this model object is persistent for. Behavior varies based on whether this method is called from a <code>Script</code> or a <code>LocalScript</code>.
     * @param this Models are container objects, meaning they group objects together. They are best used to hold collections of <code>BaseParts</code> and have a number of functions that extend their functionality.
     * @returns A table with all the <code>Player</code> objects that this model object is persistent for.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Model#GetPersistentPlayers)
     */
    GetPersistentPlayers(this: Model): Array<Instance>;
    /**
     * <strong>Deprecated:</strong> <br>Returns the <code>CFrame</code> of the model's <code>Model.PrimaryPart</code>. This function will throw an error if no primary part exists for the <code>Model</code>.
     * @param this Models are container objects, meaning they group objects together. They are best used to hold collections of <code>BaseParts</code> and have a number of functions that extend their functionality.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Model#GetPrimaryPartCFrame)
     */
    GetPrimaryPartCFrame(this: Model): CFrame;
    /**
     * Returns the canonical scale of the model, which defaults to 1 for newly created models and will change as it is scaled via <code>Model/ScaleTo</code>.
     * @param this Models are container objects, meaning they group objects together. They are best used to hold collections of <code>BaseParts</code> and have a number of functions that extend their functionality.
     * @returns The current canonical scale factor of the model.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Model#GetScale)
     */
    GetScale(this: Model): number;
    /**
     * <strong>Deprecated:</strong> This joint type has been deprecated. Don't use it for new work. Use <code>WeldConstraints</code> and <code>HingeConstraints</code> instead.<br>Goes through all <code>BaseParts</code> in the <code>Model</code>. If any part's side has a SurfaceType that can make a joint it will create a joint with any adjacent parts.
     * @param this Models are container objects, meaning they group objects together. They are best used to hold collections of <code>BaseParts</code> and have a number of functions that extend their functionality.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Model#MakeJoints)
     */
    MakeJoints(this: Model): void;
    /**
     * Moves the <code>PrimaryPart</code> to the given position. If a primary part has not been specified, the root part of the model will be used.
     * @param this Models are container objects, meaning they group objects together. They are best used to hold collections of <code>BaseParts</code> and have a number of functions that extend their functionality.
     * @param position The <code>Vector3</code> the <code>Model</code> is moved to.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Model#MoveTo)
     */
    MoveTo(this: Model, position: Vector3): void;
    /**
     * Makes this model no longer persistent for specified player. <code>Model.ModelStreamingMode</code> must be set to <strong>PersistentPerPlayer</strong> for behavior to be changed as a result of removal.
     * @param this Models are container objects, meaning they group objects together. They are best used to hold collections of <code>BaseParts</code> and have a number of functions that extend their functionality.
     * @param playerInstance
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Model#RemovePersistentPlayer)
     */
    RemovePersistentPlayer(this: Model, playerInstance?: Player): void;
    /**
     * <strong>Deprecated:</strong> This function has been deprecated; it remains to prevent legacy scripts from throwing errors, but it does nothing when called.<br>Resets the rotation of the model's parts to the previously set identity rotation, which is done through the <code>Model:SetIdentityOrientation()</code> method.
     * @param this Models are container objects, meaning they group objects together. They are best used to hold collections of <code>BaseParts</code> and have a number of functions that extend their functionality.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Model#ResetOrientationToIdentity)
     */
    ResetOrientationToIdentity(this: Model): void;
    /**
     * Sets the scale factor of the model, adjusting the sizing and location of all descendant Instances such that they have that scale factor relative to their initial sizes and locations when scale factor was 1.
     * @param this Models are container objects, meaning they group objects together. They are best used to hold collections of <code>BaseParts</code> and have a number of functions that extend their functionality.
     * @param newScaleFactor
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Model#ScaleTo)
     */
    ScaleTo(this: Model, newScaleFactor: number): void;
    /**
     * <strong>Deprecated:</strong> This function has been deprecated; it remains to prevent legacy scripts from throwing errors, but it does nothing when called.<br>Sets the identity rotation of the given model, allowing you to reset the rotation of the entire model later, through the use of the <code>ResetOrientationToIdentity</code> method.
     * @param this Models are container objects, meaning they group objects together. They are best used to hold collections of <code>BaseParts</code> and have a number of functions that extend their functionality.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Model#SetIdentityOrientation)
     */
    SetIdentityOrientation(this: Model): void;
    /**
     * <strong>Deprecated:</strong> <br>Sets the <code>BasePart.CFrame</code> of the model's <code>Model.PrimaryPart</code>. All other parts in the model will also be moved and will maintain their orientation and offset respective to the <code>Model.PrimaryPart</code>.
     * @param this Models are container objects, meaning they group objects together. They are best used to hold collections of <code>BaseParts</code> and have a number of functions that extend their functionality.
     * @param cframe The <code>CFrame</code> to be set.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Model#SetPrimaryPartCFrame)
     */
    SetPrimaryPartCFrame(this: Model, cframe: CFrame): void;
    /**
     * Shifts a <code>Model</code> by the given <code>Vector3</code> offset, preserving the model's orientation. If another <code>BasePart</code> or <code>Terrain</code> already exists at the new position then the <code>Model</code> will overlap said object.
     * @param this Models are container objects, meaning they group objects together. They are best used to hold collections of <code>BaseParts</code> and have a number of functions that extend their functionality.
     * @param delta The <code>Vector3</code> to translate the <code>Model</code> by.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Model#TranslateBy)
     */
    TranslateBy(this: Model, delta: Vector3): void;
}
/**
 * An <code>Actor</code> is a container for code that can be safely split into its own thread.
 *
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Actor)
 */
interface Actor extends Model {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_Actor: unique symbol;
    /**
     * Binds a Luau callback to a message with the specified topic.
     * @param this An <code>Actor</code> is a container for code that can be safely split into its own thread.
     * @param topic The topic used to identify the type of message.
     * @param function
     * @returns This connection object may be used to disconnect the Luau callback from receiving messages.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Actor#BindToMessage)
     */
    BindToMessage(this: Actor, topic: string, callback: Callback): RBXScriptConnection;
    /**
     * Binds a Luau callback to a message with the specified topic.
     * @param this An <code>Actor</code> is a container for code that can be safely split into its own thread.
     * @param topic The topic used to identify the type of message.
     * @param function
     * @returns This connection object may be used to disconnect the Luau callback from receiving messages.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Actor#BindToMessageParallel)
     */
    BindToMessageParallel(this: Actor, topic: string, callback: Callback): RBXScriptConnection;
    /**
     * Sends a message to an Actor.
     * @param this An <code>Actor</code> is a container for code that can be safely split into its own thread.
     * @param topic The topic used to identify the message being sent.
     * @param message The contents of the message to send to the Actor.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Actor#SendMessage)
     */
    SendMessage(this: Actor, topic: string, ...message: Array<unknown>): void;
}
/**
 * BackpackItem is an abstract class for backpack items such as HopperBins and Tools.
 *
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/BackpackItem)
 */
interface BackpackItem extends Model {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_BackpackItem: unique symbol;
    /**
     * The texture icon that is displayed for a tool in the player's backpack.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/BackpackItem#TextureId)
     */
    TextureId: ContentId;
}
/**
 * An object, such as a weapon, that can be equipped by a <code>Humanoid</code>.
 *
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Tool)
 */
interface Tool extends BackpackItem {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_Tool: unique symbol;
    /**
     * Controls whether the player can drop the tool.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Tool#CanBeDropped)
     */
    CanBeDropped: boolean;
    /**
     * Relates to whether or not the tool can be used.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Tool#Enabled)
     */
    Enabled: boolean;
    /**
     * Stores the tool's "grip" properties as one <code>CFrame</code>.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Tool#Grip)
     */
    Grip: CFrame;
    /**
     * Represents the <code>R02</code>, <code>R12</code>, and <code>R22</code> values of the grip <code>CFrame</code> rotation matrix.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Tool#GripForward)
     */
    GripForward: Vector3;
    /**
     * The positional offset of the tool's weld matrix.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Tool#GripPos)
     */
    GripPos: Vector3;
    /**
     * Represents the <code>R00</code>, <code>R10</code>, and <code>R20</code> values of the grip <code>CFrame</code> rotation matrix.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Tool#GripRight)
     */
    GripRight: Vector3;
    /**
     * Represents the <code>R01</code>, <code>R11</code>, and <code>R21</code> values of the grip <code>CFrame</code> rotation matrix.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Tool#GripUp)
     */
    GripUp: Vector3;
    /**
     * The ManualActivationOnly property controls whether the <code>Tool</code> can be activated without executing <code>Tool:Activate()</code>.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Tool#ManualActivationOnly)
     */
    ManualActivationOnly: boolean;
    /**
     * Determines whether a <code>Tool</code> functions without a handle.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Tool#RequiresHandle)
     */
    RequiresHandle: boolean;
    /**
     * Controls the message displayed when the player's mouse hovers over the tool in their backpack.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Tool#ToolTip)
     */
    ToolTip: string;
    /**
     * Simulates activation of the <code>Tool</code>.
     * @param this An object, such as a weapon, that can be equipped by a <code>Humanoid</code>.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Tool#Activate)
     */
    Activate(this: Tool): void;
    /**
     * Simulates deactivation of the <code>Tool</code>.
     * @param this An object, such as a weapon, that can be equipped by a <code>Humanoid</code>.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Tool#Deactivate)
     */
    Deactivate(this: Tool): void;
    /**
     * Fires when the player clicks while the tool is equipped.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Tool#Activated)
     */
    readonly Activated: RBXScriptSignal<() => void>;
    /**
     * Fires when the player releases their click while the tool is equipped and activated.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Tool#Deactivated)
     */
    readonly Deactivated: RBXScriptSignal<() => void>;
    /**
     * Fires when the tool is equipped.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Tool#Equipped)
     */
    readonly Equipped: RBXScriptSignal<(mouse: Mouse) => void>;
    /**
     * Fires when the tool is unequipped.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Tool#Unequipped)
     */
    readonly Unequipped: RBXScriptSignal<() => void>;
}
/**
 * Base class for handling physics simulation and 3D spatial queries.
 *
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/WorldRoot)
 */
interface WorldRoot extends Model {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_WorldRoot: unique symbol;
    /**
     * Returns true if any of the given <code>BasePart</code> are touching any other parts.
     * @param this Base class for handling physics simulation and 3D spatial queries.
     * @param partList A list of parts checks to see if any parts in the list are touching any parts not in the list.
     * @param overlapIgnored The part overlap threshold in studs that is ignored before parts are considered to be touching.
     * @returns True if and only if any of the <code>parts</code> in <code>partList</code> are touching any other parts (parts not in the partList). False if no parts are passed.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/WorldRoot#ArePartsTouchingOthers)
     */
    ArePartsTouchingOthers(this: WorldRoot, partList: Array<Instance>, overlapIgnored?: number): boolean;
    /**
     * Casts a block shape in a given direction and returns a <code>RaycastResult</code> if the shape hits a <code>BasePart</code> or <code>Terrain</code> cell.
     * @param this Base class for handling physics simulation and 3D spatial queries.
     * @param cframe The initial position and rotation of the cast block shape.
     * @param size The size of the cast block shape in studs. The maximum size is 512 studs.
     * @param direction Direction of the shapecast, with the magnitude representing the maximum distance the shape can travel. The maximum distance is 1024 studs.
     * @param params
     * @returns Contains the result of the shapecast operation, or <code>nil</code> if no eligible <code>BasePart</code> or <code>Terrain</code> cell was hit.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/WorldRoot#Blockcast)
     */
    Blockcast(this: WorldRoot, cframe: CFrame, size: Vector3, direction: Vector3, raycastParams?: RaycastParams): RaycastResult | undefined;
    /**
     * Moves a table of <code>BaseParts</code> to a table of <code>CFrames</code>.
     * @param this Base class for handling physics simulation and 3D spatial queries.
     * @param partList
     * @param cframeList
     * @param eventMode
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/WorldRoot#BulkMoveTo)
     */
    BulkMoveTo(this: WorldRoot, partList: Array<Instance>, cframeList: Array<unknown>, eventMode?: CastsToEnum<Enum.BulkMoveMode>): void;
    /**
     * <strong>Deprecated:</strong> This function has been deprecated. Use <code>WorldRoot:Raycast()</code> along with <code>RaycastParams</code> for new work.<br>Returns the first <code>BasePart</code> or <code>Terrain</code> cell intersecting with the given <code>Ray</code>.
     * @param this Base class for handling physics simulation and 3D spatial queries.
     * @param ray
     * @param ignoreDescendantsInstance
     * @param terrainCellsAreCubes
     * @param ignoreWater
     * @returns The <code>BasePart</code> or <code>Terrain</code> cell hit, the <code>Vector3</code> point of intersection, the <code>Vector3</code> surface normal at the point of intersection, and the <code>Material</code> of the <code>BasePart</code> or terrain cell hit.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/WorldRoot#FindPartOnRay)
     */
    FindPartOnRay(this: WorldRoot, ray: Ray, ignoreDescendantsInstance?: Instance, terrainCellsAreCubes?: boolean, ignoreWater?: boolean): LuaTuple<[
        BasePart | undefined,
        Vector3,
        Vector3,
        Enum.Material
    ]>;
    /**
     * <strong>Deprecated:</strong> This function has been deprecated. Use <code>WorldRoot:Raycast()</code> along with <code>RaycastParams</code> for new work.<br>Returns the first <code>BasePart</code> or <code>Terrain</code> cell intersecting with the given <code>Ray</code> that isn't in, nor is a descendant of an object in, the given ignore list.
     * @param this Base class for handling physics simulation and 3D spatial queries.
     * @param ray
     * @param ignoreDescendantsTable
     * @param terrainCellsAreCubes
     * @param ignoreWater
     * @returns The <code>BasePart</code> or <code>Terrain</code> cell hit, the <code>Vector3</code> point of intersection, the <code>Vector3</code> surface normal at the point of intersection, and the <code>Material</code> of the <code>BasePart</code> or terrain cell hit.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/WorldRoot#FindPartOnRayWithIgnoreList)
     */
    FindPartOnRayWithIgnoreList(this: WorldRoot, ray: Ray, ignoreDescendantsTable: Array<Instance>, terrainCellsAreCubes?: boolean, ignoreWater?: boolean): LuaTuple<[
        BasePart | undefined,
        Vector3,
        Vector3,
        Enum.Material
    ]>;
    /**
     * <strong>Deprecated:</strong> This function has been deprecated. Use <code>WorldRoot:Raycast()</code> along with <code>RaycastParams</code> for new work.<br>Returns the first <code>BasePart</code> or <code>Terrain</code> cell intersecting with the given <code>Ray</code> that is in, or is a descendant of an object in, the given inclusion list.
     * @param this Base class for handling physics simulation and 3D spatial queries.
     * @param ray
     * @param whitelistDescendantsTable
     * @param ignoreWater
     * @returns The <code>BasePart</code> or <code>Terrain</code> cell hit, the <code>Vector3</code> point of intersection, the <code>Vector3</code> surface normal at the point of intersection, and the <code>Material</code> of the <code>BasePart</code> or terrain cell hit.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/WorldRoot#FindPartOnRayWithWhitelist)
     */
    FindPartOnRayWithWhitelist(this: WorldRoot, ray: Ray, whitelistDescendantsTable: Array<Instance>, ignoreWater?: boolean): LuaTuple<[
        BasePart | undefined,
        Vector3,
        Vector3,
        Enum.Material
    ]>;
    /**
     * <strong>Deprecated:</strong> This function has been deprecated. Use <code>WorldRoot:GetPartBoundsInBox()</code> along with <code>OverlapParams</code> for new work.<br>Returns an array of <code>BaseParts</code> in the given <code>Region3</code>.
     * @param this Base class for handling physics simulation and 3D spatial queries.
     * @param region The <code>Region3</code> to be checked.
     * @param ignoreDescendantsInstance An <code>Instance</code> to be ignored.
     * @param maxParts The maximum amount of <code>BaseParts</code> to be returned.
     * @returns An array of <code>BaseParts</code> within the <code>Region3</code>.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/WorldRoot#FindPartsInRegion3)
     */
    FindPartsInRegion3(this: WorldRoot, region: Region3, ignoreDescendantsInstance?: Instance, maxParts?: number): Array<BasePart>;
    /**
     * <strong>Deprecated:</strong> This function has been deprecated. Use <code>WorldRoot:GetPartBoundsInBox()</code> along with <code>OverlapParams</code> for new work.<br>Returns an array of <code>BaseParts</code> in the given <code>Region3</code> that aren't in, or a descendant of an entry in, the given ignore list.
     * @param this Base class for handling physics simulation and 3D spatial queries.
     * @param region The <code>Region3</code> to be checked.
     * @param ignoreDescendantsTable An array of objects to be ignored.
     * @param maxParts The maximum number of <code>BaseParts</code> to be returned.
     * @returns An array of <code>BaseParts</code> found within the <code>Region3</code>.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/WorldRoot#FindPartsInRegion3WithIgnoreList)
     */
    FindPartsInRegion3WithIgnoreList(this: WorldRoot, region: Region3, ignoreDescendantsTable: Array<Instance>, maxParts?: number): Array<BasePart>;
    /**
     * <strong>Deprecated:</strong> This function has been deprecated. Use <code>WorldRoot:GetPartBoundsInBox()</code> along with <code>OverlapParams</code> for new work.<br>Returns an array of <code>BaseParts</code> in the given <code>Region3</code> that are in, or descendant of an entry in, the given inclusion list.
     * @param this Base class for handling physics simulation and 3D spatial queries.
     * @param region The <code>Region3</code> to be checked.
     * @param whitelistDescendantsTable An array of objects to check.
     * @param maxParts The maximum number of <code>BaseParts</code> to be returned.
     * @returns An array of <code>BaseParts</code> within the <code>Region3</code>.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/WorldRoot#FindPartsInRegion3WithWhiteList)
     */
    FindPartsInRegion3WithWhiteList(this: WorldRoot, region: Region3, whitelistDescendantsTable: Array<Instance>, maxParts?: number): Array<BasePart>;
    /**
     * Returns an array of parts whose <strong>bounding boxes</strong> overlap a given box.
     * @param this Base class for handling physics simulation and 3D spatial queries.
     * @param cframe The location of the center of the given box volume to be queried.
     * @param size The size of the given box volume to be queried.
     * @param overlapParams Contains reusable portions of the spatial query parameters.
     * @returns An array of <code>BaseParts</code> which matched the spatial query.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/WorldRoot#GetPartBoundsInBox)
     */
    GetPartBoundsInBox(this: WorldRoot, cframe: CFrame, size: Vector3, overlapParams?: OverlapParams): Array<BasePart>;
    /**
     * Returns an array of parts whose <strong>bounding boxes</strong> overlap a given sphere.
     * @param this Base class for handling physics simulation and 3D spatial queries.
     * @param position The location of the center of the given sphere volume to be queried.
     * @param radius The radius of the given sphere volume to be queried.
     * @param overlapParams Contains reusable portions of the spatial query parameters.
     * @returns An array of <code>BaseParts</code> which matched the spatial query.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/WorldRoot#GetPartBoundsInRadius)
     */
    GetPartBoundsInRadius(this: WorldRoot, position: Vector3, radius: number, overlapParams?: OverlapParams): Array<BasePart>;
    /**
     * Returns an array of parts whose occupied space is shared with the given part.
     * @param this Base class for handling physics simulation and 3D spatial queries.
     * @param part The part whose volume is to be checked against other parts.
     * @param overlapParams Contains reusable portions of the spatial query parameters.
     * @returns An array of <code>BaseParts</code> which matched the spatial query.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/WorldRoot#GetPartsInPart)
     */
    GetPartsInPart(this: WorldRoot, part: BasePart, overlapParams?: OverlapParams): Array<BasePart>;
    /**
     * <strong>Deprecated:</strong> This function has been deprecated. Use <code>WorldRoot:GetPartBoundsInBox()</code> along with <code>OverlapParams</code> for new work.<br>Returns a bool indicating whether there are no <code>BaseParts</code> within the given <code>Region3</code>.
     * @param this Base class for handling physics simulation and 3D spatial queries.
     * @param region The <code>Region3</code> to be checked.
     * @param ignoreDescendentsInstance An <code>Instance</code> to be ignored.
     * @returns True if the <code>Region3</code> is empty.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/WorldRoot#IsRegion3Empty)
     */
    IsRegion3Empty(this: WorldRoot, region: Region3, ignoreDescendentsInstance?: Instance): boolean;
    /**
     * <strong>Deprecated:</strong> This function has been deprecated. Use <code>WorldRoot:GetPartBoundsInBox()</code> along with <code>OverlapParams</code> for new work.<br>Returns a boolean indicating whether there are no <code>BaseParts</code> within the given <code>Region3</code>, ignoring any <code>BaseParts</code> that are descendants of the objects within the given ignore list.
     * @param this Base class for handling physics simulation and 3D spatial queries.
     * @param region The <code>Region3</code> to be checked.
     * @param ignoreDescendentsTable An array of objects to be ignored.
     * @returns True if the <code>Region3</code> is empty.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/WorldRoot#IsRegion3EmptyWithIgnoreList)
     */
    IsRegion3EmptyWithIgnoreList(this: WorldRoot, region: Region3, ignoreDescendentsTable: Array<Instance>): boolean;
    /**
     * Casts a ray using an origin, direction, and optional <code>RaycastParams</code>, then returns a <code>RaycastResult</code> if an eligible object or terrain intersects the ray.
     * @param this Base class for handling physics simulation and 3D spatial queries.
     * @param origin The origin point of the ray.
     * @param direction The directional vector of the ray. Note that the length of this vector matters, as parts/terrain further away than its length will not be tested.
     * @param raycastParams An object used to specify hit eligibility in the raycast operation. If not provided, default values are used where all parts are considered and <code>Terrain</code> water is not ignored.
     * @returns Contains the results of a raycast operation, or <code>nil</code> if no eligible <code>BasePart</code> or <code>Terrain</code> cell was hit.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/WorldRoot#Raycast)
     */
    Raycast(this: WorldRoot, origin: Vector3, direction: Vector3, raycastParams?: RaycastParams): RaycastResult | undefined;
    /**
     * @param this Base class for handling physics simulation and 3D spatial queries.
     * @param part
     * @param direction
     * @param params
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/WorldRoot#Shapecast)
     */
    Shapecast(this: WorldRoot, part: BasePart, direction: Vector3, params?: RaycastParams): RaycastResult | undefined;
    /**
     * Casts a spherical shape in a given direction and returns a <code>RaycastResult</code> if the shape hits a <code>BasePart</code> or <code>Terrain</code> cell.
     * @param this Base class for handling physics simulation and 3D spatial queries.
     * @param position The initial position of the cast spherical shape.
     * @param radius The radius of the cast spherical shape in studs. The maximum radius is 256 studs.
     * @param direction Direction of the shapecast, with the magnitude representing the maximum distance the shape can travel. The maximum distance is 1024 studs.
     * @param params
     * @returns Contains the result of the shapecast operation, or <code>nil</code> if no eligible <code>BasePart</code> or <code>Terrain</code> cell was hit.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/WorldRoot#Spherecast)
     */
    Spherecast(this: WorldRoot, position: Vector3, radius: number, direction: Vector3, raycastParams?: RaycastParams): RaycastResult | undefined;
}
/**
 * <strong>Workspace</strong> houses 3D objects which are rendered to the 3D world. Objects not descending from it will not be rendered or physically interact with the world.
 *
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Workspace)
 */
interface Workspace extends WorldRoot {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_Workspace: unique symbol;
    /**
     * The air density at ground level, used in the aerodynamic force model.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Workspace#AirDensity)
     */
    AirDensity: number;
    /**
     * Determines whether assets created by other users can be sold in the game.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Workspace#AllowThirdPartySales)
     */
    AllowThirdPartySales: boolean;
    /**
     * Specifies the animation throttling mode for the local client.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Workspace#ClientAnimatorThrottling)
     */
    ClientAnimatorThrottling: Enum.ClientAnimatorThrottlingMode;
    /**
     * The <code>Camera</code> object being used by the local player.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Workspace#CurrentCamera)
     */
    CurrentCamera: Camera | undefined;
    /**
     * The amount of time, in seconds, that the game has been running.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Workspace#DistributedGameTime)
     */
    DistributedGameTime: number;
    /**
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Workspace#FallHeightEnabled)
     */
    get FallHeightEnabled(): boolean;
    /**
     * Determines the height at which falling <code>BaseParts</code> and their ancestor <code>Models</code> are removed from <code>Workspace</code>.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Workspace#FallenPartsDestroyHeight)
     */
    get FallenPartsDestroyHeight(): number;
    /**
     * Specifies the global wind vector for animated terrain grass, dynamic clouds, and particles.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Workspace#GlobalWind)
     */
    GlobalWind: Vector3;
    /**
     * Determines the acceleration due to gravity applied to falling <code>BaseParts</code>.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Workspace#Gravity)
     */
    Gravity: number;
    /**
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Workspace#InsertPoint)
     */
    InsertPoint: Vector3;
    /**
     * <strong>Deprecated:</strong> This property should not be used for new work.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Workspace#InterpolationThrottling)
     */
    get InterpolationThrottling(): Enum.InterpolationThrottlingMode;
    /**
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Workspace#Retargeting)
     */
    Retargeting: Enum.AnimatorRetargetingMode;
    /**
     * Whether content streaming is enabled for the place.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Workspace#StreamingEnabled)
     */
    get StreamingEnabled(): boolean;
    /**
     * A reference to the <code>Terrain</code> object parented to the <code>Workspace</code>.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Workspace#Terrain)
     */
    readonly Terrain: Terrain;
    /**
     * Returns the number of <code>BaseParts</code> that are deemed physically active, due to being recently under the influence of physics.
     * @param this <strong>Workspace</strong> houses 3D objects which are rendered to the 3D world. Objects not descending from it will not be rendered or physically interact with the world.
     * @returns The number of awake parts.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Workspace#GetNumAwakeParts)
     */
    GetNumAwakeParts(this: Workspace): number;
    /**
     * Returns an integer, between 0 and 100, representing the percentage of real-time that physics simulation is currently being throttled to.
     * @param this <strong>Workspace</strong> houses 3D objects which are rendered to the 3D world. Objects not descending from it will not be rendered or physically interact with the world.
     * @returns The percentage of real-time that physics simulation is currently being throttled to.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Workspace#GetPhysicsThrottling)
     */
    GetPhysicsThrottling(this: Workspace): number;
    /**
     * Returns the number of frames per second that physics is currently being simulated at.
     * @param this <strong>Workspace</strong> houses 3D objects which are rendered to the 3D world. Objects not descending from it will not be rendered or physically interact with the world.
     * @returns Returns the number of frames per second that physics is currently being simulated at.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Workspace#GetRealPhysicsFPS)
     */
    GetRealPhysicsFPS(this: Workspace): number;
    /**
     * Returns the server's Unix time in seconds.
     * @param this <strong>Workspace</strong> houses 3D objects which are rendered to the 3D world. Objects not descending from it will not be rendered or physically interact with the world.
     * @returns The estimated Unix timestamp on the server.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Workspace#GetServerTimeNow)
     */
    GetServerTimeNow(this: Workspace): number;
    /**
     * Creates joints between the specified <code>Parts</code> and any touching parts depending on the parts' surfaces and the specified joint creation mode.
     * @param this <strong>Workspace</strong> houses 3D objects which are rendered to the 3D world. Objects not descending from it will not be rendered or physically interact with the world.
     * @param objects An array of <code>BaseParts</code> for whom joints are to be made.
     * @param jointType The <code>JointCreationMode</code> to be used. Passing in <code>Enum.JointCreationMode.All</code> or <code>Enum.JointCreationMode.Surface</code> has the same behavior which equates to Join Always.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Workspace#JoinToOutsiders)
     */
    JoinToOutsiders(this: Workspace, objects: Array<Instance>, jointType: CastsToEnum<Enum.JointCreationMode>): void;
    /**
     * Returns <code>true</code> if the game has the PGS Physics solver enabled.
     * @param this <strong>Workspace</strong> houses 3D objects which are rendered to the 3D world. Objects not descending from it will not be rendered or physically interact with the world.
     * @returns True if the PGS solver is enabled.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Workspace#PGSIsEnabled)
     */
    PGSIsEnabled(this: Workspace): boolean;
    /**
     * Breaks all joints between the specified <code>BaseParts</code> and other <code>BaseParts</code>.
     * @param this <strong>Workspace</strong> houses 3D objects which are rendered to the 3D world. Objects not descending from it will not be rendered or physically interact with the world.
     * @param objects An array of <code>BaseParts</code> for whom joints are to be broken.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Workspace#UnjoinFromOutsiders)
     */
    UnjoinFromOutsiders(this: Workspace, objects: Array<Instance>): void;
    /**
     * Fires when persistent models have been sent to the specified player.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Workspace#PersistentLoaded)
     */
    readonly PersistentLoaded: RBXScriptSignal<(player: Player) => void>;
}
/**
 * Provides some physics features to a <code>ViewportFrame</code>.
 *
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/WorldModel)
 */
interface WorldModel extends WorldRoot {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_WorldModel: unique symbol;
}
/**
 * Links a <code>DataModel</code> instance to a corresponding asset in the cloud.
 *
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/PackageLink)
 */
interface PackageLink extends Instance {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_PackageLink: unique symbol;
    /**
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/PackageLink#DefaultName)
     */
    get DefaultName(): string;
    /**
     * The id of the asset this package corresponds to.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/PackageLink#PackageId)
     */
    readonly PackageId: ContentId;
    /**
     * Refers to a revision of a specific package.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/PackageLink#VersionNumber)
     */
    get VersionNumber(): number;
}
/**
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/PackageUIService)
 */
interface PackageUIService extends Instance {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_PackageUIService: unique symbol;
}
/**
 * An abstract class for pages objects.
 *
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Pages)
 */
interface Pages<T = unknown> extends Instance {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_Pages: unique symbol;
    /**
     * Whether or not the current page is the last page available.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Pages#IsFinished)
     */
    readonly IsFinished: boolean;
    /**
     * Returns the items on the current page. The keys in the item are determined by the source of this object.
     * @param this An abstract class for pages objects.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Pages#GetCurrentPage)
     */
    GetCurrentPage(this: Pages): Array<T>;
    /**
     * Iterates to the next page in the pages object, if possible.
     * @param this An abstract class for pages objects.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Pages#AdvanceToNextPageAsync)
     */
    AdvanceToNextPageAsync(this: Pages): void;
}
/**
 * A special version of the <code>Pages</code> class returned by <code>AssetService:SearchAudio()</code>.
 *
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/AudioPages)
 */
interface AudioPages extends Pages {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_AudioPages: unique symbol;
}
/**
 * Returned by <code>Players:GetBanHistoryAsync</code> to view the entire ban and unban history of any UserId.
 *
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/BanHistoryPages)
 */
interface BanHistoryPages extends Pages {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_BanHistoryPages: unique symbol;
}
/**
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/CatalogPages)
 */
interface CatalogPages extends Pages<SearchCatalogResult> {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_CatalogPages: unique symbol;
}
/**
 * A special type of <code>Pages</code> object whose pages contain <code>DataStoreKey</code> instances.
 *
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/DataStoreKeyPages)
 */
interface DataStoreKeyPages extends Pages {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_DataStoreKeyPages: unique symbol;
    /**
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/DataStoreKeyPages#Cursor)
     */
    readonly Cursor: string;
}
/**
 * A special type of <code>Pages</code> object whose pages contain <code>DataStoreInfo</code> instances.
 *
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/DataStoreListingPages)
 */
interface DataStoreListingPages extends Pages {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_DataStoreListingPages: unique symbol;
    /**
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/DataStoreListingPages#Cursor)
     */
    readonly Cursor: string;
}
/**
 * A <code>Pages</code> object that allows iteration through <code>OrderedDataStore</code> key/value pairs.
 *
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/DataStorePages)
 */
interface DataStorePages extends Pages<{
    key: string;
    value: unknown;
}> {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_DataStorePages: unique symbol;
}
/**
 * A special type of <code>Pages</code> object whose pages contain <code>DataStoreObjectVersionInfo</code> instances.
 *
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/DataStoreVersionPages)
 */
interface DataStoreVersionPages extends Pages<DataStoreObjectVersionInfo> {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_DataStoreVersionPages: unique symbol;
}
/**
 * A special version of <code>Pages</code> that contains information about a player's friends.
 *
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/FriendPages)
 */
interface FriendPages extends Pages<{
    AvatarFinal: boolean;
    AvatarUri: string;
    Id: number;
    Username: string;
    IsOnline: boolean;
}> {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_FriendPages: unique symbol;
}
/**
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/InventoryPages)
 */
interface InventoryPages<T = unknown> extends Pages<T> {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_InventoryPages: unique symbol;
}
/**
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/EmotesPages)
 */
interface EmotesPages extends InventoryPages {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_EmotesPages: unique symbol;
}
/**
 * A special type of <code>Pages</code> object whose pages contain key-value pairs from a <code>MemoryStoreHashMap</code>.
 *
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/MemoryStoreHashMapPages)
 */
interface MemoryStoreHashMapPages extends Pages {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_MemoryStoreHashMapPages: unique symbol;
}
/**
 * The <code>OutfitPages</code> class is used in the case of iterating over a user's outfits.
 *
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/OutfitPages)
 */
interface OutfitPages extends Pages<ReadonlyArray<{
    Id: number;
    Name: string;
    IsEditable: boolean;
}>> {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_OutfitPages: unique symbol;
}
/**
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/StandardPages)
 */
interface StandardPages<T = unknown> extends Pages<T> {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_StandardPages: unique symbol;
}
/**
 * A special object that emits customizable 2D particles into the world.
 *
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/ParticleEmitter)
 */
interface ParticleEmitter extends Instance {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_ParticleEmitter: unique symbol;
    /**
     * Determines the global-axis acceleration of all active particles, measured in studs per second squared.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/ParticleEmitter#Acceleration)
     */
    Acceleration: Vector3;
    /**
     * Scales the light emitted from the emitter when <code>ParticleEmitter.LightInfluence</code> is 0.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/ParticleEmitter#Brightness)
     */
    Brightness: number;
    /**
     * Determines the color of all active particles over their individual lifetimes.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/ParticleEmitter#Color)
     */
    Color: ColorSequence;
    /**
     * Determines the rate at which particles will lose half their speed through exponential decay.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/ParticleEmitter#Drag)
     */
    Drag: number;
    /**
     * Determines the face of the object that particles emit from.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/ParticleEmitter#EmissionDirection)
     */
    EmissionDirection: Enum.NormalId;
    /**
     * Determines if particles emit from the emitter.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/ParticleEmitter#Enabled)
     */
    Enabled: boolean;
    /**
     * Determines how fast the flipbook texture animates in frames per second.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/ParticleEmitter#FlipbookFramerate)
     */
    FlipbookFramerate: NumberRange;
    /**
     * The error message to display if the <code>Texture</code> is incompatible for a flipbook.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/ParticleEmitter#FlipbookIncompatible)
     */
    FlipbookIncompatible: string;
    /**
     * Determines the layout of the flipbook texture. Must be None, Grid2x2, Grid4x4, or Grid8x8.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/ParticleEmitter#FlipbookLayout)
     */
    FlipbookLayout: Enum.ParticleFlipbookLayout;
    /**
     * Determines the type of the flipbook animation. Must be Loop, OneShot, PingPong, or Random.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/ParticleEmitter#FlipbookMode)
     */
    FlipbookMode: Enum.ParticleFlipbookMode;
    /**
     * Determines whether the animation starts at a random frame chosen per particle instead of always starting at frame zero.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/ParticleEmitter#FlipbookStartRandom)
     */
    FlipbookStartRandom: boolean;
    /**
     * Defines a random range of ages for newly emitted particles.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/ParticleEmitter#Lifetime)
     */
    Lifetime: NumberRange;
    /**
     * Determines how much particles' colors are blended with the colors behind them.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/ParticleEmitter#LightEmission)
     */
    LightEmission: number;
    /**
     * Determines how much particles are influenced by the environmental light.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/ParticleEmitter#LightInfluence)
     */
    LightInfluence: number;
    /**
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/ParticleEmitter#LocalTransparencyModifier)
     */
    LocalTransparencyModifier: number;
    /**
     * Determines whether the particles rigidly move with the part they're being emitted from.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/ParticleEmitter#LockedToPart)
     */
    LockedToPart: boolean;
    /**
     * Specifies how to orient particles.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/ParticleEmitter#Orientation)
     */
    Orientation: Enum.ParticleOrientation;
    /**
     * Determines the number of particles emitted per second.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/ParticleEmitter#Rate)
     */
    Rate: number;
    /**
     * Determines the range of angular speeds of emitted particles, measured in degrees per second.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/ParticleEmitter#RotSpeed)
     */
    RotSpeed: NumberRange;
    /**
     * Determines the range of rotations in degrees for newly emitted particles.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/ParticleEmitter#Rotation)
     */
    Rotation: NumberRange;
    /**
     * Sets the shape of the emitter to either a box, sphere, cylinder, or disc.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/ParticleEmitter#Shape)
     */
    Shape: Enum.ParticleEmitterShape;
    /**
     * Sets whether particles emit outward only, inward only, or in both directions.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/ParticleEmitter#ShapeInOut)
     */
    ShapeInOut: Enum.ParticleEmitterShapeInOut;
    /**
     * Influences particle emission from cylinder, disc, sphere, and box shapes.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/ParticleEmitter#ShapePartial)
     */
    ShapePartial: number;
    /**
     * Sets particle emission to either volumetric or surface-only emission.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/ParticleEmitter#ShapeStyle)
     */
    ShapeStyle: Enum.ParticleEmitterShapeStyle;
    /**
     * Determines the world size over individual particles' lifetimes.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/ParticleEmitter#Size)
     */
    Size: NumberSequence;
    /**
     * Determines a random range of velocities (minimum to maximum) at which new particles will emit, measured in studs per second.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/ParticleEmitter#Speed)
     */
    Speed: NumberRange;
    /**
     * Determines the angles at which particles may be randomly emit, measured in degrees.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/ParticleEmitter#SpreadAngle)
     */
    SpreadAngle: Vector2;
    /**
     * Allows for non-uniform scaling of particles, curve-controlled over their lifetime.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/ParticleEmitter#Squash)
     */
    Squash: NumberSequence;
    /**
     * Determines the image rendered on particles.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/ParticleEmitter#Texture)
     */
    Texture: ContentId;
    /**
     * Value between 0 and 1 that controls the speed of the particle effect.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/ParticleEmitter#TimeScale)
     */
    TimeScale: number;
    /**
     * Determines the transparency of particles over their individual lifetimes.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/ParticleEmitter#Transparency)
     */
    Transparency: NumberSequence;
    /**
     * Determines how much of the parent's velocity is inherited by particles when emitted.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/ParticleEmitter#VelocityInheritance)
     */
    VelocityInheritance: number;
    /**
     * <strong>Deprecated:</strong> This property has been superseded by <code>ParticleEmitter.SpreadAngle</code> which should be used in all new work.<br>Determines how offset a particle can be fired from the local emitter direction of its parent.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/ParticleEmitter#VelocitySpread)
     */
    VelocitySpread: number;
    /**
     * Whether emitted particles follow the <code>Workspace.GlobalWind</code> vector.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/ParticleEmitter#WindAffectsDrag)
     */
    WindAffectsDrag: boolean;
    /**
     * Determines the forward-backward render position of particles; used to control what particles render on top/bottom.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/ParticleEmitter#ZOffset)
     */
    ZOffset: number;
    /**
     * Clears all particles that have been emitted.
     * @param this A special object that emits customizable 2D particles into the world.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/ParticleEmitter#Clear)
     */
    Clear(this: ParticleEmitter): void;
    /**
     * Emits a given number of particles.
     * @param this A special object that emits customizable 2D particles into the world.
     * @param particleCount The number of particles to emit.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/ParticleEmitter#Emit)
     */
    Emit(this: ParticleEmitter, particleCount?: number): void;
    /**
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/ParticleEmitter#OnClearRequested)
     */
    readonly OnClearRequested: RBXScriptSignal<() => void>;
    /**
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/ParticleEmitter#OnEmitRequested)
     */
    readonly OnEmitRequested: RBXScriptSignal<(particleCount: number) => void>;
}
/**
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/PatchBundlerFileWatch)
 */
interface PatchBundlerFileWatch extends Instance {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_PatchBundlerFileWatch: unique symbol;
}
/**
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/PatchMapping)
 */
interface PatchMapping extends Instance {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_PatchMapping: unique symbol;
    /**
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/PatchMapping#FlattenTree)
     */
    FlattenTree: boolean;
    /**
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/PatchMapping#PatchId)
     */
    PatchId: string;
    /**
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/PatchMapping#TargetPath)
     */
    TargetPath: string;
}
/**
 * Stores the result of paths created by <code>PathfindingService:CreatePath()</code>.
 *
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Path)
 */
interface Path extends Instance {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_Path: unique symbol;
    /**
     * The success of the generated <code>Path</code>.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Path#Status)
     */
    readonly Status: Enum.PathStatus;
    /**
     * <strong>Deprecated:</strong> This item has been superseded by <code>Path:GetWaypoints()</code> which should be used in all new work instead.<br>Returns a table of <code>Path</code> instances.
     * @param this Stores the result of paths created by <code>PathfindingService:CreatePath()</code>.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Path#GetPointCoordinates)
     */
    GetPointCoordinates(this: Path): Array<unknown>;
    /**
     * Returns an array of points in the path.
     * @param this Stores the result of paths created by <code>PathfindingService:CreatePath()</code>.
     * @returns An array of <code>PathWaypoints</code> ordered from path start to path end.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Path#GetWaypoints)
     */
    GetWaypoints(this: Path): Array<PathWaypoint>;
    /**
     * Checks if a path is blocked starting at a specific waypoint.
     * @param this Stores the result of paths created by <code>PathfindingService:CreatePath()</code>.
     * @param start
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Path#CheckOcclusionAsync)
     */
    CheckOcclusionAsync(this: Path, start: number): number;
    /**
     * Computes a <code>Path</code> from a start position to an end position.
     * @param this Stores the result of paths created by <code>PathfindingService:CreatePath()</code>.
     * @param start The world position where the computed path begins.
     * @param finish The world position where the computed path finishes.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Path#ComputeAsync)
     */
    ComputeAsync(this: Path, start: Vector3, finish: Vector3): void;
    /**
     * Fires when the computed path becomes blocked.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Path#Blocked)
     */
    readonly Blocked: RBXScriptSignal<(blockedWaypointIdx: number) => void>;
    /**
     * Fires when a computed path that was blocked becomes unblocked.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Path#Unblocked)
     */
    readonly Unblocked: RBXScriptSignal<(unblockedWaypointIdx: number) => void>;
}
/**
 * Connects two locations which otherwise by default are unconnected.
 *
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/PathfindingLink)
 */
interface PathfindingLink extends Instance {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_PathfindingLink: unique symbol;
    /**
     * The originating attachment of the link.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/PathfindingLink#Attachment0)
     */
    Attachment0: Attachment | undefined;
    /**
     * The landing attachment of the link.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/PathfindingLink#Attachment1)
     */
    Attachment1: Attachment | undefined;
    /**
     * Enables a path to traverse a link in both directions. The default value is <code>true</code>.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/PathfindingLink#IsBidirectional)
     */
    IsBidirectional: boolean;
    /**
     * A classifying string to add additional information about the link. This Label is included in the waypoint generated by this link.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/PathfindingLink#Label)
     */
    Label: string;
}
/**
 * Modifiers used to represent space that has a higher or lower cost to be traversed when creating paths using the <code>PathfindingService</code>.
 *
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/PathfindingModifier)
 */
interface PathfindingModifier extends Instance {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_PathfindingModifier: unique symbol;
    /**
     * The name of the navigation area inside or on top of the <code>Part</code> volume.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/PathfindingModifier#Label)
     */
    Label: string;
    /**
     * Determines if the parts enclosed by the modifier are traversable, even if they would normally be collided with.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/PathfindingModifier#PassThrough)
     */
    PassThrough: boolean;
}
/**
 * Used to find logical paths between two points.
 *
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/PathfindingService)
 */
interface PathfindingService extends Instance {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_PathfindingService: unique symbol;
    /**
     * <strong>Deprecated:</strong> This property is deprecated, since the legacy pathfinding system using it has since been removed. Do not use it for new work.<br>Sets the percent of a voxel has to be occupied to be considered empty. Defaults to 0.16.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/PathfindingService#EmptyCutoff)
     */
    EmptyCutoff: number;
    /**
     * @param this Used to find logical paths between two points.
     * @param agentParameters Lua table which lets you fine-tune the path for the size of the agent (the humanoid that will move along the path). See above for valid keys, types, and descriptions.
     * @returns A <code>Path</code> object.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/PathfindingService#CreatePath)
     */
    CreatePath(this: PathfindingService, agentParameters?: AgentParameters): Path;
    /**
     * <strong>Deprecated:</strong> This item has been superseded by <code>PathfindingService:FindPathAsync()</code> which should be used in all new work instead.<br>Computes and returns a <code>Path</code> between two <code>Vector3s</code>. If the given MaxDistance is greater than 512, an error will be thrown. (MaxDistance is too large).
     * @param this Used to find logical paths between two points.
     * @param start
     * @param finish
     * @param maxDistance
     * @returns A <code>Path</code> object.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/PathfindingService#ComputeRawPathAsync)
     */
    ComputeRawPathAsync(this: PathfindingService, start: Vector3, finish: Vector3, maxDistance: number): Path;
    /**
     * <strong>Deprecated:</strong> This item has been superseded by <code>PathfindingService:FindPathAsync()</code> which should be used in all new work instead.<br>Computes and returns a smooth <code>Path</code> between two <code>Vector3s</code>.
     * @param this Used to find logical paths between two points.
     * @param start
     * @param finish
     * @param maxDistance
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/PathfindingService#ComputeSmoothPathAsync)
     */
    ComputeSmoothPathAsync(this: PathfindingService, start: Vector3, finish: Vector3, maxDistance: number): Path;
    /**
     * Finds a <code>Path</code> between the two provided points.
     * @param this Used to find logical paths between two points.
     * @param start Path start coordinates.
     * @param finish Path finish coordinates.
     * @returns A <code>Path</code> object.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/PathfindingService#FindPathAsync)
     */
    FindPathAsync(this: PathfindingService, start: Vector3, finish: Vector3): Path;
}
/**
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/PausedState)
 */
interface PausedState extends Instance {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_PausedState: unique symbol;
}
/**
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/PausedStateBreakpoint)
 */
interface PausedStateBreakpoint extends PausedState {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_PausedStateBreakpoint: unique symbol;
}
/**
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/PausedStateException)
 */
interface PausedStateException extends PausedState {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_PausedStateException: unique symbol;
}
/**
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/PerformanceControlService)
 */
interface PerformanceControlService extends Instance {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_PerformanceControlService: unique symbol;
}
/**
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/PhysicsService)
 */
interface PhysicsService extends Instance {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_PhysicsService: unique symbol;
    /**
     * <strong>Deprecated:</strong> This method has been deprecated. It's recommended that you query a part's collision group through its <code>CollisionGroup</code> property.<br>Returns whether the part is in the collision group.
     * @param this
     * @param name
     * @param part
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/PhysicsService#CollisionGroupContainsPart)
     */
    CollisionGroupContainsPart(this: PhysicsService, name: string, part: BasePart): boolean;
    /**
     * Sets the collision status between two groups.
     * @param this
     * @param name1
     * @param name2
     * @param collidable
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/PhysicsService#CollisionGroupSetCollidable)
     */
    CollisionGroupSetCollidable(this: PhysicsService, name1: string, name2: string, collidable: boolean): void;
    /**
     * Returns whether the two groups will collide.
     * @param this
     * @param name1
     * @param name2
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/PhysicsService#CollisionGroupsAreCollidable)
     */
    CollisionGroupsAreCollidable(this: PhysicsService, name1: string, name2: string): boolean;
    /**
     * <strong>Deprecated:</strong> This method has been superseded by <code>RegisterCollisionGroup()</code> which should be used for all new work.<br>Creates a new collision group with the given name, and returns the ID of the created group.
     * @param this
     * @param name
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/PhysicsService#CreateCollisionGroup)
     */
    CreateCollisionGroup(this: PhysicsService, name: string): number;
    /**
     * <strong>Deprecated:</strong> This method has been deprecated. It's recommended that you query collision groups by <strong>name</strong> through a part's <code>CollisionGroup</code> property.<br>Returns the ID of the collision group with the specified name.
     * @param this
     * @param name The name of the collision group being retrieved.
     * @returns The ID of the retrieved collision group, or <code>nil</code> if no such group exists.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/PhysicsService#GetCollisionGroupId)
     */
    GetCollisionGroupId(this: PhysicsService, name: string): number;
    /**
     * <strong>Deprecated:</strong> This method has been deprecated. It's recommended that you query collision groups by <strong>name</strong> through a part's <code>CollisionGroup</code> property.<br>Returns the name of the group with the corresponding ID.
     * @param this
     * @param name
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/PhysicsService#GetCollisionGroupName)
     */
    GetCollisionGroupName(this: PhysicsService, name: number): string;
    /**
     * <strong>Deprecated:</strong> This method has been superseded by <code>GetRegisteredCollisionGroups()</code> which should be used for all new work.<br>Returns a table with info on all of the place's collision groups.
     * @param this
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/PhysicsService#GetCollisionGroups)
     */
    GetCollisionGroups(this: PhysicsService): Array<CollisionGroupInfo & {
        id: number;
    }>;
    /**
     * Returns the maximum number of collision groups.
     * @param this
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/PhysicsService#GetMaxCollisionGroups)
     */
    GetMaxCollisionGroups(this: PhysicsService): number;
    /**
     * Returns a table with info on all of the place's collision groups.
     * @param this
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/PhysicsService#GetRegisteredCollisionGroups)
     */
    GetRegisteredCollisionGroups(this: PhysicsService): Array<CollisionGroupInfo>;
    /**
     * Checks if a collision group is registered.
     * @param this
     * @param name
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/PhysicsService#IsCollisionGroupRegistered)
     */
    IsCollisionGroupRegistered(this: PhysicsService, name: string): boolean;
    /**
     * Registers a new collision group with the given name.
     * @param this
     * @param name
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/PhysicsService#RegisterCollisionGroup)
     */
    RegisterCollisionGroup(this: PhysicsService, name: string): void;
    /**
     * <strong>Deprecated:</strong> This method has been superseded by <code>UnregisterCollisionGroup()</code> which should be used for all new work.<br>Removes the collision group with the given name.
     * @param this
     * @param name
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/PhysicsService#RemoveCollisionGroup)
     */
    RemoveCollisionGroup(this: PhysicsService, name: string): void;
    /**
     * Renames specified collision group.
     * @param this
     * @param from
     * @param to
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/PhysicsService#RenameCollisionGroup)
     */
    RenameCollisionGroup(this: PhysicsService, from: string, to: string): void;
    /**
     * <strong>Deprecated:</strong> This method has been deprecated. It's recommended that you set a part's collision group by <strong>name</strong> through its <code>CollisionGroup</code> property.<br>Sets the collision group of a part.
     * @param this
     * @param part The part being set.
     * @param name The name of collision group that the part's collision group is being set to.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/PhysicsService#SetPartCollisionGroup)
     */
    SetPartCollisionGroup(this: PhysicsService, part: BasePart, name: string): void;
    /**
     * Unregisters the collision group for the given name.
     * @param this
     * @param name
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/PhysicsService#UnregisterCollisionGroup)
     */
    UnregisterCollisionGroup(this: PhysicsService, name: string): void;
}
/**
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/PlaceStatsService)
 */
interface PlaceStatsService extends Instance {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_PlaceStatsService: unique symbol;
}
/**
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/PlacesService)
 */
interface PlacesService extends Instance {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_PlacesService: unique symbol;
}
/**
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/PlatformCloudStorageService)
 */
interface PlatformCloudStorageService extends Instance {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_PlatformCloudStorageService: unique symbol;
}
/**
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/PlatformFriendsService)
 */
interface PlatformFriendsService extends Instance {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_PlatformFriendsService: unique symbol;
}
/**
 * An object that represents a presently connected client to the game.
 *
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Player)
 */
interface Player extends Instance {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_Player: unique symbol;
    /**
     * Describes the player's account age in days.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Player#AccountAge)
     */
    readonly AccountAge: number;
    /**
     * Determines whether the character of a player using a mobile device will automatically jump upon hitting an obstacle.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Player#AutoJumpEnabled)
     */
    AutoJumpEnabled: boolean;
    /**
     * The maximum distance the player's camera is allowed to zoom out.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Player#CameraMaxZoomDistance)
     */
    CameraMaxZoomDistance: number;
    /**
     * The minimum distance the player's camera is allowed to zoom in.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Player#CameraMinZoomDistance)
     */
    CameraMinZoomDistance: number;
    /**
     * Changes the camera's mode to either first or third person.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Player#CameraMode)
     */
    CameraMode: Enum.CameraMode;
    /**
     * Determines whether the character's appearance will be loaded when the player spawns. If false, the player will spawn with a default appearance.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Player#CanLoadCharacterAppearance)
     */
    CanLoadCharacterAppearance: boolean;
    /**
     * A <code>Model</code> controlled by the player that contains a <code>Humanoid</code>, body parts, scripts, and other objects.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Player#Character)
     */
    Character: Model | undefined;
    /**
     * <strong>Deprecated:</strong> This item is deprecated. Do not use it for new work.<br>The URL of the asset containing the character's appearance, clothing, and gear.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Player#CharacterAppearance)
     */
    CharacterAppearance: string;
    /**
     * Determines the user ID of the account whose character appearance is used for a player's <code>character</code>.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Player#CharacterAppearanceId)
     */
    CharacterAppearanceId: number;
    /**
     * <strong>Deprecated:</strong> This item is deprecated, as it may have been used for a now obsolete data persistence method. Please save and load player data using <code>DataStoreService</code> for new work.<br>The total amount of data currently being stored in the player's cache on the current place.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Player#DataComplexity)
     */
    readonly DataComplexity: number;
    /**
     * <strong>Deprecated:</strong> This item is deprecated, as it may have been used for a now obsolete data persistence method. Please save and load player data using <code>DataStoreService</code> for new work.<br>Indicates when the player's data is available to load.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Player#DataReady)
     */
    readonly DataReady: boolean;
    /**
     * Sets how the default camera handles objects between the camera and the player.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Player#DevCameraOcclusionMode)
     */
    DevCameraOcclusionMode: Enum.DevCameraOcclusionMode;
    /**
     * Determines player's camera movement mode when using a desktop version of Roblox.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Player#DevComputerCameraMode)
     */
    DevComputerCameraMode: Enum.DevComputerCameraMovementMode;
    /**
     * Determines player's character movement mode when using a desktop version of Roblox.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Player#DevComputerMovementMode)
     */
    DevComputerMovementMode: Enum.DevComputerMovementMode;
    /**
     * Determines if the player can toggle mouse lock.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Player#DevEnableMouseLock)
     */
    DevEnableMouseLock: boolean;
    /**
     * Determines player's camera movement mode when using a touch device.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Player#DevTouchCameraMode)
     */
    DevTouchCameraMode: Enum.DevTouchCameraMovementMode;
    /**
     * Determines player's character movement mode when using a touch device.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Player#DevTouchMovementMode)
     */
    DevTouchMovementMode: Enum.DevTouchMovementMode;
    /**
     * The DisplayName of the UserId associated with the Player.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Player#DisplayName)
     */
    DisplayName: string;
    /**
     * Describes the user ID of the player who was followed into a game by a player.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Player#FollowUserId)
     */
    readonly FollowUserId: number;
    /**
     * Whether player client-side gameplay is currently paused.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Player#GameplayPaused)
     */
    get GameplayPaused(): boolean;
    /**
     * Indicates if a player has a Verified Badge.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Player#HasVerifiedBadge)
     */
    HasVerifiedBadge: boolean;
    /**
     * Sets the distance at which this player will see other Humanoid's health bars. If set to 0, the health bars will not be displayed.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Player#HealthDisplayDistance)
     */
    HealthDisplayDistance: number;
    /**
     * This property shows the locale id that the local player has set for their Roblox account.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Player#LocaleId)
     */
    readonly LocaleId: string;
    /**
     * Describes the account's membership type.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Player#MembershipType)
     */
    readonly MembershipType: Enum.MembershipType;
    /**
     * Sets the distance at which this player will see other Humanoid's names. If set to 0, names are hidden.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Player#NameDisplayDistance)
     */
    NameDisplayDistance: number;
    /**
     * Determines whether the player is on a specific team.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Player#Neutral)
     */
    Neutral: boolean;
    /**
     * Sets the part to focus replication around.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Player#ReplicationFocus)
     */
    ReplicationFocus: BasePart | undefined;
    /**
     * If set, the player will respawn at the given <code>SpawnLocation</code>.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Player#RespawnLocation)
     */
    RespawnLocation: SpawnLocation | undefined;
    /**
     * Determines the Team with which a Player is associated.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Player#Team)
     */
    Team: Team | undefined;
    /**
     * Determines the Team with which a Player is associated.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Player#TeamColor)
     */
    TeamColor: BrickColor;
    /**
     * A unique identifying integer assigned to all user accounts.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Player#UserId)
     */
    readonly UserId: number;
    /**
     * Removes all accessories and other character appearance objects from a player's Character.
     * @param this An object that represents a presently connected client to the game.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Player#ClearCharacterAppearance)
     */
    ClearCharacterAppearance(this: Player): void;
    /**
     * Returns the distance between the character's head and the given Vector3 point. Returns 0 if the player has no character.
     * @param this An object that represents a presently connected client to the game.
     * @param point The location from which player's distance to is being measured.
     * @returns The distance in studs between the player and the location.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Player#DistanceFromCharacter)
     */
    DistanceFromCharacter(this: Player, point: Vector3): number;
    /**
     * Returns a dictionary containing information describing how the <code>Player</code> joins the experience.
     * @param this An object that represents a presently connected client to the game.
     * @returns A dictionary containing PlaceId and UserId values (see table in description).
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Player#GetJoinData)
     */
    GetJoinData(this: Player): PlayerJoinInfo;
    /**
     * Returns the mouse being used by the client.
     * @param this An object that represents a presently connected client to the game.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Player#GetMouse)
     */
    GetMouse(this: Player): PlayerMouse;
    /**
     * Returns the isolated network latency in seconds.
     * @param this An object that represents a presently connected client to the game.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Player#GetNetworkPing)
     */
    GetNetworkPing(this: Player): number;
    /**
     * Returns whether or not the appearance of the player's character has loaded.
     * @param this An object that represents a presently connected client to the game.
     * @returns A boolean indicating whether or not the appearance of the player's character has loaded.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Player#HasAppearanceLoaded)
     */
    HasAppearanceLoaded(this: Player): boolean;
    /**
     * Returns whether the player is verified with concrete, real-world signals.
     * @param this An object that represents a presently connected client to the game.
     * @returns A boolean indicating whether the player is verified.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Player#IsVerified)
     */
    IsVerified(this: Player): boolean;
    /**
     * Forcibly disconnect a player from the game, optionally providing a message.
     * @param this An object that represents a presently connected client to the game.
     * @param message The message to show the user upon kicking.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Player#Kick)
     */
    Kick(this: Player, message: string): void;
    /**
     * <strong>Deprecated:</strong> This item is deprecated, as it may have been used for a now obsolete data persistence method. Please save and load player data using <code>DataStoreService</code> for new work.<br>Returns a boolean value that was previously saved to the player with <code>Player:SaveBoolean()</code> with the same key.
     * @param this An object that represents a presently connected client to the game.
     * @param key
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Player#LoadBoolean)
     */
    LoadBoolean(this: Player, key: string): boolean;
    /**
     * <strong>Deprecated:</strong> <br>Places the given instance either in the player's character, head, or StarterGear based on the instance's class.
     * @param this An object that represents a presently connected client to the game.
     * @param assetInstance An instance of the asset being loaded, which can be obtained using the <code>InsertService:LoadAsset()</code> function.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Player#LoadCharacterAppearance)
     */
    LoadCharacterAppearance(this: Player, assetInstance: Instance): void;
    /**
     * <strong>Deprecated:</strong> This item is deprecated, as it may have been used for a now obsolete data persistence method. Please save and load player data using <code>DataStoreService</code> for new work.<br>Returns an instance that was previously saved to the player with <code>Player:SaveInstance()</code> with the same key.
     * @param this An object that represents a presently connected client to the game.
     * @param key
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Player#LoadInstance)
     */
    LoadInstance(this: Player, key: string): Instance | undefined;
    /**
     * <strong>Deprecated:</strong> This item is deprecated, as it may have been used for a now obsolete data persistence method. Please save and load player data using <code>DataStoreService</code> for new work.<br>Returns a number value that was previously saved to the player.
     * @param this An object that represents a presently connected client to the game.
     * @param key
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Player#LoadNumber)
     */
    LoadNumber(this: Player, key: string): number;
    /**
     * <strong>Deprecated:</strong> This item is deprecated, as it may have been used for a now obsolete data persistence method. Please save and load player data using <code>DataStoreService</code> for new work.<br>Returns a string value that was previously saved to the player.
     * @param this An object that represents a presently connected client to the game.
     * @param key
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Player#LoadString)
     */
    LoadString(this: Player, key: string): string;
    /**
     * Causes the player's character to walk in the given direction until stopped, or interrupted by the player (by using their controls).
     * @param this An object that represents a presently connected client to the game.
     * @param walkDirection The Vector3 direction that the player should move.
     * @param relativeToCamera A boolean indicating whether the player should move relative to the player's camera.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Player#Move)
     */
    Move(this: Player, walkDirection: Vector3, relativeToCamera?: boolean): void;
    /**
     * <strong>Deprecated:</strong> This item is deprecated, as it may have been used for a now obsolete data persistence method. Please save and load player data using <code>DataStoreService</code> for new work.<br>Used to save a boolean value that can be loaded again at a later time using <code>Player:LoadBoolean()</code>.
     * @param this An object that represents a presently connected client to the game.
     * @param key
     * @param value
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Player#SaveBoolean)
     */
    SaveBoolean(this: Player, key: string, value: boolean): void;
    /**
     * <strong>Deprecated:</strong> This item is deprecated, as it may have been used for a now obsolete data persistence method. Please save and load player data using <code>DataStoreService</code> for new work.<br>Saves an instance which can be loaded again at a later time.
     * @param this An object that represents a presently connected client to the game.
     * @param key
     * @param value
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Player#SaveInstance)
     */
    SaveInstance(this: Player, key: string, value: Instance): void;
    /**
     * <strong>Deprecated:</strong> This item is deprecated, as it may have been used for a now obsolete data persistence method. Please save and load player data using <code>DataStoreService</code> for new work.<br>Saves a number value that can be loaded again at a later time using.
     * @param this An object that represents a presently connected client to the game.
     * @param key
     * @param value
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Player#SaveNumber)
     */
    SaveNumber(this: Player, key: string, value: number): void;
    /**
     * <strong>Deprecated:</strong> This item is deprecated, as it may have been used for a now obsolete data persistence method. Please save and load player data using <code>DataStoreService</code> for new work.<br>Saves a string value that can be loaded again at a later time.
     * @param this An object that represents a presently connected client to the game.
     * @param key
     * @param value
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Player#SaveString)
     */
    SaveString(this: Player, key: string, value: string): void;
    /**
     * Returns a dictionary of online friends.
     * @param this An object that represents a presently connected client to the game.
     * @param maxFriends The maximum number of online friends to return.
     * @returns A dictionary of online friends (see the table above).
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Player#GetFriendsOnline)
     */
    GetFriendsOnline(this: Player, maxFriends?: number): Array<FriendOnlineInfo>;
    /**
     * Returns the player's rank in the group as an integer between 0 and 255, where 0 is a non-member and 255 is the group's owner.
     * @param this An object that represents a presently connected client to the game.
     * @param groupId The <code>groupId</code> of the specified group.
     * @returns The player's rank in the group.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Player#GetRankInGroup)
     */
    GetRankInGroup(this: Player, groupId: number): number;
    /**
     * Returns the player's role in the group as a string, or "Guest" if the player isn't part of the group.
     * @param this An object that represents a presently connected client to the game.
     * @param groupId The <em>groupId</em> of the specified group.
     * @returns The player's role in the specified group, or <em>Guest</em> if the player is not a member.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Player#GetRoleInGroup)
     */
    GetRoleInGroup(this: Player, groupId: number): string;
    /**
     * <strong>Deprecated:</strong> This function is obsolete because the Best Friends feature was removed. Use <code>Player:IsFriendsWith()</code> instead.<br>Returns whether a player is friends with the specified user.
     * @param this An object that represents a presently connected client to the game.
     * @param userId
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Player#IsBestFriendsWith)
     */
    IsBestFriendsWith(this: Player, userId: number): boolean;
    /**
     * Checks whether a player is a friend of the user with the given <code>Player.UserId</code>.
     * @param this An object that represents a presently connected client to the game.
     * @param userId The <code>Player.UserId</code> of the specified player.
     * @returns A boolean indicating whether a player is a friend of the specified user.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Player#IsFriendsWith)
     */
    IsFriendsWith(this: Player, userId: number): boolean;
    /**
     * Checks whether a player is a member of a group with the given ID.
     * @param this An object that represents a presently connected client to the game.
     * @param groupId The <em>groupId</em> of the specified group.
     * @returns A boolean indicating whether the player is in the specified group.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Player#IsInGroup)
     */
    IsInGroup(this: Player, groupId: number): boolean;
    /**
     * Creates a new character for the player, removing the old one. Also clears the player's <code>Backpack</code> and <code>PlayerGui</code>.
     * @param this An object that represents a presently connected client to the game.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Player#LoadCharacter)
     */
    LoadCharacter(this: Player): void;
    /**
     * Spawns an avatar so it has everything equipped in the passed in <code>HumanoidDescription</code>.
     * @param this An object that represents a presently connected client to the game.
     * @param humanoidDescription A <code>HumanoidDescription</code> containing traits like body parts/colors, body scaling, accessories, clothing, and animations that will be equipped to the loaded character.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Player#LoadCharacterWithHumanoidDescription)
     */
    LoadCharacterWithHumanoidDescription(this: Player, humanoidDescription: HumanoidDescription): void;
    /**
     * Requests that the server stream to the player around the specified location.
     * @param this An object that represents a presently connected client to the game.
     * @param position World location where streaming is requested.
     * @param timeOut Optional timeout for the request.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Player#RequestStreamAroundAsync)
     */
    RequestStreamAroundAsync(this: Player, position: Vector3, timeOut?: number): void;
    /**
     * <strong>Deprecated:</strong> This item is deprecated, as it may have been used for a now obsolete data persistence method. Please save and load player data using <code>DataStoreService</code> for new work.<br>Used to pause the script until the player's data is available to manipulate, or until a certain amount of time has elapsed without fetching the player's data.
     * @param this An object that represents a presently connected client to the game.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Player#WaitForDataReady)
     */
    WaitForDataReady(this: Player): boolean;
    /**
     * Fired when a player's character spawns or respawns.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Player#CharacterAdded)
     */
    readonly CharacterAdded: RBXScriptSignal<(character: Model) => void>;
    /**
     * Fires when the full appearance of a <code>Player.Character</code> has been inserted.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Player#CharacterAppearanceLoaded)
     */
    readonly CharacterAppearanceLoaded: RBXScriptSignal<(character: Model) => void>;
    /**
     * Fired right before a player's character is removed.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Player#CharacterRemoving)
     */
    readonly CharacterRemoving: RBXScriptSignal<(character: Model) => void>;
    /**
     * Fires when a player chats in-game using Roblox's provided chat bar.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Player#Chatted)
     */
    readonly Chatted: RBXScriptSignal<(message: string, recipient?: Player) => void>;
    /**
     * This event fires approximately two minutes after the game engine classifies the <code>player</code> as idle. Time is the number of seconds that have elapsed since that point.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Player#Idled)
     */
    readonly Idled: RBXScriptSignal<(time: number) => void>;
    /**
     * Fired when the TeleportState of a player changes.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Player#OnTeleport)
     */
    readonly OnTeleport: RBXScriptSignal<(teleportState: Enum.TeleportState, placeId: number, spawnName: string) => void>;
    readonly Name: string;
}
/**
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/PlayerHydrationService)
 */
interface PlayerHydrationService extends Instance {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_PlayerHydrationService: unique symbol;
}
/**
 * A container for LocalScripts to be run on the client.
 *
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/PlayerScripts)
 */
interface PlayerScripts extends Instance {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_PlayerScripts: unique symbol;
    /**
     * Unregisters all ComputerCameraMovementMode enums from the game settings menu.
     * @param this A container for LocalScripts to be run on the client.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/PlayerScripts#ClearComputerCameraMovementModes)
     */
    ClearComputerCameraMovementModes(this: PlayerScripts): void;
    /**
     * Unregisters all ComputerMovementMode enums from the game settings menu.
     * @param this A container for LocalScripts to be run on the client.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/PlayerScripts#ClearComputerMovementModes)
     */
    ClearComputerMovementModes(this: PlayerScripts): void;
    /**
     * Unregisters all TouchCameraMovementMode enums from the game settings menu.
     * @param this A container for LocalScripts to be run on the client.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/PlayerScripts#ClearTouchCameraMovementModes)
     */
    ClearTouchCameraMovementModes(this: PlayerScripts): void;
    /**
     * Unregisters all TouchMovementMode enums from the game settings menu.
     * @param this A container for LocalScripts to be run on the client.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/PlayerScripts#ClearTouchMovementModes)
     */
    ClearTouchMovementModes(this: PlayerScripts): void;
    /**
     * Registers that a computer camera movement mode is available to be selected from the game menu.
     * @param this A container for LocalScripts to be run on the client.
     * @param cameraMovementMode
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/PlayerScripts#RegisterComputerCameraMovementMode)
     */
    RegisterComputerCameraMovementMode(this: PlayerScripts, cameraMovementMode: CastsToEnum<Enum.ComputerCameraMovementMode>): void;
    /**
     * Registers that a computer movement mode is available to be selected from the game menu.
     * @param this A container for LocalScripts to be run on the client.
     * @param movementMode
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/PlayerScripts#RegisterComputerMovementMode)
     */
    RegisterComputerMovementMode(this: PlayerScripts, movementMode: CastsToEnum<Enum.ComputerMovementMode>): void;
    /**
     * Registers that a touch camera movement mode is available to be selected from the game menu.
     * @param this A container for LocalScripts to be run on the client.
     * @param cameraMovementMode
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/PlayerScripts#RegisterTouchCameraMovementMode)
     */
    RegisterTouchCameraMovementMode(this: PlayerScripts, cameraMovementMode: CastsToEnum<Enum.TouchCameraMovementMode>): void;
    /**
     * Registers that a touch movement mode is available to be selected from the game menu.
     * @param this A container for LocalScripts to be run on the client.
     * @param movementMode
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/PlayerScripts#RegisterTouchMovementMode)
     */
    RegisterTouchMovementMode(this: PlayerScripts, movementMode: CastsToEnum<Enum.TouchMovementMode>): void;
}
/**
 * Provides a way to get additional information about a player's view.
 *
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/PlayerViewService)
 */
interface PlayerViewService extends Instance {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_PlayerViewService: unique symbol;
    /**
     * Returns a world space <code>CFrame</code> looking at the player's character.
     * @param this Provides a way to get additional information about a player's view.
     * @param player The player for which to get the device camera <code>CFrame</code>.
     * @returns The world space <code>CFrame</code> looking at the player's character, or a <code>CFrame.identity</code> (see description).
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/PlayerViewService#GetDeviceCameraCFrame)
     */
    GetDeviceCameraCFrame(this: PlayerViewService, player?: Player): CFrame;
}
/**
 * A service that contains presently connected <code>Player</code> objects.
 *
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Players)
 */
interface Players extends Instance {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_Players: unique symbol;
    /**
     * Indicates whether or not bubble chat is enabled. It is set with the <code>Players:SetChatStyle()</code> method.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Players#BubbleChat)
     */
    readonly BubbleChat: boolean;
    /**
     * Indicates whether <code>characters</code> will respawn automatically.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Players#CharacterAutoLoads)
     */
    CharacterAutoLoads: boolean;
    /**
     * Indicates whether or not classic chat is enabled; set by the <code>Players:SetChatStyle()</code> method.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Players#ClassicChat)
     */
    readonly ClassicChat: boolean;
    /**
     * The <code>Player</code> that the <code>LocalScript</code> is running for.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Players#LocalPlayer)
     */
    readonly LocalPlayer: Player;
    /**
     * The maximum number of players that can be in a server.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Players#MaxPlayers)
     */
    readonly MaxPlayers: number;
    /**
     * <strong>Deprecated:</strong> This item is deprecated. Instead, of using this item, you should count the number of players returned by <code>Players:GetPlayers()</code>.<br>Returns the number of people in the server at the current time.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Players#NumPlayers)
     */
    readonly NumPlayers: number;
    /**
     * The preferred number of players for a server.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Players#PreferredPlayers)
     */
    readonly PreferredPlayers: number;
    /**
     * Controls the amount of time taken for a players character to respawn.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Players#RespawnTime)
     */
    RespawnTime: number;
    /**
     * Returns the <code>Player</code> with the given <code>UserId</code> if they are in-game.
     * @param this A service that contains presently connected <code>Player</code> objects.
     * @param userId The <code>Player.UserId</code> of the player being specified.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Players#GetPlayerByUserId)
     */
    GetPlayerByUserId(this: Players, userId: number): Player | undefined;
    /**
     * Returns the <code>Player</code> whose <code>Player.Character</code> matches the given instance, or <code>nil</code> if one cannot be found.
     * @param this A service that contains presently connected <code>Player</code> objects.
     * @param character A character instance that you want to get the player from.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Players#GetPlayerFromCharacter)
     */
    GetPlayerFromCharacter(this: Players, character: Instance | undefined): Player | undefined;
    /**
     * Returns a table of all presently connected <code>Player</code> objects.
     * @param this A service that contains presently connected <code>Player</code> objects.
     * @returns A table containing all the players in the server.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Players#GetPlayers)
     */
    GetPlayers(this: Players): Array<Player>;
    /**
     * Bans users from your experience, with options to specify duration, reason, whether the ban applies to the entire universe or just the current place, and more. This method is enabled and disabled by the <code>Players.BanningEnabled</code> property, which you can toggle in Studio.
     * @param this A service that contains presently connected <code>Player</code> objects.
     * @param config <ul> <li> <code>UserIds</code> (required; array) — Array of <code>UserIds</code>   of players to be banned. Max size is <code>50</code>. </li> <li> <code>ApplyToUniverse</code> (optional; boolean) — Whether ban propagates to   all places within the experience universe. Default is <code>true</code>. </li> <li> <code>Duration</code> (required; integer) — Duration of the ban, in seconds.   Permanent bans should have a value of <code>-1</code>. <code>0</code> and all other   negative values are invalid. </li> <li> <code>DisplayReason</code> (required; string) — The message that will be   displayed to users when they attempt to and fail to join an   experience. Maximum string length is <code>400</code>. </li> <li> <code>PrivateReason</code> (required; string) — Internal messaging that will be   returned when querying the user's ban history. Maximum string length   is <code>1000</code>. </li> <li> <code>ExcludeAltAccounts</code> (optional; boolean) — When <code>true</code>, Roblox does   not attempt to ban alt accounts. Default is <code>false</code>. </li> </ul>
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Players#BanAsync)
     */
    BanAsync(this: Players, config: BanAsyncConfig): void;
    /**
     * Returns a character Model equipped with everything specified in the passed in HumanoidDescription, and is R6 or R15 as specified by the rigType.
     * @param this A service that contains presently connected <code>Player</code> objects.
     * @param description Specifies the appearance of the returned character.
     * @param rigType Specifies whether the returned character will be R6 or R15.
     * @param assetTypeVerification Asset type verification determines if this function will load models or not (You should set this to Always unless you want to load non-catalog assets).
     * @returns A Humanoid character Model.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Players#CreateHumanoidModelFromDescription)
     */
    CreateHumanoidModelFromDescription(this: Players, description: HumanoidDescription, rigType: CastsToEnum<Enum.HumanoidRigType>, assetTypeVerification?: CastsToEnum<Enum.AssetTypeVerification>): Model;
    /**
     * Returns a character Model set-up with everything equipped to match the avatar of the user specified by the passed in userId.
     * @param this A service that contains presently connected <code>Player</code> objects.
     * @param userId The userId for a Roblox user. (The UserId is the number in the profile of the user e.g www.roblox.com/users/1/profile).
     * @returns A Humanoid character Model.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Players#CreateHumanoidModelFromUserId)
     */
    CreateHumanoidModelFromUserId(this: Players, userId: number): Model;
    /**
     * Retrieves the ban and unban history of any user within the experience's universe. This method is enabled and disabled by the <code>Players.BanningEnabled</code> property, which you can toggle in Studio.
     * @param this A service that contains presently connected <code>Player</code> objects.
     * @param userId
     * @returns See <code>BanHistoryPages</code> for return reference.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Players#GetBanHistoryAsync)
     */
    GetBanHistoryAsync(this: Players, userId: number): BanHistoryPages;
    /**
     * <strong>Deprecated:</strong> <br>Returns a <code>Model</code> containing the assets which the player is wearing, excluding gear.
     * @param this A service that contains presently connected <code>Player</code> objects.
     * @param userId The <code>Player.UserId</code> of the specified player.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Players#GetCharacterAppearanceAsync)
     */
    GetCharacterAppearanceAsync(this: Players, userId: number): Model;
    /**
     * Returns information about the character appearance of a given user.
     * @param this A service that contains presently connected <code>Player</code> objects.
     * @param userId The *<em>userId</em> of the specified player.
     * @returns A dictionary containing information about the character appearance of a given user.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Players#GetCharacterAppearanceInfoAsync)
     */
    GetCharacterAppearanceInfoAsync(this: Players, userId: number): CharacterAppearanceInfo;
    /**
     * Returns a <code>FriendPages</code> object which contains information for all of the given player's friends.
     * @param this A service that contains presently connected <code>Player</code> objects.
     * @param userId The user ID of the player being specified.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Players#GetFriendsAsync)
     */
    GetFriendsAsync(this: Players, userId: number): FriendPages;
    /**
     * Returns the HumanoidDescription for a specified outfit, which will be set with the parts/colors/Animations etc of the outfit.
     * @param this A service that contains presently connected <code>Player</code> objects.
     * @param outfitId The id of the outfit for which the HumanoidDescription is sought.
     * @returns HumanoidDescription initialized with the specification for the passed in outfitId.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Players#GetHumanoidDescriptionFromOutfitId)
     */
    GetHumanoidDescriptionFromOutfitId(this: Players, outfitId: number): HumanoidDescription;
    /**
     * Returns a HumanoidDescription which specifies everything equipped for the avatar of the user specified by the passed in userId.
     * @param this A service that contains presently connected <code>Player</code> objects.
     * @param userId The userId for a Roblox user. (The UserId is the number in the profile of the user e.g www.roblox.com/users/1/profile).
     * @returns HumanoidDescription initialized with the passed in user's avatar specification.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Players#GetHumanoidDescriptionFromUserId)
     */
    GetHumanoidDescriptionFromUserId(this: Players, userId: number): HumanoidDescription;
    /**
     * Sends a query to the Roblox website for the username of an account with a given <code>UserId</code>.
     * @param this A service that contains presently connected <code>Player</code> objects.
     * @param userId The <code>Player.UserId</code> of the player being specified.
     * @returns The name of a user with the specified <code>Player.UserId</code>.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Players#GetNameFromUserIdAsync)
     */
    GetNameFromUserIdAsync(this: Players, userId: number): string;
    /**
     * Sends a query to the Roblox website for the <code>userId</code> of an account with a given username.
     * @param this A service that contains presently connected <code>Player</code> objects.
     * @param userName The username of the player being specified.
     * @returns The <code>Player.UserId</code> of a user whose name is specified.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Players#GetUserIdFromNameAsync)
     */
    GetUserIdFromNameAsync(this: Players, userName: string): number;
    /**
     * Returns the content URL of a player thumbnail given the size and type, as well as a boolean describing if the image is ready to use.
     * @param this A service that contains presently connected <code>Player</code> objects.
     * @param userId The <code>Player.UserId</code> of the player being specified.
     * @param thumbnailType A <code>ThumbnailType</code> describing the type of thumbnail.
     * @param thumbnailSize A <code>ThumbnailSize</code> specifying the size of the thumbnail.
     * @returns A tuple containing the content URL of a user thumbnail based on the specified parameters, and a bool describing if the image is ready to be used or not.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Players#GetUserThumbnailAsync)
     */
    GetUserThumbnailAsync(this: Players, userId: number, thumbnailType: CastsToEnum<Enum.ThumbnailType>, thumbnailSize: CastsToEnum<Enum.ThumbnailSize>): LuaTuple<[
        string,
        boolean
    ]>;
    /**
     * Unbans players banned from <code>Players:BanAsync()</code> or the User Restrictions Open Cloud API. This method is enabled and disabled by the <code>Players.BanningEnabled</code> property, which you can toggle in Studio.
     * @param this A service that contains presently connected <code>Player</code> objects.
     * @param config <table><thead> <tr>   <th>Name</th>   <th>Type</th>   <th>Description</th> </tr></thead> <tbody>   <tr>     <td><code>UserIds</code></td>     <td>array</td>     <td>UserIDs to be force allowed into the experience(s). <br /> <br />Max size is <code>50</code>.</td>   </tr>   <tr>     <td><code>ApplyToUniverse</code></td>     <td>boolean</td>     <td>Propagates the unban to all places within this universe.<br /></td>   </tr> </tbody> </table>
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Players#UnbanAsync)
     */
    UnbanAsync(this: Players, config: UnbanAsyncConfig): void;
    /**
     * Fires when a player enters the game.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Players#PlayerAdded)
     */
    readonly PlayerAdded: RBXScriptSignal<(player: Player) => void>;
    /**
     * Fires when the game server recognizes that a player's membership has changed.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Players#PlayerMembershipChanged)
     */
    readonly PlayerMembershipChanged: RBXScriptSignal<(player: Player) => void>;
    /**
     * Fires when a player is about to leave the game.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Players#PlayerRemoving)
     */
    readonly PlayerRemoving: RBXScriptSignal<(player: Player) => void>;
    /**
     * Fires when the game server recognizes that the user's status for a certain subscription has changed.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Players#UserSubscriptionStatusChanged)
     */
    readonly UserSubscriptionStatusChanged: RBXScriptSignal<(user: Player, subscriptionId: string) => void>;
}
/**
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/PluginCapabilities)
 */
interface PluginCapabilities extends Instance {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_PluginCapabilities: unique symbol;
}
/**
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/PluginManagementService)
 */
interface PluginManagementService extends Instance {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_PluginManagementService: unique symbol;
}
/**
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/PluginManagerInterface)
 */
interface PluginManagerInterface extends Instance {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_PluginManagerInterface: unique symbol;
}
/**
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/PluginPolicyService)
 */
interface PluginPolicyService extends Instance {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_PluginPolicyService: unique symbol;
}
/**
 * Helps you query information regarding policy compliance for players around the world based on age range, location, and platform type.
 *
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/PolicyService)
 */
interface PolicyService extends Instance {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_PolicyService: unique symbol;
    /**
     * @param this Helps you query information regarding policy compliance for players around the world based on age range, location, and platform type.
     * @param player
     * @param brandProjectId
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/PolicyService#CanViewBrandProjectAsync)
     */
    CanViewBrandProjectAsync(this: PolicyService, player: Player, brandProjectId: string): boolean;
    /**
     * Returns policy information about a player which is based on geolocation, age group, and platform.
     * @param this Helps you query information regarding policy compliance for players around the world based on age range, location, and platform type.
     * @param player The <code>Player</code> to get policy information for.
     * @returns A dictionary containing information about the policy information of the requested player; see above for the dictionary structure.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/PolicyService#GetPolicyInfoForPlayerAsync)
     */
    GetPolicyInfoForPlayerAsync(this: PolicyService, player: Player): PolicyInfo;
}
/**
 * Base class of all 'Pose Instance' objects.
 *
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/PoseBase)
 */
interface PoseBase extends Instance {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_PoseBase: unique symbol;
    /**
     * The easing direction to use to reach the next Pose's value.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/PoseBase#EasingDirection)
     */
    EasingDirection: Enum.PoseEasingDirection;
    /**
     * The easing style to use to reach the next Pose's value.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/PoseBase#EasingStyle)
     */
    EasingStyle: Enum.PoseEasingStyle;
    /**
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/PoseBase#Weight)
     */
    Weight: number;
}
/**
 * Holds the value applied to a specific FACS control.
 *
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/NumberPose)
 */
interface NumberPose extends PoseBase {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_NumberPose: unique symbol;
    /**
     * The value that will be applied to the FACS control corresponding to the <code>NumberPose</code>.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/NumberPose#Value)
     */
    Value: number;
}
/**
 * Holds the <code>CFrame</code> applied to the <code>Motor6D</code> connected to its associated <code>BasePart</code>. The part which is controlled depends on the name of the Pose.
 *
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Pose)
 */
interface Pose extends PoseBase {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_Pose: unique symbol;
    /**
     * This <code>CFrame</code> applies to the <code>Motor6D</code> corresponding with the <code>Pose</code> when the <code>Motor6D.Transform</code> is changed.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Pose#CFrame)
     */
    CFrame: CFrame;
    /**
     * <strong>Deprecated:</strong> This property is deprecated. Use the <code>AnimationTrack:AdjustWeight()</code> function when blending multiple animations.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Pose#MaskWeight)
     */
    MaskWeight: number;
    /**
     * Adds a sub <code>Pose</code> to the <code>Pose</code> by parenting it.
     * @param this Holds the <code>CFrame</code> applied to the <code>Motor6D</code> connected to its associated <code>BasePart</code>. The part which is controlled depends on the name of the Pose.
     * @param pose The <code>Pose</code> to be added.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Pose#AddSubPose)
     */
    AddSubPose(this: Pose, pose: Instance): void;
    /**
     * Returns an array containing all sub <code>Poses</code> that have been added to a <code>Pose</code>.
     * @param this Holds the <code>CFrame</code> applied to the <code>Motor6D</code> connected to its associated <code>BasePart</code>. The part which is controlled depends on the name of the Pose.
     * @returns An array of sub <code>Poses</code>.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Pose#GetSubPoses)
     */
    GetSubPoses(this: Pose): Array<Instance>;
    /**
     * Removes a sub <code>Pose</code> from the <code>Pose</code> by parenting it to nil.
     * @param this Holds the <code>CFrame</code> applied to the <code>Motor6D</code> connected to its associated <code>BasePart</code>. The part which is controlled depends on the name of the Pose.
     * @param pose The <code>Pose</code> to be removed.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Pose#RemoveSubPose)
     */
    RemoveSubPose(this: Pose, pose: Instance): void;
}
/**
 * Abstract base class for post-processing effects.
 *
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/PostEffect)
 */
interface PostEffect extends Instance {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_PostEffect: unique symbol;
    /**
     * Toggles whether or not the PostEffect is enabled.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/PostEffect#Enabled)
     */
    Enabled: boolean;
}
/**
 * Simulates the camera viewing a very bright light.
 *
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/BloomEffect)
 */
interface BloomEffect extends PostEffect {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_BloomEffect: unique symbol;
    /**
     * Determines the additive blending intensity.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/BloomEffect#Intensity)
     */
    Intensity: number;
    /**
     * Determines the radius of the bloom in pixels.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/BloomEffect#Size)
     */
    Size: number;
    /**
     * Determines how bright a color must be before it blooms.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/BloomEffect#Threshold)
     */
    Threshold: number;
}
/**
 * Applies a blur to the entire game world.
 *
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/BlurEffect)
 */
interface BlurEffect extends PostEffect {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_BlurEffect: unique symbol;
    /**
     * Determines the blur radius.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/BlurEffect#Size)
     */
    Size: number;
}
/**
 * Adjusts color-related properties of the rendered world like saturation, tint, brightness, and contrast.
 *
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/ColorCorrectionEffect)
 */
interface ColorCorrectionEffect extends PostEffect {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_ColorCorrectionEffect: unique symbol;
    /**
     * Determines by how much the brightness of pixel colors will be shifted.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/ColorCorrectionEffect#Brightness)
     */
    Brightness: number;
    /**
     * Determines the change in separation between the dark and light colors.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/ColorCorrectionEffect#Contrast)
     */
    Contrast: number;
    /**
     * Determines the change in intensity of colors.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/ColorCorrectionEffect#Saturation)
     */
    Saturation: number;
    /**
     * Determines by how much the RGB channels of pixels are scaled.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/ColorCorrectionEffect#TintColor)
     */
    TintColor: Color3;
}
/**
 * Modifies how color values calculated by the renderer should be converted to the screen's color range.
 *
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/ColorGradingEffect)
 */
interface ColorGradingEffect extends PostEffect {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_ColorGradingEffect: unique symbol;
    /**
     * Specifies which tone mapper preset to use.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/ColorGradingEffect#TonemapperPreset)
     */
    TonemapperPreset: Enum.TonemapperPreset;
}
/**
 * Simulates a camera lens by blurring parts of a scene not in focus.
 *
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/DepthOfFieldEffect)
 */
interface DepthOfFieldEffect extends PostEffect {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_DepthOfFieldEffect: unique symbol;
    /**
     * Intensity of the far field blur.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/DepthOfFieldEffect#FarIntensity)
     */
    FarIntensity: number;
    /**
     * Distance away from the camera where objects are in focus.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/DepthOfFieldEffect#FocusDistance)
     */
    FocusDistance: number;
    /**
     * Controls the distance away from the <code>FocusDistance</code> where no blur is applied.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/DepthOfFieldEffect#InFocusRadius)
     */
    InFocusRadius: number;
    /**
     * Intensity of the near field blur.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/DepthOfFieldEffect#NearIntensity)
     */
    NearIntensity: number;
}
/**
 * Renders dynamic rays from the sun.
 *
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/SunRaysEffect)
 */
interface SunRaysEffect extends PostEffect {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_SunRaysEffect: unique symbol;
    /**
     * Determines the opacity of the sun rays.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/SunRaysEffect#Intensity)
     */
    Intensity: number;
    /**
     * Determines how wide the sun rays will spread out.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/SunRaysEffect#Spread)
     */
    Spread: number;
}
/**
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/ProcessInstancePhysicsService)
 */
interface ProcessInstancePhysicsService extends Instance {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_ProcessInstancePhysicsService: unique symbol;
}
/**
 * An object that lets you prompt players to interact with an object in the 3D world.
 *
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/ProximityPrompt)
 */
interface ProximityPrompt extends Instance {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_ProximityPrompt: unique symbol;
    /**
     * The action text shown to the user.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/ProximityPrompt#ActionText)
     */
    ActionText: string;
    /**
     * Whether the prompt's <code>ProximityPrompt.ActionText</code> and <code>ProximityPrompt.ObjectText</code> will be localized according to the <code>ProximityPrompt.RootLocalizationTable</code>.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/ProximityPrompt#AutoLocalize)
     */
    AutoLocalize: boolean;
    /**
     * Whether the prompt can be activated by clicking/tapping on the prompt UI.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/ProximityPrompt#ClickablePrompt)
     */
    ClickablePrompt: boolean;
    /**
     * Whether this prompt should be shown.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/ProximityPrompt#Enabled)
     */
    Enabled: boolean;
    /**
     * Used to customize which prompts can be shown at the same time.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/ProximityPrompt#Exclusivity)
     */
    Exclusivity: Enum.ProximityPromptExclusivity;
    /**
     * The gamepad button the player should press to trigger the prompt.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/ProximityPrompt#GamepadKeyCode)
     */
    GamepadKeyCode: Enum.KeyCode;
    /**
     * The duration, in seconds, that the player must hold the button/key down to trigger the prompt.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/ProximityPrompt#HoldDuration)
     */
    HoldDuration: number;
    /**
     * The key the player should press to trigger the prompt.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/ProximityPrompt#KeyboardKeyCode)
     */
    KeyboardKeyCode: Enum.KeyCode;
    /**
     * The maximum distance a Player's <code>character</code> can be from the <code>ProximityPrompt</code> for the prompt to appear.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/ProximityPrompt#MaxActivationDistance)
     */
    MaxActivationDistance: number;
    /**
     * An optional property that determines the object name text shown to the user.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/ProximityPrompt#ObjectText)
     */
    ObjectText: string;
    /**
     * Whether the prompt is hidden if the path between the player's <code>Camera</code> and object parented to the <code>ProximityPrompt</code> is obstructed.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/ProximityPrompt#RequiresLineOfSight)
     */
    RequiresLineOfSight: boolean;
    /**
     * A reference to a <code>LocalizationTable</code> to be used to apply automated localization to this prompt's <code>ProximityPrompt.ActionText</code> and <code>ProximityPrompt.ObjectText</code>.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/ProximityPrompt#RootLocalizationTable)
     */
    RootLocalizationTable: LocalizationTable | undefined;
    /**
     * The style of the prompt's UI.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/ProximityPrompt#Style)
     */
    Style: Enum.ProximityPromptStyle;
    /**
     * The pixel offset applied to the prompt's UI.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/ProximityPrompt#UIOffset)
     */
    UIOffset: Vector2;
    /**
     * Fires a signal indicating that the user began pressing the prompt GUI button.
     * @param this An object that lets you prompt players to interact with an object in the 3D world.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/ProximityPrompt#InputHoldBegin)
     */
    InputHoldBegin(this: ProximityPrompt): void;
    /**
     * Fires a signal indicating that the user ended pressing the prompt GUI button.
     * @param this An object that lets you prompt players to interact with an object in the 3D world.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/ProximityPrompt#InputHoldEnd)
     */
    InputHoldEnd(this: ProximityPrompt): void;
    /**
     * Triggered when a player begins holding down the <code>key</code>/button connected to a prompt with a non-zero <code>ProximityPrompt.HoldDuration</code>.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/ProximityPrompt#PromptButtonHoldBegan)
     */
    readonly PromptButtonHoldBegan: RBXScriptSignal<(playerWhoTriggered: Player) => void>;
    /**
     * Triggers when the player ends holding down the button on a prompt with a non-zero <code>ProximityPrompt.HoldDuration</code>.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/ProximityPrompt#PromptButtonHoldEnded)
     */
    readonly PromptButtonHoldEnded: RBXScriptSignal<(playerWhoTriggered: Player) => void>;
    /**
     * Triggers when the prompt becomes hidden.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/ProximityPrompt#PromptHidden)
     */
    readonly PromptHidden: RBXScriptSignal<() => void>;
    /**
     * Triggers when the <code>prompt</code> becomes visible.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/ProximityPrompt#PromptShown)
     */
    readonly PromptShown: RBXScriptSignal<(inputType: Enum.ProximityPromptInputType) => void>;
    /**
     * Triggers when <code>key</code>/button is released, for longer events where the user is required to hold down the button.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/ProximityPrompt#TriggerEnded)
     */
    readonly TriggerEnded: RBXScriptSignal<(playerWhoTriggered: Player) => void>;
    /**
     * Triggered when the prompt <code>key</code>/button is pressed, or after a specified amount of time holding the button, if <code>ProximityPrompt.HoldDuration</code> is used.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/ProximityPrompt#Triggered)
     */
    readonly Triggered: RBXScriptSignal<(playerWhoTriggered: Player) => void>;
}
/**
 * Allows developers to interact with <code>ProximityPrompt</code> objects in a global way.
 *
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/ProximityPromptService)
 */
interface ProximityPromptService extends Instance {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_ProximityPromptService: unique symbol;
    /**
     * Whether <code>ProximityPrompts</code> are enabled, and therefore shown, in-experience.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/ProximityPromptService#Enabled)
     */
    Enabled: boolean;
    /**
     * Maximum number of <code>ProximityPrompts</code> that will be shown to the player.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/ProximityPromptService#MaxPromptsVisible)
     */
    MaxPromptsVisible: number;
    /**
     * Triggers when the player begins holding down the <code>KeyboardKeyCode</code> key/button on a prompt with a non-zero <code>HoldDuration</code>.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/ProximityPromptService#PromptButtonHoldBegan)
     */
    readonly PromptButtonHoldBegan: RBXScriptSignal<(prompt: ProximityPrompt, playerWhoTriggered: Player) => void>;
    /**
     * Triggers when the player stops holding down the <code>KeyboardKeyCode</code> key/button on a prompt with a non-zero <code>HoldDuration</code>.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/ProximityPromptService#PromptButtonHoldEnded)
     */
    readonly PromptButtonHoldEnded: RBXScriptSignal<(prompt: ProximityPrompt, playerWhoTriggered: Player) => void>;
    /**
     * Triggers client-side when a prompt becomes hidden.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/ProximityPromptService#PromptHidden)
     */
    readonly PromptHidden: RBXScriptSignal<(prompt: ProximityPrompt) => void>;
    /**
     * Triggers client-side when a prompt becomes visible.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/ProximityPromptService#PromptShown)
     */
    readonly PromptShown: RBXScriptSignal<(prompt: ProximityPrompt, inputType: Enum.ProximityPromptInputType) => void>;
    /**
     * Triggers when the player stops holding down the <code>KeyboardKeyCode</code> key/button while triggering a prompt.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/ProximityPromptService#PromptTriggerEnded)
     */
    readonly PromptTriggerEnded: RBXScriptSignal<(prompt: ProximityPrompt, playerWhoTriggered: Player) => void>;
    /**
     * Triggers when the user interacts with this prompt.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/ProximityPromptService#PromptTriggered)
     */
    readonly PromptTriggered: RBXScriptSignal<(prompt: ProximityPrompt, playerWhoTriggered: Player) => void>;
}
/**
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/PublishService)
 */
interface PublishService extends Instance {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_PublishService: unique symbol;
}
/**
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/RTAnimationTracker)
 */
interface RTAnimationTracker extends Instance {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_RTAnimationTracker: unique symbol;
    /**
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/RTAnimationTracker#Active)
     */
    Active: boolean;
    /**
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/RTAnimationTracker#EnableFallbackAudioInput)
     */
    EnableFallbackAudioInput: boolean;
    /**
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/RTAnimationTracker#SessionName)
     */
    SessionName: string;
    /**
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/RTAnimationTracker#TrackerMode)
     */
    readonly TrackerMode: Enum.TrackerMode;
    /**
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/RTAnimationTracker#TrackerType)
     */
    TrackerType: Enum.TrackerType;
    /**
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/RTAnimationTracker#TrackerError)
     */
    readonly TrackerError: RBXScriptSignal<(errorCode: Enum.TrackerError, msg: string) => void>;
    /**
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/RTAnimationTracker#TrackerPrompt)
     */
    readonly TrackerPrompt: RBXScriptSignal<(prompt: Enum.TrackerPromptEvent) => void>;
}
/**
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/ReflectionService)
 */
interface ReflectionService extends Instance {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_ReflectionService: unique symbol;
}
/**
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/RemoteCursorService)
 */
interface RemoteCursorService extends Instance {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_RemoteCursorService: unique symbol;
}
/**
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/RemoteDebuggerServer)
 */
interface RemoteDebuggerServer extends Instance {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_RemoteDebuggerServer: unique symbol;
}
/**
 * An object which facilitates synchronous, two-way communication across the client-server boundary. Scripts invoking a <code>RemoteFunction</code> yield until they receive a response from the recipient.
 *
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/RemoteFunction)
 */
interface RemoteFunction<T extends Callback = Callback> extends Instance {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_RemoteFunction: unique symbol;
    /**
     * Invokes the <code>RemoteFunction</code> which in turn calls the <code>OnClientInvoke</code> callback.
     * @param this An object which facilitates synchronous, two-way communication across the client-server boundary. Scripts invoking a <code>RemoteFunction</code> yield until they receive a response from the recipient.
     * @param player The <code>Player</code> associated with the client to invoke.
     * @param arguments Values to pass to the <code>OnClientInvoke</code> callback.
     * @returns Values returned from the <code>OnClientInvoke</code> callback.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/RemoteFunction#InvokeClient)
     */
    InvokeClient(this: RemoteFunction, player: Player, ...args: Parameters<T>): unknown;
    /**
     * Invokes the <code>RemoteFunction</code> which in turn calls the <code>OnServerInvoke</code> callback.
     * @param this An object which facilitates synchronous, two-way communication across the client-server boundary. Scripts invoking a <code>RemoteFunction</code> yield until they receive a response from the recipient.
     * @param arguments Values to pass to the <code>OnServerInvoke</code> callback.
     * @returns Values returned from the <code>OnServerInvoke</code> callback.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/RemoteFunction#InvokeServer)
     */
    InvokeServer(this: RemoteFunction, ...args: Parameters<T>): ReturnType<T>;
    /**
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/RemoteFunction#RemoteOnInvokeClient)
     */
    readonly RemoteOnInvokeClient: RBXScriptSignal<(id: number, arguments: unknown) => void>;
    /**
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/RemoteFunction#RemoteOnInvokeError)
     */
    readonly RemoteOnInvokeError: RBXScriptSignal<(id: number, arguments: string) => void>;
    /**
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/RemoteFunction#RemoteOnInvokeServer)
     */
    readonly RemoteOnInvokeServer: RBXScriptSignal<(id: number, player: Player, arguments: unknown) => void>;
    /**
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/RemoteFunction#RemoteOnInvokeSuccess)
     */
    readonly RemoteOnInvokeSuccess: RBXScriptSignal<(id: number, arguments: unknown) => void>;
    /**
     * Callback for when the <code>RemoteFunction</code> is invoked with <code>InvokeClient()</code>.
     * @param arguments The parameters sent through <code>InvokeClient()</code>.
     * @returns Values returned by the callback function.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/RemoteFunction#OnClientInvoke)
     */
    OnClientInvoke: T | undefined;
    /**
     * Callback for when the <code>RemoteFunction</code> is invoked with <code>InvokeServer()</code>.
     * @param player The <code>Player</code> associated with the client that the <code>InvokeServer()</code> call originates from.
     * @param arguments The parameters sent through <code>InvokeServer()</code>.
     * @returns Values returned by the callback function.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/RemoteFunction#OnServerInvoke)
     */
    OnServerInvoke: ((player: Player, ...args: Array<unknown>) => void) | undefined;
}
/**
 * A container whose contents are replicated to all clients (but not back to the server) first before anything else.
 *
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/ReplicatedFirst)
 */
interface ReplicatedFirst extends Instance {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_ReplicatedFirst: unique symbol;
    /**
     * Immediately removes the default Roblox loading screen. Note if any object has been placed in <code>ReplicatedFirst</code>, the default loading screen will remove after 5 seconds regardless if this function has been called or not.
     * @param this A container whose contents are replicated to all clients (but not back to the server) first before anything else.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/ReplicatedFirst#RemoveDefaultLoadingScreen)
     */
    RemoveDefaultLoadingScreen(this: ReplicatedFirst): void;
}
/**
 * A container service for objects that are replicated to all clients.
 *
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/ReplicatedStorage)
 */
interface ReplicatedStorage extends Instance {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_ReplicatedStorage: unique symbol;
}
/**
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/RibbonNotificationService)
 */
interface RibbonNotificationService extends Instance {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_RibbonNotificationService: unique symbol;
}
/**
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/RobloxSerializableInstance)
 */
interface RobloxSerializableInstance extends Instance {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_RobloxSerializableInstance: unique symbol;
}
/**
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/RobloxServerStorage)
 */
interface RobloxServerStorage extends Instance {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_RobloxServerStorage: unique symbol;
}
/**
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/RomarkRbxAnalyticsService)
 */
interface RomarkRbxAnalyticsService extends Instance {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_RomarkRbxAnalyticsService: unique symbol;
}
/**
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/RomarkService)
 */
interface RomarkService extends Instance {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_RomarkService: unique symbol;
    /**
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/RomarkService#EndRemoteRomarkTest)
     */
    EndRemoteRomarkTest(this: RomarkService): void;
}
/**
 * Represents a sequence of rotations and the interpolation curve between them.
 *
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/RotationCurve)
 */
interface RotationCurve extends Instance {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_RotationCurve: unique symbol;
    /**
     * Number of rotation keys in this curve.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/RotationCurve#Length)
     */
    readonly Length: number;
    /**
     * Returns a copy of a key at a given index.
     * @param this Represents a sequence of rotations and the interpolation curve between them.
     * @param index
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/RotationCurve#GetKeyAtIndex)
     */
    GetKeyAtIndex(this: RotationCurve, index: number): RotationCurveKey;
    /**
     * Returns the index of the last and first key of a period of time.
     * @param this Represents a sequence of rotations and the interpolation curve between them.
     * @param time
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/RotationCurve#GetKeyIndicesAtTime)
     */
    GetKeyIndicesAtTime(this: RotationCurve, time: number): Array<unknown>;
    /**
     * Returns a copy of all the keys in the rotation curve as a Lua array of <code>RotationCurveKeys</code>.
     * @param this Represents a sequence of rotations and the interpolation curve between them.
     * @returns Array of <code>RotationCurveKeys</code>.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/RotationCurve#GetKeys)
     */
    GetKeys(this: RotationCurve): Array<unknown>;
    /**
     * Samples the rotation curve at a given time and returns the corresponding rotation as a <code>CFrame</code>.
     * @param this Represents a sequence of rotations and the interpolation curve between them.
     * @param time Time at which to sample the curve.
     * @returns Value of the curve at the requested <code>time</code>.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/RotationCurve#GetValueAtTime)
     */
    GetValueAtTime(this: RotationCurve, time: number): CFrame | undefined;
    /**
     * Adds the key passed as an argument to this curve. If a key at the same time is found, it will be replaced.
     * @param this Represents a sequence of rotations and the interpolation curve between them.
     * @param key <code>RotationCurveKey</code> to insert.
     * @returns (see description) .
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/RotationCurve#InsertKey)
     */
    InsertKey(this: RotationCurve, key: RotationCurveKey): Array<unknown>;
    /**
     * Removes a given number of keys starting from a given index.
     * @param this Represents a sequence of rotations and the interpolation curve between them.
     * @param startingIndex Starting index from which to remove keys.
     * @param count Number of keys to remove.
     * @returns Number of keys removed.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/RotationCurve#RemoveKeyAtIndex)
     */
    RemoveKeyAtIndex(this: RotationCurve, startingIndex: number, count?: number): number;
    /**
     * Resets this curve's keys using the <code>RotationCurveKey</code> array passed as an argument.
     * @param this Represents a sequence of rotations and the interpolation curve between them.
     * @param keys Array of <code>RotationCurveKeys</code>.
     * @returns Number of keys inserted.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/RotationCurve#SetKeys)
     */
    SetKeys(this: RotationCurve, keys: Array<unknown>): number;
}
/**
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/RtMessagingService)
 */
interface RtMessagingService extends Instance {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_RtMessagingService: unique symbol;
}
/**
 * Service responsible for all runtime activity and progression of time.
 *
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/RunService)
 */
interface RunService extends Instance {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_RunService: unique symbol;
    /**
     * Given a string name of a function and a priority, this method binds the function to <code>RunService.PreRender</code>.
     * @param this Service responsible for all runtime activity and progression of time.
     * @param name Label for the binding which can be used with <code>Unbind</code> if the binding is no longer needed.
     * @param priority Priority of the binding as an integer; it determines when during the render step to call the custom function. The lower this number, the sooner the custom function will be called. If two bindings have the same priority the Roblox Engine will randomly pick one to run first.
     * @param function The custom function being bound.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/RunService#BindToRenderStep)
     */
    BindToRenderStep(this: RunService, name: string, priority: number, callback: (deltaTime: number) => void): void;
    /**
     * Returns whether the current environment is running on the client.
     * @param this Service responsible for all runtime activity and progression of time.
     * @returns Whether the current environment is running the client.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/RunService#IsClient)
     */
    IsClient(this: RunService): boolean;
    /**
     * Returns whether the <strong>Run</strong> button has been pressed to run the simulation in Studio.
     * @param this Service responsible for all runtime activity and progression of time.
     * @returns Whether the <strong>Run</strong> button has been pressed to run the simulation in Studio.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/RunService#IsRunMode)
     */
    IsRunMode(this: RunService): boolean;
    /**
     * Returns whether the experience is currently running.
     * @param this Service responsible for all runtime activity and progression of time.
     * @returns Whether the experience is currently running.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/RunService#IsRunning)
     */
    IsRunning(this: RunService): boolean;
    /**
     * Returns whether the current environment is running on the server.
     * @param this Service responsible for all runtime activity and progression of time.
     * @returns Whether the current environment is running on the server.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/RunService#IsServer)
     */
    IsServer(this: RunService): boolean;
    /**
     * Returns whether the current environment is running in Studio.
     * @param this Service responsible for all runtime activity and progression of time.
     * @returns Whether the current environment is running in Studio.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/RunService#IsStudio)
     */
    IsStudio(this: RunService): boolean;
    /**
     * Unbinds a function that was bound to the render loop using <code>RunService:BindToRenderStep()</code>.
     * @param this Service responsible for all runtime activity and progression of time.
     * @param name The name of the function being unbound.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/RunService#UnbindFromRenderStep)
     */
    UnbindFromRenderStep(this: RunService, name: string): void;
    /**
     * Fires every frame, after the physics simulation has completed.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/RunService#Heartbeat)
     */
    readonly Heartbeat: RBXScriptSignal<(deltaTime: number) => void>;
    /**
     * Fires every frame, after the physics simulation has completed.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/RunService#PostSimulation)
     */
    readonly PostSimulation: RBXScriptSignal<(deltaTimeSim: number) => void>;
    /**
     * Fires every frame, prior to the physics simulation but after rendering.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/RunService#PreAnimation)
     */
    readonly PreAnimation: RBXScriptSignal<(deltaTimeSim: number) => void>;
    /**
     * Fires every frame, prior to the frame being rendered.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/RunService#PreRender)
     */
    readonly PreRender: RBXScriptSignal<(deltaTimeRender: number) => void>;
    /**
     * Fires every frame, prior to the physics simulation.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/RunService#PreSimulation)
     */
    readonly PreSimulation: RBXScriptSignal<(deltaTimeSim: number) => void>;
    /**
     * Fires every frame, prior to the frame being rendered.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/RunService#RenderStepped)
     */
    readonly RenderStepped: RBXScriptSignal<(deltaTime: number) => void>;
    /**
     * Fires every frame, prior to the physics simulation.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/RunService#Stepped)
     */
    readonly Stepped: RBXScriptSignal<(time: number, deltaTime: number) => void>;
}
/**
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/SafetyService)
 */
interface SafetyService extends Instance {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_SafetyService: unique symbol;
}
/**
 * A 2D user interface that allows users to capture and save screenshots to their local device.
 *
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/ScreenshotHud)
 */
interface ScreenshotHud extends Instance {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_ScreenshotHud: unique symbol;
    /**
     * Asset ID of the icon used for the camera button.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/ScreenshotHud#CameraButtonIcon)
     */
    CameraButtonIcon: ContentId;
    /**
     * Screen location of the camera button.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/ScreenshotHud#CameraButtonPosition)
     */
    CameraButtonPosition: UDim2;
    /**
     * Screen location of the close button.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/ScreenshotHud#CloseButtonPosition)
     */
    CloseButtonPosition: UDim2;
    /**
     * Whether the <code>ScreenshotHud</code> closes automatically when a screenshot is taken.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/ScreenshotHud#CloseWhenScreenshotTaken)
     */
    CloseWhenScreenshotTaken: boolean;
    /**
     * <strong>Deprecated:</strong> <br>Whether the experience name in the overlay is enabled.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/ScreenshotHud#ExperienceNameOverlayEnabled)
     */
    ExperienceNameOverlayEnabled: boolean;
    /**
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/ScreenshotHud#HideCoreGuiForCaptures)
     */
    HideCoreGuiForCaptures: boolean;
    /**
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/ScreenshotHud#HidePlayerGuiForCaptures)
     */
    HidePlayerGuiForCaptures: boolean;
    /**
     * <strong>Deprecated:</strong> <br><code>Font</code> used for the experience name in the overlay.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/ScreenshotHud#OverlayFont)
     */
    OverlayFont: Enum.Font;
    /**
     * <strong>Deprecated:</strong> <br>Currently disabled with no effect.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/ScreenshotHud#UsernameOverlayEnabled)
     */
    UsernameOverlayEnabled: boolean;
    /**
     * Determines whether the <code>ScreenshotHud</code> is visible.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/ScreenshotHud#Visible)
     */
    Visible: boolean;
}
/**
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/ScriptBuilder)
 */
interface ScriptBuilder extends Instance {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_ScriptBuilder: unique symbol;
}
/**
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/SyncScriptBuilder)
 */
interface SyncScriptBuilder extends ScriptBuilder {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_SyncScriptBuilder: unique symbol;
    /**
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/SyncScriptBuilder#CompileTarget)
     */
    CompileTarget: Enum.CompileTarget;
    /**
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/SyncScriptBuilder#CoverageInfo)
     */
    CoverageInfo: boolean;
    /**
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/SyncScriptBuilder#DebugInfo)
     */
    DebugInfo: boolean;
    /**
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/SyncScriptBuilder#PackAsSource)
     */
    PackAsSource: boolean;
    /**
     * <strong>Deprecated:</strong> This property should not be used for new work.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/SyncScriptBuilder#RawBytecode)
     */
    RawBytecode: boolean;
}
/**
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/ScriptChangeService)
 */
interface ScriptChangeService extends Instance {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_ScriptChangeService: unique symbol;
}
/**
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/ScriptCloneWatcher)
 */
interface ScriptCloneWatcher extends Instance {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_ScriptCloneWatcher: unique symbol;
}
/**
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/ScriptCloneWatcherHelper)
 */
interface ScriptCloneWatcherHelper extends Instance {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_ScriptCloneWatcherHelper: unique symbol;
}
/**
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/ScriptCommitService)
 */
interface ScriptCommitService extends Instance {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_ScriptCommitService: unique symbol;
}
/**
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/ScriptContext)
 */
interface ScriptContext extends Instance {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_ScriptContext: unique symbol;
    /**
     * Fired when an error occurs.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/ScriptContext#Error)
     */
    readonly Error: RBXScriptSignal<(message: string, stackTrace: string, script?: LuaSourceContainer) => void>;
}
/**
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/ScriptDocument)
 */
interface ScriptDocument extends Instance {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_ScriptDocument: unique symbol;
}
/**
 * This service is used for interacting with <code>ScriptDocument</code> instances.
 *
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/ScriptEditorService)
 */
interface ScriptEditorService extends Instance {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_ScriptEditorService: unique symbol;
}
/**
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/ScriptProfilerService)
 */
interface ScriptProfilerService extends Instance {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_ScriptProfilerService: unique symbol;
}
/**
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/ScriptRegistrationService)
 */
interface ScriptRegistrationService extends Instance {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_ScriptRegistrationService: unique symbol;
}
/**
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/ScriptRuntime)
 */
interface ScriptRuntime extends Instance {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_ScriptRuntime: unique symbol;
}
/**
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/SelectionHighlightManager)
 */
interface SelectionHighlightManager extends Instance {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_SelectionHighlightManager: unique symbol;
}
/**
 * An abstract class for various sensor instance types.
 *
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/SensorBase)
 */
interface SensorBase extends Instance {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_SensorBase: unique symbol;
    /**
     * Determines how the sensor will update its output data.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/SensorBase#UpdateType)
     */
    UpdateType: Enum.SensorUpdateType;
    /**
     * <strong>Deprecated:</strong> This method should not be used in new work.
     * @param this An abstract class for various sensor instance types.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/SensorBase#Sense)
     */
    Sense(this: SensorBase): void;
    /**
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/SensorBase#OnSensorOutputChanged)
     */
    readonly OnSensorOutputChanged: RBXScriptSignal<() => void>;
}
/**
 * A <code>SensorBase</code> that outputs data about the <code>AirDensity</code> and <code>RelativeWindVelocity</code> at the sensor's position.
 *
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/AtmosphereSensor)
 */
interface AtmosphereSensor extends SensorBase {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_AtmosphereSensor: unique symbol;
    /**
     * Measures the density of the air where the sensor is positioned.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/AtmosphereSensor#AirDensity)
     */
    readonly AirDensity: number;
    /**
     * Reports the wind velocity relative to the sensor.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/AtmosphereSensor#RelativeWindVelocity)
     */
    readonly RelativeWindVelocity: Vector3;
}
/**
 * A <code>SensorBase</code> that outputs data about how its <code>BasePart</code> is interacting with <code>Terrain</code> water.
 *
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/BuoyancySensor)
 */
interface BuoyancySensor extends SensorBase {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_BuoyancySensor: unique symbol;
    /**
     * True when the entirety of the <code>BasePart</code> is submerged in <code>Terrain</code> water with at least one voxel of water above it.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/BuoyancySensor#FullySubmerged)
     */
    FullySubmerged: boolean;
    /**
     * True when any position on the <code>BasePart</code> is touching <code>Terrain</code> water.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/BuoyancySensor#TouchingSurface)
     */
    TouchingSurface: boolean;
}
/**
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/ControllerSensor)
 */
interface ControllerSensor extends SensorBase {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_ControllerSensor: unique symbol;
}
/**
 * A <code>SensorBase</code> that outputs data about another <code>BasePart</code> based on <code>Humanoid</code> floor and ladder detection logic.
 *
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/ControllerPartSensor)
 */
interface ControllerPartSensor extends ControllerSensor {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_ControllerPartSensor: unique symbol;
    /**
     * The position in world space where the sensor hit the <code>ControllerPartSensor.SensedPart</code>.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/ControllerPartSensor#HitFrame)
     */
    HitFrame: CFrame;
    /**
     * The surface normal at the position where the sensor hit the <code>ControllerPartSensor.SensedPart</code>.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/ControllerPartSensor#HitNormal)
     */
    HitNormal: Vector3;
    /**
     * The distance from the sensor's parent <code>BasePart</code> to use when sensing other parts.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/ControllerPartSensor#SearchDistance)
     */
    SearchDistance: number;
    /**
     * A reference to the <code>BasePart</code> hit by the sensor.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/ControllerPartSensor#SensedPart)
     */
    SensedPart: BasePart | undefined;
    /**
     * Determines what behavior this <code>SensorBase</code> uses when sensing other parts.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/ControllerPartSensor#SensorMode)
     */
    SensorMode: Enum.SensorMode;
}
/**
 * A <code>SensorBase</code> that outputs <code>Force</code>, <code>Torque</code> and <code>CenterOfPressure</code>.
 *
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/FluidForceSensor)
 */
interface FluidForceSensor extends SensorBase {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_FluidForceSensor: unique symbol;
    /**
     * Assembly center of pressure offset from its center of mass in world coordinates.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/FluidForceSensor#CenterOfPressure)
     */
    readonly CenterOfPressure: Vector3;
    /**
     * Assembly fluid force in world coordinates.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/FluidForceSensor#Force)
     */
    readonly Force: Vector3;
    /**
     * Assembly fluid torque in world coordinates.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/FluidForceSensor#Torque)
     */
    readonly Torque: Vector3;
    /**
     * Asynchronously computes force, torque, and center of pressure for the parent part of a sensor given provided inputs.
     * @param this A <code>SensorBase</code> that outputs <code>Force</code>, <code>Torque</code> and <code>CenterOfPressure</code>.
     * @param linearVelocity Linear velocity in world coordinates.
     * @param angularVelocity Angular velocity in world coordinates.
     * @param cframe <code>CFrame</code> to be used for evaluation.
     * @returns Tuple of <code>Force</code>, <code>Torque</code> and <code>CenterOfPressure</code> calculated given the input parameters.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/FluidForceSensor#EvaluateAsync)
     */
    EvaluateAsync(this: FluidForceSensor, linearVelocity: Vector3, angularVelocity: Vector3, cframe: CFrame): unknown;
}
/**
 * A container service for server-only <code>Script</code> objects.
 *
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/ServerScriptService)
 */
interface ServerScriptService extends Instance {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_ServerScriptService: unique symbol;
}
/**
 * A container whose contents are only accessible on the server. Objects descending from ServerStorage will not replicate to the client and will not be accessible from <code>LocalScripts</code>.
 *
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/ServerStorage)
 */
interface ServerStorage extends Instance {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_ServerStorage: unique symbol;
}
/**
 * A ServiceProvider is an abstract class, which stores, and provides certain singleton classes, depending on what inherited class you are using its members with.
 *
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/ServiceProvider)
 */
interface ServiceProvider<S = unknown> extends Instance {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_ServiceProvider: unique symbol;
    /**
     * Returns the service specified by the given className if it's already created, errors for an invalid name.
     * @param this A ServiceProvider is an abstract class, which stores, and provides certain singleton classes, depending on what inherited class you are using its members with.
     * @param className
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/ServiceProvider#FindService)
     */
    FindService(this: ServiceProvider<S>, className: string): S[keyof S] | undefined;
    FindService(this: ServiceProvider<S>, className: string): Instance | undefined;
    /**
     * Returns the service with the requested class name, creating it if it does not exist.
     * @param this A ServiceProvider is an abstract class, which stores, and provides certain singleton classes, depending on what inherited class you are using its members with.
     * @param className The class name of the requested service.
     * @returns An instance of the requested service.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/ServiceProvider#GetService)
     */
    GetService<T extends keyof S>(this: ServiceProvider<S>, className: T): S[T];
    /**
     * Fires when the current place is exited.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/ServiceProvider#Close)
     */
    readonly Close: RBXScriptSignal<() => void>;
    /**
     * Fired when a service is created.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/ServiceProvider#ServiceAdded)
     */
    readonly ServiceAdded: RBXScriptSignal<(service: S[keyof S]) => void>;
    /**
     * Fired when a service is about to be removed.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/ServiceProvider#ServiceRemoving)
     */
    readonly ServiceRemoving: RBXScriptSignal<(service: S[keyof S]) => void>;
}
/**
 * The root of Roblox's parent-child hierarchy. Its direct children are services, such as <code>Workspace</code> and <code>Lighting</code>, that act as the fundamental components of a Roblox game.
 *
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/DataModel)
 */
interface DataModel extends ServiceProvider<Services> {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_DataModel: unique symbol;
    /**
     * Describes the ID of the user or group that owns the place.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/DataModel#CreatorId)
     */
    readonly CreatorId: number;
    /**
     * Describes the <code>CreatorType</code> of the place, whether the place is owned by a user or a group.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/DataModel#CreatorType)
     */
    readonly CreatorType: Enum.CreatorType;
    /**
     * Describes the ID of the experience that the place running on the server belongs to.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/DataModel#GameId)
     */
    readonly GameId: number;
    /**
     * <strong>Deprecated:</strong> This property is deprecated and is no longer functional. It should not be used.<br>Not functional. Historically described the gear permissions of the place as set on the Roblox website.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/DataModel#GearGenreSetting)
     */
    readonly GearGenreSetting: Enum.GearGenreSetting;
    /**
     * Not functional. Historically described the <code>Genre</code> of the place as set on the Roblox website.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/DataModel#Genre)
     */
    readonly Genre: Enum.Genre;
    /**
     * A unique identifier for the running game server instance.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/DataModel#JobId)
     */
    readonly JobId: string;
    /**
     * Describes the ID of the place running on the server.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/DataModel#PlaceId)
     */
    readonly PlaceId: number;
    /**
     * Describes the version of the place the server is running on.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/DataModel#PlaceVersion)
     */
    readonly PlaceVersion: number;
    /**
     * Describes the private server ID of the server, if the server is a private server or a <code>reserved server</code>.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/DataModel#PrivateServerId)
     */
    readonly PrivateServerId: string;
    /**
     * Describes the <code>UserId</code> of the <code>Player</code> that owns the private server if the server is private.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/DataModel#PrivateServerOwnerId)
     */
    readonly PrivateServerOwnerId: number;
    /**
     * <strong>Deprecated:</strong> This property has been deprecated. Use <code>DataModel.PrivateServerId</code> instead.<br>A string that could identify the current server as a private server.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/DataModel#VIPServerId)
     */
    readonly VIPServerId: string;
    /**
     * <strong>Deprecated:</strong> This property has been deprecated. Use <code>DataModel.PrivateServerOwnerId</code> instead.<br>The <code>UserId</code> of the account who owns the private server.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/DataModel#VIPServerOwnerId)
     */
    readonly VIPServerOwnerId: number;
    /**
     * A reference to the <code>Workspace</code> service.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/DataModel#Workspace)
     */
    readonly Workspace: Workspace;
    /**
     * Binds a function to be called before the server shuts down.
     * @param this The root of Roblox's parent-child hierarchy. Its direct children are services, such as <code>Workspace</code> and <code>Lighting</code>, that act as the fundamental components of a Roblox game.
     * @param function A function called before the experience server shuts down. If the bound function accepts a parameter, it passes <code>CloseReason</code> specifying the reason for the server shutdown.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/DataModel#BindToClose)
     */
    BindToClose(this: DataModel, callback: (reason: Enum.CloseReason) => void): void;
    /**
     * <strong>Deprecated:</strong> This item is deprecated since the system was phased out a very long time ago, and recently the APIs for setting this message were removed.<br><strong><em>[OBSOLETE]:</em></strong> This function will always return a blank string.
     * @param this The root of Roblox's parent-child hierarchy. Its direct children are services, such as <code>Workspace</code> and <code>Lighting</code>, that act as the fundamental components of a Roblox game.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/DataModel#GetMessage)
     */
    GetMessage(this: DataModel): string;
    /**
     * <strong>Deprecated:</strong> This item is deprecated. Use <code>RunService:IsServer()</code> to see if your code is running on the server.<br>This method is no longer useful and will always return false.
     * @param this The root of Roblox's parent-child hierarchy. Its direct children are services, such as <code>Workspace</code> and <code>Lighting</code>, that act as the fundamental components of a Roblox game.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/DataModel#GetRemoteBuildMode)
     */
    GetRemoteBuildMode(this: DataModel): boolean;
    /**
     * <strong>Deprecated:</strong> This property is deprecated and is no longer functional. It should not be used.<br>Returns whether gear of the given <code>GearType</code> is permitted to be added to <code>Players'</code> <code>StarterGears</code>.
     * @param this The root of Roblox's parent-child hierarchy. Its direct children are services, such as <code>Workspace</code> and <code>Lighting</code>, that act as the fundamental components of a Roblox game.
     * @param gearType The given <code>GearType</code>.
     * @returns Whether gear of the given <code>GearType</code> is permitted in the game.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/DataModel#IsGearTypeAllowed)
     */
    IsGearTypeAllowed(this: DataModel, gearType: CastsToEnum<Enum.GearType>): boolean;
    /**
     * Returns true if the client has finished loading the game for the first time.
     * @param this The root of Roblox's parent-child hierarchy. Its direct children are services, such as <code>Workspace</code> and <code>Lighting</code>, that act as the fundamental components of a Roblox game.
     * @returns Whether the client has finished loading the game for the first time.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/DataModel#IsLoaded)
     */
    IsLoaded(this: DataModel): boolean;
    /**
     * <strong>Deprecated:</strong> This item is deprecated. Do not use it for new work.<br>Saves the current place.
     * @param this The root of Roblox's parent-child hierarchy. Its direct children are services, such as <code>Workspace</code> and <code>Lighting</code>, that act as the fundamental components of a Roblox game.
     * @param saveFilter
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/DataModel#SavePlace)
     */
    SavePlace(this: DataModel, saveFilter?: CastsToEnum<Enum.SaveFilter>): boolean;
    /**
     * <strong>Deprecated:</strong> This item is deprecated . Do not use it for new work.<br>Fires when SetGearSettings is called with a different value for <em>allowedGenres</em>.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/DataModel#AllowedGearTypeChanged)
     */
    readonly AllowedGearTypeChanged: RBXScriptSignal<() => void>;
    /**
     * Fires when the user prompts and increase or decrease in graphics quality using the hotkeys.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/DataModel#GraphicsQualityChangeRequest)
     */
    readonly GraphicsQualityChangeRequest: RBXScriptSignal<(betterQuality: boolean) => void>;
    /**
     * <strong>Deprecated:</strong> This function has been superseded by <code>Object.Changed</code>, which should be used in new work instead.<br>Fires when a property of any object in the <code>DataModel</code> is changed.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/DataModel#ItemChanged)
     */
    readonly ItemChanged: RBXScriptSignal<(object: Instance, descriptor: string) => void>;
    /**
     * Fires on the client when the game finishes loading for the first time.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/DataModel#Loaded)
     */
    readonly Loaded: RBXScriptSignal<() => void>;
    /**
     * <strong>Deprecated:</strong> This function is deprecated. It is recommended to use <code>DataModel:BindToClose()</code> instead.<br>Invoked before the game is shut down. When this callback returns, or the timeout period is hit, the game finishes shutting down.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/DataModel#OnClose)
     */
    OnClose: (() => unknown) | undefined;
}
/**
 * The abstract class for settings database classes.
 *
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/GenericSettings)
 */
interface GenericSettings<S = unknown> extends ServiceProvider<S> {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_GenericSettings: unique symbol;
}
/**
 * A singleton object that houses basic user settings, which persist across all games on Roblox.
 *
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/UserSettings)
 */
interface UserSettings extends GenericSettings<{
    UserGameSettings: UserGameSettings;
}> {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_UserSettings: unique symbol;
    /**
     * Returns true if the specified user feature is enabled. This will throw an error if the user feature does not exist.
     * @param this A singleton object that houses basic user settings, which persist across all games on Roblox.
     * @param name
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/UserSettings#IsUserFeatureEnabled)
     */
    IsUserFeatureEnabled(this: UserSettings, name: string): boolean;
    /**
     * Erases the saved state of the UserSettings, and restores its default values.
     * @param this A singleton object that houses basic user settings, which persist across all games on Roblox.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/UserSettings#Reset)
     */
    Reset(this: UserSettings): void;
}
/**
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/ServiceVisibilityService)
 */
interface ServiceVisibilityService extends Instance {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_ServiceVisibilityService: unique symbol;
}
/**
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/SessionService)
 */
interface SessionService extends Instance {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_SessionService: unique symbol;
}
/**
 * Provides a global registry of named <code>SharedTable</code> objects.
 *
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/SharedTableRegistry)
 */
interface SharedTableRegistry extends Instance {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_SharedTableRegistry: unique symbol;
    /**
     * Gets the registered <code>SharedTable</code> with the specified name.
     * @param this Provides a global registry of named <code>SharedTable</code> objects.
     * @param name The name of the registered <code>SharedTable</code>.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/SharedTableRegistry#GetSharedTable)
     */
    GetSharedTable(this: SharedTableRegistry, name: string): SharedTable;
    /**
     * Registers the provided <code>SharedTable</code> with the specified name.
     * @param this Provides a global registry of named <code>SharedTable</code> objects.
     * @param name The name of the registered <code>SharedTable</code>.
     * @param st The <code>SharedTable</code> object to register, or <code>nil</code> to unregister any previously registered <code>SharedTable</code> object.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/SharedTableRegistry#SetSharedTable)
     */
    SetSharedTable(this: SharedTableRegistry, name: string, st?: SharedTable): void;
}
/**
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/ShorelineUpgraderService)
 */
interface ShorelineUpgraderService extends Instance {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_ShorelineUpgraderService: unique symbol;
}
/**
 * Changes the default appearance of the experience's sky.
 *
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Sky)
 */
interface Sky extends Instance {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_Sky: unique symbol;
    /**
     * Sets whether the sun, moon, and stars will show.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Sky#CelestialBodiesShown)
     */
    CelestialBodiesShown: boolean;
    /**
     * The perceived angular size of the moon while using this skybox, in degrees.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Sky#MoonAngularSize)
     */
    MoonAngularSize: number;
    /**
     * The texture of the moon while using this skybox.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Sky#MoonTextureId)
     */
    MoonTextureId: ContentId;
    /**
     * The URL link to a picture for the back surface of the sky.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Sky#SkyboxBk)
     */
    SkyboxBk: ContentId;
    /**
     * Asset ID for the bottom surface of the skybox.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Sky#SkyboxDn)
     */
    SkyboxDn: ContentId;
    /**
     * Asset ID for the front surface of the skybox.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Sky#SkyboxFt)
     */
    SkyboxFt: ContentId;
    /**
     * Asset ID for the left surface of the skybox.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Sky#SkyboxLf)
     */
    SkyboxLf: ContentId;
    /**
     * Asset ID for the right surface of the skybox.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Sky#SkyboxRt)
     */
    SkyboxRt: ContentId;
    /**
     * Asset ID for the top surface of the skybox.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Sky#SkyboxUp)
     */
    SkyboxUp: ContentId;
    /**
     * How many stars are shown in the skybox.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Sky#StarCount)
     */
    StarCount: number;
    /**
     * The perceived angular size of the sun while using this skybox, in degrees.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Sky#SunAngularSize)
     */
    SunAngularSize: number;
    /**
     * The texture of the sun while using this skybox.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Sky#SunTextureId)
     */
    SunTextureId: ContentId;
}
/**
 * A particle emitter with the visual aesthetic of smoke.
 *
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Smoke)
 */
interface Smoke extends Instance {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_Smoke: unique symbol;
    /**
     * Determines the color of the smoke particles.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Smoke#Color)
     */
    Color: Color3;
    /**
     * Determines whether smoke particles emit.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Smoke#Enabled)
     */
    Enabled: boolean;
    /**
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Smoke#LocalTransparencyModifier)
     */
    LocalTransparencyModifier: number;
    /**
     * Determines how opaque smoke particles render.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Smoke#Opacity)
     */
    Opacity: number;
    /**
     * Determines the velocity of the smoke particles.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Smoke#RiseVelocity)
     */
    RiseVelocity: number;
    /**
     * Determines the size of newly emit smoke particles.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Smoke#Size)
     */
    Size: number;
    /**
     * Value between 0-1 that controls the speed of the particle effect.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Smoke#TimeScale)
     */
    TimeScale: number;
}
/**
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/SmoothVoxelsUpgraderService)
 */
interface SmoothVoxelsUpgraderService extends Instance {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_SmoothVoxelsUpgraderService: unique symbol;
}
/**
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/SnippetService)
 */
interface SnippetService extends Instance {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_SnippetService: unique symbol;
}
/**
 * Facilitates social functions that impact relationships made on the Roblox platform.
 *
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/SocialService)
 */
interface SocialService extends Instance {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_SocialService: unique symbol;
    /**
     * Hides the calling player's self view.
     * @param this Facilitates social functions that impact relationships made on the Roblox platform.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/SocialService#HideSelfView)
     */
    HideSelfView(this: SocialService): void;
    /**
     * Prompts the given <code>Player</code> with the invite screen.
     * @param this Facilitates social functions that impact relationships made on the Roblox platform.
     * @param player The <code>Player</code> to prompt with the invite popup.
     * @param experienceInviteOptions Optional <code>ExperienceInviteOptions</code> object for customizing the prompt.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/SocialService#PromptGameInvite)
     */
    PromptGameInvite(this: SocialService, player: Instance, experienceInviteOptions?: Instance): void;
    /**
     * Prompts the given <code>Player</code> with the phone book.
     * @param this Facilitates social functions that impact relationships made on the Roblox platform.
     * @param player The player to prompt with the phone book.
     * @param tag String to help differentiate between various phone book "entry points" or similar. For example, you can pass a string defining what region of an experience the calling player's character is currently in.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/SocialService#PromptPhoneBook)
     */
    PromptPhoneBook(this: SocialService, player: Instance, tag: string): void;
    /**
     * Shows the calling player's self view.
     * @param this Facilitates social functions that impact relationships made on the Roblox platform.
     * @param selfViewPosition The position to place the self view .
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/SocialService#ShowSelfView)
     */
    ShowSelfView(this: SocialService, selfViewPosition?: CastsToEnum<Enum.SelfViewPosition>): void;
    /**
     * Indicates whether the given <code>Player</code> can invite other players to a call.
     * @param this Facilitates social functions that impact relationships made on the Roblox platform.
     * @param player The <code>Player</code> instance of the player potentially sending a call invite.
     * @returns Whether the specified player can send a call invite.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/SocialService#CanSendCallInviteAsync)
     */
    CanSendCallInviteAsync(this: SocialService, player: Instance): boolean;
    /**
     * Indicates whether the given <code>Player</code> can invite other players.
     * @param this Facilitates social functions that impact relationships made on the Roblox platform.
     * @param player The <code>Player</code> instance of the player potentially sending an invite.
     * @param recipientId Optional <code>Player.UserId</code> of the potential <strong>recipient</strong>, used to check whether the sender can invite that specific recipient.
     * @returns Whether the specified player can send an invite.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/SocialService#CanSendGameInviteAsync)
     */
    CanSendGameInviteAsync(this: SocialService, player: Instance, recipientId?: number): boolean;
    /**
     * Fires when a player's call invite state changes.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/SocialService#CallInviteStateChanged)
     */
    readonly CallInviteStateChanged: RBXScriptSignal<(player: Instance, inviteState: Enum.InviteState) => void>;
    /**
     * Fires when a player closes an invite prompt.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/SocialService#GameInvitePromptClosed)
     */
    readonly GameInvitePromptClosed: RBXScriptSignal<(senderPlayer: Player, recipientIds: Array<number>) => void>;
    /**
     * Fires when a player closes the phone book prompt.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/SocialService#PhoneBookPromptClosed)
     */
    readonly PhoneBookPromptClosed: RBXScriptSignal<(player: Instance) => void>;
    /**
     * Callback for when a call is placed from the phone book.
     * @param tag String to help differentiate between various phone book entry points.
     * @param callParticipantIds Array containing all of the players involved in the call. The caller will always be the first player in the array.
     * @returns Table including the <code>PlaceId</code> and <code>ReservedServerAccessCode</code> keys whose values are the <code>DataModel.PlaceId</code> and the server access code returned by <code>TeleportService:ReserveServer()</code>, respectively.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/SocialService#OnCallInviteInvoked)
     */
    OnCallInviteInvoked: ((tag: string, callParticipantIds: Array<unknown>) => Instance) | undefined;
}
/**
 * An object that emits sound. This object can be placed within a <code>BasePart</code> or <code>Attachment</code> to emit a sound from a particular position within a place or world, or it can be attached elsewhere to play the sound at a constant volume throughout the entire place.
 *
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Sound)
 */
interface Sound extends Instance {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_Sound: unique symbol;
    /**
     * <strong>Deprecated:</strong> This property has deprecated in favor of <code>Sound.RollOffMinDistance</code> and <code>Sound.RollOffMaxDistance</code> which should be used instead in new work.<br>The minimum distance, in studs, at which a 3D <code>Sound</code> (direct child of a <code>BasePart</code> or <code>Attachment</code>) will begin to attenuate (decrease in volume).
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Sound#EmitterSize)
     */
    EmitterSize: number;
    /**
     * This property is <code>true</code> when the <code>Sound</code> has loaded from Roblox servers and is ready to play.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Sound#IsLoaded)
     */
    readonly IsLoaded: boolean;
    /**
     * Read-only property which returns <code>true</code> when the <code>Sound</code> is not playing.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Sound#IsPaused)
     */
    readonly IsPaused: boolean;
    /**
     * Read-only property which returns <code>true</code> when the <code>Sound</code> is playing.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Sound#IsPlaying)
     */
    readonly IsPlaying: boolean;
    /**
     * A range denoting a desired loop start and loop end within the <code>PlaybackRegion</code>, in seconds.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Sound#LoopRegion)
     */
    LoopRegion: NumberRange;
    /**
     * Sets whether or not the <code>Sound</code> repeats once it has finished playing.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Sound#Looped)
     */
    Looped: boolean;
    /**
     * <strong>Deprecated:</strong> This property has deprecated in favor of <code>Sound.RollOffMinDistance</code> and <code>Sound.RollOffMaxDistance</code> which should be used instead in new work.<br>The maximum distance, in studs, a client's listener can be from the <code>Sound\s</code> origin and still hear it. Only applies to Sounds parented to a <code>Part</code> or <code>Attachment</code> (3D sounds).
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Sound#MaxDistance)
     */
    MaxDistance: number;
    /**
     * <strong>Deprecated:</strong> MinDistance has been superseded by <code>Sound.EmitterSize</code>, whose name better describes this properties behavior.<br>The minimum distance at which a 3D <code>Sound</code> (direct child of a <code>BasePart</code> or <code>Attachment</code>) will begin to attenuate. Effectively, the emitter size.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Sound#MinDistance)
     */
    MinDistance: number;
    /**
     * <strong>Deprecated:</strong> This property has been deprecated in favor of <code>Sound.PlaybackSpeed</code> whose name suits the behavior better.<br>Sets how high pitched and fast a <code>Sound</code> is when it is played. The greater the integer, the higher and faster the <code>Sound</code> is.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Sound#Pitch)
     */
    Pitch: number;
    /**
     * When <code>true</code>, the <code>Sound</code> will play when it is removed from the experience.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Sound#PlayOnRemove)
     */
    PlayOnRemove: boolean;
    /**
     * A number between <code>0</code> and <code>1000</code> indicating how loud the <code>Sound</code> is currently playing back.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Sound#PlaybackLoudness)
     */
    readonly PlaybackLoudness: number;
    /**
     * A range denoting a desired start and stop time within the <code>TimeLength</code>, in seconds.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Sound#PlaybackRegion)
     */
    PlaybackRegion: NumberRange;
    /**
     * If <code>true</code>, this property gives your <code>Sound</code> access to the <code>PlaybackRegion</code> and <code>LoopRegion</code> properties which can more-accurately control its playback.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Sound#PlaybackRegionsEnabled)
     */
    PlaybackRegionsEnabled: boolean;
    /**
     * Determines the speed at which a <code>Sound</code> will play, with higher values causing the sound to play faster and at a higher pitch.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Sound#PlaybackSpeed)
     */
    PlaybackSpeed: number;
    /**
     * Indicates whether the <code>Sound</code> is currently playing.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Sound#Playing)
     */
    Playing: boolean;
    /**
     * The maximum distance, in studs, a client's listener can be from the sound's origin and still hear it. Only applies to <code>Sounds</code> parented to a <code>BasePart</code> or <code>Attachment</code>.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Sound#RollOffMaxDistance)
     */
    RollOffMaxDistance: number;
    /**
     * The minimum distance, in studs, at which a <code>Sound</code> which is parented to a <code>BasePart</code> or <code>Attachment</code> will begin to attenuate (decrease in volume).
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Sound#RollOffMinDistance)
     */
    RollOffMinDistance: number;
    /**
     * Controls how the volume of a <code>Sound</code> which is parented to a <code>BasePart</code> or <code>Attachment</code> attenuates (fades out) as the distance between the listener and parent changes.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Sound#RollOffMode)
     */
    RollOffMode: Enum.RollOffMode;
    /**
     * The <code>SoundGroup</code> that is linked to this <code>Sound</code>.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Sound#SoundGroup)
     */
    SoundGroup: SoundGroup | undefined;
    /**
     * Content ID of the sound file to associate with the <code>Sound</code>.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Sound#SoundId)
     */
    SoundId: ContentId;
    /**
     * The length of the <code>Sound</code> in seconds.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Sound#TimeLength)
     */
    readonly TimeLength: number;
    /**
     * Progress of the <code>Sound</code> in seconds. Can be changed to move the playback position of the <code>Sound</code> both before and during playback.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Sound#TimePosition)
     */
    TimePosition: number;
    /**
     * The volume of the <code>Sound</code>.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Sound#Volume)
     */
    Volume: number;
    /**
     * Pauses playback of the <code>Sound</code> if it is playing.
     * @param this An object that emits sound. This object can be placed within a <code>BasePart</code> or <code>Attachment</code> to emit a sound from a particular position within a place or world, or it can be attached elsewhere to play the sound at a constant volume throughout the entire place.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Sound#Pause)
     */
    Pause(this: Sound): void;
    /**
     * Plays the <code>Sound</code>.
     * @param this An object that emits sound. This object can be placed within a <code>BasePart</code> or <code>Attachment</code> to emit a sound from a particular position within a place or world, or it can be attached elsewhere to play the sound at a constant volume throughout the entire place.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Sound#Play)
     */
    Play(this: Sound): void;
    /**
     * Resumes the <code>Sound</code>.
     * @param this An object that emits sound. This object can be placed within a <code>BasePart</code> or <code>Attachment</code> to emit a sound from a particular position within a place or world, or it can be attached elsewhere to play the sound at a constant volume throughout the entire place.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Sound#Resume)
     */
    Resume(this: Sound): void;
    /**
     * Stops the <code>Sound</code>.
     * @param this An object that emits sound. This object can be placed within a <code>BasePart</code> or <code>Attachment</code> to emit a sound from a particular position within a place or world, or it can be attached elsewhere to play the sound at a constant volume throughout the entire place.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Sound#Stop)
     */
    Stop(this: Sound): void;
    /**
     * Fires whenever the <code>Sound</code> loops.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Sound#DidLoop)
     */
    readonly DidLoop: RBXScriptSignal<(soundId: string, numOfTimesLooped: number) => void>;
    /**
     * Fires when the <code>Sound</code> has completed playback and stopped.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Sound#Ended)
     */
    readonly Ended: RBXScriptSignal<(soundId: string) => void>;
    /**
     * Fires when the <code>Sound</code> is loaded.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Sound#Loaded)
     */
    readonly Loaded: RBXScriptSignal<(soundId: string) => void>;
    /**
     * Fires whenever the <code>Sound</code> is paused using <code>Pause()</code>.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Sound#Paused)
     */
    readonly Paused: RBXScriptSignal<(soundId: string) => void>;
    /**
     * Fires whenever the <code>Sound</code> is played using <code>Play()</code>.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Sound#Played)
     */
    readonly Played: RBXScriptSignal<(soundId: string) => void>;
    /**
     * Fires when the <code>Sound</code> is resumed using <code>Resume()</code>.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Sound#Resumed)
     */
    readonly Resumed: RBXScriptSignal<(soundId: string) => void>;
    /**
     * Fires when the <code>Sound</code> is stopped through using <code>Stop()</code>.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Sound#Stopped)
     */
    readonly Stopped: RBXScriptSignal<(soundId: string) => void>;
}
/**
 * SoundEffect is the base class that all other sound effects derive from. A SoundEffect can be applied to either a <code>Sound</code> or <code>SoundGroup</code> by being parented to either.
 *
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/SoundEffect)
 */
interface SoundEffect extends Instance {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_SoundEffect: unique symbol;
    /**
     * Toggles the effect on and off.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/SoundEffect#Enabled)
     */
    Enabled: boolean;
    /**
     * Determines the order the effect will be applied in relation to other effects.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/SoundEffect#Priority)
     */
    Priority: number;
}
/**
 * Makes audio more voluminous by simulating multiple voices playing the same part.
 *
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/ChorusSoundEffect)
 */
interface ChorusSoundEffect extends SoundEffect {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_ChorusSoundEffect: unique symbol;
    /**
     * Controls how intense the effect is.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/ChorusSoundEffect#Depth)
     */
    Depth: number;
    /**
     * Percentage of the original sound that will be applied to the filter.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/ChorusSoundEffect#Mix)
     */
    Mix: number;
    /**
     * How frequently the pitch variation changes.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/ChorusSoundEffect#Rate)
     */
    Rate: number;
}
/**
 * Adjusts the dynamic range of audio.
 *
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/CompressorSoundEffect)
 */
interface CompressorSoundEffect extends SoundEffect {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_CompressorSoundEffect: unique symbol;
    /**
     * The time the effect takes to become active after its Threshold has be reached.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/CompressorSoundEffect#Attack)
     */
    Attack: number;
    /**
     * The overall amplification applied to the effectâ€™s Sound or SoundGroup after attenuation of sounds above the threshold.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/CompressorSoundEffect#GainMakeup)
     */
    GainMakeup: number;
    /**
     * The ratio between the <code>CompressorSoundEffect.SideChain</code> sound effect, and this sound effect.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/CompressorSoundEffect#Ratio)
     */
    Ratio: number;
    /**
     * The time the effect takes to become inactive after its sound is below the Threshold.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/CompressorSoundEffect#Release)
     */
    Release: number;
    /**
     * Applies a ducking effect to the compressor sound effect. The behavior of the sidechain depends on the <code>Sound</code> or <code>SoundGroup</code> linked to it.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/CompressorSoundEffect#SideChain)
     */
    SideChain?: Sound | SoundGroup;
    /**
     * Volume level at which point the compressor applies its effect.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/CompressorSoundEffect#Threshold)
     */
    Threshold: number;
}
/**
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/CustomSoundEffect)
 */
interface CustomSoundEffect extends SoundEffect {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_CustomSoundEffect: unique symbol;
}
/**
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/AssetSoundEffect)
 */
interface AssetSoundEffect extends CustomSoundEffect {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_AssetSoundEffect: unique symbol;
}
/**
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/ChannelSelectorSoundEffect)
 */
interface ChannelSelectorSoundEffect extends CustomSoundEffect {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_ChannelSelectorSoundEffect: unique symbol;
    /**
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/ChannelSelectorSoundEffect#Channel)
     */
    Channel: number;
}
/**
 * Distorts audio, making it sound fuzzier and overdriven.
 *
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/DistortionSoundEffect)
 */
interface DistortionSoundEffect extends SoundEffect {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_DistortionSoundEffect: unique symbol;
    /**
     * The intensity of the effect.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/DistortionSoundEffect#Level)
     */
    Level: number;
}
/**
 * Adds delayed repetitions of a sound with diminishing volume.
 *
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/EchoSoundEffect)
 */
interface EchoSoundEffect extends SoundEffect {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_EchoSoundEffect: unique symbol;
    /**
     * The amount of time between echoes.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/EchoSoundEffect#Delay)
     */
    Delay: number;
    /**
     * The output volume of the original sound.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/EchoSoundEffect#DryLevel)
     */
    DryLevel: number;
    /**
     * The echo decay every time the echo plays.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/EchoSoundEffect#Feedback)
     */
    Feedback: number;
    /**
     * The output volume of the echoed effect.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/EchoSoundEffect#WetLevel)
     */
    WetLevel: number;
}
/**
 * Controls the volume of incoming audio across three frequency ranges.
 *
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/EqualizerSoundEffect)
 */
interface EqualizerSoundEffect extends SoundEffect {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_EqualizerSoundEffect: unique symbol;
    /**
     * The output volume of frequencies greater than 4000 Hz.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/EqualizerSoundEffect#HighGain)
     */
    HighGain: number;
    /**
     * The output volume of frequencies lower than 400 Hz.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/EqualizerSoundEffect#LowGain)
     */
    LowGain: number;
    /**
     * The output volume of frequencies between 400 and 4000 Hz.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/EqualizerSoundEffect#MidGain)
     */
    MidGain: number;
}
/**
 * Creates a sweeping or swooshing effect on a sound.
 *
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/FlangeSoundEffect)
 */
interface FlangeSoundEffect extends SoundEffect {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_FlangeSoundEffect: unique symbol;
    /**
     * The intensity of the effect.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/FlangeSoundEffect#Depth)
     */
    Depth: number;
    /**
     * Percentage of the original sound that will be applied to the filter.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/FlangeSoundEffect#Mix)
     */
    Mix: number;
    /**
     * The frequency that the effect oscillates at.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/FlangeSoundEffect#Rate)
     */
    Rate: number;
}
/**
 * Adjusts the pitch of a sound without changing its playback speed.
 *
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/PitchShiftSoundEffect)
 */
interface PitchShiftSoundEffect extends SoundEffect {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_PitchShiftSoundEffect: unique symbol;
    /**
     * The percentage to shift the original pitch.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/PitchShiftSoundEffect#Octave)
     */
    Octave: number;
}
/**
 * Reverberates audio, simulating the effect of bouncing off walls in a room.
 *
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/ReverbSoundEffect)
 */
interface ReverbSoundEffect extends SoundEffect {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_ReverbSoundEffect: unique symbol;
    /**
     * Sets how long it takes for the reverberating echoes to fade out completely.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/ReverbSoundEffect#DecayTime)
     */
    DecayTime: number;
    /**
     * Controls how many reflections are generated.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/ReverbSoundEffect#Density)
     */
    Density: number;
    /**
     * Controls how smooth and reflective the simulated surfaces are.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/ReverbSoundEffect#Diffusion)
     */
    Diffusion: number;
    /**
     * The output volume of the original sound.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/ReverbSoundEffect#DryLevel)
     */
    DryLevel: number;
    /**
     * The output volume of the echoed effect.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/ReverbSoundEffect#WetLevel)
     */
    WetLevel: number;
}
/**
 * Creates a trembling effect on a sound by varying the volume of the sound up and down.
 *
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/TremoloSoundEffect)
 */
interface TremoloSoundEffect extends SoundEffect {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_TremoloSoundEffect: unique symbol;
    /**
     * Controls how much the volume will raise and lower.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/TremoloSoundEffect#Depth)
     */
    Depth: number;
    /**
     * Controls how long during one volume oscillation the effect will be active.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/TremoloSoundEffect#Duty)
     */
    Duty: number;
    /**
     * Sets how often the effect will oscillate the volume.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/TremoloSoundEffect#Frequency)
     */
    Frequency: number;
}
/**
 * A <code>SoundGroup</code> is used to manage the volume and sound effects on multiple <code>Sounds</code> at once. <code>Sounds</code> in the SoundGroup will have their volume and effects adjusted by the SoundGroup.
 *
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/SoundGroup)
 */
interface SoundGroup extends Instance {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_SoundGroup: unique symbol;
    /**
     * The volume multiplier applied to <code>Sounds</code> that are in the <code>SoundGroup</code>.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/SoundGroup#Volume)
     */
    Volume: number;
}
/**
 * A service that determines various aspects of how <code>Sounds</code> play in the experience.
 *
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/SoundService)
 */
interface SoundService extends Instance {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_SoundService: unique symbol;
    /**
     * The ambient sound environment preset used by <code>SoundService</code>.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/SoundService#AmbientReverb)
     */
    AmbientReverb: Enum.ReverbType;
    /**
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/SoundService#CharacterSoundsUseNewApi)
     */
    get CharacterSoundsUseNewApi(): Enum.RolloutState;
    /**
     * The number of studs to be considered a meter by <code>SoundService</code> when calculating volume attenuation of <code>Sounds</code> parented to a <code>BasePart</code> or <code>Attachment</code>.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/SoundService#DistanceFactor)
     */
    DistanceFactor: number;
    /**
     * Degree to which the pitch of a <code>Sound</code> varies due to the Doppler effect.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/SoundService#DopplerScale)
     */
    DopplerScale: number;
    /**
     * Sets whether <code>Sound</code> playback from a client will replicate to the server.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/SoundService#RespectFilteringEnabled)
     */
    RespectFilteringEnabled: boolean;
    /**
     * Sets how fast <code>Sound</code> volume attenuates.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/SoundService#RolloffScale)
     */
    RolloffScale: number;
    /**
     * Returns the current <code>SoundService</code> listener type and what is set as the listener.
     * @param this A service that determines various aspects of how <code>Sounds</code> play in the experience.
     * @returns The current <code>ListenerType</code> and what the listener has been set to. Listener can be a <code>BasePart</code>, a <code>CFrame</code>, or <code>nil</code>.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/SoundService#GetListener)
     */
    GetListener(this: SoundService): LuaTuple<[
        Enum.ListenerType.Camera,
        undefined
    ] | [
        Enum.ListenerType.CFrame,
        CFrame
    ] | [
        Enum.ListenerType.ObjectCFrame,
        BasePart
    ] | [
        Enum.ListenerType.ObjectPosition,
        BasePart
    ]>;
    /**
     * Plays a <code>Sound</code> locally, meaning the sound will only be heard by the client calling this method, regardless of where it's parented to.
     * @param this A service that determines various aspects of how <code>Sounds</code> play in the experience.
     * @param sound The <code>Sound</code> to be played.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/SoundService#PlayLocalSound)
     */
    PlayLocalSound(this: SoundService, sound: Sound): void;
    /**
     * Sets the listener for the <code>SoundService</code>.
     * @param this A service that determines various aspects of how <code>Sounds</code> play in the experience.
     * @param listenerType The <code>ListenerType</code> of the listener.
     * @param listener Dependent on the <code>ListenerType</code>. Use a <code>BasePart</code> for <code>ListenerType.ObjectPosition</code> or <code>ListenerType.ObjectCFrame</code>, a <code>CFrame</code> for <code>ListenerType.CFrame</code>, or <code>nil</code> for <code>ListenerType.Camera</code>.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/SoundService#SetListener)
     */
    SetListener(this: SoundService, listenerType: CastsToEnum<Enum.ListenerType.Camera>): void;
    SetListener(this: SoundService, listenerType: CastsToEnum<Enum.ListenerType.CFrame>, cframe: CFrame): void;
    SetListener(this: SoundService, listenerType: CastsToEnum<Enum.ListenerType.ObjectCFrame>, basePart: BasePart): void;
    SetListener(this: SoundService, listenerType: CastsToEnum<Enum.ListenerType.ObjectPosition>, basePart: BasePart): void;
}
/**
 * A particle emitter with the visual aesthetic of sparkles.
 *
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Sparkles)
 */
interface Sparkles extends Instance {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_Sparkles: unique symbol;
    /**
     * Determines the color of the sparkle particles.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Sparkles#Color)
     */
    Color: Color3;
    /**
     * Determines whether sparkles are emit.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Sparkles#Enabled)
     */
    Enabled: boolean;
    /**
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Sparkles#LocalTransparencyModifier)
     */
    LocalTransparencyModifier: number;
    /**
     * Determines the color of the sparkle particles.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Sparkles#SparkleColor)
     */
    SparkleColor: Color3;
    /**
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Sparkles#TimeScale)
     */
    TimeScale: number;
}
/**
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/StackFrame)
 */
interface StackFrame extends Instance {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_StackFrame: unique symbol;
}
/**
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/StartPageService)
 */
interface StartPageService extends Instance {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_StartPageService: unique symbol;
}
/**
 * If the game allows gear, StarterGear contains all of a player's appropriate gear. Whenever the player's character spawns, all of the contents of that player's StarterGear will get copied into the player's <code>Backpack</code>.
 *
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/StarterGear)
 */
interface StarterGear extends Instance {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_StarterGear: unique symbol;
}
/**
 * A service-level container whose contents are copied into each player's <code>Backpack</code> when the player spawns. It is generally used to hold <code>Tools</code>, but is sometimes used to hold <code>LocalScripts</code> to ensure that each player gets a copy.
 *
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/StarterPack)
 */
interface StarterPack extends Instance {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_StarterPack: unique symbol;
}
/**
 * A service which allows the defaults of properties in the <code>Player</code> object to be set.
 *
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/StarterPlayer)
 */
interface StarterPlayer extends Instance {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_StarterPlayer: unique symbol;
    /**
     * Describes the current game's permission levels regarding custom avatar animations from the website.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/StarterPlayer#AllowCustomAnimations)
     */
    get AllowCustomAnimations(): boolean;
    /**
     * Sets whether the character will automatically jump when hitting an obstacle on a mobile device.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/StarterPlayer#AutoJumpEnabled)
     */
    AutoJumpEnabled: boolean;
    /**
     * The maximum distance the player's default camera is allowed to zoom out in studs.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/StarterPlayer#CameraMaxZoomDistance)
     */
    CameraMaxZoomDistance: number;
    /**
     * The minimum distance in studs the player's default camera is allowed to zoom in.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/StarterPlayer#CameraMinZoomDistance)
     */
    CameraMinZoomDistance: number;
    /**
     * Changes the default camera's mode to either first or third person.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/StarterPlayer#CameraMode)
     */
    CameraMode: Enum.CameraMode;
    /**
     * Determines the starting value of <code>Humanoid.JumpHeight</code> for <code>Player.Character</code>.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/StarterPlayer#CharacterJumpHeight)
     */
    CharacterJumpHeight: number;
    /**
     * Determines the starting value of <code>Humanoid.JumpPower</code> for <code>Player.Character</code>.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/StarterPlayer#CharacterJumpPower)
     */
    CharacterJumpPower: number;
    /**
     * Determines the starting value of <code>Humanoid.MaxSlopeAngle</code> for <code>Player.Character</code>.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/StarterPlayer#CharacterMaxSlopeAngle)
     */
    CharacterMaxSlopeAngle: number;
    /**
     * Determines the starting state of <code>Humanoid.UseJumpPower</code> for <code>Player.Character</code>.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/StarterPlayer#CharacterUseJumpPower)
     */
    CharacterUseJumpPower: boolean;
    /**
     * Determines the starting value of <code>Humanoid.WalkSpeed</code> for <code>Player.Character</code>.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/StarterPlayer#CharacterWalkSpeed)
     */
    CharacterWalkSpeed: number;
    /**
     * Sets how the default camera handles objects between the camera and the player.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/StarterPlayer#DevCameraOcclusionMode)
     */
    DevCameraOcclusionMode: Enum.DevCameraOcclusionMode;
    /**
     * Lets developer overwrite the default camera mode for each player if the player is on a computer.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/StarterPlayer#DevComputerCameraMovementMode)
     */
    DevComputerCameraMovementMode: Enum.DevComputerCameraMovementMode;
    /**
     * Lets developer overwrite the player's movement mode if the player is on a computer.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/StarterPlayer#DevComputerMovementMode)
     */
    DevComputerMovementMode: Enum.DevComputerMovementMode;
    /**
     * Lets developer overwrite the default camera movement mode for each player if the player is on a mobile device.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/StarterPlayer#DevTouchCameraMovementMode)
     */
    DevTouchCameraMovementMode: Enum.DevTouchCameraMovementMode;
    /**
     * Lets developer overwrite the player's movement mode if the player is on a touch device.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/StarterPlayer#DevTouchMovementMode)
     */
    DevTouchMovementMode: Enum.DevTouchMovementMode;
    /**
     * Determines if a player can toggle mouse lock by default.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/StarterPlayer#EnableMouseLockOption)
     */
    EnableMouseLockOption: boolean;
    /**
     * Sets the distance at which this player will see other <code>Humanoid</code> health bars. If set to 0, the health bars will not be displayed.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/StarterPlayer#HealthDisplayDistance)
     */
    HealthDisplayDistance: number;
    /**
     * Whether or not the appearance of a player's character should be loaded.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/StarterPlayer#LoadCharacterAppearance)
     */
    LoadCharacterAppearance: boolean;
    /**
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/StarterPlayer#LuaCharacterController)
     */
    LuaCharacterController: Enum.CharacterControlMode;
    /**
     * Sets the distance at which this player will see other <code>Humanoid</code> names.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/StarterPlayer#NameDisplayDistance)
     */
    NameDisplayDistance: number;
    /**
     * Determines if user-owned emotes are loaded when loading avatars.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/StarterPlayer#UserEmotesEnabled)
     */
    UserEmotesEnabled: boolean;
}
/**
 * A container for objects to be copied to a Player's PlayerScripts when they join a game.
 *
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/StarterPlayerScripts)
 */
interface StarterPlayerScripts extends Instance {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_StarterPlayerScripts: unique symbol;
}
/**
 * Stores instances to be parented to a player's character when it spawns.
 *
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/StarterCharacterScripts)
 */
interface StarterCharacterScripts extends StarterPlayerScripts {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_StarterCharacterScripts: unique symbol;
}
/**
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/StartupMessageService)
 */
interface StartupMessageService extends Instance {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_StartupMessageService: unique symbol;
}
/**
 * Performance metrics for a game.
 *
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Stats)
 */
interface Stats extends Instance {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_Stats: unique symbol;
    /**
     * A measurement of how many parts are currently in contact with one another.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Stats#ContactsCount)
     */
    readonly ContactsCount: number;
    /**
     * In a networked game, this describes roughly how many kilobytes of data are being received by the current instance, per second.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Stats#DataReceiveKbps)
     */
    readonly DataReceiveKbps: number;
    /**
     * In a networked game, this describes roughly how many kilobytes of data are being sent by the current instance, per second.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Stats#DataSendKbps)
     */
    readonly DataSendKbps: number;
    /**
     * A measurement of how long it takes for the engine to process all tasks required to render a frame.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Stats#FrameTime)
     */
    readonly FrameTime: number;
    /**
     * A measurement of the total amount of time it takes for the server to update its Task Scheduler jobs in seconds.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Stats#HeartbeatTime)
     */
    readonly HeartbeatTime: number;
    /**
     * <strong>Deprecated:</strong> <br>A measurement of the total amount of time it takes long it takes for Roblox to update all of its Task Scheduler jobs, in milliseconds.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Stats#HeartbeatTimeMs)
     */
    readonly HeartbeatTimeMs: number;
    /**
     * A measurement of how many <code>Instance</code> are currently in memory.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Stats#InstanceCount)
     */
    readonly InstanceCount: number;
    /**
     * A measurement of how many physically simulated components are currently moving in the game world.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Stats#MovingPrimitivesCount)
     */
    readonly MovingPrimitivesCount: number;
    /**
     * In a networked game, this describes roughly how many kilobytes of physics data are being received by the current instance, per second.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Stats#PhysicsReceiveKbps)
     */
    readonly PhysicsReceiveKbps: number;
    /**
     * In a networked game, this describes roughly how many kilobytes of physics data are being sent by the current instance, per second.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Stats#PhysicsSendKbps)
     */
    readonly PhysicsSendKbps: number;
    /**
     * A measurement of how long it takes for the physics engine to update its current state.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Stats#PhysicsStepTime)
     */
    readonly PhysicsStepTime: number;
    /**
     * <strong>Deprecated:</strong> <br>A measurement of how long it takes for the physics engine to update its current state, in milliseconds. If this value is high, then it means the game instance is under stress from the physics simulations taking place.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Stats#PhysicsStepTimeMs)
     */
    readonly PhysicsStepTimeMs: number;
    /**
     * A measurement of how many physically simulated components currently exist in the game world.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Stats#PrimitivesCount)
     */
    readonly PrimitivesCount: number;
    /**
     * A measurement of how long it takes for the CPU to process all of its rendering tasks for a frame.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Stats#RenderCPUFrameTime)
     */
    readonly RenderCPUFrameTime: number;
    /**
     * A measurement of how long it takes for the GPU to process all of its tasks required to render a frame.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Stats#RenderGPUFrameTime)
     */
    readonly RenderGPUFrameTime: number;
    /**
     * A measurement of the number of draw calls made by the game's current scene.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Stats#SceneDrawcallCount)
     */
    readonly SceneDrawcallCount: number;
    /**
     * A measurement of the number of triangles rendered by the game's current scene.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Stats#SceneTriangleCount)
     */
    readonly SceneTriangleCount: number;
    /**
     * A measurement of the number of draw calls being made for shadows by the game's current scene.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Stats#ShadowsDrawcallCount)
     */
    readonly ShadowsDrawcallCount: number;
    /**
     * A measurement of the number of triangles rendered as shadows in the game's current scene.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Stats#ShadowsTriangleCount)
     */
    readonly ShadowsTriangleCount: number;
    /**
     * A measurement of the number of 2D draw calls made for UI elements in the game's current scene.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Stats#UI2DDrawcallCount)
     */
    readonly UI2DDrawcallCount: number;
    /**
     * A measurement of the number of triangles that are being rendered for 2D UI elements in the game's current scene.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Stats#UI2DTriangleCount)
     */
    readonly UI2DTriangleCount: number;
    /**
     * A measurement of the number of 3D draw calls made for UI elements in the game's current scene.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Stats#UI3DDrawcallCount)
     */
    readonly UI3DDrawcallCount: number;
    /**
     * A measurement of the number of triangles being rendered for 3D UI elements in the game's current scene.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Stats#UI3DTriangleCount)
     */
    readonly UI3DTriangleCount: number;
    /**
     * Returns the number of megabytes that are being consumed in the specified <code>DeveloperMemoryTag</code> category.
     * @param this Performance metrics for a game.
     * @param tag
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Stats#GetMemoryUsageMbForTag)
     */
    GetMemoryUsageMbForTag(this: Stats, tag: CastsToEnum<Enum.DeveloperMemoryTag>): number;
    /**
     * Returns the total amount of memory being consumed by the current game session, in megabytes.
     * @param this Performance metrics for a game.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Stats#GetTotalMemoryUsageMb)
     */
    GetTotalMemoryUsageMb(this: Stats): number;
}
/**
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/StreamingService)
 */
interface StreamingService extends Instance {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_StreamingService: unique symbol;
    /**
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/StreamingService#ExecuteCommandAsync)
     */
    ExecuteCommandAsync(this: StreamingService, requestId: string, commandName: string, arg: unknown): unknown;
}
/**
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/StudioAssetService)
 */
interface StudioAssetService extends Instance {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_StudioAssetService: unique symbol;
}
/**
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/StudioAttachment)
 */
interface StudioAttachment extends Instance {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_StudioAttachment: unique symbol;
    /**
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/StudioAttachment#AutoHideParent)
     */
    AutoHideParent: boolean;
    /**
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/StudioAttachment#IsArrowVisible)
     */
    IsArrowVisible: boolean;
    /**
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/StudioAttachment#Offset)
     */
    Offset: Vector2;
    /**
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/StudioAttachment#SourceAnchorPoint)
     */
    SourceAnchorPoint: Vector2;
    /**
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/StudioAttachment#TargetAnchorPoint)
     */
    TargetAnchorPoint: Vector2;
}
/**
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/StudioCallout)
 */
interface StudioCallout extends Instance {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_StudioCallout: unique symbol;
}
/**
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/StudioDeviceEmulatorService)
 */
interface StudioDeviceEmulatorService extends Instance {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_StudioDeviceEmulatorService: unique symbol;
}
/**
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/StudioObjectBase)
 */
interface StudioObjectBase extends Instance {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_StudioObjectBase: unique symbol;
}
/**
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/StudioWidget)
 */
interface StudioWidget extends StudioObjectBase {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_StudioWidget: unique symbol;
}
/**
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/StudioPublishService)
 */
interface StudioPublishService extends Instance {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_StudioPublishService: unique symbol;
}
/**
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/StudioScriptDebugEventListener)
 */
interface StudioScriptDebugEventListener extends Instance {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_StudioScriptDebugEventListener: unique symbol;
}
/**
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/StudioSdkService)
 */
interface StudioSdkService extends Instance {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_StudioSdkService: unique symbol;
}
/**
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/StudioUserService)
 */
interface StudioUserService extends Instance {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_StudioUserService: unique symbol;
}
/**
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/StudioWidgetsService)
 */
interface StudioWidgetsService extends Instance {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_StudioWidgetsService: unique symbol;
}
/**
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/StyleBase)
 */
interface StyleBase extends Instance {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_StyleBase: unique symbol;
    /**
     * @param this
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/StyleBase#GetStyleRules)
     */
    GetStyleRules(this: StyleBase): Array<Instance>;
    /**
     * @param this
     * @param rule
     * @param index
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/StyleBase#InsertStyleRule)
     */
    InsertStyleRule(this: StyleBase, rule: StyleRule, index?: number): void;
    /**
     * @param this
     * @param rules
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/StyleBase#SetStyleRules)
     */
    SetStyleRules(this: StyleBase, rules: Array<Instance>): void;
    /**
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/StyleBase#StyleRulesChanged)
     */
    readonly StyleRulesChanged: RBXScriptSignal<() => void>;
}
/**
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/StyleRule)
 */
interface StyleRule extends StyleBase {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_StyleRule: unique symbol;
    /**
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/StyleRule#Priority)
     */
    Priority: number;
    /**
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/StyleRule#Selector)
     */
    Selector: string;
    /**
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/StyleRule#SelectorError)
     */
    readonly SelectorError: string;
    /**
     * @param this
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/StyleRule#GetProperties)
     */
    GetProperties(this: StyleRule): object;
    /**
     * @param this
     * @param name
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/StyleRule#GetProperty)
     */
    GetProperty(this: StyleRule, name: string): unknown;
    /**
     * @param this
     * @param table
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/StyleRule#SetProperties)
     */
    SetProperties(this: StyleRule, table: object): void;
    /**
     * @param this
     * @param name
     * @param value
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/StyleRule#SetProperty)
     */
    SetProperty(this: StyleRule, name: string, value: unknown): void;
}
/**
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/StyleSheet)
 */
interface StyleSheet extends StyleBase {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_StyleSheet: unique symbol;
    /**
     * @param this
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/StyleSheet#GetDerives)
     */
    GetDerives(this: StyleSheet): Array<Instance>;
    /**
     * @param this
     * @param derives
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/StyleSheet#SetDerives)
     */
    SetDerives(this: StyleSheet, derives: Array<Instance>): void;
}
/**
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/StyleDerive)
 */
interface StyleDerive extends Instance {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_StyleDerive: unique symbol;
    /**
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/StyleDerive#StyleSheet)
     */
    StyleSheet: StyleSheet | undefined;
}
/**
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/StyleLink)
 */
interface StyleLink extends Instance {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_StyleLink: unique symbol;
    /**
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/StyleLink#StyleSheet)
     */
    StyleSheet: StyleSheet | undefined;
}
/**
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/StylingService)
 */
interface StylingService extends Instance {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_StylingService: unique symbol;
}
/**
 * An object that allows developers to override the appearance of a MeshPart with advanced graphics options.
 *
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/SurfaceAppearance)
 */
interface SurfaceAppearance extends Instance {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_SurfaceAppearance: unique symbol;
    /**
     * Applies a tint to your existing colormap. Set directly with color picker or programmatically with <code>Color3</code>.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/SurfaceAppearance#Color)
     */
    Color: Color3;
}
/**
 * The <code>Team</code> class represents a faction in a Roblox place. The only valid parent for a Team is in the <code>Teams</code> service.
 *
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Team)
 */
interface Team extends Instance {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_Team: unique symbol;
    /**
     * This property determines whether <code>Players</code> will be automatically placed onto the <code>Team</code> when joining. If multiple teams have this property set to true, Roblox will attempt to even the teams out when <code>Players</code> are added.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Team#AutoAssignable)
     */
    AutoAssignable: boolean;
    /**
     * <strong>Deprecated:</strong> This property is deprecated and no longer functions, it should not be used for new work.<br>Deprecated and no longer functional. Historically set whether or not <code>Player</code> character models on a team would be colored to <code>Team.TeamColor</code>.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Team#AutoColorCharacters)
     */
    AutoColorCharacters: boolean;
    /**
     * <strong>Deprecated:</strong> This property is deprecated and should not be used in new work. For more information on how to handle leaderboards and scoring please see <a href="../../../players/leaderboards.md">this tutorial</a>.<br>This property can be used to store an integer value associated with the team. This property offers no additional functionality and is not used by any game services.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Team#Score)
     */
    Score: number;
    /**
     * This property sets the color of the <code>Team</code>. Determines the <code>Player.TeamColor</code> property of players who are a member of the team. Also determines the color displayed on the player list and above player's heads.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Team#TeamColor)
     */
    TeamColor: BrickColor;
    /**
     * Returns a list of <code>Players</code> who are assigned to the <code>Team</code>. A <code>Player</code> is considered assigned if their <code>Player.Team</code> property is equal to the <code>Team</code> and <code>Player.Neutral</code> is false.
     * @param this The <code>Team</code> class represents a faction in a Roblox place. The only valid parent for a Team is in the <code>Teams</code> service.
     * @returns An array of <code>Players</code> in the <code>Team</code>.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Team#GetPlayers)
     */
    GetPlayers(this: Team): Array<Player>;
    /**
     * Fires whenever a <code>Player</code> is assigned to the <code>Team</code>. A player is considered assigned if their <code>Player.Team</code> property is equal to the <code>Team</code> and <code>Player.Neutral</code> is false.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Team#PlayerAdded)
     */
    readonly PlayerAdded: RBXScriptSignal<(player: Player) => void>;
    /**
     * Fires whenever a <code>Player</code> is removed from a <code>Team</code>. This can be due to the <code>Player</code> leaving the game, <code>Player.Neutral</code> being set to true or the <code>Player</code> joining a different team.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Team#PlayerRemoved)
     */
    readonly PlayerRemoved: RBXScriptSignal<(player: Player) => void>;
}
/**
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/TeamCreateData)
 */
interface TeamCreateData extends Instance {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_TeamCreateData: unique symbol;
}
/**
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/TeamCreatePublishService)
 */
interface TeamCreatePublishService extends Instance {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_TeamCreatePublishService: unique symbol;
}
/**
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/TeamCreateService)
 */
interface TeamCreateService extends Instance {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_TeamCreateService: unique symbol;
}
/**
 * The Teams service holds a game's <code>Team</code> objects. <code>Team</code> objects must be parented to the Teams service.
 *
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Teams)
 */
interface Teams extends Instance {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_Teams: unique symbol;
    /**
     * Returns a table containing the game's <code>Team</code> objects. Will only return <code>Team</code> objects that are parented to the <code>Teams</code> service.
     * @param this The Teams service holds a game's <code>Team</code> objects. <code>Team</code> objects must be parented to the Teams service.
     * @returns An array of <code>Teams</code> in the game.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Teams#GetTeams)
     */
    GetTeams(this: Teams): Array<Team>;
    /**
     * <strong>Deprecated:</strong> This function has been deprecated and no longer functions correctly. It should not be used. Developers should instead implement their own team sorting systems.<br>Evens the number of people on each team. This function does not work correctly and should not be used.
     * @param this The Teams service holds a game's <code>Team</code> objects. <code>Team</code> objects must be parented to the Teams service.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Teams#RebalanceTeams)
     */
    RebalanceTeams(this: Teams): void;
}
/**
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/TelemetryService)
 */
interface TelemetryService extends Instance {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_TelemetryService: unique symbol;
}
/**
 * The return structure of the <code>TeleportAsync</code> function call.
 *
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/TeleportAsyncResult)
 */
interface TeleportAsyncResult extends Instance {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_TeleportAsyncResult: unique symbol;
    /**
     * The private server ID of the reserved server that the players are being teleported to.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/TeleportAsyncResult#PrivateServerId)
     */
    readonly PrivateServerId: string;
    /**
     * The access code of the reserved server that the players are being teleported to.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/TeleportAsyncResult#ReservedServerAccessCode)
     */
    readonly ReservedServerAccessCode: string;
}
/**
 * Optional input arguments to the <code>TeleportService:TeleportAsync()</code> function.
 *
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/TeleportOptions)
 */
interface TeleportOptions extends Instance {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_TeleportOptions: unique symbol;
    /**
     * The reserved server access code that indicates the reserved server that the teleport should be to.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/TeleportOptions#ReservedServerAccessCode)
     */
    ReservedServerAccessCode: string;
    /**
     * The <code>DataModel.JobId</code> of the server instance to teleport to.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/TeleportOptions#ServerInstanceId)
     */
    ServerInstanceId: string;
    /**
     * A flag to indicate if a reserved server should be allocated and the players should then be teleported to this allocation.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/TeleportOptions#ShouldReserveServer)
     */
    ShouldReserveServer: boolean;
    /**
     * Returns the teleport data stored in the <code>TeleportOptions</code> instance by <code>TeleportOptions:SetTeleportData()</code>.
     * @param this Optional input arguments to the <code>TeleportService:TeleportAsync()</code> function.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/TeleportOptions#GetTeleportData)
     */
    GetTeleportData(this: TeleportOptions): unknown;
    /**
     * Setter function for data to be passed to the destination place.
     * @param this Optional input arguments to the <code>TeleportService:TeleportAsync()</code> function.
     * @param teleportData Data to be passed to the destination place.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/TeleportOptions#SetTeleportData)
     */
    SetTeleportData(this: TeleportOptions, teleportData: unknown): void;
}
/**
 * Enables transporting <code>Players</code> between places and servers.
 *
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/TeleportService)
 */
interface TeleportService extends Instance {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_TeleportService: unique symbol;
    /**
     * <strong>Deprecated:</strong> This item is deprecated since the default message it controls has been removed. Do not use it for new work.<br>No longer functional.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/TeleportService#CustomizedTeleportUI)
     */
    CustomizedTeleportUI: boolean;
    /**
     * Returns the <em>customLoadingScreen</em> the <code>LocalPlayer</code> arrived into the place with.
     * @param this Enables transporting <code>Players</code> between places and servers.
     * @returns The <em>customLoadingScreen</em> the <code>LocalPlayer</code> arrived into the place with.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/TeleportService#GetArrivingTeleportGui)
     */
    GetArrivingTeleportGui(this: TeleportService): ScreenGui | undefined;
    /**
     * Returns the <em>teleportData</em> the <code>Players.LocalPlayer</code> arrived into the place with.
     * @param this Enables transporting <code>Players</code> between places and servers.
     * @returns The teleport data the <code>Players.LocalPlayer</code> arrived into the place with.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/TeleportService#GetLocalPlayerTeleportData)
     */
    GetLocalPlayerTeleportData(this: TeleportService): unknown;
    /**
     * Retrieves a teleport setting saved using <code>TeleportService:SetTeleportSetting()</code> using the given key.
     * @param this Enables transporting <code>Players</code> between places and servers.
     * @param setting The key the value was stored under using <code>TeleportService:SetTeleportSetting()</code>.
     * @returns The value stored under the given key.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/TeleportService#GetTeleportSetting)
     */
    GetTeleportSetting(this: TeleportService, setting: string): unknown;
    /**
     * Sets the custom <code>teleport GUI</code> that will be shown to the local user during teleportation, prior to the teleport being invoked.
     * @param this Enables transporting <code>Players</code> between places and servers.
     * @param gui The loading <code>ScreenGui</code> that is to be displayed during teleportation.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/TeleportService#SetTeleportGui)
     */
    SetTeleportGui(this: TeleportService, gui: ScreenGui): void;
    /**
     * Stores a value under a given key that persists across all teleportations in the same game.
     * @param this Enables transporting <code>Players</code> between places and servers.
     * @param setting The key to store the <em>value</em> under. This key can be used to retrieve the value using <code>TeleportService:GetTeleportSetting()</code>.
     * @param value The value to store.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/TeleportService#SetTeleportSetting)
     */
    SetTeleportSetting(this: TeleportService, setting: string, value: TeleportData): void;
    /**
     * Teleports a <code>Player</code> to the place associated with the given <code>placeId</code>.
     * @param this Enables transporting <code>Players</code> between places and servers.
     * @param placeId The ID of the place to teleport to.
     * @param player The <code>Player</code> to teleport, if this function is being called from the client this defaults to the <code>Players.LocalPlayer</code>.
     * @param teleportData Optional data to be passed to the destination place. Can be retrieved using <code>TeleportService:GetLocalPlayerTeleportData()</code>.
     * @param customLoadingScreen Optional custom loading screen to be placed in the <code>CoreGui</code> at the destination place. Can be retrieved using <code>TeleportService:GetArrivingTeleportGui()</code>.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/TeleportService#Teleport)
     */
    Teleport(this: TeleportService, placeId: number, player?: Player, teleportData?: TeleportData, customLoadingScreen?: ScreenGui): void;
    /**
     * Teleports a <code>Player</code> to the server instance associated with the given <em>placeId</em> and <em>instanceId</em>.
     * @param this Enables transporting <code>Players</code> between places and servers.
     * @param placeId The ID of the place to teleport to.
     * @param instanceId The <code>DataModel.JobId</code> of the server instance to teleport to.
     * @param player The <code>Player</code> to teleport, if this function is being called from the client this defaults to the <code>Players.LocalPlayer</code>.
     * @param spawnName Optional name of the <code>SpawnLocation</code> to spawn at.
     * @param teleportData Optional data to be passed to the destination place. Can be retrieved using <code>TeleportService:GetLocalPlayerTeleportData()</code>.
     * @param customLoadingScreen Optional custom loading screen to be placed in the <code>CoreGui</code> at the destination place. Can be retrieved using <code>TeleportService:GetArrivingTeleportGui()</code>.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/TeleportService#TeleportToPlaceInstance)
     */
    TeleportToPlaceInstance(this: TeleportService, placeId: number, instanceId: string, player?: Player, spawnName?: string, teleportData?: TeleportData, customLoadingScreen?: ScreenGui): void;
    /**
     * Teleport a group of <code>Players</code> to a reserved server created using <code>TeleportService:ReserveServer()</code>.
     * @param this Enables transporting <code>Players</code> between places and servers.
     * @param placeId The ID of the place to teleport to.
     * @param reservedServerAccessCode The reserved server access code returned by <code>TeleportService:ReserveServer()</code>.
     * @param players An array of <code>Players</code> to teleport.
     * @param spawnName Optional name of the <code>SpawnLocation</code> to spawn at.
     * @param teleportData Optional data to be passed to the destination place. Can be retrieved using <code>TeleportService:GetLocalPlayerTeleportData()</code>.
     * @param customLoadingScreen Optional custom loading screen to be placed in the <code>CoreGui</code> at the destination place. Can be retrieved using <code>TeleportService:GetArrivingTeleportGui()</code>.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/TeleportService#TeleportToPrivateServer)
     */
    TeleportToPrivateServer(this: TeleportService, placeId: number, reservedServerAccessCode: string, players: Array<Player>, spawnName?: string, teleportData?: TeleportData, customLoadingScreen?: ScreenGui): void;
    /**
     * A variant of <code>TeleportService:Teleport()</code> that causes the <code>Player</code> to spawn at a <code>SpawnLocation</code> of the given name at the destination place.
     * @param this Enables transporting <code>Players</code> between places and servers.
     * @param placeId The ID of the place to teleport to.
     * @param spawnName The name of the <code>SpawnLocation</code> to spawn at.
     * @param player The <code>Player</code> to teleport, if this function is being called from the client this defaults to the <code>Players.LocalPlayer</code>.
     * @param teleportData Optional data to be passed to the destination place. Can be retrieved using <code>TeleportService:GetLocalPlayerTeleportData()</code>.
     * @param customLoadingScreen Optional custom loading screen to be placed in the <code>CoreGui</code> at the destination place. Can be retrieved using <code>TeleportService:GetArrivingTeleportGui()</code>.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/TeleportService#TeleportToSpawnByName)
     */
    TeleportToSpawnByName(this: TeleportService, placeId: number, spawnName: string, player?: Player, teleportData?: TeleportData, customLoadingScreen?: ScreenGui): void;
    /**
     * Returns the <code>PlaceId</code> and <code>JobId</code> of the server the user with the given <code>UserId</code> is in provided it is in the same game as the current place.
     * @param this Enables transporting <code>Players</code> between places and servers.
     * @param userId The <code>Player.UserId</code> of the <code>Player</code>.
     * @returns See the table above.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/TeleportService#GetPlayerPlaceInstanceAsync)
     */
    GetPlayerPlaceInstanceAsync(this: TeleportService, userId: number): LuaTuple<[
        boolean,
        string,
        number,
        string
    ]>;
    /**
     * Returns an access code that can be used to teleport players to a reserved server, along with the <code>DataModel.PrivateServerId</code> for it.
     * @param this Enables transporting <code>Players</code> between places and servers.
     * @param placeId The <code>DataModel.PlaceId</code> of the place the reserved server is being created for.
     * @returns The server access code required by <code>TeleportService:TeleportToPrivateServer()</code> and the <code>DataModel.PrivateServerId</code> for the reserved server.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/TeleportService#ReserveServer)
     */
    ReserveServer(this: TeleportService, placeId: number): LuaTuple<[
        string,
        string
    ]>;
    /**
     * The all-encompassing method to teleport a player or group of players from one server to another.
     * @param this Enables transporting <code>Players</code> between places and servers.
     * @param placeId The place ID the player(s) should be teleported to.
     * @param players An array of the player(s) to teleport.
     * @param teleportOptions An optional <code>TeleportOptions</code> object containing additional arguments to the <code>TeleportService:TeleportAsync()</code> call. If this is not passed, no result will be returned.
     * @returns If a <code>TeleportOptions</code> parameter is passed, this will be a <code>TeleportAsyncResult</code> object that provides information about the final teleport destination.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/TeleportService#TeleportAsync)
     */
    TeleportAsync(this: TeleportService, placeId: number, players: ReadonlyArray<Player>, options?: TeleportOptions): TeleportAsyncResult;
    /**
     * Teleports a group of <code>Players</code> to the same server of the place with the given <code>PlaceId</code>, returning the <code>JobId</code> of the server instance they were teleported to.
     * @param this Enables transporting <code>Players</code> between places and servers.
     * @param placeId The ID of the place to teleport to.
     * @param players An array containing the <code>Players</code> to teleport.
     * @param teleportData Optional data to be passed to the destination place. Can be retrieved using <code>TeleportService:GetLocalPlayerTeleportData()</code>.
     * @param customLoadingScreen Optional custom loading screen to be placed in the <code>CoreGui</code> at the destination place. Can be retrieved using <code>TeleportService:GetArrivingTeleportGui()</code>.
     * @returns The <code>DataModel.JobId</code> of the server instance the <code>Players</code> were teleported to.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/TeleportService#TeleportPartyAsync)
     */
    TeleportPartyAsync(this: TeleportService, placeId: number, players: Array<Player>, teleportData?: TeleportData, customLoadingScreen?: ScreenGui): string;
    /**
     * Fires when the <code>LocalPlayer</code> enters the place following a teleport.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/TeleportService#LocalPlayerArrivedFromTeleport)
     */
    readonly LocalPlayerArrivedFromTeleport: RBXScriptSignal<(loadingGui: ScreenGui, dataTable?: unknown) => void>;
    /**
     * Fires when a teleport fails to start, leaving the player in their current server.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/TeleportService#TeleportInitFailed)
     */
    readonly TeleportInitFailed: RBXScriptSignal<(player: Player, teleportResult: Enum.TeleportResult, errorMessage: string, placeId: number, teleportOptions: TeleportOptions) => void>;
}
/**
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/TemporaryCageMeshProvider)
 */
interface TemporaryCageMeshProvider extends Instance {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_TemporaryCageMeshProvider: unique symbol;
}
/**
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/TemporaryScriptService)
 */
interface TemporaryScriptService extends Instance {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_TemporaryScriptService: unique symbol;
}
/**
 * Determines appearance of a certain terrain face direction.
 *
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/TerrainDetail)
 */
interface TerrainDetail extends Instance {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_TerrainDetail: unique symbol;
    /**
     * The face this TerrainDetail overrides.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/TerrainDetail#Face)
     */
    Face: Enum.TerrainFace;
    /**
     * Determines texture tiling method.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/TerrainDetail#MaterialPattern)
     */
    MaterialPattern: Enum.MaterialPattern;
    /**
     * Determines the scale of textures.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/TerrainDetail#StudsPerTile)
     */
    StudsPerTile: number;
}
/**
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/TerrainRegion)
 */
interface TerrainRegion extends Instance {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_TerrainRegion: unique symbol;
    /**
     * <strong>Deprecated:</strong> This item is a deprecated function of a legacy <code>Terrain</code> engine that has been removed. Do not use it for new work.<br>The state of this property shows whether or not this <code>TerrainRegion</code> contains <em>smooth terrain</em>.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/TerrainRegion#IsSmooth)
     */
    readonly IsSmooth: boolean;
    /**
     * The size of this TerrainRegion in cells.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/TerrainRegion#SizeInCells)
     */
    readonly SizeInCells: Vector3;
}
/**
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/TextBoxService)
 */
interface TextBoxService extends Instance {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_TextBoxService: unique symbol;
}
/**
 * Represents a text chat channel.
 *
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/TextChannel)
 */
interface TextChannel extends Instance {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_TextChannel: unique symbol;
    /**
     * The <code>TextChannel</code> will only deliver messages to users that can send direct messages to the <code>DirectChatRequester</code>.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/TextChannel#DirectChatRequester)
     */
    readonly DirectChatRequester: Player | undefined;
    /**
     * Displays a system message to the user.
     * @param this Represents a text chat channel.
     * @param systemMessage The system message sent to the <code>TextChannel</code>.
     * @param metadata Use to identify system message types, such as the default system messages.
     * @returns A <code>TextChatMessage</code> with <code>TextChatMessage.Status</code> property that indicates the condition of the message.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/TextChannel#DisplaySystemMessage)
     */
    DisplaySystemMessage(this: TextChannel, systemMessage: string, metadata: string): TextChatMessage;
    /**
     * Sets the <code>DirectChatRequester</code> for the <code>TextChannel</code>. The <code>TextChannel</code> will only deliver messages to users that can send direct messages to the <code>DirectChatRequester</code>.
     * @param this Represents a text chat channel.
     * @param requester
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/TextChannel#SetDirectChatRequester)
     */
    SetDirectChatRequester(this: TextChannel, requester: Player): void;
    /**
     * Adds a <code>TextSource</code> to the <code>TextChannel</code> given userId of a <code>Player</code>.
     * @param this Represents a text chat channel.
     * @param userId The userId of the <code>Player</code>.
     * @returns Returns <code>TextSource</code> and <code>true</code> if a new <code>TextSource</code> is created for the user, <code>TextSource</code> and <code>false</code> if there is an existing <code>TextSource</code>, or <code>nil</code> and <code>false</code> if the user has chat off or is not in this server.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/TextChannel#AddUserAsync)
     */
    AddUserAsync(this: TextChannel, userId: number): unknown;
    /**
     * Sends a <code>TextChatMessage</code> to the server.
     * @param this Represents a text chat channel.
     * @param message The message to send to the <code>TextChannel</code>.
     * @param metadata Custom metadata to attach to the message.
     * @returns A <code>TextChatMessage</code> with <code>TextChatMessage.Status</code> property that indicates the condition of the message.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/TextChannel#SendAsync)
     */
    SendAsync(this: TextChannel, message: string, metadata: string): TextChatMessage;
    /**
     * Fires when <code>TextChannel:DisplaySystemMessage()</code> is invoked on the client, or when the client receives a valid <code>TextChannel:SendAsync()</code> response from the server.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/TextChannel#MessageReceived)
     */
    readonly MessageReceived: RBXScriptSignal<(incomingMessage: TextChatMessage) => void>;
    /**
     * Called when <code>TextChannel</code> is receiving an incoming message.
     * @param message The incoming <code>TextChatMessage</code>.
     * @returns If a <code>TextChatMessageProperties</code> is returned, those properties are merged with the <code>TextChatMessage</code> parameter to create a new <code>TextChatMessage</code> with those properties.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/TextChannel#OnIncomingMessage)
     */
    OnIncomingMessage: (message: TextChatMessage) => TextChatMessageProperties | undefined;
    /**
     * Called for each client when <code>TextChannel</code> is receiving an incoming message to determine whether or not it should be delivered to that client.
     * @param message
     * @param textSource
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/TextChannel#ShouldDeliverCallback)
     */
    ShouldDeliverCallback: (message: TextChatMessage, textSource: TextSource) => boolean;
}
/**
 * Represents a text chat command.
 *
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/TextChatCommand)
 */
interface TextChatCommand extends Instance {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_TextChatCommand: unique symbol;
    /**
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/TextChatCommand#AutocompleteVisible)
     */
    AutocompleteVisible: boolean;
    /**
     * Determines whether the <code>TextChatCommand</code> is enabled.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/TextChatCommand#Enabled)
     */
    Enabled: boolean;
    /**
     * A primary alias used to trigger the <code>TextChatCommand</code>.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/TextChatCommand#PrimaryAlias)
     */
    PrimaryAlias: string;
    /**
     * A secondary alias used to trigger the <code>TextChatCommand</code>.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/TextChatCommand#SecondaryAlias)
     */
    SecondaryAlias: string;
    /**
     * An event that developers can bind to execute commands.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/TextChatCommand#Triggered)
     */
    readonly Triggered: RBXScriptSignal<(originTextSource: TextSource, unfilteredText: string) => void>;
}
/**
 * The parental class of all text chat configurations.
 *
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/TextChatConfigurations)
 */
interface TextChatConfigurations extends Instance {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_TextChatConfigurations: unique symbol;
}
/**
 * Allows for customization of text chat bubbles through <code>TextChatService</code>.
 *
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/BubbleChatConfiguration)
 */
interface BubbleChatConfiguration extends TextChatConfigurations {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_BubbleChatConfiguration: unique symbol;
    /**
     * Body part or <code>Attachment</code> that bubbles will attach to.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/BubbleChatConfiguration#AdorneeName)
     */
    AdorneeName: string;
    /**
     * Background color of bubbles.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/BubbleChatConfiguration#BackgroundColor3)
     */
    BackgroundColor3: Color3;
    /**
     * Determines the background transparency of the default bubble chat as a number between 0 and 1.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/BubbleChatConfiguration#BackgroundTransparency)
     */
    BackgroundTransparency: number;
    /**
     * Time before a bubble fades out, in seconds.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/BubbleChatConfiguration#BubbleDuration)
     */
    BubbleDuration: number;
    /**
     * Vertical space between stacked bubbles, in pixels.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/BubbleChatConfiguration#BubblesSpacing)
     */
    BubblesSpacing: number;
    /**
     * Whether text chat bubbles are enabled.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/BubbleChatConfiguration#Enabled)
     */
    Enabled: boolean;
    /**
     * <code>Font</code> of the bubble text.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/BubbleChatConfiguration#Font)
     */
    Font: Enum.Font;
    /**
     * <code>Font</code> of the bubble text.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/BubbleChatConfiguration#FontFace)
     */
    FontFace: Font;
    /**
     * Offset of bubbles from their adornee, in studs.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/BubbleChatConfiguration#LocalPlayerStudsOffset)
     */
    LocalPlayerStudsOffset: Vector3;
    /**
     * Maximum number of text chat bubbles shown per user.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/BubbleChatConfiguration#MaxBubbles)
     */
    MaxBubbles: number;
    /**
     * Maximum distance from the camera that bubbles are shown.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/BubbleChatConfiguration#MaxDistance)
     */
    MaxDistance: number;
    /**
     * Distance from the camera when bubbles turn into a single bubble with an ellipsis to indicate chatter.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/BubbleChatConfiguration#MinimizeDistance)
     */
    MinimizeDistance: number;
    /**
     * Determines if the tail at the bottom of the text chat bubbles is visible.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/BubbleChatConfiguration#TailVisible)
     */
    TailVisible: boolean;
    /**
     * Color of bubble text.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/BubbleChatConfiguration#TextColor3)
     */
    TextColor3: Color3;
    /**
     * Size of bubble text.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/BubbleChatConfiguration#TextSize)
     */
    TextSize: number;
    /**
     * Extra space between bubbles and their adornee, in studs.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/BubbleChatConfiguration#VerticalStudsOffset)
     */
    VerticalStudsOffset: number;
}
/**
 * Configures properties of the optional channel tabs in the default chat window.
 *
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/ChannelTabsConfiguration)
 */
interface ChannelTabsConfiguration extends TextChatConfigurations {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_ChannelTabsConfiguration: unique symbol;
    /**
     * Actual screen position of the channel tab bar, in pixels.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/ChannelTabsConfiguration#AbsolutePosition)
     */
    readonly AbsolutePosition: Vector2;
    /**
     * Actual screen size of the channel tab bar, in pixels.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/ChannelTabsConfiguration#AbsoluteSize)
     */
    readonly AbsoluteSize: Vector2;
    /**
     * Background color of the channel tabs.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/ChannelTabsConfiguration#BackgroundColor3)
     */
    BackgroundColor3: Color3;
    /**
     * Background transparency of the channel tabs.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/ChannelTabsConfiguration#BackgroundTransparency)
     */
    BackgroundTransparency: number;
    /**
     * Whether to show the channel tabs.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/ChannelTabsConfiguration#Enabled)
     */
    Enabled: boolean;
    /**
     * Font used to render text in the channel tabs.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/ChannelTabsConfiguration#FontFace)
     */
    FontFace: Font;
    /**
     * Background color of a channel tab when hovering over it.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/ChannelTabsConfiguration#HoverBackgroundColor3)
     */
    HoverBackgroundColor3: Color3;
    /**
     * Color of text in a selected tab.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/ChannelTabsConfiguration#SelectedTabTextColor3)
     */
    SelectedTabTextColor3: Color3;
    /**
     * Color of text in an unselected tab.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/ChannelTabsConfiguration#TextColor3)
     */
    TextColor3: Color3;
    /**
     * Size of the text in channel tabs.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/ChannelTabsConfiguration#TextSize)
     */
    TextSize: number;
    /**
     * Color of the text stroke for text in channel tabs.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/ChannelTabsConfiguration#TextStrokeColor3)
     */
    TextStrokeColor3: Color3;
    /**
     * Transparency of the text stroke for text in channel tabs.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/ChannelTabsConfiguration#TextStrokeTransparency)
     */
    TextStrokeTransparency: number;
}
/**
 * Configures properties of the default chat input bar.
 *
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/ChatInputBarConfiguration)
 */
interface ChatInputBarConfiguration extends TextChatConfigurations {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_ChatInputBarConfiguration: unique symbol;
    /**
     * Actual screen position of the default chat input bar in pixels.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/ChatInputBarConfiguration#AbsolutePosition)
     */
    readonly AbsolutePosition: Vector2;
    /**
     * Actual screen size of the default chat input bar in pixels.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/ChatInputBarConfiguration#AbsoluteSize)
     */
    readonly AbsoluteSize: Vector2;
    /**
     * Whether to enable autocomplete for the chat input bar.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/ChatInputBarConfiguration#AutocompleteEnabled)
     */
    AutocompleteEnabled: boolean;
    /**
     * Background color of the default chat input bar.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/ChatInputBarConfiguration#BackgroundColor3)
     */
    BackgroundColor3: Color3;
    /**
     * Background transparency of the default chat input bar.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/ChatInputBarConfiguration#BackgroundTransparency)
     */
    BackgroundTransparency: number;
    /**
     * Whether to show the default chat input bar.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/ChatInputBarConfiguration#Enabled)
     */
    Enabled: boolean;
    /**
     * Font used to render text in the default chat input bar.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/ChatInputBarConfiguration#FontFace)
     */
    FontFace: Font;
    /**
     * Whether the default chat input bar is focused or not.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/ChatInputBarConfiguration#IsFocused)
     */
    readonly IsFocused: boolean;
    /**
     * Additional key users can press to trigger focusing on the default chat input bar.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/ChatInputBarConfiguration#KeyboardKeyCode)
     */
    KeyboardKeyCode: Enum.KeyCode;
    /**
     * Color of the text of the placeholder text in the default chat input bar.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/ChatInputBarConfiguration#PlaceholderColor3)
     */
    PlaceholderColor3: Color3;
    /**
     * A reference to the target <code>TextChannel</code>.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/ChatInputBarConfiguration#TargetTextChannel)
     */
    TargetTextChannel: TextChannel | undefined;
    /**
     * Reference to a designated <code>TextBox</code> instance that sends messages on behalf of the user.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/ChatInputBarConfiguration#TextBox)
     */
    TextBox: TextBox | undefined;
    /**
     * Color of the text in default chat input bar.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/ChatInputBarConfiguration#TextColor3)
     */
    TextColor3: Color3;
    /**
     * Size of the text in default chat input bar.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/ChatInputBarConfiguration#TextSize)
     */
    TextSize: number;
    /**
     * Color of the text stroke for text in default chat input bar.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/ChatInputBarConfiguration#TextStrokeColor3)
     */
    TextStrokeColor3: Color3;
    /**
     * Transparency of the text stroke for text in default chat input bar.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/ChatInputBarConfiguration#TextStrokeTransparency)
     */
    TextStrokeTransparency: number;
}
/**
 * Configures properties of the default chat window.
 *
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/ChatWindowConfiguration)
 */
interface ChatWindowConfiguration extends TextChatConfigurations {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_ChatWindowConfiguration: unique symbol;
    /**
     * Actual screen position of the default chat window, in pixels.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/ChatWindowConfiguration#AbsolutePosition)
     */
    readonly AbsolutePosition: Vector2;
    /**
     * Actual screen size of the default chat window, in pixels.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/ChatWindowConfiguration#AbsoluteSize)
     */
    readonly AbsoluteSize: Vector2;
    /**
     * Background color of the default chat window.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/ChatWindowConfiguration#BackgroundColor3)
     */
    BackgroundColor3: Color3;
    /**
     * Background transparency of the default chat window.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/ChatWindowConfiguration#BackgroundTransparency)
     */
    BackgroundTransparency: number;
    /**
     * Whether to show the default chat window.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/ChatWindowConfiguration#Enabled)
     */
    Enabled: boolean;
    /**
     * Font used to render text in the default chat window.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/ChatWindowConfiguration#FontFace)
     */
    FontFace: Font;
    /**
     * Factor by which the height of the default chat window should be scaled.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/ChatWindowConfiguration#HeightScale)
     */
    HeightScale: number;
    /**
     * Horizontal alignment of the chat window.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/ChatWindowConfiguration#HorizontalAlignment)
     */
    HorizontalAlignment: Enum.HorizontalAlignment;
    /**
     * Color of the text in default chat window.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/ChatWindowConfiguration#TextColor3)
     */
    TextColor3: Color3;
    /**
     * Size of the text in default chat window.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/ChatWindowConfiguration#TextSize)
     */
    TextSize: number;
    /**
     * Color of the text stroke for text in default chat window.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/ChatWindowConfiguration#TextStrokeColor3)
     */
    TextStrokeColor3: Color3;
    /**
     * Transparency of the text stroke for text in default chat window.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/ChatWindowConfiguration#TextStrokeTransparency)
     */
    TextStrokeTransparency: number;
    /**
     * Vertical alignment of the chat window.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/ChatWindowConfiguration#VerticalAlignment)
     */
    VerticalAlignment: Enum.VerticalAlignment;
    /**
     * Factor by which the width of the default chat window should be scaled.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/ChatWindowConfiguration#WidthScale)
     */
    WidthScale: number;
    /**
     * Creates a new <code>ChatWindowMessageProperties</code> instance that can be used to customize the appearance of messages in the chat window.
     * @param this Configures properties of the default chat window.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/ChatWindowConfiguration#DeriveNewMessageProperties)
     */
    DeriveNewMessageProperties(this: ChatWindowConfiguration): ChatWindowMessageProperties;
}
/**
 * Immutable data object representing a text chat message.
 *
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/TextChatMessage)
 */
interface TextChatMessage extends Instance {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_TextChatMessage: unique symbol;
    /**
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/TextChatMessage#BubbleChatMessageProperties)
     */
    BubbleChatMessageProperties: BubbleChatMessageProperties | undefined;
    /**
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/TextChatMessage#ChatWindowMessageProperties)
     */
    ChatWindowMessageProperties: ChatWindowMessageProperties | undefined;
    /**
     * A unique identifier for the <code>TextChatMessage</code>.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/TextChatMessage#MessageId)
     */
    MessageId: string;
    /**
     * A general purpose field for storing miscellaneous data about the <code>TextChatMessage</code>.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/TextChatMessage#Metadata)
     */
    Metadata: string;
    /**
     * A prefix to add to a user's message.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/TextChatMessage#PrefixText)
     */
    PrefixText: string;
    /**
     * Indicates the status of the <code>TextChatMessage</code>.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/TextChatMessage#Status)
     */
    Status: Enum.TextChatMessageStatus;
    /**
     * The filtered text message for the user.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/TextChatMessage#Text)
     */
    Text: string;
    /**
     * A reference to the origin <code>TextChannel</code>.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/TextChatMessage#TextChannel)
     */
    TextChannel: TextChannel | undefined;
    /**
     * A reference to the origin <code>TextSource</code>.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/TextChatMessage#TextSource)
     */
    TextSource: TextSource | undefined;
    /**
     * A timestamp of when the message was originally sent.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/TextChatMessage#Timestamp)
     */
    Timestamp: DateTime;
    /**
     * Translated and filtered text message.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/TextChatMessage#Translation)
     */
    Translation: string;
}
/**
 * Overrides <code>TextChatMessage</code> properties when returned by callbacks defined in <code>TextChatService.OnIncomingMessage</code> or <code>TextChannel.OnIncomingMessage</code>.
 *
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/TextChatMessageProperties)
 */
interface TextChatMessageProperties extends Instance {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_TextChatMessageProperties: unique symbol;
    /**
     * The <code>TextChatMessage.PrefixText</code> to override.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/TextChatMessageProperties#PrefixText)
     */
    PrefixText: string;
    /**
     * The <code>TextChatMessage.Text</code> to override.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/TextChatMessageProperties#Text)
     */
    Text: string;
    /**
     * The <code>TextChatMessage.Translation</code> to override.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/TextChatMessageProperties#Translation)
     */
    Translation: string;
}
/**
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/BubbleChatMessageProperties)
 */
interface BubbleChatMessageProperties extends TextChatMessageProperties {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_BubbleChatMessageProperties: unique symbol;
    /**
     * Background color of bubbles.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/BubbleChatMessageProperties#BackgroundColor3)
     */
    BackgroundColor3: Color3;
    /**
     * Background transparency of bubbles.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/BubbleChatMessageProperties#BackgroundTransparency)
     */
    BackgroundTransparency: number;
    /**
     * Font of the bubble text.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/BubbleChatMessageProperties#FontFace)
     */
    FontFace: Font;
    /**
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/BubbleChatMessageProperties#TailVisible)
     */
    TailVisible: boolean;
    /**
     * Color of bubble text.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/BubbleChatMessageProperties#TextColor3)
     */
    TextColor3: Color3;
    /**
     * Size of bubble text.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/BubbleChatMessageProperties#TextSize)
     */
    TextSize: number;
}
/**
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/ChatWindowMessageProperties)
 */
interface ChatWindowMessageProperties extends TextChatMessageProperties {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_ChatWindowMessageProperties: unique symbol;
    /**
     * Font used to render text in the chat window.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/ChatWindowMessageProperties#FontFace)
     */
    FontFace: Font;
    /**
     * Determines the properties of the <code>PrefixText</code> preceding the chat message.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/ChatWindowMessageProperties#PrefixTextProperties)
     */
    PrefixTextProperties: ChatWindowMessageProperties | undefined;
    /**
     * Color of the text in the chat window.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/ChatWindowMessageProperties#TextColor3)
     */
    TextColor3: Color3;
    /**
     * Size of the text in the chat window.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/ChatWindowMessageProperties#TextSize)
     */
    TextSize: number;
    /**
     * Stroke color applied to text in the chat window.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/ChatWindowMessageProperties#TextStrokeColor3)
     */
    TextStrokeColor3: Color3;
    /**
     * Transparency of the stroke applied to text in the chat window.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/ChatWindowMessageProperties#TextStrokeTransparency)
     */
    TextStrokeTransparency: number;
}
/**
 * A service handling in-experience text chat.
 *
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/TextChatService)
 */
interface TextChatService extends Instance {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_TextChatService: unique symbol;
    /**
     * Determines if chat translation is enabled.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/TextChatService#ChatTranslationEnabled)
     */
    get ChatTranslationEnabled(): boolean;
    /**
     * Determines whether to fully enable <code>TextChatService</code> or revert to the legacy chat system.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/TextChatService#ChatVersion)
     */
    get ChatVersion(): Enum.ChatVersion;
    /**
     * Determines whether <code>TextChatService</code> should create default <code>TextChatCommands</code>.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/TextChatService#CreateDefaultCommands)
     */
    get CreateDefaultCommands(): boolean;
    /**
     * Determines whether <code>TextChatService</code> should create default <code>TextChannels</code>.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/TextChatService#CreateDefaultTextChannels)
     */
    get CreateDefaultTextChannels(): boolean;
    /**
     * Displays a chat bubble above the provided part or player character.
     * @param this A service handling in-experience text chat.
     * @param partOrCharacter The part or character that the bubble to be displayed above.
     * @param message The text to be displayed in the chat bubble.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/TextChatService#DisplayBubble)
     */
    DisplayBubble(this: TextChatService, partOrCharacter: Instance, message: string): void;
    /**
     * Determines whether a user has permission to chat in experiences.
     * @param this A service handling in-experience text chat.
     * @param userId
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/TextChatService#CanUserChatAsync)
     */
    CanUserChatAsync(this: TextChatService, userId: number): boolean;
    /**
     * Determines whether or not two users would receive messages between each other.
     * @param this A service handling in-experience text chat.
     * @param userIdFrom
     * @param userIdTo
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/TextChatService#CanUsersChatAsync)
     */
    CanUsersChatAsync(this: TextChatService, userIdFrom: number, userIdTo: number): boolean;
    /**
     * Determines whether a user has permission to chat directly with other users in experiences based on factors such as their parental control settings.
     * @param this A service handling in-experience text chat.
     * @param requesterUserId The user who would have initiated the direct chat request. If the requesterUserId is not in the current server, this method will error.
     * @param userIds A list of users who the requesterUserId would like to chat with directly. Users not in the current server are ignored.
     * @returns A list of users who could participate in the direct chat request. If none of the users can direct chat with the requesterUserId, the result is an empty array.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/TextChatService#CanUsersDirectChatAsync)
     */
    CanUsersDirectChatAsync(this: TextChatService, requesterUserId: number, userIds: Array<unknown>): Array<unknown>;
    /**
     * Fires when <code>TextChatService:DisplayBubble()</code> is called.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/TextChatService#BubbleDisplayed)
     */
    readonly BubbleDisplayed: RBXScriptSignal<(partOrCharacter: Instance, textChatMessage: TextChatMessage) => void>;
    /**
     * Fires when <code>TextChannel:DisplaySystemMessage()</code> is invoked on the client, or when the client receives a valid <code>TextChannel:SendAsync()</code> response from the server.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/TextChatService#MessageReceived)
     */
    readonly MessageReceived: RBXScriptSignal<(textChatMessage: TextChatMessage) => void>;
    /**
     * Fires when <code>TextChannel:SendAsync()</code> is called by the sending client.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/TextChatService#SendingMessage)
     */
    readonly SendingMessage: RBXScriptSignal<(textChatMessage: TextChatMessage) => void>;
    /**
     * Called when a bubble chat is about to be displayed.
     * @param message The incoming <code>TextChatMessage</code>.
     * @param adornee The part or character the bubble chat message is attached to.
     * @returns If a <code>BubbleChatMessageProperties</code> is returned, its properties override the <code>BubbleChatConfiguration</code> properties.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/TextChatService#OnBubbleAdded)
     */
    OnBubbleAdded: (message: TextChatMessage, adornee: Instance) => TextChatMessageProperties | undefined;
    /**
     * Called when a new message is about to be displayed in the chat window. This can only be implemented on the client.
     * @param message The incoming <code>TextChatMessage</code>.
     * @returns If a <code>ChatWindowMessageProperties</code> is returned, its properties override the <code>ChatWindowConfiguration</code> properties.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/TextChatService#OnChatWindowAdded)
     */
    OnChatWindowAdded: ((message: TextChatMessage) => unknown) | undefined;
    /**
     * Called when <code>TextChatService</code> is receiving an incoming message.
     * @param message The incoming <code>TextChatMessage</code>.
     * @returns If a <code>TextChatMessageProperties</code> is returned, those properties are merged with the <code>TextChatMessage</code> parameter to create a new <code>TextChatMessage</code> with those properties, otherwise, if <code>nil</code> is returned, then <code>TextChatMessage</code> is not changed.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/TextChatService#OnIncomingMessage)
     */
    OnIncomingMessage: (message: TextChatMessage) => TextChatMessageProperties | undefined;
}
/**
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/TextFilterResult)
 */
interface TextFilterResult extends Instance {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_TextFilterResult: unique symbol;
    /**
     * Returns the text in a properly filtered manner for the specified <code>Player.UserId</code>.
     * @param this
     * @param toUserId <code>Player.UserId</code> of the user being chatted.
     * @returns Filtered text string.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/TextFilterResult#GetChatForUserAsync)
     */
    GetChatForUserAsync(this: TextFilterResult, toUserId: number): string;
    /**
     * Returns the text in a properly filtered manner for all users.
     * @param this
     * @returns Filtered text string.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/TextFilterResult#GetNonChatStringForBroadcastAsync)
     */
    GetNonChatStringForBroadcastAsync(this: TextFilterResult): string;
    /**
     * Returns the text in a properly filtered manner for the specified <code>Player.UserId</code> based on age and other details.
     * @param this
     * @param toUserId <code>Player.UserId</code> of the user intended to see/receive the text.
     * @returns Filtered text string.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/TextFilterResult#GetNonChatStringForUserAsync)
     */
    GetNonChatStringForUserAsync(this: TextFilterResult, toUserId: number): string;
}
/**
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/TextFilterTranslatedResult)
 */
interface TextFilterTranslatedResult extends Instance {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_TextFilterTranslatedResult: unique symbol;
    /**
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/TextFilterTranslatedResult#SourceLanguage)
     */
    readonly SourceLanguage: string;
    /**
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/TextFilterTranslatedResult#SourceText)
     */
    readonly SourceText: TextFilterResult | undefined;
    /**
     * @param this
     * @param locale
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/TextFilterTranslatedResult#GetTranslationForLocale)
     */
    GetTranslationForLocale(this: TextFilterTranslatedResult, locale: string): TextFilterResult;
    /**
     * @param this
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/TextFilterTranslatedResult#GetTranslations)
     */
    GetTranslations(this: TextFilterTranslatedResult): object;
}
/**
 * The TextService is a service internally responsible for handling the display of text in the game.
 *
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/TextService)
 */
interface TextService extends Instance {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_TextService: unique symbol;
    /**
     * Computes the <code>Vector2</code> dimensions (in pixels) that will be taken up with text when using the specified formatting parameters and size constraints.
     * @param this The TextService is a service internally responsible for handling the display of text in the game.
     * @param string The string for which the text size is to be calculated.
     * @param fontSize The integer representing the font size used.
     * @param font The font used.
     * @param frameSize The <code>TextLabel.AbsoluteSize</code> of the text object to be used. Required to compute how the text will wrap.
     * @returns The size of the space required, in pixels, by the string with the specified formatting.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/TextService#GetTextSize)
     */
    GetTextSize(this: TextService, string: string, fontSize: number, font: CastsToEnum<Enum.Font>, frameSize: Vector2): Vector2;
    /**
     * Chat translation is not supported in legacy chat. This method is no longer supported and should not be used.
     * @param this The TextService is a service internally responsible for handling the display of text in the game.
     * @param stringToFilter
     * @param fromUserId
     * @param targetLocales
     * @param textContext
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/TextService#FilterAndTranslateStringAsync)
     */
    FilterAndTranslateStringAsync(this: TextService, stringToFilter: string, fromUserId: number, targetLocales: Array<unknown>, textContext?: CastsToEnum<Enum.TextFilterContext>): TextFilterTranslatedResult;
    /**
     * Filters a string being received from a user, and returns a <code>TextFilterResult</code> which can be used to distribute the correctly filtered text accordingly.
     * @param this The TextService is a service internally responsible for handling the display of text in the game.
     * @param stringToFilter The text to be filtered.
     * @param fromUserId The userId of the player filtering the text.
     * @param textContext The context that the filtered message will be used in.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/TextService#FilterStringAsync)
     */
    FilterStringAsync(this: TextService, stringToFilter: string, fromUserId: number, textContext?: CastsToEnum<Enum.TextFilterContext>): TextFilterResult;
    /**
     * Returns a table containing the name and faces of a font family.
     * @param this The TextService is a service internally responsible for handling the display of text in the game.
     * @param assetId Asset ID of the font family to look up.
     * @returns The information about the font family.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/TextService#GetFamilyInfoAsync)
     */
    GetFamilyInfoAsync(this: TextService, assetId: ContentId): object;
    /**
     * Calculates the width and height of text given parameters.
     * @param this The TextService is a service internally responsible for handling the display of text in the game.
     * @param params A reference to a <code>GetTextBoundsParams</code> object.
     * @returns The size of the text as a <code>Vector2</code>.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/TextService#GetTextBoundsAsync)
     */
    GetTextBoundsAsync(this: TextService, params: GetTextBoundsParams): Vector2;
    /**
     * @param this The TextService is a service internally responsible for handling the display of text in the game.
     * @param fontSize
     * @param font
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/TextService#GetTextSizeOffsetAsync)
     */
    GetTextSizeOffsetAsync(this: TextService, fontSize: number, font: Font): number;
}
/**
 * Represents a speaker in a <code>TextChannel</code>.
 *
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/TextSource)
 */
interface TextSource extends Instance {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_TextSource: unique symbol;
    /**
     * Determines whether the user can send messages to the <code>TextChannel</code>.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/TextSource#CanSend)
     */
    CanSend: boolean;
    /**
     * UserId of the user represented by the <code>TextSource</code>.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/TextSource#UserId)
     */
    readonly UserId: number;
}
/**
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/TextureGenerationPartGroup)
 */
interface TextureGenerationPartGroup extends Instance {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_TextureGenerationPartGroup: unique symbol;
}
/**
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/TextureGenerationService)
 */
interface TextureGenerationService extends Instance {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_TextureGenerationService: unique symbol;
}
/**
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/TextureGenerationUnwrappingRequest)
 */
interface TextureGenerationUnwrappingRequest extends Instance {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_TextureGenerationUnwrappingRequest: unique symbol;
}
/**
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/ThreadState)
 */
interface ThreadState extends Instance {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_ThreadState: unique symbol;
}
/**
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/ToastNotificationService)
 */
interface ToastNotificationService extends Instance {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_ToastNotificationService: unique symbol;
}
/**
 * An internal object used by networking and replication code to transmit <code>BasePart.Touched</code> and <code>BasePart.TouchEnded</code> events.
 *
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/TouchTransmitter)
 */
interface TouchTransmitter extends Instance {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_TouchTransmitter: unique symbol;
}
/**
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/TracerService)
 */
interface TracerService extends Instance {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_TracerService: unique symbol;
}
/**
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/TrackerLodController)
 */
interface TrackerLodController extends Instance {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_TrackerLodController: unique symbol;
    /**
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/TrackerLodController#AudioMode)
     */
    AudioMode: Enum.TrackerLodFlagMode;
    /**
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/TrackerLodController#VideoExtrapolationMode)
     */
    VideoExtrapolationMode: Enum.TrackerExtrapolationFlagMode;
    /**
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/TrackerLodController#VideoLodMode)
     */
    VideoLodMode: Enum.TrackerLodValueMode;
    /**
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/TrackerLodController#VideoMode)
     */
    VideoMode: Enum.TrackerLodFlagMode;
}
/**
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/TrackerStreamAnimation)
 */
interface TrackerStreamAnimation extends Instance {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_TrackerStreamAnimation: unique symbol;
}
/**
 * Used to create a trail effect between two attachments.
 *
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Trail)
 */
interface Trail extends Instance {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_Trail: unique symbol;
    /**
     * Along with <code>Attachment1</code>, determines where the trail will start drawing its segments.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Trail#Attachment0)
     */
    Attachment0: Attachment | undefined;
    /**
     * Along with <code>Attachment0</code>, determines where the trail will start drawing its segments.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Trail#Attachment1)
     */
    Attachment1: Attachment | undefined;
    /**
     * Scales the light emitted from the trail when <code>LightInfluence</code> is less than 1.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Trail#Brightness)
     */
    Brightness: number;
    /**
     * The color of the trail throughout its lifetime.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Trail#Color)
     */
    Color: ColorSequence;
    /**
     * Determines whether the trail will be drawn or not.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Trail#Enabled)
     */
    Enabled: boolean;
    /**
     * Determines whether the trail will always face the camera, regardless of its orientation.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Trail#FaceCamera)
     */
    FaceCamera: boolean;
    /**
     * Determines how long each segment in a trail will last, in seconds.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Trail#Lifetime)
     */
    Lifetime: number;
    /**
     * Determines to what degree the colors of the trail are blended with the colors behind it.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Trail#LightEmission)
     */
    LightEmission: number;
    /**
     * Determines the degree to which the trail is influenced by the environment's lighting.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Trail#LightInfluence)
     */
    LightInfluence: number;
    /**
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Trail#LocalTransparencyModifier)
     */
    LocalTransparencyModifier: number;
    /**
     * Sets the maximum length of the trail.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Trail#MaxLength)
     */
    MaxLength: number;
    /**
     * Sets the minimum length of the trail.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Trail#MinLength)
     */
    MinLength: number;
    /**
     * The content ID of the texture to be displayed on the trail.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Trail#Texture)
     */
    Texture: ContentId;
    /**
     * Sets the length of the trail's texture, dependent on <code>TextureMode</code>.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Trail#TextureLength)
     */
    TextureLength: number;
    /**
     * Determines the manner in which the <code>Texture</code> scales, repeats, and moves along with the trail's attachments.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Trail#TextureMode)
     */
    TextureMode: Enum.TextureMode;
    /**
     * Sets the transparency of the trail's segments over its <code>Lifetime</code>.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Trail#Transparency)
     */
    Transparency: NumberSequence;
    /**
     * Scales the width of the trail over the course of its lifetime.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Trail#WidthScale)
     */
    WidthScale: NumberSequence;
    /**
     * Clears the segments of the trail.
     * @param this Used to create a trail effect between two attachments.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Trail#Clear)
     */
    Clear(this: Trail): void;
    /**
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Trail#OnClearRequested)
     */
    readonly OnClearRequested: RBXScriptSignal<() => void>;
}
/**
 * The role of a Translator is to manufacture/return strings localized for the viewing player.
 *
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Translator)
 */
interface Translator extends Instance {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_Translator: unique symbol;
    /**
     * The locale of translated strings.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Translator#LocaleId)
     */
    readonly LocaleId: string;
    /**
     * Returns the localized text string in a <code>LocalizationTable</code> based on its <code>Translator</code> locale, by key.
     * @param this The role of a Translator is to manufacture/return strings localized for the viewing player.
     * @param key The <strong>Key</strong> value to look up and translate.
     * @param args To be provided if the <strong>Source</strong> text and translations contain format strings. Will be a Lua table of values <strong>or</strong> key-value pairs, depending on whether the format strings are numbered or named.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Translator#FormatByKey)
     */
    FormatByKey(this: Translator, key: string, args: unknown): string;
    /**
     * Returns the localized text string in a <code>LocalizationTable</code> based on its <code>Translator</code> locale, by source lookup.
     * @param this The role of a Translator is to manufacture/return strings localized for the viewing player.
     * @param context A valid in-game <code>Instance</code> to use for context override as outlined above. Note that this argument can be arbitrary, for example <code>game</code>, if you don't require a context override.
     * @param text The <strong>Source</strong> text to look up and translate.
     * @returns The translated text.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Translator#Translate)
     */
    Translate(this: Translator, context: Instance, text: string): string;
}
/**
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/TutorialService)
 */
interface TutorialService extends Instance {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_TutorialService: unique symbol;
}
/**
 * Abstract base class for in-between interpolation handlers. <code>Tween</code> inherits from <code>TweenBase</code>.
 *
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/TweenBase)
 */
interface TweenBase extends Instance {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_TweenBase: unique symbol;
    /**
     * Read-only property that shows the current state for the <code>Tween</code> animation.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/TweenBase#PlaybackState)
     */
    readonly PlaybackState: Enum.PlaybackState;
    /**
     * Halts playback and resets the tween variables. If you then call <code>TweenBase:Play()</code>, the properties of the tween resume interpolating towards their destination, but take the full length of the animation to do so.
     * @param this Abstract base class for in-between interpolation handlers. <code>Tween</code> inherits from <code>TweenBase</code>.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/TweenBase#Cancel)
     */
    Cancel(this: TweenBase): void;
    /**
     * Halts playback of the tween. Doesn't reset its progress variables, meaning that if you call <code>TweenBase:Play()</code>, the tween resumes playback from the moment it was paused.
     * @param this Abstract base class for in-between interpolation handlers. <code>Tween</code> inherits from <code>TweenBase</code>.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/TweenBase#Pause)
     */
    Pause(this: TweenBase): void;
    /**
     * Starts playback of a tween. Note that if playback has already started, calling <code>Play()</code> has no effect unless the tween has finished or is stopped (either by <code>TweenBase:Cancel()</code> or <code>TweenBase:Pause()</code>).
     * @param this Abstract base class for in-between interpolation handlers. <code>Tween</code> inherits from <code>TweenBase</code>.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/TweenBase#Play)
     */
    Play(this: TweenBase): void;
    /**
     * Fires when the tween finishes playing or when stopped with <code>TweenBase:Cancel()</code>.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/TweenBase#Completed)
     */
    readonly Completed: RBXScriptSignal<(playbackState: Enum.PlaybackState) => void>;
}
/**
 * The <code>Tween</code> object controls the playback of an interpolation.
 *
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Tween)
 */
interface Tween extends TweenBase {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_Tween: unique symbol;
    /**
     * Read-only property that points to the <code>Instance</code> whose properties are being interpolated by the tween.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Tween#Instance)
     */
    readonly Instance: Instance | undefined;
    /**
     * Read-only property that includes information on how the interpolation of the <code>Tween</code> is to be carried out.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Tween#TweenInfo)
     */
    readonly TweenInfo: TweenInfo;
}
/**
 * Used to create <code>Tweens</code> which interpolate, or tween, the properties of instances.
 *
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/TweenService)
 */
interface TweenService extends Instance {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_TweenService: unique symbol;
    /**
     * Creates a new <code>Tween</code> given the object whose properties are to be tweened, a <code>TweenInfo</code>, and a dictionary of goal property values.
     * @param this Used to create <code>Tweens</code> which interpolate, or tween, the properties of instances.
     * @param instance The <code>Instance</code> whose properties are to be tweened.
     * @param tweenInfo The <code>TweenInfo</code> to be used.
     * @param propertyTable A dictionary of properties, and their target values, to be tweened.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/TweenService#Create)
     */
    Create<T extends Instance>(this: TweenService, instance: T, tweenInfo: TweenInfo, propertyTable: Partial<ExtractMembers<T, Tweenable>>): Tween;
    /**
     * Calculates a new alpha given an <code>EasingStyle</code> and <code>EasingDirection</code>.
     * @param this Used to create <code>Tweens</code> which interpolate, or tween, the properties of instances.
     * @param alpha An interpolation value between <code>0</code> and <code>1</code>.
     * @param easingStyle The easing style to use.
     * @param easingDirection The easing direction to use.
     * @returns A new alpha value generated from the given easing style and direction.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/TweenService#GetValue)
     */
    GetValue(this: TweenService, alpha: number, easingStyle: CastsToEnum<Enum.EasingStyle>, easingDirection: CastsToEnum<Enum.EasingDirection>): number;
    /**
     * Calculates a value simulating a critically damped spring.
     * @param this Used to create <code>Tweens</code> which interpolate, or tween, the properties of instances.
     * @param current The current position.
     * @param target The target position.
     * @param velocity The initial velocity at which the current position should approach the target position.
     * @param smoothTime The duration in which the total smoothing operation should take place.
     * @param maxSpeed The maximum speed at which the current position should approach the target position.
     * @param dt The rate at which the smoothing operation should be applied.
     * @returns The new position and velocity calculated from the smoothing operation.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/TweenService#SmoothDamp)
     */
    SmoothDamp(this: TweenService, current: unknown, target: unknown, velocity: unknown, smoothTime: number, maxSpeed?: number, dt?: number): LuaTuple<[
        unknown,
        unknown
    ]>;
}
/**
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/UGCAvatarService)
 */
interface UGCAvatarService extends Instance {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_UGCAvatarService: unique symbol;
}
/**
 * <code>UIBase</code> is the base class for UI layout and constraint classes.
 *
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/UIBase)
 */
interface UIBase extends Instance {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_UIBase: unique symbol;
}
/**
 * A base class for UI constraint and layout classes.
 *
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/UIComponent)
 */
interface UIComponent extends UIBase {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_UIComponent: unique symbol;
}
/**
 * The base class for UI constraint classes.
 *
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/UIConstraint)
 */
interface UIConstraint extends UIComponent {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_UIConstraint: unique symbol;
}
/**
 * Ensures the parent UI element maintains a particular aspect ratio.
 *
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/UIAspectRatioConstraint)
 */
interface UIAspectRatioConstraint extends UIConstraint {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_UIAspectRatioConstraint: unique symbol;
    /**
     * Determines the width-to-height ratio to maintain.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/UIAspectRatioConstraint#AspectRatio)
     */
    AspectRatio: number;
    /**
     * Determines how the maximum size of the object is limited.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/UIAspectRatioConstraint#AspectType)
     */
    AspectType: Enum.AspectType;
    /**
     * Determines the axis to use when setting the new size of the object.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/UIAspectRatioConstraint#DominantAxis)
     */
    DominantAxis: Enum.DominantAxis;
}
/**
 * Ensures a <code>GuiObject</code> does not become larger or smaller than the constraint's maximum size or minimum size.
 *
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/UISizeConstraint)
 */
interface UISizeConstraint extends UIConstraint {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_UISizeConstraint: unique symbol;
    /**
     * The largest size, in pixels, the parent object is allowed to be.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/UISizeConstraint#MaxSize)
     */
    MaxSize: Vector2;
    /**
     * The smallest size, in pixels, the object is allowed to be.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/UISizeConstraint#MinSize)
     */
    MinSize: Vector2;
}
/**
 * Ensures that the size of text rendered by certain <code>GuiObject</code> classes lies within the range described by <code>MaxTextSize</code> and <code>MinTextSize</code>.
 *
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/UITextSizeConstraint)
 */
interface UITextSizeConstraint extends UIConstraint {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_UITextSizeConstraint: unique symbol;
    /**
     * The largest size in pixels the font is allowed to be.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/UITextSizeConstraint#MaxTextSize)
     */
    MaxTextSize: number;
    /**
     * The smallest size in pixels the font is allowed to be.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/UITextSizeConstraint#MinTextSize)
     */
    MinTextSize: number;
}
/**
 * UI modifier which applies deformation to corners of its parent <code>GuiObject</code>.
 *
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/UICorner)
 */
interface UICorner extends UIComponent {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_UICorner: unique symbol;
    /**
     * Determines the radius of the component.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/UICorner#CornerRadius)
     */
    CornerRadius: UDim;
}
/**
 * Instance which facilitates and encourages interaction with UI elements in an experience.
 *
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/UIDragDetector)
 */
interface UIDragDetector extends UIComponent {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_UIDragDetector: unique symbol;
    /**
     * Sets the cursor icon to display when the mouse is activated over the parent of this <code>UIDragDetector</code>.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/UIDragDetector#ActivatedCursorIcon)
     */
    ActivatedCursorIcon: ContentId;
    /**
     * Determines bounding behavior of the dragged UI object when the detector's <code>BoundingUI</code> is set.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/UIDragDetector#BoundingBehavior)
     */
    BoundingBehavior: Enum.UIDragDetectorBoundingBehavior;
    /**
     * Instance whose bounding area defines the drag boundaries for the parent <code>GuiObject</code>.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/UIDragDetector#BoundingUI)
     */
    BoundingUI: GuiBase2d | undefined;
    /**
     * Sets the cursor icon to display when the mouse is hovered over the parent of this <code>UIDragDetector</code>.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/UIDragDetector#CursorIcon)
     */
    CursorIcon: ContentId;
    /**
     * The drag axis for the <code>UIDragDetector</code> instance when <code>DragStyle</code> is set to <code>UIDragDetectorDragStyle.TranslateLine</code>.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/UIDragDetector#DragAxis)
     */
    DragAxis: Vector2;
    /**
     * Sets the paradigm which defines the relativity of inputs/outputs from a custom drag function.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/UIDragDetector#DragRelativity)
     */
    DragRelativity: Enum.UIDragDetectorDragRelativity;
    /**
     * The rotation performed by the current drag.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/UIDragDetector#DragRotation)
     */
    DragRotation: number;
    /**
     * Sets the paradigm which defines the space of inputs/outputs from a custom drag function.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/UIDragDetector#DragSpace)
     */
    DragSpace: Enum.UIDragDetectorDragSpace;
    /**
     * The paradigm used to generate proposed motion.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/UIDragDetector#DragStyle)
     */
    DragStyle: Enum.UIDragDetectorDragStyle;
    /**
     * The translation performed by the current drag expressed in a <code>UDim2</code> value.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/UIDragDetector#DragUDim2)
     */
    DragUDim2: UDim2;
    /**
     * Whether the <code>UIDragDetector</code> responds to user input.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/UIDragDetector#Enabled)
     */
    Enabled: boolean;
    /**
     * Along with <code>MinDragAngle</code>, impedes the detector's attempts to generate rotational motion.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/UIDragDetector#MaxDragAngle)
     */
    MaxDragAngle: number;
    /**
     * Along with <code>MinDragTranslation</code>, impedes the detector's attempts to generate linear/planar motion.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/UIDragDetector#MaxDragTranslation)
     */
    MaxDragTranslation: UDim2;
    /**
     * Along with <code>MaxDragAngle</code>, impedes the detector's attempts to generate rotational motion.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/UIDragDetector#MinDragAngle)
     */
    MinDragAngle: number;
    /**
     * Along with <code>MaxDragTranslation</code>, impedes the detector's attempts to generate linear/planar motion.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/UIDragDetector#MinDragTranslation)
     */
    MinDragTranslation: UDim2;
    /**
     * A <code>GuiObject</code> instance whose local space and absolute center position is the reference space and origin for the detector.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/UIDragDetector#ReferenceUIInstance)
     */
    ReferenceUIInstance: GuiObject | undefined;
    /**
     * The paradigm used to define the response to proposed motion.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/UIDragDetector#ResponseStyle)
     */
    ResponseStyle: Enum.UIDragDetectorResponseStyle;
    /**
     * Maximum drag speed for translation.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/UIDragDetector#SelectionModeDragSpeed)
     */
    SelectionModeDragSpeed: UDim2;
    /**
     * Maximum angle per second the <code>UIDragDetector</code> can rotate at.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/UIDragDetector#SelectionModeRotateSpeed)
     */
    SelectionModeRotateSpeed: number;
    /**
     * <code>UIDragSpeedAxisMapping</code> value that determines the <strong>X</strong>/<strong>Y</strong> dimension dragging speeds.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/UIDragDetector#UIDragSpeedAxisMapping)
     */
    UIDragSpeedAxisMapping: Enum.UIDragSpeedAxisMapping;
    /**
     * Adds a function to modify or constrain proposed motion.
     * @param this Instance which facilitates and encourages interaction with UI elements in an experience.
     * @param priority The order of priority for functions added via this method. Higher values take precedence over lower values.
     * @param function Function for modifying or constraining proposed motion. This function takes in input <code>UDim2</code> and float of <strong>proposed</strong> motion and returns a <code>UDim2</code> and float of <strong>modified</strong> or unmodified motion. It can optionally return an <code>UIDragDetectorDragRelativity</code> and <code>UIDragDetectorDragSpace</code> as the third and fourth return values as output overrides.
     * @returns Use this connection object to remove the constraint function.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/UIDragDetector#AddConstraintFunction)
     */
    AddConstraintFunction(this: UIDragDetector, priority: number, callback: (proposedPosition: UDim2, proposedRotation: number) => LuaTuple<[
        UDim2,
        number,
        Enum.UIDragDetectorDragRelativity?,
        Enum.UIDragDetectorDragSpace?
    ]>): RBXScriptConnection;
    /**
     * Returns the reference <code>UDim2</code> position of the current drag's reference origin.
     * @param this Instance which facilitates and encourages interaction with UI elements in an experience.
     * @returns <code>UDim2</code> position of the current drag's reference element.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/UIDragDetector#GetReferencePosition)
     */
    GetReferencePosition(this: UIDragDetector): UDim2;
    /**
     * Returns the reference rotation of the current drag's reference element.
     * @param this Instance which facilitates and encourages interaction with UI elements in an experience.
     * @returns Rotation of the current drag's reference element.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/UIDragDetector#GetReferenceRotation)
     */
    GetReferenceRotation(this: UIDragDetector): number;
    /**
     * Passes a function to be used if and only if <code>DragStyle</code> is set to <code>UIDragDetectorDragStyle.Scriptable</code>.
     * @param this Instance which facilitates and encourages interaction with UI elements in an experience.
     * @param function Function for monitoring <code>DragContinue</code> signals. This function receives the singal's screen space input position and returns a <code>UDim2</code> and float containing the desired motion of the drag in the desired space and relativity. If this function returns <code>nil</code>, the object will not be moved.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/UIDragDetector#SetDragStyleFunction)
     */
    SetDragStyleFunction(this: UIDragDetector, callback: (inputPosition: UDim2) => UDim2 | void): void;
    /**
     * Fires when a user continues dragging the UI element after <code>DragStart</code> has been initiated.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/UIDragDetector#DragContinue)
     */
    readonly DragContinue: RBXScriptSignal<(inputPosition: Vector2) => void>;
    /**
     * Fires when a user stops dragging the UI element.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/UIDragDetector#DragEnd)
     */
    readonly DragEnd: RBXScriptSignal<(inputPosition: Vector2) => void>;
    /**
     * Fires when a user starts dragging the UI element.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/UIDragDetector#DragStart)
     */
    readonly DragStart: RBXScriptSignal<(inputPosition: Vector2) => void>;
}
/**
 * Defines flex behavior for a <code>GuiObject</code> within a <code>UIListLayout</code>.
 *
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/UIFlexItem)
 */
interface UIFlexItem extends UIComponent {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_UIFlexItem: unique symbol;
    /**
     * How the parent <code>GuiObject</code> grows or shrinks with available space in the flex layout container.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/UIFlexItem#FlexMode)
     */
    FlexMode: Enum.UIFlexMode;
    /**
     * Determines the amount the parent <code>GuiObject</code> grows relative to other items in the line. Applies only if <code>FlexMode</code> is set to <code>UIFlexMode.Custom</code>.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/UIFlexItem#GrowRatio)
     */
    GrowRatio: number;
    /**
     * Cross-axis alignment of the specific parent <code>GuiObject</code> within the flex line.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/UIFlexItem#ItemLineAlignment)
     */
    ItemLineAlignment: Enum.ItemLineAlignment;
    /**
     * Determines the amount the parent <code>GuiObject</code> shrinks relative to other items in the line. Applies only if <code>FlexMode</code> is set to <code>UIFlexMode.Custom</code>.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/UIFlexItem#ShrinkRatio)
     */
    ShrinkRatio: number;
}
/**
 * Applies a color and transparency gradient to the UI elements rendered by the parent <code>GuiObject</code>.
 *
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/UIGradient)
 */
interface UIGradient extends UIComponent {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_UIGradient: unique symbol;
    /**
     * Determines the color blended with the parent GuiObject along the length of the gradient.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/UIGradient#Color)
     */
    Color: ColorSequence;
    /**
     * Whether the gradient is enabled or not.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/UIGradient#Enabled)
     */
    Enabled: boolean;
    /**
     * Determines the scalar translation of the gradient from the center of the parent GuiObject.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/UIGradient#Offset)
     */
    Offset: Vector2;
    /**
     * Determines the clockwise rotation in degrees of the gradient starting from left to right.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/UIGradient#Rotation)
     */
    Rotation: number;
    /**
     * Determines how much the parent GuiObject can be seen through along the length of the gradient.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/UIGradient#Transparency)
     */
    Transparency: NumberSequence;
}
/**
 * The base class for UI layout classes.
 *
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/UILayout)
 */
interface UILayout extends UIComponent {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_UILayout: unique symbol;
}
/**
 * The base class for grid style UI layouts.
 *
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/UIGridStyleLayout)
 */
interface UIGridStyleLayout extends UILayout {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_UIGridStyleLayout: unique symbol;
    /**
     * The absolute size of space being taken up by the grid layout.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/UIGridStyleLayout#AbsoluteContentSize)
     */
    readonly AbsoluteContentSize: Vector2;
    /**
     * Determines the axis in which UI objects are laid out.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/UIGridStyleLayout#FillDirection)
     */
    FillDirection: Enum.FillDirection;
    /**
     * Determines the horizontal alignment of UI elements within the parent element.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/UIGridStyleLayout#HorizontalAlignment)
     */
    HorizontalAlignment: Enum.HorizontalAlignment;
    /**
     * Determines the order in which child UI objects are placed in a layout.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/UIGridStyleLayout#SortOrder)
     */
    SortOrder: Enum.SortOrder;
    /**
     * Determines the vertical alignment of UI elements within the parent element.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/UIGridStyleLayout#VerticalAlignment)
     */
    VerticalAlignment: Enum.VerticalAlignment;
    /**
     * <strong>Deprecated:</strong> <br>Force re-layout of sibling UI elements.
     * @param this The base class for grid style UI layouts.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/UIGridStyleLayout#ApplyLayout)
     */
    ApplyLayout(this: UIGridStyleLayout): void;
    /**
     * <strong>Deprecated:</strong> This method is deprecated in favor of using other SortOrder means, such as by Name or LayoutOrder.<br>Sets the function used to determine the order of elements when SortOrder is set to Custom.
     * @param this The base class for grid style UI layouts.
     * @param function
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/UIGridStyleLayout#SetCustomSortFunction)
     */
    SetCustomSortFunction(this: UIGridStyleLayout, callback?: Callback): void;
}
/**
 * Positions sibling UI elements by filling rows using the space of the parent UI element.
 *
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/UIGridLayout)
 */
interface UIGridLayout extends UIGridStyleLayout {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_UIGridLayout: unique symbol;
    /**
     * The number of elements in the grid.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/UIGridLayout#AbsoluteCellCount)
     */
    readonly AbsoluteCellCount: Vector2;
    /**
     * The absolute size of each element in the grid.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/UIGridLayout#AbsoluteCellSize)
     */
    readonly AbsoluteCellSize: Vector2;
    /**
     * Determines how much space there is between elements in the grid.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/UIGridLayout#CellPadding)
     */
    CellPadding: UDim2;
    /**
     * Determines the size of each element in the grid.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/UIGridLayout#CellSize)
     */
    CellSize: UDim2;
    /**
     * Determines the maximum number of cells that may be used in a row or column before the next one is started.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/UIGridLayout#FillDirectionMaxCells)
     */
    FillDirectionMaxCells: number;
    /**
     * Determines from which corner the grid starts laying out UI elements.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/UIGridLayout#StartCorner)
     */
    StartCorner: Enum.StartCorner;
}
/**
 * Positions sibling UI elements in rows or columns within the parent UI container.
 *
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/UIListLayout)
 */
interface UIListLayout extends UIGridStyleLayout {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_UIListLayout: unique symbol;
    /**
     * Controls how to distribute extra horizontal space.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/UIListLayout#HorizontalFlex)
     */
    HorizontalFlex: Enum.UIFlexAlignment;
    /**
     * In a flex layout, defines the <strong>cross-directional</strong> alignment of siblings within a line.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/UIListLayout#ItemLineAlignment)
     */
    ItemLineAlignment: Enum.ItemLineAlignment;
    /**
     * Amount of free space between each element.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/UIListLayout#Padding)
     */
    Padding: UDim;
    /**
     * Controls how to distribute extra vertical space.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/UIListLayout#VerticalFlex)
     */
    VerticalFlex: Enum.UIFlexAlignment;
    /**
     * Controls whether siblings within the parent container wrap.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/UIListLayout#Wraps)
     */
    Wraps: boolean;
}
/**
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/UIPageLayout)
 */
interface UIPageLayout extends UIGridStyleLayout {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_UIPageLayout: unique symbol;
    /**
     * Whether or not to animate transitions between pages.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/UIPageLayout#Animated)
     */
    Animated: boolean;
    /**
     * Whether or not the page layout wraps around at the ends.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/UIPageLayout#Circular)
     */
    Circular: boolean;
    /**
     * The page that is either currently being displayed or is the target of the current animation.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/UIPageLayout#CurrentPage)
     */
    readonly CurrentPage: GuiObject | undefined;
    /**
     * The easing direction to use when performing an animation.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/UIPageLayout#EasingDirection)
     */
    EasingDirection: Enum.EasingDirection;
    /**
     * The easing style to use when performing an animation.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/UIPageLayout#EasingStyle)
     */
    EasingStyle: Enum.EasingStyle;
    /**
     * Controls the overrides of <code>NextSelection{Up, Down, Left, Right}</code>. Defaults to true.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/UIPageLayout#GamepadInputEnabled)
     */
    GamepadInputEnabled: boolean;
    /**
     * Determines the amount that pages are separated from each other by.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/UIPageLayout#Padding)
     */
    Padding: UDim;
    /**
     * Controls the use of scroll wheel, in case that it is intended for something else. Defaults to true.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/UIPageLayout#ScrollWheelInputEnabled)
     */
    ScrollWheelInputEnabled: boolean;
    /**
     * Controls touch scrolling, in case this is a non-interactive layout. Defaults to true.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/UIPageLayout#TouchInputEnabled)
     */
    TouchInputEnabled: boolean;
    /**
     * The length of the animation.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/UIPageLayout#TweenTime)
     */
    TweenTime: number;
    /**
     * If the <code>page</code> is in the UIPageLayout, then it sets <code>UIPageLayout.CurrentPage</code> to it and animates to it. If the circular layout is enabled, it will take the shortest path to this page.
     * @param this
     * @param page
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/UIPageLayout#JumpTo)
     */
    JumpTo(this: UIPageLayout, page: GuiObject): void;
    /**
     * If the index is <code>&gt;= 0</code> and less than the size of the layout, this method acts like <code>UIPageLayout:JumpTo()</code>. If it's out of bounds and circular is set, it will animate the full distance between the in-bounds index of <code>UIPageLayout.CurrentPage</code> and the new index.
     * @param this
     * @param index
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/UIPageLayout#JumpToIndex)
     */
    JumpToIndex(this: UIPageLayout, index: number): void;
    /**
     * Sets <code>UIPageLayout.CurrentPage</code> to the page after the current page and animates to it, or does nothing if there isn't a next page.
     * @param this
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/UIPageLayout#Next)
     */
    Next(this: UIPageLayout): void;
    /**
     * Sets <code>UIPageLayout.CurrentPage</code> to the page before the current page and animates to it, or does nothing if there isn't a previous page.
     * @param this
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/UIPageLayout#Previous)
     */
    Previous(this: UIPageLayout): void;
    /**
     * Fires when a page comes into view, and is going to be rendered.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/UIPageLayout#PageEnter)
     */
    readonly PageEnter: RBXScriptSignal<(page: GuiObject) => void>;
    /**
     * Fires when a page leaves view, and will not be rendered.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/UIPageLayout#PageLeave)
     */
    readonly PageLeave: RBXScriptSignal<(page: GuiObject) => void>;
    /**
     * Fires when an animation to <code>UIPageLayout.CurrentPage</code> is completed without being canceled, and the view stops scrolling.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/UIPageLayout#Stopped)
     */
    readonly Stopped: RBXScriptSignal<(page: GuiObject) => void>;
}
/**
 * Lays out sibling UI elements and their child UI elements as rows/columns and cells in a table.
 *
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/UITableLayout)
 */
interface UITableLayout extends UIGridStyleLayout {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_UITableLayout: unique symbol;
    /**
     * Determines whether cells are sized such that they occupy the horizontal space of the parent UI element.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/UITableLayout#FillEmptySpaceColumns)
     */
    FillEmptySpaceColumns: boolean;
    /**
     * Determines whether cells are sized such that they occupy the vertical space of the parent UI element.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/UITableLayout#FillEmptySpaceRows)
     */
    FillEmptySpaceRows: boolean;
    /**
     * Determines whether sibling UI elements are treated as rows or columns.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/UITableLayout#MajorAxis)
     */
    MajorAxis: Enum.TableMajorAxis;
    /**
     * Determines the empty space between cells.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/UITableLayout#Padding)
     */
    Padding: UDim2;
}
/**
 * Applies padding to the borders of the parent <code>GuiObject</code>.
 *
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/UIPadding)
 */
interface UIPadding extends UIComponent {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_UIPadding: unique symbol;
    /**
     * Padding to apply on the bottom side, relative to the parent's normal size.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/UIPadding#PaddingBottom)
     */
    PaddingBottom: UDim;
    /**
     * Padding to apply on the left side, relative to the parent's normal size.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/UIPadding#PaddingLeft)
     */
    PaddingLeft: UDim;
    /**
     * Padding to apply on the right side, relative to the parent's normal size.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/UIPadding#PaddingRight)
     */
    PaddingRight: UDim;
    /**
     * Padding to apply on the top side, relative to the parent's normal size.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/UIPadding#PaddingTop)
     */
    PaddingTop: UDim;
}
/**
 * An object that acts as a multiplier for the size of the parent UI element's scale.
 *
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/UIScale)
 */
interface UIScale extends UIComponent {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_UIScale: unique symbol;
    /**
     * Determines the multiplier to apply to the parent UI element's size.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/UIScale#Scale)
     */
    Scale: number;
}
/**
 * Applies an outline to text or a UI border.
 *
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/UIStroke)
 */
interface UIStroke extends UIComponent {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_UIStroke: unique symbol;
    /**
     * Determines whether to apply the stroke to the object's border instead of the text itself.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/UIStroke#ApplyStrokeMode)
     */
    ApplyStrokeMode: Enum.ApplyStrokeMode;
    /**
     * Determines the stroke color.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/UIStroke#Color)
     */
    Color: Color3;
    /**
     * Determines whether the stroke in visible.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/UIStroke#Enabled)
     */
    Enabled: boolean;
    /**
     * Determines how corners are interpreted.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/UIStroke#LineJoinMode)
     */
    LineJoinMode: Enum.LineJoinMode;
    /**
     * Determines the stroke's thickness.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/UIStroke#Thickness)
     */
    Thickness: number;
    /**
     * Sets the stroke opacity independently of the parent object's <code>BackgroundTransparency</code> or <code>TextTransparency</code>.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/UIStroke#Transparency)
     */
    Transparency: number;
}
/**
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/UIDragDetectorService)
 */
interface UIDragDetectorService extends Instance {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_UIDragDetectorService: unique symbol;
}
/**
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/UnvalidatedAssetService)
 */
interface UnvalidatedAssetService extends Instance {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_UnvalidatedAssetService: unique symbol;
}
/**
 * The UserGameSettings is a singleton class found inside of the <code>UserSettings</code> singleton. It holds various persistent settings relating to how the user wants to control their camera, and their character.
 *
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/UserGameSettings)
 */
interface UserGameSettings extends Instance {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_UserGameSettings: unique symbol;
    /**
     * The camera movement mode currently in-use by the client on desktop.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/UserGameSettings#ComputerCameraMovementMode)
     */
    ComputerCameraMovementMode: Enum.ComputerCameraMovementMode;
    /**
     * The type of controls being used by the client on desktop.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/UserGameSettings#ComputerMovementMode)
     */
    ComputerMovementMode: Enum.ComputerMovementMode;
    /**
     * Toggles whether or not the client can use the Mouse Lock Switch mode.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/UserGameSettings#ControlMode)
     */
    ControlMode: Enum.ControlMode;
    /**
     * Describes how sensitive the camera is when using a gamepad.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/UserGameSettings#GamepadCameraSensitivity)
     */
    GamepadCameraSensitivity: number;
    /**
     * A float between 0 and 4 representing the sensitivity of the client's camera sensitivity.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/UserGameSettings#MouseSensitivity)
     */
    MouseSensitivity: number;
    /**
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/UserGameSettings#RCCProfilerRecordFrameRate)
     */
    RCCProfilerRecordFrameRate: number;
    /**
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/UserGameSettings#RCCProfilerRecordTimeFrame)
     */
    RCCProfilerRecordTimeFrame: number;
    /**
     * Controls how the client's character is rotated.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/UserGameSettings#RotationType)
     */
    RotationType: Enum.RotationType;
    /**
     * The graphics quality level set by the client.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/UserGameSettings#SavedQualityLevel)
     */
    SavedQualityLevel: Enum.SavedQualitySetting;
    /**
     * The camera type in-use by the client while on a mobile device.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/UserGameSettings#TouchCameraMovementMode)
     */
    TouchCameraMovementMode: Enum.TouchCameraMovementMode;
    /**
     * The type of controls being used by the client on a mobile device.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/UserGameSettings#TouchMovementMode)
     */
    TouchMovementMode: Enum.TouchMovementMode;
    /**
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/UserGameSettings#VRSmoothRotationEnabled)
     */
    get VRSmoothRotationEnabled(): boolean;
    /**
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/UserGameSettings#VignetteEnabled)
     */
    get VignetteEnabled(): boolean;
    /**
     * Returns the camera's Y-invert value.
     * @param this The UserGameSettings is a singleton class found inside of the <code>UserSettings</code> singleton. It holds various persistent settings relating to how the user wants to control their camera, and their character.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/UserGameSettings#GetCameraYInvertValue)
     */
    GetCameraYInvertValue(this: UserGameSettings): number;
    /**
     * Checks if onboarding has been completed.
     * @param this The UserGameSettings is a singleton class found inside of the <code>UserSettings</code> singleton. It holds various persistent settings relating to how the user wants to control their camera, and their character.
     * @param onboardingId The onboarding ID to inquire about.
     * @returns Whether or not the onboarding in particular has been completed yet.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/UserGameSettings#GetOnboardingCompleted)
     */
    GetOnboardingCompleted(this: UserGameSettings, onboardingId: string): boolean;
    /**
     * Returns true if the user's Roblox window is in full screen mode.
     * @param this The UserGameSettings is a singleton class found inside of the <code>UserSettings</code> singleton. It holds various persistent settings relating to how the user wants to control their camera, and their character.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/UserGameSettings#InFullScreen)
     */
    InFullScreen(this: UserGameSettings): boolean;
    /**
     * Returns true if the client's game session is in Roblox Studio.
     * @param this The UserGameSettings is a singleton class found inside of the <code>UserSettings</code> singleton. It holds various persistent settings relating to how the user wants to control their camera, and their character.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/UserGameSettings#InStudioMode)
     */
    InStudioMode(this: UserGameSettings): boolean;
    /**
     * If called, Roblox toggles the menu option to invert the user's camera y axis.
     * @param this The UserGameSettings is a singleton class found inside of the <code>UserSettings</code> singleton. It holds various persistent settings relating to how the user wants to control their camera, and their character.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/UserGameSettings#SetCameraYInvertVisible)
     */
    SetCameraYInvertVisible(this: UserGameSettings): void;
    /**
     * If called, Roblox toggles the menu option to control the camera sensitivity with gamepads.
     * @param this The UserGameSettings is a singleton class found inside of the <code>UserSettings</code> singleton. It holds various persistent settings relating to how the user wants to control their camera, and their character.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/UserGameSettings#SetGamepadCameraSensitivityVisible)
     */
    SetGamepadCameraSensitivityVisible(this: UserGameSettings): void;
    /**
     * Sets onboarding as completed.
     * @param this The UserGameSettings is a singleton class found inside of the <code>UserSettings</code> singleton. It holds various persistent settings relating to how the user wants to control their camera, and their character.
     * @param onboardingId The onboarding ID to set as completed.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/UserGameSettings#SetOnboardingCompleted)
     */
    SetOnboardingCompleted(this: UserGameSettings, onboardingId: string): void;
    /**
     * Fires if the user's full screen mode is changed.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/UserGameSettings#FullscreenChanged)
     */
    readonly FullscreenChanged: RBXScriptSignal<(isFullscreen: boolean) => void>;
    /**
     * Fired when the user's client switches between Studio mode and in-game mode. This gets fired periodically in Roblox Studio when a session starts.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/UserGameSettings#StudioModeChanged)
     */
    readonly StudioModeChanged: RBXScriptSignal<(isStudioMode: boolean) => void>;
}
/**
 * <code>UserInputService</code> is a service used to detect the type of input available on a user's device via the use of a <code>LocalScript</code>. The service is also used to detect input events.
 *
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/UserInputService)
 */
interface UserInputService extends Instance {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_UserInputService: unique symbol;
    /**
     * Describes whether the user's device has an accelerometer.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/UserInputService#AccelerometerEnabled)
     */
    readonly AccelerometerEnabled: boolean;
    /**
     * Describes whether the device being used by a user has an available gamepad.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/UserInputService#GamepadEnabled)
     */
    readonly GamepadEnabled: boolean;
    /**
     * Describes whether the user's device has a gyroscope.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/UserInputService#GyroscopeEnabled)
     */
    readonly GyroscopeEnabled: boolean;
    /**
     * Describes whether the user's device has a keyboard available.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/UserInputService#KeyboardEnabled)
     */
    readonly KeyboardEnabled: boolean;
    /**
     * <strong>Deprecated:</strong> This item has been superseded by <code>GuiService.TouchControlsEnabled</code> which should be used in all new work.<br>Toggles whether Roblox's mobile controls are hidden on mobile devices.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/UserInputService#ModalEnabled)
     */
    ModalEnabled: boolean;
    /**
     * Determines whether the user's mouse can be moved freely or is locked.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/UserInputService#MouseBehavior)
     */
    MouseBehavior: Enum.MouseBehavior;
    /**
     * Scales the delta (change) output of the user's <code>Mouse</code>.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/UserInputService#MouseDeltaSensitivity)
     */
    MouseDeltaSensitivity: number;
    /**
     * Describes whether the user's device has a mouse available.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/UserInputService#MouseEnabled)
     */
    readonly MouseEnabled: boolean;
    /**
     * The content ID of the image used as the user mouse icon.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/UserInputService#MouseIcon)
     */
    MouseIcon: ContentId;
    /**
     * Determines whether the <code>Mouse</code> icon is visible.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/UserInputService#MouseIconEnabled)
     */
    MouseIconEnabled: boolean;
    /**
     * Determines the position of the on-screen keyboard.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/UserInputService#OnScreenKeyboardPosition)
     */
    readonly OnScreenKeyboardPosition: Vector2;
    /**
     * Determines the size of the on-screen keyboard.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/UserInputService#OnScreenKeyboardSize)
     */
    readonly OnScreenKeyboardSize: Vector2;
    /**
     * Describes whether an on-screen keyboard is currently visible on the user's screen.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/UserInputService#OnScreenKeyboardVisible)
     */
    readonly OnScreenKeyboardVisible: boolean;
    /**
     * Describes whether the user's current device has a touch-screen available.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/UserInputService#TouchEnabled)
     */
    readonly TouchEnabled: boolean;
    /**
     * <strong>Deprecated:</strong> This item has been superseded by <code>UserInputService:GetUserCFrame()</code> which should be used in all new work.<br>Describes the orientation and position of a user's head, if they are actively using a virtual reality headset.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/UserInputService#UserHeadCFrame)
     */
    readonly UserHeadCFrame: CFrame;
    /**
     * Indicates whether the user is using a virtual reality headset.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/UserInputService#VREnabled)
     */
    readonly VREnabled: boolean;
    /**
     * Returns whether the given <code>UserInputType</code> gamepad supports a button corresponding with the given <code>KeyCode</code>.
     * @param this <code>UserInputService</code> is a service used to detect the type of input available on a user's device via the use of a <code>LocalScript</code>. The service is also used to detect input events.
     * @param gamepadNum The <code>UserInputType</code> of the gamepad.
     * @param gamepadKeyCode The <code>KeyCode</code> of the button in question.
     * @returns Whether the given gamepad supports a button corresponding with the given <code>KeyCode</code>.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/UserInputService#GamepadSupports)
     */
    GamepadSupports(this: UserInputService, gamepadNum: CastsToEnum<Enum.UserInputType>, gamepadKeyCode: CastsToEnum<Enum.KeyCode>): boolean;
    /**
     * Returns an array of <code>UserInputType</code> gamepads currently connected.
     * @param this <code>UserInputService</code> is a service used to detect the type of input available on a user's device via the use of a <code>LocalScript</code>. The service is also used to detect input events.
     * @returns An array of <code>UserInputTypes</code> corresponding with the gamepads connected to the user's device.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/UserInputService#GetConnectedGamepads)
     */
    GetConnectedGamepads(this: UserInputService): Array<Enum.UserInputType>;
    /**
     * Returns an <code>InputObject</code> that describes the device's current acceleration.
     * @param this <code>UserInputService</code> is a service used to detect the type of input available on a user's device via the use of a <code>LocalScript</code>. The service is also used to detect input events.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/UserInputService#GetDeviceAcceleration)
     */
    GetDeviceAcceleration(this: UserInputService): InputObject;
    /**
     * Returns an <code>InputObject</code> describing the device's current gravity vector.
     * @param this <code>UserInputService</code> is a service used to detect the type of input available on a user's device via the use of a <code>LocalScript</code>. The service is also used to detect input events.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/UserInputService#GetDeviceGravity)
     */
    GetDeviceGravity(this: UserInputService): InputObject;
    /**
     * Returns an <code>InputObject</code> and a <code>CFrame</code>,describing the device's current rotation vector.
     * @param this <code>UserInputService</code> is a service used to detect the type of input available on a user's device via the use of a <code>LocalScript</code>. The service is also used to detect input events.
     * @returns A tuple containing two properties: <ol> <li>The delta property describes the amount of rotation that last    happened</li> <li>The CFrame is the device's current rotation relative to its default    reference frame.</li> </ol>
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/UserInputService#GetDeviceRotation)
     */
    GetDeviceRotation(this: UserInputService): LuaTuple<[
        InputObject,
        CFrame
    ]>;
    /**
     * Returns the currently <code>TextBox</code> the client is currently focused on.
     * @param this <code>UserInputService</code> is a service used to detect the type of input available on a user's device via the use of a <code>LocalScript</code>. The service is also used to detect input events.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/UserInputService#GetFocusedTextBox)
     */
    GetFocusedTextBox(this: UserInputService): TextBox | undefined;
    /**
     * Returns whether a gamepad with the given <code>UserInputType</code>''gamepadNum'' is connected.
     * @param this <code>UserInputService</code> is a service used to detect the type of input available on a user's device via the use of a <code>LocalScript</code>. The service is also used to detect input events.
     * @param gamepadNum The <code>UserInputType</code> of the gamepad in question.
     * @returns Whether a gamepad associated with <code>UserInputType</code> is connected.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/UserInputService#GetGamepadConnected)
     */
    GetGamepadConnected(this: UserInputService, gamepadNum: CastsToEnum<Enum.UserInputType>): boolean;
    /**
     * Returns an array of <code>InputObjects</code> for all available inputs on the given gamepad, representing each input's last input state.
     * @param this <code>UserInputService</code> is a service used to detect the type of input available on a user's device via the use of a <code>LocalScript</code>. The service is also used to detect input events.
     * @param gamepadNum The <code>UserInputType</code> corresponding with the gamepad in question.
     * @returns An array of <code>InputObjects</code> representing the current state of all available inputs for the given gamepad.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/UserInputService#GetGamepadState)
     */
    GetGamepadState(this: UserInputService, gamepadNum: CastsToEnum<Enum.UserInputType>): Array<InputObject>;
    /**
     * Returns an image for the requested <code>KeyCode</code>.
     * @param this <code>UserInputService</code> is a service used to detect the type of input available on a user's device via the use of a <code>LocalScript</code>. The service is also used to detect input events.
     * @param keyCode The <code>KeyCode</code> for which to fetch the associated image.
     * @returns The returned image asset ID.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/UserInputService#GetImageForKeyCode)
     */
    GetImageForKeyCode(this: UserInputService, keyCode: CastsToEnum<Enum.KeyCode>): ContentId;
    /**
     * Returns an array of <code>InputObjects</code> associated with the <code>keys</code> currently being pressed down.
     * @param this <code>UserInputService</code> is a service used to detect the type of input available on a user's device via the use of a <code>LocalScript</code>. The service is also used to detect input events.
     * @returns An array of <code>InputObjects</code> associated with the keys currently being pressed.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/UserInputService#GetKeysPressed)
     */
    GetKeysPressed(this: UserInputService): Array<InputObject>;
    /**
     * Returns the <code>UserInputType</code> associated with the user's most recent input.
     * @param this <code>UserInputService</code> is a service used to detect the type of input available on a user's device via the use of a <code>LocalScript</code>. The service is also used to detect input events.
     * @returns The <code>UserInputType</code> associated with the user's most recent input.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/UserInputService#GetLastInputType)
     */
    GetLastInputType(this: UserInputService): Enum.UserInputType;
    /**
     * Returns an array of <code>InputObjects</code> corresponding with the mouse buttons currently being held down.
     * @param this <code>UserInputService</code> is a service used to detect the type of input available on a user's device via the use of a <code>LocalScript</code>. The service is also used to detect input events.
     * @returns An array of <code>InputObjects</code> corresponding to the mouse buttons currently being currently held down.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/UserInputService#GetMouseButtonsPressed)
     */
    GetMouseButtonsPressed(this: UserInputService): Array<InputObject>;
    /**
     * Returns the change, in pixels, of the position of the player's <code>Mouse</code> in the last rendered frame. Only works if the mouse is locked.
     * @param this <code>UserInputService</code> is a service used to detect the type of input available on a user's device via the use of a <code>LocalScript</code>. The service is also used to detect input events.
     * @returns Change in movement of the mouse.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/UserInputService#GetMouseDelta)
     */
    GetMouseDelta(this: UserInputService): Vector2;
    /**
     * Returns the current screen location of the player's <code>Mouse</code> relative to the top left corner of the screen.
     * @param this <code>UserInputService</code> is a service used to detect the type of input available on a user's device via the use of a <code>LocalScript</code>. The service is also used to detect input events.
     * @returns A <code>Vector2</code> representing the current screen location of the mouse, in pixels.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/UserInputService#GetMouseLocation)
     */
    GetMouseLocation(this: UserInputService): Vector2;
    /**
     * Returns an array of <code>gamepads</code> connected and enabled for GUI navigation in descending order of priority.
     * @param this <code>UserInputService</code> is a service used to detect the type of input available on a user's device via the use of a <code>LocalScript</code>. The service is also used to detect input events.
     * @returns An array of <code>UserInputTypes</code> that can be used for GUI navigation, in descending order of priority.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/UserInputService#GetNavigationGamepads)
     */
    GetNavigationGamepads(this: UserInputService): Array<Enum.UserInputType>;
    /**
     * Returns a string representing a key the user should press in order to input a given <code>KeyCode</code>.
     * @param this <code>UserInputService</code> is a service used to detect the type of input available on a user's device via the use of a <code>LocalScript</code>. The service is also used to detect input events.
     * @param keyCode
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/UserInputService#GetStringForKeyCode)
     */
    GetStringForKeyCode(this: UserInputService, keyCode: CastsToEnum<Enum.KeyCode>): string;
    /**
     * Returns an array of <code>KeyCodes</code> that the gamepad associated with the given <code>UserInputType</code> supports.
     * @param this <code>UserInputService</code> is a service used to detect the type of input available on a user's device via the use of a <code>LocalScript</code>. The service is also used to detect input events.
     * @param gamepadNum The <code>UserInputType</code> of the gamepad.
     * @returns An array of <code>KeyCodes</code> supported by the given gamepad.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/UserInputService#GetSupportedGamepadKeyCodes)
     */
    GetSupportedGamepadKeyCodes(this: UserInputService, gamepadNum: CastsToEnum<Enum.UserInputType>): Array<Enum.KeyCode>;
    /**
     * <strong>Deprecated:</strong> <br>Returns a <code>CFrame</code> describing the position and orientation of a specified virtual reality device.
     * @param this <code>UserInputService</code> is a service used to detect the type of input available on a user's device via the use of a <code>LocalScript</code>. The service is also used to detect input events.
     * @param type The <code>UserCFrame</code> corresponding to the VR device.
     * @returns A <code>CFrame</code> describing the position and orientation of the specified VR device.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/UserInputService#GetUserCFrame)
     */
    GetUserCFrame(this: UserInputService, type: CastsToEnum<Enum.UserCFrame>): CFrame;
    /**
     * Determines whether a particular button is pressed on a particular gamepad.
     * @param this <code>UserInputService</code> is a service used to detect the type of input available on a user's device via the use of a <code>LocalScript</code>. The service is also used to detect input events.
     * @param gamepadNum The <code>UserInputType</code> of the given gamepad.
     * @param gamepadKeyCode The <code>KeyCode</code> of the specified button.
     * @returns Whether the specified gamepad button on the given gamepad is pressed is pressed.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/UserInputService#IsGamepadButtonDown)
     */
    IsGamepadButtonDown(this: UserInputService, gamepadNum: CastsToEnum<Enum.UserInputType>, gamepadKeyCode: CastsToEnum<Enum.KeyCode>): boolean;
    /**
     * Returns whether the given <code>key</code> is currently held down.
     * @param this <code>UserInputService</code> is a service used to detect the type of input available on a user's device via the use of a <code>LocalScript</code>. The service is also used to detect input events.
     * @param keyCode The <code>KeyCode</code> of the key.
     * @returns Whether the specified key is being held down.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/UserInputService#IsKeyDown)
     */
    IsKeyDown(this: UserInputService, keyCode: CastsToEnum<Enum.KeyCode>): boolean;
    /**
     * Returns whether the given <code>mouse button</code> is currently held down.
     * @param this <code>UserInputService</code> is a service used to detect the type of input available on a user's device via the use of a <code>LocalScript</code>. The service is also used to detect input events.
     * @param mouseButton The <code>UserInputType</code> of the mouse button.
     * @returns Whether the given mouse button is currently held down.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/UserInputService#IsMouseButtonPressed)
     */
    IsMouseButtonPressed(this: UserInputService, mouseButton: CastsToEnum<Enum.UserInputType>): boolean;
    /**
     * Returns true if the specified <code>UserInputType</code> gamepad is allowed to control the navigation <code>GuiObjects</code>.
     * @param this <code>UserInputService</code> is a service used to detect the type of input available on a user's device via the use of a <code>LocalScript</code>. The service is also used to detect input events.
     * @param gamepadEnum The <code>UserInputType</code> of the specified gamepad.
     * @returns Whether the specified gamepad is a navigation gamepad.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/UserInputService#IsNavigationGamepad)
     */
    IsNavigationGamepad(this: UserInputService, gamepadEnum: CastsToEnum<Enum.UserInputType>): boolean;
    /**
     * Recenters the <code>CFrame</code> of the VR headset to the current orientation of the headset worn by the user.
     * @param this <code>UserInputService</code> is a service used to detect the type of input available on a user's device via the use of a <code>LocalScript</code>. The service is also used to detect input events.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/UserInputService#RecenterUserHeadCFrame)
     */
    RecenterUserHeadCFrame(this: UserInputService): void;
    /**
     * Sets whether or not the specified <code>Gamepad</code> can move the <code>GuiObject</code> navigator.
     * @param this <code>UserInputService</code> is a service used to detect the type of input available on a user's device via the use of a <code>LocalScript</code>. The service is also used to detect input events.
     * @param gamepadEnum The <code>UserInputType</code> of the specified gamepad.
     * @param enabled Whether the specified gamepad can move the GUI navigator.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/UserInputService#SetNavigationGamepad)
     */
    SetNavigationGamepad(this: UserInputService, gamepadEnum: CastsToEnum<Enum.UserInputType>, enabled: boolean): void;
    /**
     * Fired when a user moves a device that has an accelerometer. Used to track real-world device movement within a Roblox game.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/UserInputService#DeviceAccelerationChanged)
     */
    readonly DeviceAccelerationChanged: RBXScriptSignal<(acceleration: InputObject) => void>;
    /**
     * Fired when the force of gravity changes on a device that has an enabled accelerometer - such as a mobile device.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/UserInputService#DeviceGravityChanged)
     */
    readonly DeviceGravityChanged: RBXScriptSignal<(gravity: InputObject) => void>;
    /**
     * Fired when a user rotates a device that has a gyroscope.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/UserInputService#DeviceRotationChanged)
     */
    readonly DeviceRotationChanged: RBXScriptSignal<(rotation: InputObject, cframe: CFrame) => void>;
    /**
     * Fires when a gamepad is connected to the client. Passes the ''gamepadNum'' of the gamepad that was connected.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/UserInputService#GamepadConnected)
     */
    readonly GamepadConnected: RBXScriptSignal<(gamepadNum: Enum.UserInputType) => void>;
    /**
     * Fires when a gamepad is disconnected from the client. Passes the <code>UserInputType</code> of the gamepad that was disconnected.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/UserInputService#GamepadDisconnected)
     */
    readonly GamepadDisconnected: RBXScriptSignal<(gamepadNum: Enum.UserInputType) => void>;
    /**
     * Fired when a user begins interacting via a Human-Computer Interface device - such as a mouse or gamepad.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/UserInputService#InputBegan)
     */
    readonly InputBegan: RBXScriptSignal<(input: InputObject, gameProcessedEvent: boolean) => void>;
    /**
     * Fired when a user changes how they're interacting via a Human-Computer Interface device.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/UserInputService#InputChanged)
     */
    readonly InputChanged: RBXScriptSignal<(input: InputObject, gameProcessedEvent: boolean) => void>;
    /**
     * Fires when a user stops interacting via a Human-Computer Interface device.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/UserInputService#InputEnded)
     */
    readonly InputEnded: RBXScriptSignal<(input: InputObject, gameProcessedEvent: boolean) => void>;
    /**
     * Fires whenever the client makes a request for their character to jump.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/UserInputService#JumpRequest)
     */
    readonly JumpRequest: RBXScriptSignal<() => void>;
    /**
     * Fires when the client's <code>UserInputType</code> is changed.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/UserInputService#LastInputTypeChanged)
     */
    readonly LastInputTypeChanged: RBXScriptSignal<(lastInputType: Enum.UserInputType) => void>;
    /**
     * Fires when the user performs a specific pointer action (wheel, pinch, pan).
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/UserInputService#PointerAction)
     */
    readonly PointerAction: RBXScriptSignal<(wheel: number, pan: Vector2, pinch: number, gameProcessedEvent: boolean) => void>;
    /**
     * Fired when the client loses focus on a <code>TextBox</code>.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/UserInputService#TextBoxFocusReleased)
     */
    readonly TextBoxFocusReleased: RBXScriptSignal<(textboxReleased: TextBox) => void>;
    /**
     * Fired when the client focuses on a <code>TextBox</code>.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/UserInputService#TextBoxFocused)
     */
    readonly TextBoxFocused: RBXScriptSignal<(textboxFocused: TextBox) => void>;
    /**
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/UserInputService#TouchDrag)
     */
    readonly TouchDrag: RBXScriptSignal<(dragDirection: Enum.SwipeDirection, numberOfTouches: number, gameProcessedEvent: boolean) => void>;
    /**
     * Fired when a user releases their finger from the screen on a TouchEnabled device - such as the screen of a mobile device.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/UserInputService#TouchEnded)
     */
    readonly TouchEnded: RBXScriptSignal<(touch: InputObject, gameProcessedEvent: boolean) => void>;
    /**
     * Fired when a user holds at least one finger for a short amount of time on the same screen position on a TouchEnabled device - such as the screen of a mobile device.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/UserInputService#TouchLongPress)
     */
    readonly TouchLongPress: RBXScriptSignal<(touchPositions: Array<Vector2>, state: Enum.UserInputState, gameProcessedEvent: boolean) => void>;
    /**
     * Fired when a user moves their finger on a TouchEnabled device - such as the screen of an Apple iPad or iPhone or a Google Android phone.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/UserInputService#TouchMoved)
     */
    readonly TouchMoved: RBXScriptSignal<(touch: InputObject, gameProcessedEvent: boolean) => void>;
    /**
     * Fired when a user drags at least one finger on a <code>TouchEnabled</code> device - such as the screen of a mobile device.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/UserInputService#TouchPan)
     */
    readonly TouchPan: RBXScriptSignal<(touchPositions: Array<Vector2>, totalTranslation: Vector2, velocity: Vector2, state: Enum.UserInputState, gameProcessedEvent: boolean) => void>;
    /**
     * Fired when a user pinches their fingers on a <code>TouchEnabled</code> device - such as the screen of a mobile device.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/UserInputService#TouchPinch)
     */
    readonly TouchPinch: RBXScriptSignal<(touchPositions: Array<Vector2>, scale: number, velocity: number, state: Enum.UserInputState, gameProcessedEvent: boolean) => void>;
    /**
     * Fires when a user rotates two fingers on a <code>TouchEnabled</code> device - such as the screen of a mobile device.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/UserInputService#TouchRotate)
     */
    readonly TouchRotate: RBXScriptSignal<(touchPositions: Array<Vector2>, rotation: number, velocity: number, state: Enum.UserInputState, gameProcessedEvent: boolean) => void>;
    /**
     * Fired when a user places their finger on a TouchEnabled device - such as the screen of an Apple iPad or iPhone or a Google Android phone.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/UserInputService#TouchStarted)
     */
    readonly TouchStarted: RBXScriptSignal<(touch: InputObject, gameProcessedEvent: boolean) => void>;
    /**
     * Fires on a <code>TouchEnabled</code> device when a user places their finger(s) down on the screen, pans across the screen, and lifts their finger off with a certain speed of movement.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/UserInputService#TouchSwipe)
     */
    readonly TouchSwipe: RBXScriptSignal<(swipeDirection: Enum.SwipeDirection, numberOfTouches: number, gameProcessedEvent: boolean) => void>;
    /**
     * Fired when a user taps their finger on a <code>TouchEnabled</code> device - such as the screen of a mobile device.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/UserInputService#TouchTap)
     */
    readonly TouchTap: RBXScriptSignal<(touchPositions: Array<Vector2>, gameProcessedEvent: boolean) => void>;
    /**
     * Fires when a user taps the game world on a <code>TouchEnabled</code> device - such as the screen of a mobile device.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/UserInputService#TouchTapInWorld)
     */
    readonly TouchTapInWorld: RBXScriptSignal<(position: Vector2, processedByUI: boolean) => void>;
    /**
     * <strong>Deprecated:</strong> <br>Fires when the <code>CFrame</code> of a specified Virtual Reality device changes.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/UserInputService#UserCFrameChanged)
     */
    readonly UserCFrameChanged: RBXScriptSignal<(type: Enum.UserCFrame, value: CFrame) => void>;
    /**
     * Fires when the window of the Roblox client loses focus on the user's screen.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/UserInputService#WindowFocusReleased)
     */
    readonly WindowFocusReleased: RBXScriptSignal<() => void>;
    /**
     * Fires when the window of the Roblox client gains focus on the user's screen.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/UserInputService#WindowFocused)
     */
    readonly WindowFocused: RBXScriptSignal<() => void>;
}
/**
 * A service that handles queries regarding users on the Roblox platform.
 *
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/UserService)
 */
interface UserService extends Instance {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_UserService: unique symbol;
    /**
     * Returns an array of user information including user name and display name.
     * @param this A service that handles queries regarding users on the Roblox platform.
     * @param userIds An array of <code>UserIds</code> requested.
     * @returns An array of dictionary objects that contain user information.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/UserService#GetUserInfosByUserIdsAsync)
     */
    GetUserInfosByUserIdsAsync(this: UserService, userIds: Array<number>): Array<UserInfo>;
}
/**
 * Service responsible for handling interactions between Roblox and Virtual Reality (VR).
 *
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/VRService)
 */
interface VRService extends Instance {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_VRService: unique symbol;
    /**
     * Automatically adjusts scaling in VR to align the player with their avatar.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/VRService#AutomaticScaling)
     */
    AutomaticScaling: Enum.VRScaling;
    /**
     * When true, a VR player will be able to animate their hands and head using their controllers and headset.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/VRService#AvatarGestures)
     */
    AvatarGestures: boolean;
    /**
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/VRService#ControllerModels)
     */
    ControllerModels: Enum.VRControllerModelMode;
    /**
     * When true, a VR player's view will fade to black when their head collides with an object.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/VRService#FadeOutViewOnCollision)
     */
    FadeOutViewOnCollision: boolean;
    /**
     * Describes what <code>UserCFrame</code> is responsible for input in VR.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/VRService#GuiInputUserCFrame)
     */
    GuiInputUserCFrame: Enum.UserCFrame;
    /**
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/VRService#LaserPointer)
     */
    LaserPointer: Enum.VRLaserPointerMode;
    /**
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/VRService#ThirdPersonFollowCamEnabled)
     */
    readonly ThirdPersonFollowCamEnabled: boolean;
    /**
     * Describes whether the user is using a virtual reality device.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/VRService#VREnabled)
     */
    readonly VREnabled: boolean;
    /**
     * Returns the VRTouchpadMode indicating the mode of a specified VRTouchpad.
     * @param this Service responsible for handling interactions between Roblox and Virtual Reality (VR).
     * @param pad The specified <code>VRTouchpad</code>.
     * @returns The mode of the specified <code>VRTouchpad</code>.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/VRService#GetTouchpadMode)
     */
    GetTouchpadMode(this: VRService, pad: CastsToEnum<Enum.VRTouchpad>): Enum.VRTouchpadMode;
    /**
     * Returns a CFrame describing the position &amp; orientation of a specified virtual reality device as an offset from a point in real world space.
     * @param this Service responsible for handling interactions between Roblox and Virtual Reality (VR).
     * @param type The specified <code>UserCFrame</code>.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/VRService#GetUserCFrame)
     */
    GetUserCFrame(this: VRService, type: CastsToEnum<Enum.UserCFrame>): CFrame;
    /**
     * Returns true if the specified <code>UserCFrame</code> is available to be listened to.
     * @param this Service responsible for handling interactions between Roblox and Virtual Reality (VR).
     * @param type The specified type of VR device.
     * @returns A boolean indicating whether the specified VR device is enabled (<code>true</code>) or disabled (<code>false</code>).
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/VRService#GetUserCFrameEnabled)
     */
    GetUserCFrameEnabled(this: VRService, type: CastsToEnum<Enum.UserCFrame>): boolean;
    /**
     * Re-centers the <code>CFrame</code> to the current location of the VR headset being worn by the user.
     * @param this Service responsible for handling interactions between Roblox and Virtual Reality (VR).
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/VRService#RecenterUserHeadCFrame)
     */
    RecenterUserHeadCFrame(this: VRService): void;
    /**
     * Requests navigation to the specified <code>CFrame</code> using the specified <code>UserCFrame</code> as the origin for the visualizer parabola.
     * @param this Service responsible for handling interactions between Roblox and Virtual Reality (VR).
     * @param cframe The specified <code>CFrame</code> coordinates.
     * @param inputUserCFrame The VR device for which the navigation is requested.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/VRService#RequestNavigation)
     */
    RequestNavigation(this: VRService, cframe: CFrame, inputUserCFrame: CastsToEnum<Enum.UserCFrame>): void;
    /**
     * Sets the mode of the specified <code>VRTouchpad</code> to the specified <code>VRTouchpadMode</code>.
     * @param this Service responsible for handling interactions between Roblox and Virtual Reality (VR).
     * @param pad The specified <code>VRTouchpad</code> you want to set the mode of.
     * @param mode The mode you want to set the specified <code>VRTouchpad</code> to.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/VRService#SetTouchpadMode)
     */
    SetTouchpadMode(this: VRService, pad: CastsToEnum<Enum.VRTouchpad>, mode: CastsToEnum<Enum.VRTouchpadMode>): void;
    /**
     * Fired when navigation is requested from <code>VRService</code>.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/VRService#NavigationRequested)
     */
    readonly NavigationRequested: RBXScriptSignal<(cframe: CFrame, inputUserCFrame: Enum.UserCFrame) => void>;
    /**
     * Fires if the <code>VRTouchpadMode</code> of a <code>VRTouchpad</code> is changed.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/VRService#TouchpadModeChanged)
     */
    readonly TouchpadModeChanged: RBXScriptSignal<(pad: Enum.VRTouchpad, mode: Enum.VRTouchpadMode) => void>;
    /**
     * Fires when a <code>UserCFrame</code> is changed.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/VRService#UserCFrameChanged)
     */
    readonly UserCFrameChanged: RBXScriptSignal<(type: Enum.UserCFrame, value: CFrame) => void>;
    /**
     * Fires when a <code>UserCFrame</code> is enabled or disabled.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/VRService#UserCFrameEnabled)
     */
    readonly UserCFrameEnabled: RBXScriptSignal<(type: Enum.UserCFrame, enabled: boolean) => void>;
}
/**
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/VRStatusService)
 */
interface VRStatusService extends Instance {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_VRStatusService: unique symbol;
}
/**
 * Base class of all 'Value Instance' objects.
 *
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/ValueBase)
 */
interface ValueBase extends Instance {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_ValueBase: unique symbol;
    Value: unknown;
    readonly Changed: RBXScriptSignal<(value?: unknown) => void>;
}
/**
 * A container object for a single boolean value.
 *
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/BoolValue)
 */
interface BoolValue extends ValueBase {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_BoolValue: unique symbol;
    /**
     * Used to hold a boolean value.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/BoolValue#Value)
     */
    Value: boolean;
    /**
     * Fired whenever the <code>BoolValue.Value</code> of the BoolValue is changed.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/BoolValue#Changed)
     */
    readonly Changed: RBXScriptSignal<(value: boolean) => void>;
}
/**
 * A container object for a single BrickColor value.
 *
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/BrickColorValue)
 */
interface BrickColorValue extends ValueBase {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_BrickColorValue: unique symbol;
    /**
     * Used to hold a <code>BrickColor</code> value.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/BrickColorValue#Value)
     */
    Value: BrickColor;
    /**
     * Fired whenever the <code>BrickColorValue.Value</code> of the BrickColorValue is changed.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/BrickColorValue#Changed)
     */
    readonly Changed: RBXScriptSignal<(value: BrickColor) => void>;
}
/**
 * A container object for a single CFrame value.
 *
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/CFrameValue)
 */
interface CFrameValue extends ValueBase {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_CFrameValue: unique symbol;
    /**
     * Used to hold a <code>CFrame</code> value.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/CFrameValue#Value)
     */
    Value: CFrame;
    /**
     * Fired whenever the <code>CFrameValue.Value</code> of the CFrameValue is changed.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/CFrameValue#Changed)
     */
    readonly Changed: RBXScriptSignal<(value: CFrame) => void>;
}
/**
 * A container object for a single Color3 value.
 *
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Color3Value)
 */
interface Color3Value extends ValueBase {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_Color3Value: unique symbol;
    /**
     * The stored <code>Color3</code>.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Color3Value#Value)
     */
    Value: Color3;
    /**
     * Fired whenever the <code>Color3Value.Value</code> is changed.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Color3Value#Changed)
     */
    readonly Changed: RBXScriptSignal<(value: Color3) => void>;
}
/**
 * <strong>Deprecated:</strong> The DoubleConstrainedValue object has been deprecated as developers can now use the <code>math.clamp()</code> function to constrain values.<br>An instance which is used to create a number value which can never be less than the MinValue or more than the MaxValue.
 *
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/DoubleConstrainedValue)
 */
interface DoubleConstrainedValue extends ValueBase {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_DoubleConstrainedValue: unique symbol;
    /**
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/DoubleConstrainedValue#ConstrainedValue)
     */
    ConstrainedValue: number;
    /**
     * The highest number that the <code>DoubleConstrainedValue.Value</code> property can be.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/DoubleConstrainedValue#MaxValue)
     */
    MaxValue: number;
    /**
     * The lowest number that the <code>DoubleConstrainedValue.Value</code> property can be.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/DoubleConstrainedValue#MinValue)
     */
    MinValue: number;
    /**
     * Used to hold a number value between <code>DoubleConstrainedValue.MinValue</code> and <code>DoubleConstrainedValue.MaxValue</code>.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/DoubleConstrainedValue#Value)
     */
    Value: number;
    /**
     * Fired whenever the <code>DoubleConstrainedValue.Value</code> of the <code>DoubleConstrainedValue</code> is changed.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/DoubleConstrainedValue#Changed)
     */
    readonly Changed: RBXScriptSignal<(value: number) => void>;
}
/**
 * <strong>Deprecated:</strong> The IntConstrainedValue object has been deprecated as developers can now use the <code>math.clamp()</code> function to constrain values.<br>An IntConstrainedValue is used to store a value which can never be less than MinValue and can never be more than MaxValue.
 *
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/IntConstrainedValue)
 */
interface IntConstrainedValue extends ValueBase {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_IntConstrainedValue: unique symbol;
    /**
     * Hold an <code>Integer</code> value between <code>IntConstrainedValue.MinValue</code> and <code>IntConstrainedValue.MaxValue</code>. Replaced by <code>IntConstrainedValue.Value</code>, but still functional.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/IntConstrainedValue#ConstrainedValue)
     */
    ConstrainedValue: number;
    /**
     * The highest number that the <code>IntConstrainedValue.Value</code> property can be.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/IntConstrainedValue#MaxValue)
     */
    MaxValue: number;
    /**
     * The lowest number that the <code>IntConstrainedValue.Value</code> property can be.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/IntConstrainedValue#MinValue)
     */
    MinValue: number;
    /**
     * Used to hold an integer value between <code>IntConstrainedValue.MinValue</code> and <code>IntConstrainedValue.MaxValue</code>.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/IntConstrainedValue#Value)
     */
    Value: number;
    /**
     * Fired whenever the Value of the IntConstrainedValue is changed.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/IntConstrainedValue#Changed)
     */
    readonly Changed: RBXScriptSignal<(value: number) => void>;
}
/**
 * A container object for a single integer.
 *
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/IntValue)
 */
interface IntValue extends ValueBase {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_IntValue: unique symbol;
    /**
     * Used to hold an integer.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/IntValue#Value)
     */
    Value: number;
    /**
     * Fires whenever the <code>IntValue.Value</code> is changed.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/IntValue#Changed)
     */
    readonly Changed: RBXScriptSignal<(value: number) => void>;
}
/**
 * A container object for a single double-precision floating point number.
 *
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/NumberValue)
 */
interface NumberValue extends ValueBase {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_NumberValue: unique symbol;
    /**
     * Used to hold a double value.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/NumberValue#Value)
     */
    Value: number;
    /**
     * Fired whenever the <code>NumberValue.Value</code> is changed.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/NumberValue#Changed)
     */
    readonly Changed: RBXScriptSignal<(value: number) => void>;
}
/**
 * A container object for a reference to another instance.
 *
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/ObjectValue)
 */
interface ObjectValue extends ValueBase {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_ObjectValue: unique symbol;
    /**
     * Holds a reference to an instance.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/ObjectValue#Value)
     */
    Value: Instance | undefined;
    /**
     * Fired whenever the <code>ObjectValue.Value</code> is changed.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/ObjectValue#Changed)
     */
    readonly Changed: RBXScriptSignal<(value?: Instance) => void>;
}
/**
 * A container object for a single Ray.
 *
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/RayValue)
 */
interface RayValue extends ValueBase {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_RayValue: unique symbol;
    /**
     * The stored Ray.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/RayValue#Value)
     */
    Value: Ray;
    /**
     * Fired when <code>RayValue.Value</code> is changed.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/RayValue#Changed)
     */
    readonly Changed: RBXScriptSignal<(value: Ray) => void>;
}
/**
 * A container object for a single string.
 *
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/StringValue)
 */
interface StringValue extends ValueBase {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_StringValue: unique symbol;
    /**
     * The stored string.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/StringValue#Value)
     */
    Value: string;
    /**
     * Fired whenever <code>StringValue.Value</code> is changed.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/StringValue#Changed)
     */
    readonly Changed: RBXScriptSignal<(value: string) => void>;
}
/**
 * A container object for a single Vector3 value.
 *
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Vector3Value)
 */
interface Vector3Value extends ValueBase {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_Vector3Value: unique symbol;
    /**
     * The stored <code>Vector3</code>.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Vector3Value#Value)
     */
    Value: Vector3;
    /**
     * Fired whenever <code>Vector3Value.Value</code> is changed.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Vector3Value#Changed)
     */
    readonly Changed: RBXScriptSignal<(value: Vector3) => void>;
}
/**
 * Represents a 3D vector curve, grouping three <code>FloatCurve</code> instances.
 *
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Vector3Curve)
 */
interface Vector3Curve extends Instance {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_Vector3Curve: unique symbol;
    /**
     * Returns the three <code>FloatCurves</code> (X, Y, Z) at the passed time argument.
     * @param this Represents a 3D vector curve, grouping three <code>FloatCurve</code> instances.
     * @param time Time at which to get the value.
     * @returns The three <code>FloatCurves</code> (X, Y, Z) at the passed time argument.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Vector3Curve#GetValueAtTime)
     */
    GetValueAtTime(this: Vector3Curve, time: number): LuaTuple<[
        number | undefined,
        number | undefined,
        number | undefined
    ]>;
    /**
     * Returns the <code>FloatCurve</code> controlling the X channel (the first child instance of type <code>FloatCurve</code> named <code>X</code>).
     * @param this Represents a 3D vector curve, grouping three <code>FloatCurve</code> instances.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Vector3Curve#X)
     */
    X(this: Vector3Curve): FloatCurve;
    /**
     * Returns the <code>FloatCurve</code> controlling the Y channel (the first child instance of type <code>FloatCurve</code> named <code>Y</code>).
     * @param this Represents a 3D vector curve, grouping three <code>FloatCurve</code> instances.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Vector3Curve#Y)
     */
    Y(this: Vector3Curve): FloatCurve;
    /**
     * Returns the <code>FloatCurve</code> controlling the Z channel (the first child instance of type <code>FloatCurve</code> named <code>Z</code>).
     * @param this Represents a 3D vector curve, grouping three <code>FloatCurve</code> instances.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Vector3Curve#Z)
     */
    Z(this: Vector3Curve): FloatCurve;
}
/**
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/VideoCaptureService)
 */
interface VideoCaptureService extends Instance {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_VideoCaptureService: unique symbol;
}
/**
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/VideoDeviceInput)
 */
interface VideoDeviceInput extends Instance {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_VideoDeviceInput: unique symbol;
    /**
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/VideoDeviceInput#Active)
     */
    Active: boolean;
    /**
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/VideoDeviceInput#CameraId)
     */
    CameraId: string;
    /**
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/VideoDeviceInput#CaptureQuality)
     */
    CaptureQuality: Enum.VideoDeviceCaptureQuality;
    /**
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/VideoDeviceInput#IsReady)
     */
    readonly IsReady: boolean;
}
/**
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/VideoPlayer)
 */
interface VideoPlayer extends Instance {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_VideoPlayer: unique symbol;
    /**
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/VideoPlayer#Asset)
     */
    Asset: ContentId;
    /**
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/VideoPlayer#AutoLoad)
     */
    AutoLoad: boolean;
    /**
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/VideoPlayer#IsPlaying)
     */
    get IsPlaying(): boolean;
    /**
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/VideoPlayer#IsReady)
     */
    readonly IsReady: boolean;
    /**
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/VideoPlayer#Looping)
     */
    Looping: boolean;
    /**
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/VideoPlayer#PlaybackSpeed)
     */
    PlaybackSpeed: number;
    /**
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/VideoPlayer#Resolution)
     */
    readonly Resolution: Vector2;
    /**
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/VideoPlayer#Thumbnail)
     */
    Thumbnail: ContentId;
    /**
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/VideoPlayer#TimeLength)
     */
    readonly TimeLength: number;
    /**
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/VideoPlayer#TimePosition)
     */
    TimePosition: number;
    /**
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/VideoPlayer#Volume)
     */
    Volume: number;
    /**
     * @param this
     * @param pin
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/VideoPlayer#GetConnectedWires)
     */
    GetConnectedWires(this: VideoPlayer, pin: string): Array<Instance>;
    /**
     * @param this
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/VideoPlayer#Play)
     */
    Play(this: VideoPlayer): void;
    /**
     * @param this
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/VideoPlayer#Stop)
     */
    Stop(this: VideoPlayer): void;
    /**
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/VideoPlayer#Ended)
     */
    readonly Ended: RBXScriptSignal<() => void>;
    /**
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/VideoPlayer#Looped)
     */
    readonly Looped: RBXScriptSignal<() => void>;
}
/**
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/VideoService)
 */
interface VideoService extends Instance {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_VideoService: unique symbol;
}
/**
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/VisibilityCheckDispatcher)
 */
interface VisibilityCheckDispatcher extends Instance {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_VisibilityCheckDispatcher: unique symbol;
}
/**
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/VisualizationMode)
 */
interface VisualizationMode extends Instance {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_VisualizationMode: unique symbol;
}
/**
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/VisualizationModeCategory)
 */
interface VisualizationModeCategory extends Instance {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_VisualizationModeCategory: unique symbol;
}
/**
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/VisualizationModeService)
 */
interface VisualizationModeService extends Instance {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_VisualizationModeService: unique symbol;
}
/**
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/VoiceChatInternal)
 */
interface VoiceChatInternal extends Instance {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_VoiceChatInternal: unique symbol;
    /**
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/VoiceChatInternal#VoiceChatState)
     */
    readonly VoiceChatState: Enum.VoiceChatState;
    /**
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/VoiceChatInternal#GetAudioProcessingSettings)
     */
    GetAudioProcessingSettings(this: VoiceChatInternal): unknown;
    /**
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/VoiceChatInternal#GetMicDevices)
     */
    GetMicDevices(this: VoiceChatInternal): unknown;
    /**
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/VoiceChatInternal#GetParticipants)
     */
    GetParticipants(this: VoiceChatInternal): Array<unknown>;
    /**
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/VoiceChatInternal#GetSpeakerDevices)
     */
    GetSpeakerDevices(this: VoiceChatInternal): unknown;
    /**
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/VoiceChatInternal#GetVoiceChatApiVersion)
     */
    GetVoiceChatApiVersion(this: VoiceChatInternal): number;
    /**
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/VoiceChatInternal#GetVoiceChatAvailable)
     */
    GetVoiceChatAvailable(this: VoiceChatInternal): number;
    /**
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/VoiceChatInternal#IsPublishPaused)
     */
    IsPublishPaused(this: VoiceChatInternal): boolean;
    /**
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/VoiceChatInternal#IsSubscribePaused)
     */
    IsSubscribePaused(this: VoiceChatInternal, userId: number): boolean;
    /**
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/VoiceChatInternal#JoinByGroupId)
     */
    JoinByGroupId(this: VoiceChatInternal, groupId: string, isMicMuted?: boolean): boolean;
    /**
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/VoiceChatInternal#JoinByGroupIdToken)
     */
    JoinByGroupIdToken(this: VoiceChatInternal, groupId: string, isMicMuted: boolean, isRetry?: boolean): boolean;
    /**
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/VoiceChatInternal#Leave)
     */
    Leave(this: VoiceChatInternal): void;
    /**
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/VoiceChatInternal#PublishPause)
     */
    PublishPause(this: VoiceChatInternal, paused: boolean): boolean;
    /**
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/VoiceChatInternal#SetMicDevice)
     */
    SetMicDevice(this: VoiceChatInternal, micDeviceName: string, micDeviceGuid: string): void;
    /**
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/VoiceChatInternal#SetSpeakerDevice)
     */
    SetSpeakerDevice(this: VoiceChatInternal, speakerDeviceName: string, speakerDeviceGuid: string): void;
    /**
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/VoiceChatInternal#SubscribePause)
     */
    SubscribePause(this: VoiceChatInternal, userId: number, paused: boolean): boolean;
    /**
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/VoiceChatInternal#SubscribePauseAll)
     */
    SubscribePauseAll(this: VoiceChatInternal, paused: boolean): boolean;
    /**
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/VoiceChatInternal#IsVoiceEnabledForUserIdAsync)
     */
    IsVoiceEnabledForUserIdAsync(this: VoiceChatInternal, userId: number): boolean;
    /**
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/VoiceChatInternal#StateChanged)
     */
    readonly StateChanged: RBXScriptSignal<(oldValue: Enum.VoiceChatState, newValue: Enum.VoiceChatState) => void>;
}
/**
 * <strong>VoiceChatService</strong> is responsible for voice chat's high-level functionality.
 *
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/VoiceChatService)
 */
interface VoiceChatService extends Instance {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_VoiceChatService: unique symbol;
    /**
     * Returns whether or not the given user has voice enabled.
     * @param this <strong>VoiceChatService</strong> is responsible for voice chat's high-level functionality.
     * @param userId The <code>Player.UserId</code> to check.
     * @returns If that user has voice enabled.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/VoiceChatService#IsVoiceEnabledForUserIdAsync)
     */
    IsVoiceEnabledForUserIdAsync(this: VoiceChatService, userId: number): boolean;
}
/**
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/WebViewService)
 */
interface WebViewService extends Instance {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_WebViewService: unique symbol;
}
/**
 * Connects two <code>BaseParts</code> together such that their relative position and orientation remain the same.
 *
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/WeldConstraint)
 */
interface WeldConstraint extends Instance {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_WeldConstraint: unique symbol;
    /**
     * Indicates if the WeldConstraint is currently active in the world.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/WeldConstraint#Active)
     */
    readonly Active: boolean;
    /**
     * Toggles the constraint on and off.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/WeldConstraint#Enabled)
     */
    Enabled: boolean;
    /**
     * The first part connected by the constraint.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/WeldConstraint#Part0)
     */
    Part0: BasePart | undefined;
    /**
     * The second part connected by the constraint.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/WeldConstraint#Part1)
     */
    Part1: BasePart | undefined;
}
/**
 * Connects one or more <code>Instances</code> to form a processing graph of their streams. At the moment, only audio streams are supported, but this may expand in the future.
 *
 * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Wire)
 */
interface Wire extends Instance {
    /**
     * **DO NOT USE!**
     *
     * This field exists to force TypeScript to recognize this as a nominal type
     * @hidden
     * @deprecated
     */
    readonly _nominal_Wire: unique symbol;
    /**
     * Denotes whether the <code>Wire</code> is carrying a stream of data.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Wire#Connected)
     */
    readonly Connected: boolean;
    /**
     * The <code>Instance</code> producing a stream to be carried over the wire.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Wire#SourceInstance)
     */
    SourceInstance: Instance | undefined;
    /**
     * The name of the pin on <code>SourceInstance</code> that is producing a stream.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Wire#SourceName)
     */
    SourceName: string;
    /**
     * The <code>Instance</code> to receive a stream from <code>SourceInstance</code>.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Wire#TargetInstance)
     */
    TargetInstance: Instance | undefined;
    /**
     * The name of the pin on <code>TargetInstance</code> that is receiving a stream.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/classes/Wire#TargetName)
     */
    TargetName: string;
}
