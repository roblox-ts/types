// THIS FILE IS GENERATED AUTOMATICALLY AND SHOULD NOT BE EDITED BY HAND!
/// <reference no-default-lib="true"/>
/// <reference path="../roblox.d.ts" />
// GENERATED ROBLOX ENUMS
type Enums = typeof Enum;
interface EnumItem {
    Name: string;
    Value: number;
    EnumType: Enum;
    IsA<T extends Exclude<keyof typeof Enum, "GetEnums">>(name: T): this is (typeof Enum)[T][Exclude<keyof (typeof Enum)[T], "GetEnumItems">];
}
interface Enum {
    GetEnumItems(this: Enum): Array<EnumItem>;
    FromName(this: Enum, name: string): EnumItem | undefined;
    FromValue(this: Enum, value: number): EnumItem | undefined;
}
declare namespace Enum {
    export function GetEnums(this: Enums): Array<Enum>;
    /**
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/AccessModifierType)
     */
    export namespace AccessModifierType {
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/AccessModifierType#Allow)
         */
        export interface Allow extends globalThis.EnumItem {
            Name: "Allow";
            Value: 0;
            EnumType: typeof globalThis.Enum.AccessModifierType;
        }
        export const Allow: Allow;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/AccessModifierType#Deny)
         */
        export interface Deny extends globalThis.EnumItem {
            Name: "Deny";
            Value: 1;
            EnumType: typeof globalThis.Enum.AccessModifierType;
        }
        export const Deny: Deny;
        export function GetEnumItems(this: globalThis.Enum): Array<globalThis.Enum.AccessModifierType>;
        export function FromName(this: globalThis.Enum, name: string): globalThis.Enum.AccessModifierType | undefined;
        export function FromValue(this: globalThis.Enum, value: number): globalThis.Enum.AccessModifierType | undefined;
    }
    export type AccessModifierType = AccessModifierType.Allow | AccessModifierType.Deny;
    /**
     * A subset of AssetTypes which are relevant to only accessories.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/AccessoryType)
     */
    export namespace AccessoryType {
        /**
         * If the accessory type is not known.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/AccessoryType#Unknown)
         */
        export interface Unknown extends globalThis.EnumItem {
            Name: "Unknown";
            Value: 0;
            EnumType: typeof globalThis.Enum.AccessoryType;
        }
        export const Unknown: Unknown;
        /**
         * A hat accessory (may be a rigid or layered accessory).
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/AccessoryType#Hat)
         */
        export interface Hat extends globalThis.EnumItem {
            Name: "Hat";
            Value: 1;
            EnumType: typeof globalThis.Enum.AccessoryType;
        }
        export const Hat: Hat;
        /**
         * A hair accessory (may be a rigid or layered accessory).
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/AccessoryType#Hair)
         */
        export interface Hair extends globalThis.EnumItem {
            Name: "Hair";
            Value: 2;
            EnumType: typeof globalThis.Enum.AccessoryType;
        }
        export const Hair: Hair;
        /**
         * A face accessory (may be a rigid or layered accessory).
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/AccessoryType#Face)
         */
        export interface Face extends globalThis.EnumItem {
            Name: "Face";
            Value: 3;
            EnumType: typeof globalThis.Enum.AccessoryType;
        }
        export const Face: Face;
        /**
         * A neck Accessory (may be a rigid or layered accessory).
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/AccessoryType#Neck)
         */
        export interface Neck extends globalThis.EnumItem {
            Name: "Neck";
            Value: 4;
            EnumType: typeof globalThis.Enum.AccessoryType;
        }
        export const Neck: Neck;
        /**
         * A shoulder accessory (may be a rigid or layered accessory).
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/AccessoryType#Shoulder)
         */
        export interface Shoulder extends globalThis.EnumItem {
            Name: "Shoulder";
            Value: 5;
            EnumType: typeof globalThis.Enum.AccessoryType;
        }
        export const Shoulder: Shoulder;
        /**
         * A front accessory (may be a rigid or layered accessory).
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/AccessoryType#Front)
         */
        export interface Front extends globalThis.EnumItem {
            Name: "Front";
            Value: 6;
            EnumType: typeof globalThis.Enum.AccessoryType;
        }
        export const Front: Front;
        /**
         * A back accessory (may be a rigid or layered accessory).
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/AccessoryType#Back)
         */
        export interface Back extends globalThis.EnumItem {
            Name: "Back";
            Value: 7;
            EnumType: typeof globalThis.Enum.AccessoryType;
        }
        export const Back: Back;
        /**
         * A waist accessory (may be a rigid or layered accessory).
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/AccessoryType#Waist)
         */
        export interface Waist extends globalThis.EnumItem {
            Name: "Waist";
            Value: 8;
            EnumType: typeof globalThis.Enum.AccessoryType;
        }
        export const Waist: Waist;
        /**
         * A layered clothing T-Shirt accessory.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/AccessoryType#TShirt)
         */
        export interface TShirt extends globalThis.EnumItem {
            Name: "TShirt";
            Value: 9;
            EnumType: typeof globalThis.Enum.AccessoryType;
        }
        export const TShirt: TShirt;
        /**
         * @deprecated renamed to TShirt
         */
        export const TeeShirt: TShirt;
        /**
         * A layered clothing shirt accessory.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/AccessoryType#Shirt)
         */
        export interface Shirt extends globalThis.EnumItem {
            Name: "Shirt";
            Value: 10;
            EnumType: typeof globalThis.Enum.AccessoryType;
        }
        export const Shirt: Shirt;
        /**
         * A layered clothing pants accessory.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/AccessoryType#Pants)
         */
        export interface Pants extends globalThis.EnumItem {
            Name: "Pants";
            Value: 11;
            EnumType: typeof globalThis.Enum.AccessoryType;
        }
        export const Pants: Pants;
        /**
         * A layered clothing jacket accessory.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/AccessoryType#Jacket)
         */
        export interface Jacket extends globalThis.EnumItem {
            Name: "Jacket";
            Value: 12;
            EnumType: typeof globalThis.Enum.AccessoryType;
        }
        export const Jacket: Jacket;
        /**
         * A layered clothing sweater accessory.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/AccessoryType#Sweater)
         */
        export interface Sweater extends globalThis.EnumItem {
            Name: "Sweater";
            Value: 13;
            EnumType: typeof globalThis.Enum.AccessoryType;
        }
        export const Sweater: Sweater;
        /**
         * A layered clothing shorts accessory.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/AccessoryType#Shorts)
         */
        export interface Shorts extends globalThis.EnumItem {
            Name: "Shorts";
            Value: 14;
            EnumType: typeof globalThis.Enum.AccessoryType;
        }
        export const Shorts: Shorts;
        /**
         * A layered clothing left shoe accessory.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/AccessoryType#LeftShoe)
         */
        export interface LeftShoe extends globalThis.EnumItem {
            Name: "LeftShoe";
            Value: 15;
            EnumType: typeof globalThis.Enum.AccessoryType;
        }
        export const LeftShoe: LeftShoe;
        /**
         * A layered clothing right shoe accessory.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/AccessoryType#RightShoe)
         */
        export interface RightShoe extends globalThis.EnumItem {
            Name: "RightShoe";
            Value: 16;
            EnumType: typeof globalThis.Enum.AccessoryType;
        }
        export const RightShoe: RightShoe;
        /**
         * A layered clothing dress or skirt accessory.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/AccessoryType#DressSkirt)
         */
        export interface DressSkirt extends globalThis.EnumItem {
            Name: "DressSkirt";
            Value: 17;
            EnumType: typeof globalThis.Enum.AccessoryType;
        }
        export const DressSkirt: DressSkirt;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/AccessoryType#Eyebrow)
         */
        export interface Eyebrow extends globalThis.EnumItem {
            Name: "Eyebrow";
            Value: 18;
            EnumType: typeof globalThis.Enum.AccessoryType;
        }
        export const Eyebrow: Eyebrow;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/AccessoryType#Eyelash)
         */
        export interface Eyelash extends globalThis.EnumItem {
            Name: "Eyelash";
            Value: 19;
            EnumType: typeof globalThis.Enum.AccessoryType;
        }
        export const Eyelash: Eyelash;
        export function GetEnumItems(this: globalThis.Enum): Array<globalThis.Enum.AccessoryType>;
        export function FromName(this: globalThis.Enum, name: string): globalThis.Enum.AccessoryType | undefined;
        export function FromValue(this: globalThis.Enum, value: number): globalThis.Enum.AccessoryType | undefined;
    }
    export type AccessoryType = AccessoryType.Unknown | AccessoryType.Hat | AccessoryType.Hair | AccessoryType.Face | AccessoryType.Neck | AccessoryType.Shoulder | AccessoryType.Front | AccessoryType.Back | AccessoryType.Waist | AccessoryType.TShirt | AccessoryType.Shirt | AccessoryType.Pants | AccessoryType.Jacket | AccessoryType.Sweater | AccessoryType.Shorts | AccessoryType.LeftShoe | AccessoryType.RightShoe | AccessoryType.DressSkirt | AccessoryType.Eyebrow | AccessoryType.Eyelash;
    /**
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/ActionOnStopSync)
     */
    export namespace ActionOnStopSync {
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/ActionOnStopSync#AlwaysAsk)
         */
        export interface AlwaysAsk extends globalThis.EnumItem {
            Name: "AlwaysAsk";
            Value: 0;
            EnumType: typeof globalThis.Enum.ActionOnStopSync;
        }
        export const AlwaysAsk: AlwaysAsk;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/ActionOnStopSync#KeepLocalFiles)
         */
        export interface KeepLocalFiles extends globalThis.EnumItem {
            Name: "KeepLocalFiles";
            Value: 1;
            EnumType: typeof globalThis.Enum.ActionOnStopSync;
        }
        export const KeepLocalFiles: KeepLocalFiles;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/ActionOnStopSync#DeleteLocalFiles)
         */
        export interface DeleteLocalFiles extends globalThis.EnumItem {
            Name: "DeleteLocalFiles";
            Value: 2;
            EnumType: typeof globalThis.Enum.ActionOnStopSync;
        }
        export const DeleteLocalFiles: DeleteLocalFiles;
        export function GetEnumItems(this: globalThis.Enum): Array<globalThis.Enum.ActionOnStopSync>;
        export function FromName(this: globalThis.Enum, name: string): globalThis.Enum.ActionOnStopSync | undefined;
        export function FromValue(this: globalThis.Enum, value: number): globalThis.Enum.ActionOnStopSync | undefined;
    }
    export type ActionOnStopSync = ActionOnStopSync.AlwaysAsk | ActionOnStopSync.KeepLocalFiles | ActionOnStopSync.DeleteLocalFiles;
    /**
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/ActionType)
     */
    export namespace ActionType {
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/ActionType#Nothing)
         */
        export interface Nothing extends globalThis.EnumItem {
            Name: "Nothing";
            Value: 0;
            EnumType: typeof globalThis.Enum.ActionType;
        }
        export const Nothing: Nothing;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/ActionType#Pause)
         */
        export interface Pause extends globalThis.EnumItem {
            Name: "Pause";
            Value: 1;
            EnumType: typeof globalThis.Enum.ActionType;
        }
        export const Pause: Pause;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/ActionType#Lose)
         */
        export interface Lose extends globalThis.EnumItem {
            Name: "Lose";
            Value: 2;
            EnumType: typeof globalThis.Enum.ActionType;
        }
        export const Lose: Lose;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/ActionType#Draw)
         */
        export interface Draw extends globalThis.EnumItem {
            Name: "Draw";
            Value: 3;
            EnumType: typeof globalThis.Enum.ActionType;
        }
        export const Draw: Draw;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/ActionType#Win)
         */
        export interface Win extends globalThis.EnumItem {
            Name: "Win";
            Value: 4;
            EnumType: typeof globalThis.Enum.ActionType;
        }
        export const Win: Win;
        export function GetEnumItems(this: globalThis.Enum): Array<globalThis.Enum.ActionType>;
        export function FromName(this: globalThis.Enum, name: string): globalThis.Enum.ActionType | undefined;
        export function FromValue(this: globalThis.Enum, value: number): globalThis.Enum.ActionType | undefined;
    }
    export type ActionType = ActionType.Nothing | ActionType.Pause | ActionType.Lose | ActionType.Draw | ActionType.Win;
    /**
     * The CFrame value in which the body mover constraint is expressed.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/ActuatorRelativeTo)
     */
    export namespace ActuatorRelativeTo {
        /**
         * The constraint is expressed relative to Attachment0.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/ActuatorRelativeTo#Attachment0)
         */
        export interface Attachment0 extends globalThis.EnumItem {
            Name: "Attachment0";
            Value: 0;
            EnumType: typeof globalThis.Enum.ActuatorRelativeTo;
        }
        export const Attachment0: Attachment0;
        /**
         * The constraint is expressed relative to Attachment1.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/ActuatorRelativeTo#Attachment1)
         */
        export interface Attachment1 extends globalThis.EnumItem {
            Name: "Attachment1";
            Value: 1;
            EnumType: typeof globalThis.Enum.ActuatorRelativeTo;
        }
        export const Attachment1: Attachment1;
        /**
         * The constraint is expressed relative to the game world.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/ActuatorRelativeTo#World)
         */
        export interface World extends globalThis.EnumItem {
            Name: "World";
            Value: 2;
            EnumType: typeof globalThis.Enum.ActuatorRelativeTo;
        }
        export const World: World;
        export function GetEnumItems(this: globalThis.Enum): Array<globalThis.Enum.ActuatorRelativeTo>;
        export function FromName(this: globalThis.Enum, name: string): globalThis.Enum.ActuatorRelativeTo | undefined;
        export function FromValue(this: globalThis.Enum, value: number): globalThis.Enum.ActuatorRelativeTo | undefined;
    }
    export type ActuatorRelativeTo = ActuatorRelativeTo.Attachment0 | ActuatorRelativeTo.Attachment1 | ActuatorRelativeTo.World;
    /**
     * The active physics component of the constraint.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/ActuatorType)
     */
    export namespace ActuatorType {
        /**
         * The motor and servo components are both disabled.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/ActuatorType#None)
         */
        export interface None extends globalThis.EnumItem {
            Name: "None";
            Value: 0;
            EnumType: typeof globalThis.Enum.ActuatorType;
        }
        export const None: None;
        /**
         * The motor component is enabled. Motor properties are active and the actuator will apply continuous force.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/ActuatorType#Motor)
         */
        export interface Motor extends globalThis.EnumItem {
            Name: "Motor";
            Value: 1;
            EnumType: typeof globalThis.Enum.ActuatorType;
        }
        export const Motor: Motor;
        /**
         * The servo component is enabled. Servo properties are active and the actuator will apply force to approach the servo's target.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/ActuatorType#Servo)
         */
        export interface Servo extends globalThis.EnumItem {
            Name: "Servo";
            Value: 2;
            EnumType: typeof globalThis.Enum.ActuatorType;
        }
        export const Servo: Servo;
        export function GetEnumItems(this: globalThis.Enum): Array<globalThis.Enum.ActuatorType>;
        export function FromName(this: globalThis.Enum, name: string): globalThis.Enum.ActuatorType | undefined;
        export function FromValue(this: globalThis.Enum, value: number): globalThis.Enum.ActuatorType | undefined;
    }
    export type ActuatorType = ActuatorType.None | ActuatorType.Motor | ActuatorType.Servo;
    /**
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/AdAvailabilityResult)
     */
    export namespace AdAvailabilityResult {
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/AdAvailabilityResult#IsAvailable)
         */
        export interface IsAvailable extends globalThis.EnumItem {
            Name: "IsAvailable";
            Value: 1;
            EnumType: typeof globalThis.Enum.AdAvailabilityResult;
        }
        export const IsAvailable: IsAvailable;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/AdAvailabilityResult#DeviceIneligible)
         */
        export interface DeviceIneligible extends globalThis.EnumItem {
            Name: "DeviceIneligible";
            Value: 2;
            EnumType: typeof globalThis.Enum.AdAvailabilityResult;
        }
        export const DeviceIneligible: DeviceIneligible;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/AdAvailabilityResult#ExperienceIneligible)
         */
        export interface ExperienceIneligible extends globalThis.EnumItem {
            Name: "ExperienceIneligible";
            Value: 3;
            EnumType: typeof globalThis.Enum.AdAvailabilityResult;
        }
        export const ExperienceIneligible: ExperienceIneligible;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/AdAvailabilityResult#InternalError)
         */
        export interface InternalError extends globalThis.EnumItem {
            Name: "InternalError";
            Value: 4;
            EnumType: typeof globalThis.Enum.AdAvailabilityResult;
        }
        export const InternalError: InternalError;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/AdAvailabilityResult#NoFill)
         */
        export interface NoFill extends globalThis.EnumItem {
            Name: "NoFill";
            Value: 5;
            EnumType: typeof globalThis.Enum.AdAvailabilityResult;
        }
        export const NoFill: NoFill;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/AdAvailabilityResult#PlayerIneligible)
         */
        export interface PlayerIneligible extends globalThis.EnumItem {
            Name: "PlayerIneligible";
            Value: 6;
            EnumType: typeof globalThis.Enum.AdAvailabilityResult;
        }
        export const PlayerIneligible: PlayerIneligible;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/AdAvailabilityResult#PublisherIneligible)
         */
        export interface PublisherIneligible extends globalThis.EnumItem {
            Name: "PublisherIneligible";
            Value: 7;
            EnumType: typeof globalThis.Enum.AdAvailabilityResult;
        }
        export const PublisherIneligible: PublisherIneligible;
        export function GetEnumItems(this: globalThis.Enum): Array<globalThis.Enum.AdAvailabilityResult>;
        export function FromName(this: globalThis.Enum, name: string): globalThis.Enum.AdAvailabilityResult | undefined;
        export function FromValue(this: globalThis.Enum, value: number): globalThis.Enum.AdAvailabilityResult | undefined;
    }
    export type AdAvailabilityResult = AdAvailabilityResult.IsAvailable | AdAvailabilityResult.DeviceIneligible | AdAvailabilityResult.ExperienceIneligible | AdAvailabilityResult.InternalError | AdAvailabilityResult.NoFill | AdAvailabilityResult.PlayerIneligible | AdAvailabilityResult.PublisherIneligible;
    /**
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/AdEventType)
     */
    export namespace AdEventType {
        /**
         * The event is fired when a click-to-play video ads is being served. This can be used to communicate and promote the reward to users through the UI or signage.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/AdEventType#RewardedAdLoaded)
         */
        export interface RewardedAdLoaded extends globalThis.EnumItem {
            Name: "RewardedAdLoaded";
            Value: 3;
            EnumType: typeof globalThis.Enum.AdEventType;
        }
        export const RewardedAdLoaded: RewardedAdLoaded;
        /**
         * The event is fired when a user has watched the click-to-play video for a certain time. This can be used to grant the player a reward such as an in-game item or in-game currency. The RewardedAdGrant enum will only be triggered once per ad rotation.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/AdEventType#RewardedAdGrant)
         */
        export interface RewardedAdGrant extends globalThis.EnumItem {
            Name: "RewardedAdGrant";
            Value: 4;
            EnumType: typeof globalThis.Enum.AdEventType;
        }
        export const RewardedAdGrant: RewardedAdGrant;
        /**
         * The event is fired when a click-to-play video ads is rotated out. This can be used to remove any UI or signage that is promoting the reward.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/AdEventType#RewardedAdUnloaded)
         */
        export interface RewardedAdUnloaded extends globalThis.EnumItem {
            Name: "RewardedAdUnloaded";
            Value: 5;
            EnumType: typeof globalThis.Enum.AdEventType;
        }
        export const RewardedAdUnloaded: RewardedAdUnloaded;
        /**
         * **Deprecated:** This option should not be used for new work.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/AdEventType#VideoLoaded)
         */
        export interface VideoLoaded extends globalThis.EnumItem {
            Name: "VideoLoaded";
            Value: 0;
            EnumType: typeof globalThis.Enum.AdEventType;
        }
        export const VideoLoaded: VideoLoaded;
        /**
         * **Deprecated:** This option should not be used for new work.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/AdEventType#VideoRemoved)
         */
        export interface VideoRemoved extends globalThis.EnumItem {
            Name: "VideoRemoved";
            Value: 1;
            EnumType: typeof globalThis.Enum.AdEventType;
        }
        export const VideoRemoved: VideoRemoved;
        /**
         * **Deprecated:** This option should not be used for new work.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/AdEventType#UserCompletedVideo)
         */
        export interface UserCompletedVideo extends globalThis.EnumItem {
            Name: "UserCompletedVideo";
            Value: 2;
            EnumType: typeof globalThis.Enum.AdEventType;
        }
        export const UserCompletedVideo: UserCompletedVideo;
        export function GetEnumItems(this: globalThis.Enum): Array<globalThis.Enum.AdEventType>;
        export function FromName(this: globalThis.Enum, name: string): globalThis.Enum.AdEventType | undefined;
        export function FromValue(this: globalThis.Enum, value: number): globalThis.Enum.AdEventType | undefined;
    }
    export type AdEventType = AdEventType.RewardedAdLoaded | AdEventType.RewardedAdGrant | AdEventType.RewardedAdUnloaded | AdEventType.VideoLoaded | AdEventType.VideoRemoved | AdEventType.UserCompletedVideo;
    /**
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/AdFormat)
     */
    export namespace AdFormat {
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/AdFormat#RewardedVideo)
         */
        export interface RewardedVideo extends globalThis.EnumItem {
            Name: "RewardedVideo";
            Value: 0;
            EnumType: typeof globalThis.Enum.AdFormat;
        }
        export const RewardedVideo: RewardedVideo;
        export function GetEnumItems(this: globalThis.Enum): Array<globalThis.Enum.AdFormat>;
        export function FromName(this: globalThis.Enum, name: string): globalThis.Enum.AdFormat | undefined;
        export function FromValue(this: globalThis.Enum, value: number): globalThis.Enum.AdFormat | undefined;
    }
    export type AdFormat = AdFormat.RewardedVideo;
    /**
     * Describes the form factor of an ad in an `AdGui`. There is currently only one available size.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/AdShape)
     */
    export namespace AdShape {
        /**
         * The ad has an aspect ratio of 16:9 and a minimum size of 8 by 4.5 studs.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/AdShape#HorizontalRectangle)
         */
        export interface HorizontalRectangle extends globalThis.EnumItem {
            Name: "HorizontalRectangle";
            Value: 1;
            EnumType: typeof globalThis.Enum.AdShape;
        }
        export const HorizontalRectangle: HorizontalRectangle;
        export function GetEnumItems(this: globalThis.Enum): Array<globalThis.Enum.AdShape>;
        export function FromName(this: globalThis.Enum, name: string): globalThis.Enum.AdShape | undefined;
        export function FromValue(this: globalThis.Enum, value: number): globalThis.Enum.AdShape | undefined;
    }
    export type AdShape = AdShape.HorizontalRectangle;
    /**
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/AdTeleportMethod)
     */
    export namespace AdTeleportMethod {
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/AdTeleportMethod#Undefined)
         */
        export interface Undefined extends globalThis.EnumItem {
            Name: "Undefined";
            Value: 0;
            EnumType: typeof globalThis.Enum.AdTeleportMethod;
        }
        export const Undefined: Undefined;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/AdTeleportMethod#PortalForward)
         */
        export interface PortalForward extends globalThis.EnumItem {
            Name: "PortalForward";
            Value: 1;
            EnumType: typeof globalThis.Enum.AdTeleportMethod;
        }
        export const PortalForward: PortalForward;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/AdTeleportMethod#InGameMenuBackButton)
         */
        export interface InGameMenuBackButton extends globalThis.EnumItem {
            Name: "InGameMenuBackButton";
            Value: 2;
            EnumType: typeof globalThis.Enum.AdTeleportMethod;
        }
        export const InGameMenuBackButton: InGameMenuBackButton;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/AdTeleportMethod#UIBackButton)
         */
        export interface UIBackButton extends globalThis.EnumItem {
            Name: "UIBackButton";
            Value: 3;
            EnumType: typeof globalThis.Enum.AdTeleportMethod;
        }
        export const UIBackButton: UIBackButton;
        export function GetEnumItems(this: globalThis.Enum): Array<globalThis.Enum.AdTeleportMethod>;
        export function FromName(this: globalThis.Enum, name: string): globalThis.Enum.AdTeleportMethod | undefined;
        export function FromValue(this: globalThis.Enum, value: number): globalThis.Enum.AdTeleportMethod | undefined;
    }
    export type AdTeleportMethod = AdTeleportMethod.Undefined | AdTeleportMethod.PortalForward | AdTeleportMethod.InGameMenuBackButton | AdTeleportMethod.UIBackButton;
    /**
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/AdUIEventType)
     */
    export namespace AdUIEventType {
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/AdUIEventType#AdLabelClicked)
         */
        export interface AdLabelClicked extends globalThis.EnumItem {
            Name: "AdLabelClicked";
            Value: 0;
            EnumType: typeof globalThis.Enum.AdUIEventType;
        }
        export const AdLabelClicked: AdLabelClicked;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/AdUIEventType#VolumeButtonClicked)
         */
        export interface VolumeButtonClicked extends globalThis.EnumItem {
            Name: "VolumeButtonClicked";
            Value: 1;
            EnumType: typeof globalThis.Enum.AdUIEventType;
        }
        export const VolumeButtonClicked: VolumeButtonClicked;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/AdUIEventType#FullscreenButtonClicked)
         */
        export interface FullscreenButtonClicked extends globalThis.EnumItem {
            Name: "FullscreenButtonClicked";
            Value: 2;
            EnumType: typeof globalThis.Enum.AdUIEventType;
        }
        export const FullscreenButtonClicked: FullscreenButtonClicked;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/AdUIEventType#PlayButtonClicked)
         */
        export interface PlayButtonClicked extends globalThis.EnumItem {
            Name: "PlayButtonClicked";
            Value: 3;
            EnumType: typeof globalThis.Enum.AdUIEventType;
        }
        export const PlayButtonClicked: PlayButtonClicked;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/AdUIEventType#PauseButtonClicked)
         */
        export interface PauseButtonClicked extends globalThis.EnumItem {
            Name: "PauseButtonClicked";
            Value: 4;
            EnumType: typeof globalThis.Enum.AdUIEventType;
        }
        export const PauseButtonClicked: PauseButtonClicked;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/AdUIEventType#CloseButtonClicked)
         */
        export interface CloseButtonClicked extends globalThis.EnumItem {
            Name: "CloseButtonClicked";
            Value: 5;
            EnumType: typeof globalThis.Enum.AdUIEventType;
        }
        export const CloseButtonClicked: CloseButtonClicked;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/AdUIEventType#WhyThisAdClicked)
         */
        export interface WhyThisAdClicked extends globalThis.EnumItem {
            Name: "WhyThisAdClicked";
            Value: 6;
            EnumType: typeof globalThis.Enum.AdUIEventType;
        }
        export const WhyThisAdClicked: WhyThisAdClicked;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/AdUIEventType#PlayEventTriggered)
         */
        export interface PlayEventTriggered extends globalThis.EnumItem {
            Name: "PlayEventTriggered";
            Value: 7;
            EnumType: typeof globalThis.Enum.AdUIEventType;
        }
        export const PlayEventTriggered: PlayEventTriggered;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/AdUIEventType#PauseEventTriggered)
         */
        export interface PauseEventTriggered extends globalThis.EnumItem {
            Name: "PauseEventTriggered";
            Value: 8;
            EnumType: typeof globalThis.Enum.AdUIEventType;
        }
        export const PauseEventTriggered: PauseEventTriggered;
        export function GetEnumItems(this: globalThis.Enum): Array<globalThis.Enum.AdUIEventType>;
        export function FromName(this: globalThis.Enum, name: string): globalThis.Enum.AdUIEventType | undefined;
        export function FromValue(this: globalThis.Enum, value: number): globalThis.Enum.AdUIEventType | undefined;
    }
    export type AdUIEventType = AdUIEventType.AdLabelClicked | AdUIEventType.VolumeButtonClicked | AdUIEventType.FullscreenButtonClicked | AdUIEventType.PlayButtonClicked | AdUIEventType.PauseButtonClicked | AdUIEventType.CloseButtonClicked | AdUIEventType.WhyThisAdClicked | AdUIEventType.PlayEventTriggered | AdUIEventType.PauseEventTriggered;
    /**
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/AdUIType)
     */
    export namespace AdUIType {
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/AdUIType#None)
         */
        export interface None extends globalThis.EnumItem {
            Name: "None";
            Value: 0;
            EnumType: typeof globalThis.Enum.AdUIType;
        }
        export const None: None;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/AdUIType#Image)
         */
        export interface Image extends globalThis.EnumItem {
            Name: "Image";
            Value: 1;
            EnumType: typeof globalThis.Enum.AdUIType;
        }
        export const Image: Image;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/AdUIType#Video)
         */
        export interface Video extends globalThis.EnumItem {
            Name: "Video";
            Value: 2;
            EnumType: typeof globalThis.Enum.AdUIType;
        }
        export const Video: Video;
        export function GetEnumItems(this: globalThis.Enum): Array<globalThis.Enum.AdUIType>;
        export function FromName(this: globalThis.Enum, name: string): globalThis.Enum.AdUIType | undefined;
        export function FromValue(this: globalThis.Enum, value: number): globalThis.Enum.AdUIType | undefined;
    }
    export type AdUIType = AdUIType.None | AdUIType.Image | AdUIType.Video;
    /**
     * Exposes the status of an immersive ad.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/AdUnitStatus)
     */
    export namespace AdUnitStatus {
        /**
         * The ad unit isn't currently serving an ad and it may be configured incorrectly. An `AdGui` with this status will display its fallback image.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/AdUnitStatus#Inactive)
         */
        export interface Inactive extends globalThis.EnumItem {
            Name: "Inactive";
            Value: 0;
            EnumType: typeof globalThis.Enum.AdUnitStatus;
        }
        export const Inactive: Inactive;
        /**
         * The ad unit is currently serving an ad. Players will observe sponsored content in an `AdGui` and an `AdPortal` will teleport users that walk through.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/AdUnitStatus#Active)
         */
        export interface Active extends globalThis.EnumItem {
            Name: "Active";
            Value: 1;
            EnumType: typeof globalThis.Enum.AdUnitStatus;
        }
        export const Active: Active;
        export function GetEnumItems(this: globalThis.Enum): Array<globalThis.Enum.AdUnitStatus>;
        export function FromName(this: globalThis.Enum, name: string): globalThis.Enum.AdUnitStatus | undefined;
        export function FromValue(this: globalThis.Enum, value: number): globalThis.Enum.AdUnitStatus | undefined;
    }
    export type AdUnitStatus = AdUnitStatus.Inactive | AdUnitStatus.Active;
    /**
     * Culling method used for Adorns.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/AdornCullingMode)
     */
    export namespace AdornCullingMode {
        /**
         * Automatically culls adornment based on distance.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/AdornCullingMode#Automatic)
         */
        export interface Automatic extends globalThis.EnumItem {
            Name: "Automatic";
            Value: 0;
            EnumType: typeof globalThis.Enum.AdornCullingMode;
        }
        export const Automatic: Automatic;
        /**
         * Never culls adornment. Adornment is always visible.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/AdornCullingMode#Never)
         */
        export interface Never extends globalThis.EnumItem {
            Name: "Never";
            Value: 1;
            EnumType: typeof globalThis.Enum.AdornCullingMode;
        }
        export const Never: Never;
        export function GetEnumItems(this: globalThis.Enum): Array<globalThis.Enum.AdornCullingMode>;
        export function FromName(this: globalThis.Enum, name: string): globalThis.Enum.AdornCullingMode | undefined;
        export function FromValue(this: globalThis.Enum, value: number): globalThis.Enum.AdornCullingMode | undefined;
    }
    export type AdornCullingMode = AdornCullingMode.Automatic | AdornCullingMode.Never;
    /**
     * An enum that specifies how the constraint will attempt to align the body associated with the constraint.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/AlignType)
     */
    export namespace AlignType {
        /**
         * Aligns the primary axis to be parallel to the axis given by `Constraint.Attachment1`.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/AlignType#PrimaryAxisParallel)
         */
        export interface PrimaryAxisParallel extends globalThis.EnumItem {
            Name: "PrimaryAxisParallel";
            Value: 2;
            EnumType: typeof globalThis.Enum.AlignType;
        }
        export const PrimaryAxisParallel: PrimaryAxisParallel;
        /**
         * Aligns the primary axis to be perpendicular to the axis given by `Constraint.Attachment1`.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/AlignType#PrimaryAxisPerpendicular)
         */
        export interface PrimaryAxisPerpendicular extends globalThis.EnumItem {
            Name: "PrimaryAxisPerpendicular";
            Value: 3;
            EnumType: typeof globalThis.Enum.AlignType;
        }
        export const PrimaryAxisPerpendicular: PrimaryAxisPerpendicular;
        /**
         * Aligns the primary axis to look at the point given by `Constraint.Attachment1` or the `AlignOrientation.LookAtPosition`.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/AlignType#PrimaryAxisLookAt)
         */
        export interface PrimaryAxisLookAt extends globalThis.EnumItem {
            Name: "PrimaryAxisLookAt";
            Value: 4;
            EnumType: typeof globalThis.Enum.AlignType;
        }
        export const PrimaryAxisLookAt: PrimaryAxisLookAt;
        /**
         * Aligns all of the axes of `Constraint.Attachment0` to the axes given by `Constraint.Attachment1` or to the target orientation provided by `AlignOrientation.PrimaryAxis` and `AlignOrientation.SecondaryAxis`.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/AlignType#AllAxes)
         */
        export interface AllAxes extends globalThis.EnumItem {
            Name: "AllAxes";
            Value: 5;
            EnumType: typeof globalThis.Enum.AlignType;
        }
        export const AllAxes: AllAxes;
        /**
         * **Deprecated:** Use **PrimaryAxisParallel** instead.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/AlignType#Parallel)
         */
        export interface Parallel extends globalThis.EnumItem {
            Name: "Parallel";
            Value: 0;
            EnumType: typeof globalThis.Enum.AlignType;
        }
        export const Parallel: Parallel;
        /**
         * **Deprecated:** Use **PrimaryAxisPerpendicular** instead.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/AlignType#Perpendicular)
         */
        export interface Perpendicular extends globalThis.EnumItem {
            Name: "Perpendicular";
            Value: 1;
            EnumType: typeof globalThis.Enum.AlignType;
        }
        export const Perpendicular: Perpendicular;
        export function GetEnumItems(this: globalThis.Enum): Array<globalThis.Enum.AlignType>;
        export function FromName(this: globalThis.Enum, name: string): globalThis.Enum.AlignType | undefined;
        export function FromValue(this: globalThis.Enum, value: number): globalThis.Enum.AlignType | undefined;
    }
    export type AlignType = AlignType.PrimaryAxisParallel | AlignType.PrimaryAxisPerpendicular | AlignType.PrimaryAxisLookAt | AlignType.AllAxes | AlignType.Parallel | AlignType.Perpendicular;
    /**
     * Used by `SurfaceAppearance.AlphaMode` to determine how the alpha channel of the `SurfaceAppearance.ColorMap` of a `SurfaceAppearance` is used.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/AlphaMode)
     */
    export namespace AlphaMode {
        /**
         * Overlays the `ColorMap` on top of the underlying part color based on the map's alpha channel. ![](https://prod.docsiteassets.roblox.com/assets/engine-api/enums/AlphaMode/Fern-Overlay.png)
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/AlphaMode#Overlay)
         */
        export interface Overlay extends globalThis.EnumItem {
            Name: "Overlay";
            Value: 0;
            EnumType: typeof globalThis.Enum.AlphaMode;
        }
        export const Overlay: Overlay;
        /**
         * Uses the `ColorMap` alpha channel to control the transparency of the surface. ![](https://prod.docsiteassets.roblox.com/assets/engine-api/enums/AlphaMode/Fern-Cutout.png)
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/AlphaMode#Transparency)
         */
        export interface Transparency extends globalThis.EnumItem {
            Name: "Transparency";
            Value: 1;
            EnumType: typeof globalThis.Enum.AlphaMode;
        }
        export const Transparency: Transparency;
        export function GetEnumItems(this: globalThis.Enum): Array<globalThis.Enum.AlphaMode>;
        export function FromName(this: globalThis.Enum, name: string): globalThis.Enum.AlphaMode | undefined;
        export function FromValue(this: globalThis.Enum, value: number): globalThis.Enum.AlphaMode | undefined;
    }
    export type AlphaMode = AlphaMode.Overlay | AlphaMode.Transparency;
    /**
     * Used to form a dictionary of custom fields to provide breakdowns in Roblox-provided charts.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/AnalyticsCustomFieldKeys)
     */
    export namespace AnalyticsCustomFieldKeys {
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/AnalyticsCustomFieldKeys#CustomField01)
         */
        export interface CustomField01 extends globalThis.EnumItem {
            Name: "CustomField01";
            Value: 0;
            EnumType: typeof globalThis.Enum.AnalyticsCustomFieldKeys;
        }
        export const CustomField01: CustomField01;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/AnalyticsCustomFieldKeys#CustomField02)
         */
        export interface CustomField02 extends globalThis.EnumItem {
            Name: "CustomField02";
            Value: 1;
            EnumType: typeof globalThis.Enum.AnalyticsCustomFieldKeys;
        }
        export const CustomField02: CustomField02;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/AnalyticsCustomFieldKeys#CustomField03)
         */
        export interface CustomField03 extends globalThis.EnumItem {
            Name: "CustomField03";
            Value: 2;
            EnumType: typeof globalThis.Enum.AnalyticsCustomFieldKeys;
        }
        export const CustomField03: CustomField03;
        export function GetEnumItems(this: globalThis.Enum): Array<globalThis.Enum.AnalyticsCustomFieldKeys>;
        export function FromName(this: globalThis.Enum, name: string): globalThis.Enum.AnalyticsCustomFieldKeys | undefined;
        export function FromValue(this: globalThis.Enum, value: number): globalThis.Enum.AnalyticsCustomFieldKeys | undefined;
    }
    export type AnalyticsCustomFieldKeys = AnalyticsCustomFieldKeys.CustomField01 | AnalyticsCustomFieldKeys.CustomField02 | AnalyticsCustomFieldKeys.CustomField03;
    /**
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/AnalyticsEconomyAction)
     */
    export namespace AnalyticsEconomyAction {
        /**
         * Default action. Used for an undefined Action.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/AnalyticsEconomyAction#Default)
         */
        export interface Default extends globalThis.EnumItem {
            Name: "Default";
            Value: 0;
            EnumType: typeof globalThis.Enum.AnalyticsEconomyAction;
        }
        export const Default: Default;
        /**
         * Indicates the acquisition of an in game resource. For example, a player acquires virtual currency by completing a specific in game task.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/AnalyticsEconomyAction#Acquire)
         */
        export interface Acquire extends globalThis.EnumItem {
            Name: "Acquire";
            Value: 1;
            EnumType: typeof globalThis.Enum.AnalyticsEconomyAction;
        }
        export const Acquire: Acquire;
        /**
         * Indicates the spending or loss of an in game resource. For example, a player spends virtual currency to acquire a new item.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/AnalyticsEconomyAction#Spend)
         */
        export interface Spend extends globalThis.EnumItem {
            Name: "Spend";
            Value: 2;
            EnumType: typeof globalThis.Enum.AnalyticsEconomyAction;
        }
        export const Spend: Spend;
        export function GetEnumItems(this: globalThis.Enum): Array<globalThis.Enum.AnalyticsEconomyAction>;
        export function FromName(this: globalThis.Enum, name: string): globalThis.Enum.AnalyticsEconomyAction | undefined;
        export function FromValue(this: globalThis.Enum, value: number): globalThis.Enum.AnalyticsEconomyAction | undefined;
    }
    export type AnalyticsEconomyAction = AnalyticsEconomyAction.Default | AnalyticsEconomyAction.Acquire | AnalyticsEconomyAction.Spend;
    /**
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/AnalyticsEconomyFlowType)
     */
    export namespace AnalyticsEconomyFlowType {
        /**
         * Currency is being removed from the player's account.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/AnalyticsEconomyFlowType#Sink)
         */
        export interface Sink extends globalThis.EnumItem {
            Name: "Sink";
            Value: 0;
            EnumType: typeof globalThis.Enum.AnalyticsEconomyFlowType;
        }
        export const Sink: Sink;
        /**
         * Currency is being added to the player's account.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/AnalyticsEconomyFlowType#Source)
         */
        export interface Source extends globalThis.EnumItem {
            Name: "Source";
            Value: 1;
            EnumType: typeof globalThis.Enum.AnalyticsEconomyFlowType;
        }
        export const Source: Source;
        export function GetEnumItems(this: globalThis.Enum): Array<globalThis.Enum.AnalyticsEconomyFlowType>;
        export function FromName(this: globalThis.Enum, name: string): globalThis.Enum.AnalyticsEconomyFlowType | undefined;
        export function FromValue(this: globalThis.Enum, value: number): globalThis.Enum.AnalyticsEconomyFlowType | undefined;
    }
    export type AnalyticsEconomyFlowType = AnalyticsEconomyFlowType.Sink | AnalyticsEconomyFlowType.Source;
    /**
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/AnalyticsEconomyTransactionType)
     */
    export namespace AnalyticsEconomyTransactionType {
        /**
         * Represents a source of currency purchased via Robux, for example in-experience "gold" purchased for Robux.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/AnalyticsEconomyTransactionType#IAP)
         */
        export interface IAP extends globalThis.EnumItem {
            Name: "IAP";
            Value: 0;
            EnumType: typeof globalThis.Enum.AnalyticsEconomyTransactionType;
        }
        export const IAP: IAP;
        /**
         * Purchases within a shop, for example in-experience "coins" used to buy an item within the experience.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/AnalyticsEconomyTransactionType#Shop)
         */
        export interface Shop extends globalThis.EnumItem {
            Name: "Shop";
            Value: 1;
            EnumType: typeof globalThis.Enum.AnalyticsEconomyTransactionType;
        }
        export const Shop: Shop;
        /**
         * Currency earned or paid through gameplay, for example in-experience "gold" earned from winning a match.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/AnalyticsEconomyTransactionType#Gameplay)
         */
        export interface Gameplay extends globalThis.EnumItem {
            Name: "Gameplay";
            Value: 2;
            EnumType: typeof globalThis.Enum.AnalyticsEconomyTransactionType;
        }
        export const Gameplay: Gameplay;
        /**
         * Purchase with direct context to a reward, for example in-experience "gold" used to purchase an extra life.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/AnalyticsEconomyTransactionType#ContextualPurchase)
         */
        export interface ContextualPurchase extends globalThis.EnumItem {
            Name: "ContextualPurchase";
            Value: 3;
            EnumType: typeof globalThis.Enum.AnalyticsEconomyTransactionType;
        }
        export const ContextualPurchase: ContextualPurchase;
        /**
         * Time-based reward, for example in-experience "gold" rewarded for logging in daily.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/AnalyticsEconomyTransactionType#TimedReward)
         */
        export interface TimedReward extends globalThis.EnumItem {
            Name: "TimedReward";
            Value: 4;
            EnumType: typeof globalThis.Enum.AnalyticsEconomyTransactionType;
        }
        export const TimedReward: TimedReward;
        /**
         * Transaction related to onboarding, for example in-experience "gold" rewarded for completing the tutorial.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/AnalyticsEconomyTransactionType#Onboarding)
         */
        export interface Onboarding extends globalThis.EnumItem {
            Name: "Onboarding";
            Value: 5;
            EnumType: typeof globalThis.Enum.AnalyticsEconomyTransactionType;
        }
        export const Onboarding: Onboarding;
        export function GetEnumItems(this: globalThis.Enum): Array<globalThis.Enum.AnalyticsEconomyTransactionType>;
        export function FromName(this: globalThis.Enum, name: string): globalThis.Enum.AnalyticsEconomyTransactionType | undefined;
        export function FromValue(this: globalThis.Enum, value: number): globalThis.Enum.AnalyticsEconomyTransactionType | undefined;
    }
    export type AnalyticsEconomyTransactionType = AnalyticsEconomyTransactionType.IAP | AnalyticsEconomyTransactionType.Shop | AnalyticsEconomyTransactionType.Gameplay | AnalyticsEconomyTransactionType.ContextualPurchase | AnalyticsEconomyTransactionType.TimedReward | AnalyticsEconomyTransactionType.Onboarding;
    /**
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/AnalyticsLogLevel)
     */
    export namespace AnalyticsLogLevel {
        /**
         * Trace is the noisiest level, rarely (if ever) enabled for a production app.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/AnalyticsLogLevel#Trace)
         */
        export interface Trace extends globalThis.EnumItem {
            Name: "Trace";
            Value: 0;
            EnumType: typeof globalThis.Enum.AnalyticsLogLevel;
        }
        export const Trace: Trace;
        /**
         * Used for debugging.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/AnalyticsLogLevel#Debug)
         */
        export interface Debug extends globalThis.EnumItem {
            Name: "Debug";
            Value: 1;
            EnumType: typeof globalThis.Enum.AnalyticsLogLevel;
        }
        export const Debug: Debug;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/AnalyticsLogLevel#Information)
         */
        export interface Information extends globalThis.EnumItem {
            Name: "Information";
            Value: 2;
            EnumType: typeof globalThis.Enum.AnalyticsLogLevel;
        }
        export const Information: Information;
        /**
         * Used for warning.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/AnalyticsLogLevel#Warning)
         */
        export interface Warning extends globalThis.EnumItem {
            Name: "Warning";
            Value: 3;
            EnumType: typeof globalThis.Enum.AnalyticsLogLevel;
        }
        export const Warning: Warning;
        /**
         * When functionality is unavailable or expectations broken.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/AnalyticsLogLevel#Error)
         */
        export interface Error extends globalThis.EnumItem {
            Name: "Error";
            Value: 4;
            EnumType: typeof globalThis.Enum.AnalyticsLogLevel;
        }
        export const Error: Error;
        /**
         * The most critical level, Fatal events demand immediate attention.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/AnalyticsLogLevel#Fatal)
         */
        export interface Fatal extends globalThis.EnumItem {
            Name: "Fatal";
            Value: 5;
            EnumType: typeof globalThis.Enum.AnalyticsLogLevel;
        }
        export const Fatal: Fatal;
        export function GetEnumItems(this: globalThis.Enum): Array<globalThis.Enum.AnalyticsLogLevel>;
        export function FromName(this: globalThis.Enum, name: string): globalThis.Enum.AnalyticsLogLevel | undefined;
        export function FromValue(this: globalThis.Enum, value: number): globalThis.Enum.AnalyticsLogLevel | undefined;
    }
    export type AnalyticsLogLevel = AnalyticsLogLevel.Trace | AnalyticsLogLevel.Debug | AnalyticsLogLevel.Information | AnalyticsLogLevel.Warning | AnalyticsLogLevel.Error | AnalyticsLogLevel.Fatal;
    /**
     * This enum is used as an argument in `AnalyticsService:FirePlayerProgressionEvent()` to describe the status of progression.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/AnalyticsProgressionStatus)
     */
    export namespace AnalyticsProgressionStatus {
        /**
         * Default status. Used for an undefined status.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/AnalyticsProgressionStatus#Default)
         */
        export interface Default extends globalThis.EnumItem {
            Name: "Default";
            Value: 0;
            EnumType: typeof globalThis.Enum.AnalyticsProgressionStatus;
        }
        export const Default: Default;
        /**
         * Indicates the beginning of progression.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/AnalyticsProgressionStatus#Begin)
         */
        export interface Begin extends globalThis.EnumItem {
            Name: "Begin";
            Value: 1;
            EnumType: typeof globalThis.Enum.AnalyticsProgressionStatus;
        }
        export const Begin: Begin;
        /**
         * Indicates the progression completed.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/AnalyticsProgressionStatus#Complete)
         */
        export interface Complete extends globalThis.EnumItem {
            Name: "Complete";
            Value: 2;
            EnumType: typeof globalThis.Enum.AnalyticsProgressionStatus;
        }
        export const Complete: Complete;
        /**
         * Indicates the progression abandoned.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/AnalyticsProgressionStatus#Abandon)
         */
        export interface Abandon extends globalThis.EnumItem {
            Name: "Abandon";
            Value: 3;
            EnumType: typeof globalThis.Enum.AnalyticsProgressionStatus;
        }
        export const Abandon: Abandon;
        /**
         * Indicates the progression failed.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/AnalyticsProgressionStatus#Fail)
         */
        export interface Fail extends globalThis.EnumItem {
            Name: "Fail";
            Value: 4;
            EnumType: typeof globalThis.Enum.AnalyticsProgressionStatus;
        }
        export const Fail: Fail;
        export function GetEnumItems(this: globalThis.Enum): Array<globalThis.Enum.AnalyticsProgressionStatus>;
        export function FromName(this: globalThis.Enum, name: string): globalThis.Enum.AnalyticsProgressionStatus | undefined;
        export function FromValue(this: globalThis.Enum, value: number): globalThis.Enum.AnalyticsProgressionStatus | undefined;
    }
    export type AnalyticsProgressionStatus = AnalyticsProgressionStatus.Default | AnalyticsProgressionStatus.Begin | AnalyticsProgressionStatus.Complete | AnalyticsProgressionStatus.Abandon | AnalyticsProgressionStatus.Fail;
    /**
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/AnalyticsProgressionType)
     */
    export namespace AnalyticsProgressionType {
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/AnalyticsProgressionType#Custom)
         */
        export interface Custom extends globalThis.EnumItem {
            Name: "Custom";
            Value: 0;
            EnumType: typeof globalThis.Enum.AnalyticsProgressionType;
        }
        export const Custom: Custom;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/AnalyticsProgressionType#Start)
         */
        export interface Start extends globalThis.EnumItem {
            Name: "Start";
            Value: 1;
            EnumType: typeof globalThis.Enum.AnalyticsProgressionType;
        }
        export const Start: Start;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/AnalyticsProgressionType#Fail)
         */
        export interface Fail extends globalThis.EnumItem {
            Name: "Fail";
            Value: 2;
            EnumType: typeof globalThis.Enum.AnalyticsProgressionType;
        }
        export const Fail: Fail;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/AnalyticsProgressionType#Complete)
         */
        export interface Complete extends globalThis.EnumItem {
            Name: "Complete";
            Value: 3;
            EnumType: typeof globalThis.Enum.AnalyticsProgressionType;
        }
        export const Complete: Complete;
        export function GetEnumItems(this: globalThis.Enum): Array<globalThis.Enum.AnalyticsProgressionType>;
        export function FromName(this: globalThis.Enum, name: string): globalThis.Enum.AnalyticsProgressionType | undefined;
        export function FromValue(this: globalThis.Enum, value: number): globalThis.Enum.AnalyticsProgressionType | undefined;
    }
    export type AnalyticsProgressionType = AnalyticsProgressionType.Custom | AnalyticsProgressionType.Start | AnalyticsProgressionType.Fail | AnalyticsProgressionType.Complete;
    /**
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/AnimationClipFromVideoStatus)
     */
    export namespace AnimationClipFromVideoStatus {
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/AnimationClipFromVideoStatus#Initializing)
         */
        export interface Initializing extends globalThis.EnumItem {
            Name: "Initializing";
            Value: 0;
            EnumType: typeof globalThis.Enum.AnimationClipFromVideoStatus;
        }
        export const Initializing: Initializing;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/AnimationClipFromVideoStatus#Pending)
         */
        export interface Pending extends globalThis.EnumItem {
            Name: "Pending";
            Value: 1;
            EnumType: typeof globalThis.Enum.AnimationClipFromVideoStatus;
        }
        export const Pending: Pending;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/AnimationClipFromVideoStatus#Processing)
         */
        export interface Processing extends globalThis.EnumItem {
            Name: "Processing";
            Value: 2;
            EnumType: typeof globalThis.Enum.AnimationClipFromVideoStatus;
        }
        export const Processing: Processing;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/AnimationClipFromVideoStatus#ErrorGeneric)
         */
        export interface ErrorGeneric extends globalThis.EnumItem {
            Name: "ErrorGeneric";
            Value: 4;
            EnumType: typeof globalThis.Enum.AnimationClipFromVideoStatus;
        }
        export const ErrorGeneric: ErrorGeneric;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/AnimationClipFromVideoStatus#Success)
         */
        export interface Success extends globalThis.EnumItem {
            Name: "Success";
            Value: 6;
            EnumType: typeof globalThis.Enum.AnimationClipFromVideoStatus;
        }
        export const Success: Success;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/AnimationClipFromVideoStatus#ErrorVideoTooLong)
         */
        export interface ErrorVideoTooLong extends globalThis.EnumItem {
            Name: "ErrorVideoTooLong";
            Value: 7;
            EnumType: typeof globalThis.Enum.AnimationClipFromVideoStatus;
        }
        export const ErrorVideoTooLong: ErrorVideoTooLong;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/AnimationClipFromVideoStatus#ErrorNoPersonDetected)
         */
        export interface ErrorNoPersonDetected extends globalThis.EnumItem {
            Name: "ErrorNoPersonDetected";
            Value: 8;
            EnumType: typeof globalThis.Enum.AnimationClipFromVideoStatus;
        }
        export const ErrorNoPersonDetected: ErrorNoPersonDetected;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/AnimationClipFromVideoStatus#ErrorVideoUnstable)
         */
        export interface ErrorVideoUnstable extends globalThis.EnumItem {
            Name: "ErrorVideoUnstable";
            Value: 9;
            EnumType: typeof globalThis.Enum.AnimationClipFromVideoStatus;
        }
        export const ErrorVideoUnstable: ErrorVideoUnstable;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/AnimationClipFromVideoStatus#Timeout)
         */
        export interface Timeout extends globalThis.EnumItem {
            Name: "Timeout";
            Value: 10;
            EnumType: typeof globalThis.Enum.AnimationClipFromVideoStatus;
        }
        export const Timeout: Timeout;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/AnimationClipFromVideoStatus#Cancelled)
         */
        export interface Cancelled extends globalThis.EnumItem {
            Name: "Cancelled";
            Value: 11;
            EnumType: typeof globalThis.Enum.AnimationClipFromVideoStatus;
        }
        export const Cancelled: Cancelled;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/AnimationClipFromVideoStatus#ErrorMultiplePeople)
         */
        export interface ErrorMultiplePeople extends globalThis.EnumItem {
            Name: "ErrorMultiplePeople";
            Value: 12;
            EnumType: typeof globalThis.Enum.AnimationClipFromVideoStatus;
        }
        export const ErrorMultiplePeople: ErrorMultiplePeople;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/AnimationClipFromVideoStatus#ErrorUploadingVideo)
         */
        export interface ErrorUploadingVideo extends globalThis.EnumItem {
            Name: "ErrorUploadingVideo";
            Value: 2001;
            EnumType: typeof globalThis.Enum.AnimationClipFromVideoStatus;
        }
        export const ErrorUploadingVideo: ErrorUploadingVideo;
        export function GetEnumItems(this: globalThis.Enum): Array<globalThis.Enum.AnimationClipFromVideoStatus>;
        export function FromName(this: globalThis.Enum, name: string): globalThis.Enum.AnimationClipFromVideoStatus | undefined;
        export function FromValue(this: globalThis.Enum, value: number): globalThis.Enum.AnimationClipFromVideoStatus | undefined;
    }
    export type AnimationClipFromVideoStatus = AnimationClipFromVideoStatus.Initializing | AnimationClipFromVideoStatus.Pending | AnimationClipFromVideoStatus.Processing | AnimationClipFromVideoStatus.ErrorGeneric | AnimationClipFromVideoStatus.Success | AnimationClipFromVideoStatus.ErrorVideoTooLong | AnimationClipFromVideoStatus.ErrorNoPersonDetected | AnimationClipFromVideoStatus.ErrorVideoUnstable | AnimationClipFromVideoStatus.Timeout | AnimationClipFromVideoStatus.Cancelled | AnimationClipFromVideoStatus.ErrorMultiplePeople | AnimationClipFromVideoStatus.ErrorUploadingVideo;
    /**
     * The AnimationPriority Enum determines how concurrently-playing AnimationTracks contribute to the final animation.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/AnimationPriority)
     */
    export namespace AnimationPriority {
        /**
         * (7) - Lowest priority, intended for use by Roblox default animations and catalog animation bundles.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/AnimationPriority#Core)
         */
        export interface Core extends globalThis.EnumItem {
            Name: "Core";
            Value: 1000;
            EnumType: typeof globalThis.Enum.AnimationPriority;
        }
        export const Core: Core;
        /**
         * (6) - Recommended priority for character idle animations.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/AnimationPriority#Idle)
         */
        export interface Idle extends globalThis.EnumItem {
            Name: "Idle";
            Value: 0;
            EnumType: typeof globalThis.Enum.AnimationPriority;
        }
        export const Idle: Idle;
        /**
         * (5) - Recommended priority for walk, run, swim, climb, and other locomotion animations.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/AnimationPriority#Movement)
         */
        export interface Movement extends globalThis.EnumItem {
            Name: "Movement";
            Value: 1;
            EnumType: typeof globalThis.Enum.AnimationPriority;
        }
        export const Movement: Movement;
        /**
         * (4) - Recommended priority for character actions that must override idle and locomotion animations.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/AnimationPriority#Action)
         */
        export interface Action extends globalThis.EnumItem {
            Name: "Action";
            Value: 2;
            EnumType: typeof globalThis.Enum.AnimationPriority;
        }
        export const Action: Action;
        /**
         * (3) - Action2 will override Action.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/AnimationPriority#Action2)
         */
        export interface Action2 extends globalThis.EnumItem {
            Name: "Action2";
            Value: 3;
            EnumType: typeof globalThis.Enum.AnimationPriority;
        }
        export const Action2: Action2;
        /**
         * (2) - Action3 will override Action2.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/AnimationPriority#Action3)
         */
        export interface Action3 extends globalThis.EnumItem {
            Name: "Action3";
            Value: 4;
            EnumType: typeof globalThis.Enum.AnimationPriority;
        }
        export const Action3: Action3;
        /**
         * (1) - Action4 is the highest priority available, overriding all other priority values.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/AnimationPriority#Action4)
         */
        export interface Action4 extends globalThis.EnumItem {
            Name: "Action4";
            Value: 5;
            EnumType: typeof globalThis.Enum.AnimationPriority;
        }
        export const Action4: Action4;
        export function GetEnumItems(this: globalThis.Enum): Array<globalThis.Enum.AnimationPriority>;
        export function FromName(this: globalThis.Enum, name: string): globalThis.Enum.AnimationPriority | undefined;
        export function FromValue(this: globalThis.Enum, value: number): globalThis.Enum.AnimationPriority | undefined;
    }
    export type AnimationPriority = AnimationPriority.Core | AnimationPriority.Idle | AnimationPriority.Movement | AnimationPriority.Action | AnimationPriority.Action2 | AnimationPriority.Action3 | AnimationPriority.Action4;
    /**
     * Animation Retargeting setting.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/AnimatorRetargetingMode)
     */
    export namespace AnimatorRetargetingMode {
        /**
         * Retargeting in default state, opt-in initially but subject to change.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/AnimatorRetargetingMode#Default)
         */
        export interface Default extends globalThis.EnumItem {
            Name: "Default";
            Value: 0;
            EnumType: typeof globalThis.Enum.AnimatorRetargetingMode;
        }
        export const Default: Default;
        /**
         * Retargeting disabled.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/AnimatorRetargetingMode#Disabled)
         */
        export interface Disabled extends globalThis.EnumItem {
            Name: "Disabled";
            Value: 1;
            EnumType: typeof globalThis.Enum.AnimatorRetargetingMode;
        }
        export const Disabled: Disabled;
        /**
         * Retargeting enabled.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/AnimatorRetargetingMode#Enabled)
         */
        export interface Enabled extends globalThis.EnumItem {
            Name: "Enabled";
            Value: 2;
            EnumType: typeof globalThis.Enum.AnimatorRetargetingMode;
        }
        export const Enabled: Enabled;
        export function GetEnumItems(this: globalThis.Enum): Array<globalThis.Enum.AnimatorRetargetingMode>;
        export function FromName(this: globalThis.Enum, name: string): globalThis.Enum.AnimatorRetargetingMode | undefined;
        export function FromValue(this: globalThis.Enum, value: number): globalThis.Enum.AnimatorRetargetingMode | undefined;
    }
    export type AnimatorRetargetingMode = AnimatorRetargetingMode.Default | AnimatorRetargetingMode.Disabled | AnimatorRetargetingMode.Enabled;
    /**
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/AnnotationEditingMode)
     */
    export namespace AnnotationEditingMode {
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/AnnotationEditingMode#None)
         */
        export interface None extends globalThis.EnumItem {
            Name: "None";
            Value: 0;
            EnumType: typeof globalThis.Enum.AnnotationEditingMode;
        }
        export const None: None;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/AnnotationEditingMode#PlacingNew)
         */
        export interface PlacingNew extends globalThis.EnumItem {
            Name: "PlacingNew";
            Value: 1;
            EnumType: typeof globalThis.Enum.AnnotationEditingMode;
        }
        export const PlacingNew: PlacingNew;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/AnnotationEditingMode#WritingNew)
         */
        export interface WritingNew extends globalThis.EnumItem {
            Name: "WritingNew";
            Value: 2;
            EnumType: typeof globalThis.Enum.AnnotationEditingMode;
        }
        export const WritingNew: WritingNew;
        export function GetEnumItems(this: globalThis.Enum): Array<globalThis.Enum.AnnotationEditingMode>;
        export function FromName(this: globalThis.Enum, name: string): globalThis.Enum.AnnotationEditingMode | undefined;
        export function FromValue(this: globalThis.Enum, value: number): globalThis.Enum.AnnotationEditingMode | undefined;
    }
    export type AnnotationEditingMode = AnnotationEditingMode.None | AnnotationEditingMode.PlacingNew | AnnotationEditingMode.WritingNew;
    /**
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/AnnotationRequestResult)
     */
    export namespace AnnotationRequestResult {
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/AnnotationRequestResult#Success)
         */
        export interface Success extends globalThis.EnumItem {
            Name: "Success";
            Value: 0;
            EnumType: typeof globalThis.Enum.AnnotationRequestResult;
        }
        export const Success: Success;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/AnnotationRequestResult#ErrorInternalFailure)
         */
        export interface ErrorInternalFailure extends globalThis.EnumItem {
            Name: "ErrorInternalFailure";
            Value: 1;
            EnumType: typeof globalThis.Enum.AnnotationRequestResult;
        }
        export const ErrorInternalFailure: ErrorInternalFailure;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/AnnotationRequestResult#ErrorNotFound)
         */
        export interface ErrorNotFound extends globalThis.EnumItem {
            Name: "ErrorNotFound";
            Value: 2;
            EnumType: typeof globalThis.Enum.AnnotationRequestResult;
        }
        export const ErrorNotFound: ErrorNotFound;
        export function GetEnumItems(this: globalThis.Enum): Array<globalThis.Enum.AnnotationRequestResult>;
        export function FromName(this: globalThis.Enum, name: string): globalThis.Enum.AnnotationRequestResult | undefined;
        export function FromValue(this: globalThis.Enum, value: number): globalThis.Enum.AnnotationRequestResult | undefined;
    }
    export type AnnotationRequestResult = AnnotationRequestResult.Success | AnnotationRequestResult.ErrorInternalFailure | AnnotationRequestResult.ErrorNotFound;
    /**
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/AnnotationRequestType)
     */
    export namespace AnnotationRequestType {
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/AnnotationRequestType#Unknown)
         */
        export interface Unknown extends globalThis.EnumItem {
            Name: "Unknown";
            Value: 0;
            EnumType: typeof globalThis.Enum.AnnotationRequestType;
        }
        export const Unknown: Unknown;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/AnnotationRequestType#Create)
         */
        export interface Create extends globalThis.EnumItem {
            Name: "Create";
            Value: 1;
            EnumType: typeof globalThis.Enum.AnnotationRequestType;
        }
        export const Create: Create;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/AnnotationRequestType#Resolve)
         */
        export interface Resolve extends globalThis.EnumItem {
            Name: "Resolve";
            Value: 2;
            EnumType: typeof globalThis.Enum.AnnotationRequestType;
        }
        export const Resolve: Resolve;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/AnnotationRequestType#Delete)
         */
        export interface Delete extends globalThis.EnumItem {
            Name: "Delete";
            Value: 3;
            EnumType: typeof globalThis.Enum.AnnotationRequestType;
        }
        export const Delete: Delete;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/AnnotationRequestType#Edit)
         */
        export interface Edit extends globalThis.EnumItem {
            Name: "Edit";
            Value: 4;
            EnumType: typeof globalThis.Enum.AnnotationRequestType;
        }
        export const Edit: Edit;
        export function GetEnumItems(this: globalThis.Enum): Array<globalThis.Enum.AnnotationRequestType>;
        export function FromName(this: globalThis.Enum, name: string): globalThis.Enum.AnnotationRequestType | undefined;
        export function FromValue(this: globalThis.Enum, value: number): globalThis.Enum.AnnotationRequestType | undefined;
    }
    export type AnnotationRequestType = AnnotationRequestType.Unknown | AnnotationRequestType.Create | AnnotationRequestType.Resolve | AnnotationRequestType.Delete | AnnotationRequestType.Edit;
    /**
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/AppLifecycleManagerState)
     */
    export namespace AppLifecycleManagerState {
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/AppLifecycleManagerState#Detached)
         */
        export interface Detached extends globalThis.EnumItem {
            Name: "Detached";
            Value: 0;
            EnumType: typeof globalThis.Enum.AppLifecycleManagerState;
        }
        export const Detached: Detached;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/AppLifecycleManagerState#Active)
         */
        export interface Active extends globalThis.EnumItem {
            Name: "Active";
            Value: 1;
            EnumType: typeof globalThis.Enum.AppLifecycleManagerState;
        }
        export const Active: Active;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/AppLifecycleManagerState#Inactive)
         */
        export interface Inactive extends globalThis.EnumItem {
            Name: "Inactive";
            Value: 2;
            EnumType: typeof globalThis.Enum.AppLifecycleManagerState;
        }
        export const Inactive: Inactive;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/AppLifecycleManagerState#Hidden)
         */
        export interface Hidden extends globalThis.EnumItem {
            Name: "Hidden";
            Value: 3;
            EnumType: typeof globalThis.Enum.AppLifecycleManagerState;
        }
        export const Hidden: Hidden;
        export function GetEnumItems(this: globalThis.Enum): Array<globalThis.Enum.AppLifecycleManagerState>;
        export function FromName(this: globalThis.Enum, name: string): globalThis.Enum.AppLifecycleManagerState | undefined;
        export function FromValue(this: globalThis.Enum, value: number): globalThis.Enum.AppLifecycleManagerState | undefined;
    }
    export type AppLifecycleManagerState = AppLifecycleManagerState.Detached | AppLifecycleManagerState.Active | AppLifecycleManagerState.Inactive | AppLifecycleManagerState.Hidden;
    /**
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/AppShellActionType)
     */
    export namespace AppShellActionType {
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/AppShellActionType#None)
         */
        export interface None extends globalThis.EnumItem {
            Name: "None";
            Value: 0;
            EnumType: typeof globalThis.Enum.AppShellActionType;
        }
        export const None: None;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/AppShellActionType#OpenApp)
         */
        export interface OpenApp extends globalThis.EnumItem {
            Name: "OpenApp";
            Value: 1;
            EnumType: typeof globalThis.Enum.AppShellActionType;
        }
        export const OpenApp: OpenApp;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/AppShellActionType#TapChatTab)
         */
        export interface TapChatTab extends globalThis.EnumItem {
            Name: "TapChatTab";
            Value: 2;
            EnumType: typeof globalThis.Enum.AppShellActionType;
        }
        export const TapChatTab: TapChatTab;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/AppShellActionType#TapConversationEntry)
         */
        export interface TapConversationEntry extends globalThis.EnumItem {
            Name: "TapConversationEntry";
            Value: 3;
            EnumType: typeof globalThis.Enum.AppShellActionType;
        }
        export const TapConversationEntry: TapConversationEntry;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/AppShellActionType#TapAvatarTab)
         */
        export interface TapAvatarTab extends globalThis.EnumItem {
            Name: "TapAvatarTab";
            Value: 4;
            EnumType: typeof globalThis.Enum.AppShellActionType;
        }
        export const TapAvatarTab: TapAvatarTab;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/AppShellActionType#ReadConversation)
         */
        export interface ReadConversation extends globalThis.EnumItem {
            Name: "ReadConversation";
            Value: 5;
            EnumType: typeof globalThis.Enum.AppShellActionType;
        }
        export const ReadConversation: ReadConversation;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/AppShellActionType#TapGamePageTab)
         */
        export interface TapGamePageTab extends globalThis.EnumItem {
            Name: "TapGamePageTab";
            Value: 6;
            EnumType: typeof globalThis.Enum.AppShellActionType;
        }
        export const TapGamePageTab: TapGamePageTab;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/AppShellActionType#TapHomePageTab)
         */
        export interface TapHomePageTab extends globalThis.EnumItem {
            Name: "TapHomePageTab";
            Value: 7;
            EnumType: typeof globalThis.Enum.AppShellActionType;
        }
        export const TapHomePageTab: TapHomePageTab;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/AppShellActionType#GamePageLoaded)
         */
        export interface GamePageLoaded extends globalThis.EnumItem {
            Name: "GamePageLoaded";
            Value: 8;
            EnumType: typeof globalThis.Enum.AppShellActionType;
        }
        export const GamePageLoaded: GamePageLoaded;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/AppShellActionType#HomePageLoaded)
         */
        export interface HomePageLoaded extends globalThis.EnumItem {
            Name: "HomePageLoaded";
            Value: 9;
            EnumType: typeof globalThis.Enum.AppShellActionType;
        }
        export const HomePageLoaded: HomePageLoaded;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/AppShellActionType#AvatarEditorPageLoaded)
         */
        export interface AvatarEditorPageLoaded extends globalThis.EnumItem {
            Name: "AvatarEditorPageLoaded";
            Value: 10;
            EnumType: typeof globalThis.Enum.AppShellActionType;
        }
        export const AvatarEditorPageLoaded: AvatarEditorPageLoaded;
        export function GetEnumItems(this: globalThis.Enum): Array<globalThis.Enum.AppShellActionType>;
        export function FromName(this: globalThis.Enum, name: string): globalThis.Enum.AppShellActionType | undefined;
        export function FromValue(this: globalThis.Enum, value: number): globalThis.Enum.AppShellActionType | undefined;
    }
    export type AppShellActionType = AppShellActionType.None | AppShellActionType.OpenApp | AppShellActionType.TapChatTab | AppShellActionType.TapConversationEntry | AppShellActionType.TapAvatarTab | AppShellActionType.ReadConversation | AppShellActionType.TapGamePageTab | AppShellActionType.TapHomePageTab | AppShellActionType.GamePageLoaded | AppShellActionType.HomePageLoaded | AppShellActionType.AvatarEditorPageLoaded;
    /**
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/AppShellFeature)
     */
    export namespace AppShellFeature {
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/AppShellFeature#None)
         */
        export interface None extends globalThis.EnumItem {
            Name: "None";
            Value: 0;
            EnumType: typeof globalThis.Enum.AppShellFeature;
        }
        export const None: None;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/AppShellFeature#Chat)
         */
        export interface Chat extends globalThis.EnumItem {
            Name: "Chat";
            Value: 1;
            EnumType: typeof globalThis.Enum.AppShellFeature;
        }
        export const Chat: Chat;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/AppShellFeature#AvatarEditor)
         */
        export interface AvatarEditor extends globalThis.EnumItem {
            Name: "AvatarEditor";
            Value: 2;
            EnumType: typeof globalThis.Enum.AppShellFeature;
        }
        export const AvatarEditor: AvatarEditor;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/AppShellFeature#GamePage)
         */
        export interface GamePage extends globalThis.EnumItem {
            Name: "GamePage";
            Value: 3;
            EnumType: typeof globalThis.Enum.AppShellFeature;
        }
        export const GamePage: GamePage;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/AppShellFeature#HomePage)
         */
        export interface HomePage extends globalThis.EnumItem {
            Name: "HomePage";
            Value: 4;
            EnumType: typeof globalThis.Enum.AppShellFeature;
        }
        export const HomePage: HomePage;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/AppShellFeature#More)
         */
        export interface More extends globalThis.EnumItem {
            Name: "More";
            Value: 5;
            EnumType: typeof globalThis.Enum.AppShellFeature;
        }
        export const More: More;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/AppShellFeature#Landing)
         */
        export interface Landing extends globalThis.EnumItem {
            Name: "Landing";
            Value: 6;
            EnumType: typeof globalThis.Enum.AppShellFeature;
        }
        export const Landing: Landing;
        export function GetEnumItems(this: globalThis.Enum): Array<globalThis.Enum.AppShellFeature>;
        export function FromName(this: globalThis.Enum, name: string): globalThis.Enum.AppShellFeature | undefined;
        export function FromValue(this: globalThis.Enum, value: number): globalThis.Enum.AppShellFeature | undefined;
    }
    export type AppShellFeature = AppShellFeature.None | AppShellFeature.Chat | AppShellFeature.AvatarEditor | AppShellFeature.GamePage | AppShellFeature.HomePage | AppShellFeature.More | AppShellFeature.Landing;
    /**
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/AppUpdateStatus)
     */
    export namespace AppUpdateStatus {
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/AppUpdateStatus#Unknown)
         */
        export interface Unknown extends globalThis.EnumItem {
            Name: "Unknown";
            Value: 0;
            EnumType: typeof globalThis.Enum.AppUpdateStatus;
        }
        export const Unknown: Unknown;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/AppUpdateStatus#NotSupported)
         */
        export interface NotSupported extends globalThis.EnumItem {
            Name: "NotSupported";
            Value: 1;
            EnumType: typeof globalThis.Enum.AppUpdateStatus;
        }
        export const NotSupported: NotSupported;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/AppUpdateStatus#Failed)
         */
        export interface Failed extends globalThis.EnumItem {
            Name: "Failed";
            Value: 2;
            EnumType: typeof globalThis.Enum.AppUpdateStatus;
        }
        export const Failed: Failed;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/AppUpdateStatus#NotAvailable)
         */
        export interface NotAvailable extends globalThis.EnumItem {
            Name: "NotAvailable";
            Value: 3;
            EnumType: typeof globalThis.Enum.AppUpdateStatus;
        }
        export const NotAvailable: NotAvailable;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/AppUpdateStatus#Available)
         */
        export interface Available extends globalThis.EnumItem {
            Name: "Available";
            Value: 4;
            EnumType: typeof globalThis.Enum.AppUpdateStatus;
        }
        export const Available: Available;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/AppUpdateStatus#AvailableBoundChannel)
         */
        export interface AvailableBoundChannel extends globalThis.EnumItem {
            Name: "AvailableBoundChannel";
            Value: 5;
            EnumType: typeof globalThis.Enum.AppUpdateStatus;
        }
        export const AvailableBoundChannel: AvailableBoundChannel;
        export function GetEnumItems(this: globalThis.Enum): Array<globalThis.Enum.AppUpdateStatus>;
        export function FromName(this: globalThis.Enum, name: string): globalThis.Enum.AppUpdateStatus | undefined;
        export function FromValue(this: globalThis.Enum, value: number): globalThis.Enum.AppUpdateStatus | undefined;
    }
    export type AppUpdateStatus = AppUpdateStatus.Unknown | AppUpdateStatus.NotSupported | AppUpdateStatus.Failed | AppUpdateStatus.NotAvailable | AppUpdateStatus.Available | AppUpdateStatus.AvailableBoundChannel;
    /**
     * Used by `UIStroke.ApplyStrokeMode` to determine where to apply the stroke.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/ApplyStrokeMode)
     */
    export namespace ApplyStrokeMode {
        /**
         * The stroke is applied to the parent UI element's text.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/ApplyStrokeMode#Contextual)
         */
        export interface Contextual extends globalThis.EnumItem {
            Name: "Contextual";
            Value: 0;
            EnumType: typeof globalThis.Enum.ApplyStrokeMode;
        }
        export const Contextual: Contextual;
        /**
         * The stroke is applied to the parent UI element's border.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/ApplyStrokeMode#Border)
         */
        export interface Border extends globalThis.EnumItem {
            Name: "Border";
            Value: 1;
            EnumType: typeof globalThis.Enum.ApplyStrokeMode;
        }
        export const Border: Border;
        export function GetEnumItems(this: globalThis.Enum): Array<globalThis.Enum.ApplyStrokeMode>;
        export function FromName(this: globalThis.Enum, name: string): globalThis.Enum.ApplyStrokeMode | undefined;
        export function FromValue(this: globalThis.Enum, value: number): globalThis.Enum.ApplyStrokeMode | undefined;
    }
    export type ApplyStrokeMode = ApplyStrokeMode.Contextual | ApplyStrokeMode.Border;
    /**
     * Used by `UIAspectRatioConstraint.AspectType` to control sizing behavior.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/AspectType)
     */
    export namespace AspectType {
        /**
         * The object will be the maximum size possible within its own `AbsoluteSize`.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/AspectType#FitWithinMaxSize)
         */
        export interface FitWithinMaxSize extends globalThis.EnumItem {
            Name: "FitWithinMaxSize";
            Value: 0;
            EnumType: typeof globalThis.Enum.AspectType;
        }
        export const FitWithinMaxSize: FitWithinMaxSize;
        /**
         * The object's maximum size will be the size of the parent while still maintaining the aspect ratio.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/AspectType#ScaleWithParentSize)
         */
        export interface ScaleWithParentSize extends globalThis.EnumItem {
            Name: "ScaleWithParentSize";
            Value: 1;
            EnumType: typeof globalThis.Enum.AspectType;
        }
        export const ScaleWithParentSize: ScaleWithParentSize;
        export function GetEnumItems(this: globalThis.Enum): Array<globalThis.Enum.AspectType>;
        export function FromName(this: globalThis.Enum, name: string): globalThis.Enum.AspectType | undefined;
        export function FromValue(this: globalThis.Enum, value: number): globalThis.Enum.AspectType | undefined;
    }
    export type AspectType = AspectType.FitWithinMaxSize | AspectType.ScaleWithParentSize;
    /**
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/AssetCreatorType)
     */
    export namespace AssetCreatorType {
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/AssetCreatorType#User)
         */
        export interface User extends globalThis.EnumItem {
            Name: "User";
            Value: 0;
            EnumType: typeof globalThis.Enum.AssetCreatorType;
        }
        export const User: User;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/AssetCreatorType#Group)
         */
        export interface Group extends globalThis.EnumItem {
            Name: "Group";
            Value: 1;
            EnumType: typeof globalThis.Enum.AssetCreatorType;
        }
        export const Group: Group;
        export function GetEnumItems(this: globalThis.Enum): Array<globalThis.Enum.AssetCreatorType>;
        export function FromName(this: globalThis.Enum, name: string): globalThis.Enum.AssetCreatorType | undefined;
        export function FromValue(this: globalThis.Enum, value: number): globalThis.Enum.AssetCreatorType | undefined;
    }
    export type AssetCreatorType = AssetCreatorType.User | AssetCreatorType.Group;
    /**
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/AssetFetchStatus)
     */
    export namespace AssetFetchStatus {
        /**
         * The asset loaded successfully.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/AssetFetchStatus#Success)
         */
        export interface Success extends globalThis.EnumItem {
            Name: "Success";
            Value: 0;
            EnumType: typeof globalThis.Enum.AssetFetchStatus;
        }
        export const Success: Success;
        /**
         * The asset failed to load successfully. Subsequent attempts are likely to fail; there may be something wrong with the `Content` string.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/AssetFetchStatus#Failure)
         */
        export interface Failure extends globalThis.EnumItem {
            Name: "Failure";
            Value: 1;
            EnumType: typeof globalThis.Enum.AssetFetchStatus;
        }
        export const Failure: Failure;
        /**
         * The engine has no information about this asset. The engine never tried to load it.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/AssetFetchStatus#None)
         */
        export interface None extends globalThis.EnumItem {
            Name: "None";
            Value: 2;
            EnumType: typeof globalThis.Enum.AssetFetchStatus;
        }
        export const None: None;
        /**
         * The engine is in the middle of trying to load this asset.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/AssetFetchStatus#Loading)
         */
        export interface Loading extends globalThis.EnumItem {
            Name: "Loading";
            Value: 3;
            EnumType: typeof globalThis.Enum.AssetFetchStatus;
        }
        export const Loading: Loading;
        /**
         * The engine tried to load this asset but timed out. Future attempts to load may succeed.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/AssetFetchStatus#TimedOut)
         */
        export interface TimedOut extends globalThis.EnumItem {
            Name: "TimedOut";
            Value: 4;
            EnumType: typeof globalThis.Enum.AssetFetchStatus;
        }
        export const TimedOut: TimedOut;
        export function GetEnumItems(this: globalThis.Enum): Array<globalThis.Enum.AssetFetchStatus>;
        export function FromName(this: globalThis.Enum, name: string): globalThis.Enum.AssetFetchStatus | undefined;
        export function FromValue(this: globalThis.Enum, value: number): globalThis.Enum.AssetFetchStatus | undefined;
    }
    export type AssetFetchStatus = AssetFetchStatus.Success | AssetFetchStatus.Failure | AssetFetchStatus.None | AssetFetchStatus.Loading | AssetFetchStatus.TimedOut;
    /**
     * This Enum can be used to match the AssetTypeId from `MarketplaceService:GetProductInfo()` to an asset type.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/AssetType)
     */
    export namespace AssetType {
        /**
         * The asset is an image.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/AssetType#Image)
         */
        export interface Image extends globalThis.EnumItem {
            Name: "Image";
            Value: 1;
            EnumType: typeof globalThis.Enum.AssetType;
        }
        export const Image: Image;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/AssetType#TShirt)
         */
        export interface TShirt extends globalThis.EnumItem {
            Name: "TShirt";
            Value: 2;
            EnumType: typeof globalThis.Enum.AssetType;
        }
        export const TShirt: TShirt;
        /**
         * @deprecated renamed to TShirt
         */
        export const TeeShirt: TShirt;
        /**
         * The asset is an audio clip.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/AssetType#Audio)
         */
        export interface Audio extends globalThis.EnumItem {
            Name: "Audio";
            Value: 3;
            EnumType: typeof globalThis.Enum.AssetType;
        }
        export const Audio: Audio;
        /**
         * The asset is a mesh.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/AssetType#Mesh)
         */
        export interface Mesh extends globalThis.EnumItem {
            Name: "Mesh";
            Value: 4;
            EnumType: typeof globalThis.Enum.AssetType;
        }
        export const Mesh: Mesh;
        /**
         * The asset is Lua code, for example a `ModuleScript`.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/AssetType#Lua)
         */
        export interface Lua extends globalThis.EnumItem {
            Name: "Lua";
            Value: 5;
            EnumType: typeof globalThis.Enum.AssetType;
        }
        export const Lua: Lua;
        /**
         * The asset is a hat.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/AssetType#Hat)
         */
        export interface Hat extends globalThis.EnumItem {
            Name: "Hat";
            Value: 8;
            EnumType: typeof globalThis.Enum.AssetType;
        }
        export const Hat: Hat;
        /**
         * The asset is a place.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/AssetType#Place)
         */
        export interface Place extends globalThis.EnumItem {
            Name: "Place";
            Value: 9;
            EnumType: typeof globalThis.Enum.AssetType;
        }
        export const Place: Place;
        /**
         * The asset is a model.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/AssetType#Model)
         */
        export interface Model extends globalThis.EnumItem {
            Name: "Model";
            Value: 10;
            EnumType: typeof globalThis.Enum.AssetType;
        }
        export const Model: Model;
        /**
         * The asset is a shirt.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/AssetType#Shirt)
         */
        export interface Shirt extends globalThis.EnumItem {
            Name: "Shirt";
            Value: 11;
            EnumType: typeof globalThis.Enum.AssetType;
        }
        export const Shirt: Shirt;
        /**
         * The asset is a pants item.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/AssetType#Pants)
         */
        export interface Pants extends globalThis.EnumItem {
            Name: "Pants";
            Value: 12;
            EnumType: typeof globalThis.Enum.AssetType;
        }
        export const Pants: Pants;
        /**
         * The asset is a decal (image).
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/AssetType#Decal)
         */
        export interface Decal extends globalThis.EnumItem {
            Name: "Decal";
            Value: 13;
            EnumType: typeof globalThis.Enum.AssetType;
        }
        export const Decal: Decal;
        /**
         * The asset is a head.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/AssetType#Head)
         */
        export interface Head extends globalThis.EnumItem {
            Name: "Head";
            Value: 17;
            EnumType: typeof globalThis.Enum.AssetType;
        }
        export const Head: Head;
        /**
         * The asset is a face.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/AssetType#Face)
         */
        export interface Face extends globalThis.EnumItem {
            Name: "Face";
            Value: 18;
            EnumType: typeof globalThis.Enum.AssetType;
        }
        export const Face: Face;
        /**
         * The asset is a gear item.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/AssetType#Gear)
         */
        export interface Gear extends globalThis.EnumItem {
            Name: "Gear";
            Value: 19;
            EnumType: typeof globalThis.Enum.AssetType;
        }
        export const Gear: Gear;
        /**
         * The asset is a badge.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/AssetType#Badge)
         */
        export interface Badge extends globalThis.EnumItem {
            Name: "Badge";
            Value: 21;
            EnumType: typeof globalThis.Enum.AssetType;
        }
        export const Badge: Badge;
        /**
         * The asset is an animation; also see the more specific animation type enums below.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/AssetType#Animation)
         */
        export interface Animation extends globalThis.EnumItem {
            Name: "Animation";
            Value: 24;
            EnumType: typeof globalThis.Enum.AssetType;
        }
        export const Animation: Animation;
        /**
         * The asset is a torso.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/AssetType#Torso)
         */
        export interface Torso extends globalThis.EnumItem {
            Name: "Torso";
            Value: 27;
            EnumType: typeof globalThis.Enum.AssetType;
        }
        export const Torso: Torso;
        /**
         * The asset is a right arm.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/AssetType#RightArm)
         */
        export interface RightArm extends globalThis.EnumItem {
            Name: "RightArm";
            Value: 28;
            EnumType: typeof globalThis.Enum.AssetType;
        }
        export const RightArm: RightArm;
        /**
         * The asset is a left arm.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/AssetType#LeftArm)
         */
        export interface LeftArm extends globalThis.EnumItem {
            Name: "LeftArm";
            Value: 29;
            EnumType: typeof globalThis.Enum.AssetType;
        }
        export const LeftArm: LeftArm;
        /**
         * The asset is a left leg.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/AssetType#LeftLeg)
         */
        export interface LeftLeg extends globalThis.EnumItem {
            Name: "LeftLeg";
            Value: 30;
            EnumType: typeof globalThis.Enum.AssetType;
        }
        export const LeftLeg: LeftLeg;
        /**
         * The asset is a right leg.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/AssetType#RightLeg)
         */
        export interface RightLeg extends globalThis.EnumItem {
            Name: "RightLeg";
            Value: 31;
            EnumType: typeof globalThis.Enum.AssetType;
        }
        export const RightLeg: RightLeg;
        /**
         * The asset is a pack, for example an animation package.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/AssetType#Package)
         */
        export interface Package extends globalThis.EnumItem {
            Name: "Package";
            Value: 32;
            EnumType: typeof globalThis.Enum.AssetType;
        }
        export const Package: Package;
        /**
         * The asset is a GamePass.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/AssetType#GamePass)
         */
        export interface GamePass extends globalThis.EnumItem {
            Name: "GamePass";
            Value: 34;
            EnumType: typeof globalThis.Enum.AssetType;
        }
        export const GamePass: GamePass;
        /**
         * The asset is a plugin.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/AssetType#Plugin)
         */
        export interface Plugin extends globalThis.EnumItem {
            Name: "Plugin";
            Value: 38;
            EnumType: typeof globalThis.Enum.AssetType;
        }
        export const Plugin: Plugin;
        /**
         * The asset is a mesh part.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/AssetType#MeshPart)
         */
        export interface MeshPart extends globalThis.EnumItem {
            Name: "MeshPart";
            Value: 40;
            EnumType: typeof globalThis.Enum.AssetType;
        }
        export const MeshPart: MeshPart;
        /**
         * The asset is a hair accessory.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/AssetType#HairAccessory)
         */
        export interface HairAccessory extends globalThis.EnumItem {
            Name: "HairAccessory";
            Value: 41;
            EnumType: typeof globalThis.Enum.AssetType;
        }
        export const HairAccessory: HairAccessory;
        /**
         * The asset is a face accessory.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/AssetType#FaceAccessory)
         */
        export interface FaceAccessory extends globalThis.EnumItem {
            Name: "FaceAccessory";
            Value: 42;
            EnumType: typeof globalThis.Enum.AssetType;
        }
        export const FaceAccessory: FaceAccessory;
        /**
         * The asset is a neck accessory.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/AssetType#NeckAccessory)
         */
        export interface NeckAccessory extends globalThis.EnumItem {
            Name: "NeckAccessory";
            Value: 43;
            EnumType: typeof globalThis.Enum.AssetType;
        }
        export const NeckAccessory: NeckAccessory;
        /**
         * The asset is a shoulder accessory.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/AssetType#ShoulderAccessory)
         */
        export interface ShoulderAccessory extends globalThis.EnumItem {
            Name: "ShoulderAccessory";
            Value: 44;
            EnumType: typeof globalThis.Enum.AssetType;
        }
        export const ShoulderAccessory: ShoulderAccessory;
        /**
         * The asset is a front accessory.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/AssetType#FrontAccessory)
         */
        export interface FrontAccessory extends globalThis.EnumItem {
            Name: "FrontAccessory";
            Value: 45;
            EnumType: typeof globalThis.Enum.AssetType;
        }
        export const FrontAccessory: FrontAccessory;
        /**
         * The asset is a back accessory.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/AssetType#BackAccessory)
         */
        export interface BackAccessory extends globalThis.EnumItem {
            Name: "BackAccessory";
            Value: 46;
            EnumType: typeof globalThis.Enum.AssetType;
        }
        export const BackAccessory: BackAccessory;
        /**
         * The asset is a waist accessory.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/AssetType#WaistAccessory)
         */
        export interface WaistAccessory extends globalThis.EnumItem {
            Name: "WaistAccessory";
            Value: 47;
            EnumType: typeof globalThis.Enum.AssetType;
        }
        export const WaistAccessory: WaistAccessory;
        /**
         * The asset is a climb animation.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/AssetType#ClimbAnimation)
         */
        export interface ClimbAnimation extends globalThis.EnumItem {
            Name: "ClimbAnimation";
            Value: 48;
            EnumType: typeof globalThis.Enum.AssetType;
        }
        export const ClimbAnimation: ClimbAnimation;
        /**
         * The asset is a death animation.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/AssetType#DeathAnimation)
         */
        export interface DeathAnimation extends globalThis.EnumItem {
            Name: "DeathAnimation";
            Value: 49;
            EnumType: typeof globalThis.Enum.AssetType;
        }
        export const DeathAnimation: DeathAnimation;
        /**
         * The asset is a fall animation.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/AssetType#FallAnimation)
         */
        export interface FallAnimation extends globalThis.EnumItem {
            Name: "FallAnimation";
            Value: 50;
            EnumType: typeof globalThis.Enum.AssetType;
        }
        export const FallAnimation: FallAnimation;
        /**
         * The asset is an idle animation.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/AssetType#IdleAnimation)
         */
        export interface IdleAnimation extends globalThis.EnumItem {
            Name: "IdleAnimation";
            Value: 51;
            EnumType: typeof globalThis.Enum.AssetType;
        }
        export const IdleAnimation: IdleAnimation;
        /**
         * The asset is a jump animation.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/AssetType#JumpAnimation)
         */
        export interface JumpAnimation extends globalThis.EnumItem {
            Name: "JumpAnimation";
            Value: 52;
            EnumType: typeof globalThis.Enum.AssetType;
        }
        export const JumpAnimation: JumpAnimation;
        /**
         * The asset is a run animation.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/AssetType#RunAnimation)
         */
        export interface RunAnimation extends globalThis.EnumItem {
            Name: "RunAnimation";
            Value: 53;
            EnumType: typeof globalThis.Enum.AssetType;
        }
        export const RunAnimation: RunAnimation;
        /**
         * The asset is a swim animation.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/AssetType#SwimAnimation)
         */
        export interface SwimAnimation extends globalThis.EnumItem {
            Name: "SwimAnimation";
            Value: 54;
            EnumType: typeof globalThis.Enum.AssetType;
        }
        export const SwimAnimation: SwimAnimation;
        /**
         * The asset is a walk animation.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/AssetType#WalkAnimation)
         */
        export interface WalkAnimation extends globalThis.EnumItem {
            Name: "WalkAnimation";
            Value: 55;
            EnumType: typeof globalThis.Enum.AssetType;
        }
        export const WalkAnimation: WalkAnimation;
        /**
         * The asset is a pose animation.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/AssetType#PoseAnimation)
         */
        export interface PoseAnimation extends globalThis.EnumItem {
            Name: "PoseAnimation";
            Value: 56;
            EnumType: typeof globalThis.Enum.AssetType;
        }
        export const PoseAnimation: PoseAnimation;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/AssetType#EarAccessory)
         */
        export interface EarAccessory extends globalThis.EnumItem {
            Name: "EarAccessory";
            Value: 57;
            EnumType: typeof globalThis.Enum.AssetType;
        }
        export const EarAccessory: EarAccessory;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/AssetType#EyeAccessory)
         */
        export interface EyeAccessory extends globalThis.EnumItem {
            Name: "EyeAccessory";
            Value: 58;
            EnumType: typeof globalThis.Enum.AssetType;
        }
        export const EyeAccessory: EyeAccessory;
        /**
         * The asset is an emote animation.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/AssetType#EmoteAnimation)
         */
        export interface EmoteAnimation extends globalThis.EnumItem {
            Name: "EmoteAnimation";
            Value: 61;
            EnumType: typeof globalThis.Enum.AssetType;
        }
        export const EmoteAnimation: EmoteAnimation;
        /**
         * The asset is a video.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/AssetType#Video)
         */
        export interface Video extends globalThis.EnumItem {
            Name: "Video";
            Value: 62;
            EnumType: typeof globalThis.Enum.AssetType;
        }
        export const Video: Video;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/AssetType#TShirtAccessory)
         */
        export interface TShirtAccessory extends globalThis.EnumItem {
            Name: "TShirtAccessory";
            Value: 64;
            EnumType: typeof globalThis.Enum.AssetType;
        }
        export const TShirtAccessory: TShirtAccessory;
        /**
         * @deprecated renamed to TShirtAccessory
         */
        export const TeeShirtAccessory: TShirtAccessory;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/AssetType#ShirtAccessory)
         */
        export interface ShirtAccessory extends globalThis.EnumItem {
            Name: "ShirtAccessory";
            Value: 65;
            EnumType: typeof globalThis.Enum.AssetType;
        }
        export const ShirtAccessory: ShirtAccessory;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/AssetType#PantsAccessory)
         */
        export interface PantsAccessory extends globalThis.EnumItem {
            Name: "PantsAccessory";
            Value: 66;
            EnumType: typeof globalThis.Enum.AssetType;
        }
        export const PantsAccessory: PantsAccessory;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/AssetType#JacketAccessory)
         */
        export interface JacketAccessory extends globalThis.EnumItem {
            Name: "JacketAccessory";
            Value: 67;
            EnumType: typeof globalThis.Enum.AssetType;
        }
        export const JacketAccessory: JacketAccessory;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/AssetType#SweaterAccessory)
         */
        export interface SweaterAccessory extends globalThis.EnumItem {
            Name: "SweaterAccessory";
            Value: 68;
            EnumType: typeof globalThis.Enum.AssetType;
        }
        export const SweaterAccessory: SweaterAccessory;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/AssetType#ShortsAccessory)
         */
        export interface ShortsAccessory extends globalThis.EnumItem {
            Name: "ShortsAccessory";
            Value: 69;
            EnumType: typeof globalThis.Enum.AssetType;
        }
        export const ShortsAccessory: ShortsAccessory;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/AssetType#LeftShoeAccessory)
         */
        export interface LeftShoeAccessory extends globalThis.EnumItem {
            Name: "LeftShoeAccessory";
            Value: 70;
            EnumType: typeof globalThis.Enum.AssetType;
        }
        export const LeftShoeAccessory: LeftShoeAccessory;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/AssetType#RightShoeAccessory)
         */
        export interface RightShoeAccessory extends globalThis.EnumItem {
            Name: "RightShoeAccessory";
            Value: 71;
            EnumType: typeof globalThis.Enum.AssetType;
        }
        export const RightShoeAccessory: RightShoeAccessory;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/AssetType#DressSkirtAccessory)
         */
        export interface DressSkirtAccessory extends globalThis.EnumItem {
            Name: "DressSkirtAccessory";
            Value: 72;
            EnumType: typeof globalThis.Enum.AssetType;
        }
        export const DressSkirtAccessory: DressSkirtAccessory;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/AssetType#FontFamily)
         */
        export interface FontFamily extends globalThis.EnumItem {
            Name: "FontFamily";
            Value: 73;
            EnumType: typeof globalThis.Enum.AssetType;
        }
        export const FontFamily: FontFamily;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/AssetType#EyebrowAccessory)
         */
        export interface EyebrowAccessory extends globalThis.EnumItem {
            Name: "EyebrowAccessory";
            Value: 76;
            EnumType: typeof globalThis.Enum.AssetType;
        }
        export const EyebrowAccessory: EyebrowAccessory;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/AssetType#EyelashAccessory)
         */
        export interface EyelashAccessory extends globalThis.EnumItem {
            Name: "EyelashAccessory";
            Value: 77;
            EnumType: typeof globalThis.Enum.AssetType;
        }
        export const EyelashAccessory: EyelashAccessory;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/AssetType#MoodAnimation)
         */
        export interface MoodAnimation extends globalThis.EnumItem {
            Name: "MoodAnimation";
            Value: 78;
            EnumType: typeof globalThis.Enum.AssetType;
        }
        export const MoodAnimation: MoodAnimation;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/AssetType#DynamicHead)
         */
        export interface DynamicHead extends globalThis.EnumItem {
            Name: "DynamicHead";
            Value: 79;
            EnumType: typeof globalThis.Enum.AssetType;
        }
        export const DynamicHead: DynamicHead;
        export function GetEnumItems(this: globalThis.Enum): Array<globalThis.Enum.AssetType>;
        export function FromName(this: globalThis.Enum, name: string): globalThis.Enum.AssetType | undefined;
        export function FromValue(this: globalThis.Enum, value: number): globalThis.Enum.AssetType | undefined;
    }
    export type AssetType = AssetType.Image | AssetType.TShirt | AssetType.Audio | AssetType.Mesh | AssetType.Lua | AssetType.Hat | AssetType.Place | AssetType.Model | AssetType.Shirt | AssetType.Pants | AssetType.Decal | AssetType.Head | AssetType.Face | AssetType.Gear | AssetType.Badge | AssetType.Animation | AssetType.Torso | AssetType.RightArm | AssetType.LeftArm | AssetType.LeftLeg | AssetType.RightLeg | AssetType.Package | AssetType.GamePass | AssetType.Plugin | AssetType.MeshPart | AssetType.HairAccessory | AssetType.FaceAccessory | AssetType.NeckAccessory | AssetType.ShoulderAccessory | AssetType.FrontAccessory | AssetType.BackAccessory | AssetType.WaistAccessory | AssetType.ClimbAnimation | AssetType.DeathAnimation | AssetType.FallAnimation | AssetType.IdleAnimation | AssetType.JumpAnimation | AssetType.RunAnimation | AssetType.SwimAnimation | AssetType.WalkAnimation | AssetType.PoseAnimation | AssetType.EarAccessory | AssetType.EyeAccessory | AssetType.EmoteAnimation | AssetType.Video | AssetType.TShirtAccessory | AssetType.ShirtAccessory | AssetType.PantsAccessory | AssetType.JacketAccessory | AssetType.SweaterAccessory | AssetType.ShortsAccessory | AssetType.LeftShoeAccessory | AssetType.RightShoeAccessory | AssetType.DressSkirtAccessory | AssetType.FontFamily | AssetType.EyebrowAccessory | AssetType.EyelashAccessory | AssetType.MoodAnimation | AssetType.DynamicHead;
    /**
     * Determines the asset type verification mode.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/AssetTypeVerification)
     */
    export namespace AssetTypeVerification {
        /**
         * Use the default behavior for asset type verification.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/AssetTypeVerification#Default)
         */
        export interface Default extends globalThis.EnumItem {
            Name: "Default";
            Value: 1;
            EnumType: typeof globalThis.Enum.AssetTypeVerification;
        }
        export const Default: Default;
        /**
         * Only verify asset types on the client. Asset type verification can not be turned off on the client.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/AssetTypeVerification#ClientOnly)
         */
        export interface ClientOnly extends globalThis.EnumItem {
            Name: "ClientOnly";
            Value: 2;
            EnumType: typeof globalThis.Enum.AssetTypeVerification;
        }
        export const ClientOnly: ClientOnly;
        /**
         * Always verify the asset types to be loaded and disallow loading models.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/AssetTypeVerification#Always)
         */
        export interface Always extends globalThis.EnumItem {
            Name: "Always";
            Value: 3;
            EnumType: typeof globalThis.Enum.AssetTypeVerification;
        }
        export const Always: Always;
        export function GetEnumItems(this: globalThis.Enum): Array<globalThis.Enum.AssetTypeVerification>;
        export function FromName(this: globalThis.Enum, name: string): globalThis.Enum.AssetTypeVerification | undefined;
        export function FromValue(this: globalThis.Enum, value: number): globalThis.Enum.AssetTypeVerification | undefined;
    }
    export type AssetTypeVerification = AssetTypeVerification.Default | AssetTypeVerification.ClientOnly | AssetTypeVerification.Always;
    /**
     * Used to determine whether voice chat is represented and controlled by `AudioDeviceInput` objects.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/AudioApiRollout)
     */
    export namespace AudioApiRollout {
        /**
         * Voice chat will use an internal voice chat implementation that is automatic and hidden.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/AudioApiRollout#Disabled)
         */
        export interface Disabled extends globalThis.EnumItem {
            Name: "Disabled";
            Value: 0;
            EnumType: typeof globalThis.Enum.AudioApiRollout;
        }
        export const Disabled: Disabled;
        /**
         * Currently means the same thing as `Disabled`, but will be updated to mean `Enabled` in the future.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/AudioApiRollout#Automatic)
         */
        export interface Automatic extends globalThis.EnumItem {
            Name: "Automatic";
            Value: 1;
            EnumType: typeof globalThis.Enum.AudioApiRollout;
        }
        export const Automatic: Automatic;
        /**
         * Voice chat can be customized or controlled via `AudioDeviceInputs`.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/AudioApiRollout#Enabled)
         */
        export interface Enabled extends globalThis.EnumItem {
            Name: "Enabled";
            Value: 2;
            EnumType: typeof globalThis.Enum.AudioApiRollout;
        }
        export const Enabled: Enabled;
        export function GetEnumItems(this: globalThis.Enum): Array<globalThis.Enum.AudioApiRollout>;
        export function FromName(this: globalThis.Enum, name: string): globalThis.Enum.AudioApiRollout | undefined;
        export function FromValue(this: globalThis.Enum, value: number): globalThis.Enum.AudioApiRollout | undefined;
    }
    export type AudioApiRollout = AudioApiRollout.Disabled | AudioApiRollout.Automatic | AudioApiRollout.Enabled;
    /**
     * Filter types used for `AudioFilter` instances.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/AudioFilterType)
     */
    export namespace AudioFilterType {
        /**
         * Filter that boosts or reduces sound near a specified `Frequency`.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/AudioFilterType#Peak)
         */
        export interface Peak extends globalThis.EnumItem {
            Name: "Peak";
            Value: 0;
            EnumType: typeof globalThis.Enum.AudioFilterType;
        }
        export const Peak: Peak;
        /**
         * Filter that boosts or reduces sound below a specified `Frequency`.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/AudioFilterType#LowShelf)
         */
        export interface LowShelf extends globalThis.EnumItem {
            Name: "LowShelf";
            Value: 1;
            EnumType: typeof globalThis.Enum.AudioFilterType;
        }
        export const LowShelf: LowShelf;
        /**
         * Filter that boosts or reduces sound above a specified `Frequency`.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/AudioFilterType#HighShelf)
         */
        export interface HighShelf extends globalThis.EnumItem {
            Name: "HighShelf";
            Value: 2;
            EnumType: typeof globalThis.Enum.AudioFilterType;
        }
        export const HighShelf: HighShelf;
        /**
         * Filter that cuts sound above a specified `Frequency`, at a slope of -12dB/octave.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/AudioFilterType#Lowpass12dB)
         */
        export interface Lowpass12dB extends globalThis.EnumItem {
            Name: "Lowpass12dB";
            Value: 3;
            EnumType: typeof globalThis.Enum.AudioFilterType;
        }
        export const Lowpass12dB: Lowpass12dB;
        /**
         * Filter that cuts sound above a specified `Frequency`, at a slope of -24dB/octave.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/AudioFilterType#Lowpass24dB)
         */
        export interface Lowpass24dB extends globalThis.EnumItem {
            Name: "Lowpass24dB";
            Value: 4;
            EnumType: typeof globalThis.Enum.AudioFilterType;
        }
        export const Lowpass24dB: Lowpass24dB;
        /**
         * Filter that cuts sound above a specified `Frequency`, at a slope of -48dB/octave.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/AudioFilterType#Lowpass48dB)
         */
        export interface Lowpass48dB extends globalThis.EnumItem {
            Name: "Lowpass48dB";
            Value: 5;
            EnumType: typeof globalThis.Enum.AudioFilterType;
        }
        export const Lowpass48dB: Lowpass48dB;
        /**
         * Filter that cuts sound below a specified `Frequency`, at a slope of -12dB/octave.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/AudioFilterType#Highpass12dB)
         */
        export interface Highpass12dB extends globalThis.EnumItem {
            Name: "Highpass12dB";
            Value: 6;
            EnumType: typeof globalThis.Enum.AudioFilterType;
        }
        export const Highpass12dB: Highpass12dB;
        /**
         * Filter that cuts sound below a specified `Frequency`, at a slope of -24dB/octave.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/AudioFilterType#Highpass24dB)
         */
        export interface Highpass24dB extends globalThis.EnumItem {
            Name: "Highpass24dB";
            Value: 7;
            EnumType: typeof globalThis.Enum.AudioFilterType;
        }
        export const Highpass24dB: Highpass24dB;
        /**
         * Filter that cuts sound below a specified `Frequency`, at a slope of -48dB/octave.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/AudioFilterType#Highpass48dB)
         */
        export interface Highpass48dB extends globalThis.EnumItem {
            Name: "Highpass48dB";
            Value: 8;
            EnumType: typeof globalThis.Enum.AudioFilterType;
        }
        export const Highpass48dB: Highpass48dB;
        /**
         * Filter that only allows sound near a specified `Frequency` to be heard.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/AudioFilterType#Bandpass)
         */
        export interface Bandpass extends globalThis.EnumItem {
            Name: "Bandpass";
            Value: 9;
            EnumType: typeof globalThis.Enum.AudioFilterType;
        }
        export const Bandpass: Bandpass;
        /**
         * Filter that cuts sound near a specified `Frequency`.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/AudioFilterType#Notch)
         */
        export interface Notch extends globalThis.EnumItem {
            Name: "Notch";
            Value: 10;
            EnumType: typeof globalThis.Enum.AudioFilterType;
        }
        export const Notch: Notch;
        export function GetEnumItems(this: globalThis.Enum): Array<globalThis.Enum.AudioFilterType>;
        export function FromName(this: globalThis.Enum, name: string): globalThis.Enum.AudioFilterType | undefined;
        export function FromValue(this: globalThis.Enum, value: number): globalThis.Enum.AudioFilterType | undefined;
    }
    export type AudioFilterType = AudioFilterType.Peak | AudioFilterType.LowShelf | AudioFilterType.HighShelf | AudioFilterType.Lowpass12dB | AudioFilterType.Lowpass24dB | AudioFilterType.Lowpass48dB | AudioFilterType.Highpass12dB | AudioFilterType.Highpass24dB | AudioFilterType.Highpass48dB | AudioFilterType.Bandpass | AudioFilterType.Notch;
    /**
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/AudioSimulationFidelity)
     */
    export namespace AudioSimulationFidelity {
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/AudioSimulationFidelity#None)
         */
        export interface None extends globalThis.EnumItem {
            Name: "None";
            Value: 0;
            EnumType: typeof globalThis.Enum.AudioSimulationFidelity;
        }
        export const None: None;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/AudioSimulationFidelity#Automatic)
         */
        export interface Automatic extends globalThis.EnumItem {
            Name: "Automatic";
            Value: 1;
            EnumType: typeof globalThis.Enum.AudioSimulationFidelity;
        }
        export const Automatic: Automatic;
        export function GetEnumItems(this: globalThis.Enum): Array<globalThis.Enum.AudioSimulationFidelity>;
        export function FromName(this: globalThis.Enum, name: string): globalThis.Enum.AudioSimulationFidelity | undefined;
        export function FromValue(this: globalThis.Enum, value: number): globalThis.Enum.AudioSimulationFidelity | undefined;
    }
    export type AudioSimulationFidelity = AudioSimulationFidelity.None | AudioSimulationFidelity.Automatic;
    /**
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/AudioSubType)
     */
    export namespace AudioSubType {
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/AudioSubType#Music)
         */
        export interface Music extends globalThis.EnumItem {
            Name: "Music";
            Value: 1;
            EnumType: typeof globalThis.Enum.AudioSubType;
        }
        export const Music: Music;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/AudioSubType#SoundEffect)
         */
        export interface SoundEffect extends globalThis.EnumItem {
            Name: "SoundEffect";
            Value: 2;
            EnumType: typeof globalThis.Enum.AudioSubType;
        }
        export const SoundEffect: SoundEffect;
        export function GetEnumItems(this: globalThis.Enum): Array<globalThis.Enum.AudioSubType>;
        export function FromName(this: globalThis.Enum, name: string): globalThis.Enum.AudioSubType | undefined;
        export function FromValue(this: globalThis.Enum, value: number): globalThis.Enum.AudioSubType | undefined;
    }
    export type AudioSubType = AudioSubType.Music | AudioSubType.SoundEffect;
    /**
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/AudioWindowSize)
     */
    export namespace AudioWindowSize {
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/AudioWindowSize#Small)
         */
        export interface Small extends globalThis.EnumItem {
            Name: "Small";
            Value: 0;
            EnumType: typeof globalThis.Enum.AudioWindowSize;
        }
        export const Small: Small;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/AudioWindowSize#Medium)
         */
        export interface Medium extends globalThis.EnumItem {
            Name: "Medium";
            Value: 1;
            EnumType: typeof globalThis.Enum.AudioWindowSize;
        }
        export const Medium: Medium;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/AudioWindowSize#Large)
         */
        export interface Large extends globalThis.EnumItem {
            Name: "Large";
            Value: 2;
            EnumType: typeof globalThis.Enum.AudioWindowSize;
        }
        export const Large: Large;
        export function GetEnumItems(this: globalThis.Enum): Array<globalThis.Enum.AudioWindowSize>;
        export function FromName(this: globalThis.Enum, name: string): globalThis.Enum.AudioWindowSize | undefined;
        export function FromValue(this: globalThis.Enum, value: number): globalThis.Enum.AudioWindowSize | undefined;
    }
    export type AudioWindowSize = AudioWindowSize.Small | AudioWindowSize.Medium | AudioWindowSize.Large;
    /**
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/AutoIndentRule)
     */
    export namespace AutoIndentRule {
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/AutoIndentRule#Off)
         */
        export interface Off extends globalThis.EnumItem {
            Name: "Off";
            Value: 0;
            EnumType: typeof globalThis.Enum.AutoIndentRule;
        }
        export const Off: Off;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/AutoIndentRule#Absolute)
         */
        export interface Absolute extends globalThis.EnumItem {
            Name: "Absolute";
            Value: 1;
            EnumType: typeof globalThis.Enum.AutoIndentRule;
        }
        export const Absolute: Absolute;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/AutoIndentRule#Relative)
         */
        export interface Relative extends globalThis.EnumItem {
            Name: "Relative";
            Value: 2;
            EnumType: typeof globalThis.Enum.AutoIndentRule;
        }
        export const Relative: Relative;
        export function GetEnumItems(this: globalThis.Enum): Array<globalThis.Enum.AutoIndentRule>;
        export function FromName(this: globalThis.Enum, name: string): globalThis.Enum.AutoIndentRule | undefined;
        export function FromValue(this: globalThis.Enum, value: number): globalThis.Enum.AutoIndentRule | undefined;
    }
    export type AutoIndentRule = AutoIndentRule.Off | AutoIndentRule.Absolute | AutoIndentRule.Relative;
    /**
     * UI objects with `AutomaticSize` enabled will increase in size up to maximum size allowed by the parent (if there is one) and no smaller than the `Size` property bounds.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/AutomaticSize)
     */
    export namespace AutomaticSize {
        /**
         * Default sizing behavior.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/AutomaticSize#None)
         */
        export interface None extends globalThis.EnumItem {
            Name: "None";
            Value: 0;
            EnumType: typeof globalThis.Enum.AutomaticSize;
        }
        export const None: None;
        /**
         * Automatically resize element along X-axis to fit child contents.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/AutomaticSize#X)
         */
        export interface X extends globalThis.EnumItem {
            Name: "X";
            Value: 1;
            EnumType: typeof globalThis.Enum.AutomaticSize;
        }
        export const X: X;
        /**
         * Automatically resize element along Y-axis to fit child contents. Text Objects will only resize along the Y-axis if TextWrapped is enabled.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/AutomaticSize#Y)
         */
        export interface Y extends globalThis.EnumItem {
            Name: "Y";
            Value: 2;
            EnumType: typeof globalThis.Enum.AutomaticSize;
        }
        export const Y: Y;
        /**
         * Automatically resize element along X and Y axes to fit child contents.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/AutomaticSize#XY)
         */
        export interface XY extends globalThis.EnumItem {
            Name: "XY";
            Value: 3;
            EnumType: typeof globalThis.Enum.AutomaticSize;
        }
        export const XY: XY;
        export function GetEnumItems(this: globalThis.Enum): Array<globalThis.Enum.AutomaticSize>;
        export function FromName(this: globalThis.Enum, name: string): globalThis.Enum.AutomaticSize | undefined;
        export function FromValue(this: globalThis.Enum, value: number): globalThis.Enum.AutomaticSize | undefined;
    }
    export type AutomaticSize = AutomaticSize.None | AutomaticSize.X | AutomaticSize.Y | AutomaticSize.XY;
    /**
     * Describes the asset types that an avatar can equip.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/AvatarAssetType)
     */
    export namespace AvatarAssetType {
        /**
         * A classic 2D TShirt.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/AvatarAssetType#TShirt)
         */
        export interface TShirt extends globalThis.EnumItem {
            Name: "TShirt";
            Value: 2;
            EnumType: typeof globalThis.Enum.AvatarAssetType;
        }
        export const TShirt: TShirt;
        /**
         * A hat.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/AvatarAssetType#Hat)
         */
        export interface Hat extends globalThis.EnumItem {
            Name: "Hat";
            Value: 8;
            EnumType: typeof globalThis.Enum.AvatarAssetType;
        }
        export const Hat: Hat;
        /**
         * A classic 2D shirt.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/AvatarAssetType#Shirt)
         */
        export interface Shirt extends globalThis.EnumItem {
            Name: "Shirt";
            Value: 11;
            EnumType: typeof globalThis.Enum.AvatarAssetType;
        }
        export const Shirt: Shirt;
        /**
         * A classic 2D pants.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/AvatarAssetType#Pants)
         */
        export interface Pants extends globalThis.EnumItem {
            Name: "Pants";
            Value: 12;
            EnumType: typeof globalThis.Enum.AvatarAssetType;
        }
        export const Pants: Pants;
        /**
         * A head.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/AvatarAssetType#Head)
         */
        export interface Head extends globalThis.EnumItem {
            Name: "Head";
            Value: 17;
            EnumType: typeof globalThis.Enum.AvatarAssetType;
        }
        export const Head: Head;
        /**
         * A face.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/AvatarAssetType#Face)
         */
        export interface Face extends globalThis.EnumItem {
            Name: "Face";
            Value: 18;
            EnumType: typeof globalThis.Enum.AvatarAssetType;
        }
        export const Face: Face;
        /**
         * A gear.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/AvatarAssetType#Gear)
         */
        export interface Gear extends globalThis.EnumItem {
            Name: "Gear";
            Value: 19;
            EnumType: typeof globalThis.Enum.AvatarAssetType;
        }
        export const Gear: Gear;
        /**
         * A torso.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/AvatarAssetType#Torso)
         */
        export interface Torso extends globalThis.EnumItem {
            Name: "Torso";
            Value: 27;
            EnumType: typeof globalThis.Enum.AvatarAssetType;
        }
        export const Torso: Torso;
        /**
         * A right arm.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/AvatarAssetType#RightArm)
         */
        export interface RightArm extends globalThis.EnumItem {
            Name: "RightArm";
            Value: 28;
            EnumType: typeof globalThis.Enum.AvatarAssetType;
        }
        export const RightArm: RightArm;
        /**
         * A left arm.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/AvatarAssetType#LeftArm)
         */
        export interface LeftArm extends globalThis.EnumItem {
            Name: "LeftArm";
            Value: 29;
            EnumType: typeof globalThis.Enum.AvatarAssetType;
        }
        export const LeftArm: LeftArm;
        /**
         * A left leg.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/AvatarAssetType#LeftLeg)
         */
        export interface LeftLeg extends globalThis.EnumItem {
            Name: "LeftLeg";
            Value: 30;
            EnumType: typeof globalThis.Enum.AvatarAssetType;
        }
        export const LeftLeg: LeftLeg;
        /**
         * A right leg.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/AvatarAssetType#RightLeg)
         */
        export interface RightLeg extends globalThis.EnumItem {
            Name: "RightLeg";
            Value: 31;
            EnumType: typeof globalThis.Enum.AvatarAssetType;
        }
        export const RightLeg: RightLeg;
        /**
         * A hair accessory.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/AvatarAssetType#HairAccessory)
         */
        export interface HairAccessory extends globalThis.EnumItem {
            Name: "HairAccessory";
            Value: 41;
            EnumType: typeof globalThis.Enum.AvatarAssetType;
        }
        export const HairAccessory: HairAccessory;
        /**
         * A face accessory.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/AvatarAssetType#FaceAccessory)
         */
        export interface FaceAccessory extends globalThis.EnumItem {
            Name: "FaceAccessory";
            Value: 42;
            EnumType: typeof globalThis.Enum.AvatarAssetType;
        }
        export const FaceAccessory: FaceAccessory;
        /**
         * A neck accessory.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/AvatarAssetType#NeckAccessory)
         */
        export interface NeckAccessory extends globalThis.EnumItem {
            Name: "NeckAccessory";
            Value: 43;
            EnumType: typeof globalThis.Enum.AvatarAssetType;
        }
        export const NeckAccessory: NeckAccessory;
        /**
         * A shoulder accessory.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/AvatarAssetType#ShoulderAccessory)
         */
        export interface ShoulderAccessory extends globalThis.EnumItem {
            Name: "ShoulderAccessory";
            Value: 44;
            EnumType: typeof globalThis.Enum.AvatarAssetType;
        }
        export const ShoulderAccessory: ShoulderAccessory;
        /**
         * A front accessory.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/AvatarAssetType#FrontAccessory)
         */
        export interface FrontAccessory extends globalThis.EnumItem {
            Name: "FrontAccessory";
            Value: 45;
            EnumType: typeof globalThis.Enum.AvatarAssetType;
        }
        export const FrontAccessory: FrontAccessory;
        /**
         * A back accessory.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/AvatarAssetType#BackAccessory)
         */
        export interface BackAccessory extends globalThis.EnumItem {
            Name: "BackAccessory";
            Value: 46;
            EnumType: typeof globalThis.Enum.AvatarAssetType;
        }
        export const BackAccessory: BackAccessory;
        /**
         * A waist accessory.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/AvatarAssetType#WaistAccessory)
         */
        export interface WaistAccessory extends globalThis.EnumItem {
            Name: "WaistAccessory";
            Value: 47;
            EnumType: typeof globalThis.Enum.AvatarAssetType;
        }
        export const WaistAccessory: WaistAccessory;
        /**
         * A climb animation.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/AvatarAssetType#ClimbAnimation)
         */
        export interface ClimbAnimation extends globalThis.EnumItem {
            Name: "ClimbAnimation";
            Value: 48;
            EnumType: typeof globalThis.Enum.AvatarAssetType;
        }
        export const ClimbAnimation: ClimbAnimation;
        /**
         * A fall animation.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/AvatarAssetType#FallAnimation)
         */
        export interface FallAnimation extends globalThis.EnumItem {
            Name: "FallAnimation";
            Value: 50;
            EnumType: typeof globalThis.Enum.AvatarAssetType;
        }
        export const FallAnimation: FallAnimation;
        /**
         * An idle animation.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/AvatarAssetType#IdleAnimation)
         */
        export interface IdleAnimation extends globalThis.EnumItem {
            Name: "IdleAnimation";
            Value: 51;
            EnumType: typeof globalThis.Enum.AvatarAssetType;
        }
        export const IdleAnimation: IdleAnimation;
        /**
         * A jump animation.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/AvatarAssetType#JumpAnimation)
         */
        export interface JumpAnimation extends globalThis.EnumItem {
            Name: "JumpAnimation";
            Value: 52;
            EnumType: typeof globalThis.Enum.AvatarAssetType;
        }
        export const JumpAnimation: JumpAnimation;
        /**
         * A run animation.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/AvatarAssetType#RunAnimation)
         */
        export interface RunAnimation extends globalThis.EnumItem {
            Name: "RunAnimation";
            Value: 53;
            EnumType: typeof globalThis.Enum.AvatarAssetType;
        }
        export const RunAnimation: RunAnimation;
        /**
         * A swim animation.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/AvatarAssetType#SwimAnimation)
         */
        export interface SwimAnimation extends globalThis.EnumItem {
            Name: "SwimAnimation";
            Value: 54;
            EnumType: typeof globalThis.Enum.AvatarAssetType;
        }
        export const SwimAnimation: SwimAnimation;
        /**
         * A walk animation.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/AvatarAssetType#WalkAnimation)
         */
        export interface WalkAnimation extends globalThis.EnumItem {
            Name: "WalkAnimation";
            Value: 55;
            EnumType: typeof globalThis.Enum.AvatarAssetType;
        }
        export const WalkAnimation: WalkAnimation;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/AvatarAssetType#MoodAnimation)
         */
        export interface MoodAnimation extends globalThis.EnumItem {
            Name: "MoodAnimation";
            Value: 78;
            EnumType: typeof globalThis.Enum.AvatarAssetType;
        }
        export const MoodAnimation: MoodAnimation;
        /**
         * An emote animation.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/AvatarAssetType#EmoteAnimation)
         */
        export interface EmoteAnimation extends globalThis.EnumItem {
            Name: "EmoteAnimation";
            Value: 61;
            EnumType: typeof globalThis.Enum.AvatarAssetType;
        }
        export const EmoteAnimation: EmoteAnimation;
        /**
         * A layered clothing TShirt.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/AvatarAssetType#TShirtAccessory)
         */
        export interface TShirtAccessory extends globalThis.EnumItem {
            Name: "TShirtAccessory";
            Value: 64;
            EnumType: typeof globalThis.Enum.AvatarAssetType;
        }
        export const TShirtAccessory: TShirtAccessory;
        /**
         * @deprecated renamed to TShirtAccessory
         */
        export const TeeShirtAccessory: TShirtAccessory;
        /**
         * A layered clothing shirt.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/AvatarAssetType#ShirtAccessory)
         */
        export interface ShirtAccessory extends globalThis.EnumItem {
            Name: "ShirtAccessory";
            Value: 65;
            EnumType: typeof globalThis.Enum.AvatarAssetType;
        }
        export const ShirtAccessory: ShirtAccessory;
        /**
         * A layered clothing pants.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/AvatarAssetType#PantsAccessory)
         */
        export interface PantsAccessory extends globalThis.EnumItem {
            Name: "PantsAccessory";
            Value: 66;
            EnumType: typeof globalThis.Enum.AvatarAssetType;
        }
        export const PantsAccessory: PantsAccessory;
        /**
         * A layered clothing jacket.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/AvatarAssetType#JacketAccessory)
         */
        export interface JacketAccessory extends globalThis.EnumItem {
            Name: "JacketAccessory";
            Value: 67;
            EnumType: typeof globalThis.Enum.AvatarAssetType;
        }
        export const JacketAccessory: JacketAccessory;
        /**
         * A layered clothing sweater.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/AvatarAssetType#SweaterAccessory)
         */
        export interface SweaterAccessory extends globalThis.EnumItem {
            Name: "SweaterAccessory";
            Value: 68;
            EnumType: typeof globalThis.Enum.AvatarAssetType;
        }
        export const SweaterAccessory: SweaterAccessory;
        /**
         * A layered clothing shorts.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/AvatarAssetType#ShortsAccessory)
         */
        export interface ShortsAccessory extends globalThis.EnumItem {
            Name: "ShortsAccessory";
            Value: 69;
            EnumType: typeof globalThis.Enum.AvatarAssetType;
        }
        export const ShortsAccessory: ShortsAccessory;
        /**
         * A layered clothing left shoe.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/AvatarAssetType#LeftShoeAccessory)
         */
        export interface LeftShoeAccessory extends globalThis.EnumItem {
            Name: "LeftShoeAccessory";
            Value: 70;
            EnumType: typeof globalThis.Enum.AvatarAssetType;
        }
        export const LeftShoeAccessory: LeftShoeAccessory;
        /**
         * A layered clothing right shoe.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/AvatarAssetType#RightShoeAccessory)
         */
        export interface RightShoeAccessory extends globalThis.EnumItem {
            Name: "RightShoeAccessory";
            Value: 71;
            EnumType: typeof globalThis.Enum.AvatarAssetType;
        }
        export const RightShoeAccessory: RightShoeAccessory;
        /**
         * A layered clothing dress or skirt.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/AvatarAssetType#DressSkirtAccessory)
         */
        export interface DressSkirtAccessory extends globalThis.EnumItem {
            Name: "DressSkirtAccessory";
            Value: 72;
            EnumType: typeof globalThis.Enum.AvatarAssetType;
        }
        export const DressSkirtAccessory: DressSkirtAccessory;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/AvatarAssetType#EyebrowAccessory)
         */
        export interface EyebrowAccessory extends globalThis.EnumItem {
            Name: "EyebrowAccessory";
            Value: 76;
            EnumType: typeof globalThis.Enum.AvatarAssetType;
        }
        export const EyebrowAccessory: EyebrowAccessory;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/AvatarAssetType#EyelashAccessory)
         */
        export interface EyelashAccessory extends globalThis.EnumItem {
            Name: "EyelashAccessory";
            Value: 77;
            EnumType: typeof globalThis.Enum.AvatarAssetType;
        }
        export const EyelashAccessory: EyelashAccessory;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/AvatarAssetType#DynamicHead)
         */
        export interface DynamicHead extends globalThis.EnumItem {
            Name: "DynamicHead";
            Value: 79;
            EnumType: typeof globalThis.Enum.AvatarAssetType;
        }
        export const DynamicHead: DynamicHead;
        export function GetEnumItems(this: globalThis.Enum): Array<globalThis.Enum.AvatarAssetType>;
        export function FromName(this: globalThis.Enum, name: string): globalThis.Enum.AvatarAssetType | undefined;
        export function FromValue(this: globalThis.Enum, value: number): globalThis.Enum.AvatarAssetType | undefined;
    }
    export type AvatarAssetType = AvatarAssetType.TShirt | AvatarAssetType.Hat | AvatarAssetType.Shirt | AvatarAssetType.Pants | AvatarAssetType.Head | AvatarAssetType.Face | AvatarAssetType.Gear | AvatarAssetType.Torso | AvatarAssetType.RightArm | AvatarAssetType.LeftArm | AvatarAssetType.LeftLeg | AvatarAssetType.RightLeg | AvatarAssetType.HairAccessory | AvatarAssetType.FaceAccessory | AvatarAssetType.NeckAccessory | AvatarAssetType.ShoulderAccessory | AvatarAssetType.FrontAccessory | AvatarAssetType.BackAccessory | AvatarAssetType.WaistAccessory | AvatarAssetType.ClimbAnimation | AvatarAssetType.FallAnimation | AvatarAssetType.IdleAnimation | AvatarAssetType.JumpAnimation | AvatarAssetType.RunAnimation | AvatarAssetType.SwimAnimation | AvatarAssetType.WalkAnimation | AvatarAssetType.MoodAnimation | AvatarAssetType.EmoteAnimation | AvatarAssetType.TShirtAccessory | AvatarAssetType.ShirtAccessory | AvatarAssetType.PantsAccessory | AvatarAssetType.JacketAccessory | AvatarAssetType.SweaterAccessory | AvatarAssetType.ShortsAccessory | AvatarAssetType.LeftShoeAccessory | AvatarAssetType.RightShoeAccessory | AvatarAssetType.DressSkirtAccessory | AvatarAssetType.EyebrowAccessory | AvatarAssetType.EyelashAccessory | AvatarAssetType.DynamicHead;
    /**
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/AvatarChatServiceFeature)
     */
    export namespace AvatarChatServiceFeature {
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/AvatarChatServiceFeature#None)
         */
        export interface None extends globalThis.EnumItem {
            Name: "None";
            Value: 0;
            EnumType: typeof globalThis.Enum.AvatarChatServiceFeature;
        }
        export const None: None;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/AvatarChatServiceFeature#UniverseAudio)
         */
        export interface UniverseAudio extends globalThis.EnumItem {
            Name: "UniverseAudio";
            Value: 1;
            EnumType: typeof globalThis.Enum.AvatarChatServiceFeature;
        }
        export const UniverseAudio: UniverseAudio;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/AvatarChatServiceFeature#UniverseVideo)
         */
        export interface UniverseVideo extends globalThis.EnumItem {
            Name: "UniverseVideo";
            Value: 2;
            EnumType: typeof globalThis.Enum.AvatarChatServiceFeature;
        }
        export const UniverseVideo: UniverseVideo;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/AvatarChatServiceFeature#PlaceAudio)
         */
        export interface PlaceAudio extends globalThis.EnumItem {
            Name: "PlaceAudio";
            Value: 4;
            EnumType: typeof globalThis.Enum.AvatarChatServiceFeature;
        }
        export const PlaceAudio: PlaceAudio;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/AvatarChatServiceFeature#PlaceVideo)
         */
        export interface PlaceVideo extends globalThis.EnumItem {
            Name: "PlaceVideo";
            Value: 8;
            EnumType: typeof globalThis.Enum.AvatarChatServiceFeature;
        }
        export const PlaceVideo: PlaceVideo;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/AvatarChatServiceFeature#UserAudioEligible)
         */
        export interface UserAudioEligible extends globalThis.EnumItem {
            Name: "UserAudioEligible";
            Value: 16;
            EnumType: typeof globalThis.Enum.AvatarChatServiceFeature;
        }
        export const UserAudioEligible: UserAudioEligible;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/AvatarChatServiceFeature#UserAudio)
         */
        export interface UserAudio extends globalThis.EnumItem {
            Name: "UserAudio";
            Value: 32;
            EnumType: typeof globalThis.Enum.AvatarChatServiceFeature;
        }
        export const UserAudio: UserAudio;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/AvatarChatServiceFeature#UserVideoEligible)
         */
        export interface UserVideoEligible extends globalThis.EnumItem {
            Name: "UserVideoEligible";
            Value: 64;
            EnumType: typeof globalThis.Enum.AvatarChatServiceFeature;
        }
        export const UserVideoEligible: UserVideoEligible;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/AvatarChatServiceFeature#UserVideo)
         */
        export interface UserVideo extends globalThis.EnumItem {
            Name: "UserVideo";
            Value: 128;
            EnumType: typeof globalThis.Enum.AvatarChatServiceFeature;
        }
        export const UserVideo: UserVideo;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/AvatarChatServiceFeature#UserBanned)
         */
        export interface UserBanned extends globalThis.EnumItem {
            Name: "UserBanned";
            Value: 256;
            EnumType: typeof globalThis.Enum.AvatarChatServiceFeature;
        }
        export const UserBanned: UserBanned;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/AvatarChatServiceFeature#UserVerifiedForVoice)
         */
        export interface UserVerifiedForVoice extends globalThis.EnumItem {
            Name: "UserVerifiedForVoice";
            Value: 512;
            EnumType: typeof globalThis.Enum.AvatarChatServiceFeature;
        }
        export const UserVerifiedForVoice: UserVerifiedForVoice;
        export function GetEnumItems(this: globalThis.Enum): Array<globalThis.Enum.AvatarChatServiceFeature>;
        export function FromName(this: globalThis.Enum, name: string): globalThis.Enum.AvatarChatServiceFeature | undefined;
        export function FromValue(this: globalThis.Enum, value: number): globalThis.Enum.AvatarChatServiceFeature | undefined;
    }
    export type AvatarChatServiceFeature = AvatarChatServiceFeature.None | AvatarChatServiceFeature.UniverseAudio | AvatarChatServiceFeature.UniverseVideo | AvatarChatServiceFeature.PlaceAudio | AvatarChatServiceFeature.PlaceVideo | AvatarChatServiceFeature.UserAudioEligible | AvatarChatServiceFeature.UserAudio | AvatarChatServiceFeature.UserVideoEligible | AvatarChatServiceFeature.UserVideo | AvatarChatServiceFeature.UserBanned | AvatarChatServiceFeature.UserVerifiedForVoice;
    /**
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/AvatarContextMenuOption)
     */
    export namespace AvatarContextMenuOption {
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/AvatarContextMenuOption#Friend)
         */
        export interface Friend extends globalThis.EnumItem {
            Name: "Friend";
            Value: 0;
            EnumType: typeof globalThis.Enum.AvatarContextMenuOption;
        }
        export const Friend: Friend;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/AvatarContextMenuOption#Chat)
         */
        export interface Chat extends globalThis.EnumItem {
            Name: "Chat";
            Value: 1;
            EnumType: typeof globalThis.Enum.AvatarContextMenuOption;
        }
        export const Chat: Chat;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/AvatarContextMenuOption#Emote)
         */
        export interface Emote extends globalThis.EnumItem {
            Name: "Emote";
            Value: 2;
            EnumType: typeof globalThis.Enum.AvatarContextMenuOption;
        }
        export const Emote: Emote;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/AvatarContextMenuOption#InspectMenu)
         */
        export interface InspectMenu extends globalThis.EnumItem {
            Name: "InspectMenu";
            Value: 3;
            EnumType: typeof globalThis.Enum.AvatarContextMenuOption;
        }
        export const InspectMenu: InspectMenu;
        export function GetEnumItems(this: globalThis.Enum): Array<globalThis.Enum.AvatarContextMenuOption>;
        export function FromName(this: globalThis.Enum, name: string): globalThis.Enum.AvatarContextMenuOption | undefined;
        export function FromValue(this: globalThis.Enum, value: number): globalThis.Enum.AvatarContextMenuOption | undefined;
    }
    export type AvatarContextMenuOption = AvatarContextMenuOption.Friend | AvatarContextMenuOption.Chat | AvatarContextMenuOption.Emote | AvatarContextMenuOption.InspectMenu;
    /**
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/AvatarGenerationError)
     */
    export namespace AvatarGenerationError {
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/AvatarGenerationError#None)
         */
        export interface None extends globalThis.EnumItem {
            Name: "None";
            Value: 0;
            EnumType: typeof globalThis.Enum.AvatarGenerationError;
        }
        export const None: None;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/AvatarGenerationError#Unknown)
         */
        export interface Unknown extends globalThis.EnumItem {
            Name: "Unknown";
            Value: 1;
            EnumType: typeof globalThis.Enum.AvatarGenerationError;
        }
        export const Unknown: Unknown;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/AvatarGenerationError#DownloadFailed)
         */
        export interface DownloadFailed extends globalThis.EnumItem {
            Name: "DownloadFailed";
            Value: 2;
            EnumType: typeof globalThis.Enum.AvatarGenerationError;
        }
        export const DownloadFailed: DownloadFailed;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/AvatarGenerationError#Canceled)
         */
        export interface Canceled extends globalThis.EnumItem {
            Name: "Canceled";
            Value: 3;
            EnumType: typeof globalThis.Enum.AvatarGenerationError;
        }
        export const Canceled: Canceled;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/AvatarGenerationError#Offensive)
         */
        export interface Offensive extends globalThis.EnumItem {
            Name: "Offensive";
            Value: 4;
            EnumType: typeof globalThis.Enum.AvatarGenerationError;
        }
        export const Offensive: Offensive;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/AvatarGenerationError#Timeout)
         */
        export interface Timeout extends globalThis.EnumItem {
            Name: "Timeout";
            Value: 5;
            EnumType: typeof globalThis.Enum.AvatarGenerationError;
        }
        export const Timeout: Timeout;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/AvatarGenerationError#JobNotFound)
         */
        export interface JobNotFound extends globalThis.EnumItem {
            Name: "JobNotFound";
            Value: 6;
            EnumType: typeof globalThis.Enum.AvatarGenerationError;
        }
        export const JobNotFound: JobNotFound;
        export function GetEnumItems(this: globalThis.Enum): Array<globalThis.Enum.AvatarGenerationError>;
        export function FromName(this: globalThis.Enum, name: string): globalThis.Enum.AvatarGenerationError | undefined;
        export function FromValue(this: globalThis.Enum, value: number): globalThis.Enum.AvatarGenerationError | undefined;
    }
    export type AvatarGenerationError = AvatarGenerationError.None | AvatarGenerationError.Unknown | AvatarGenerationError.DownloadFailed | AvatarGenerationError.Canceled | AvatarGenerationError.Offensive | AvatarGenerationError.Timeout | AvatarGenerationError.JobNotFound;
    /**
     * The type (Asset or Bundle) of avatar items.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/AvatarItemType)
     */
    export namespace AvatarItemType {
        /**
         * Avatar assets.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/AvatarItemType#Asset)
         */
        export interface Asset extends globalThis.EnumItem {
            Name: "Asset";
            Value: 1;
            EnumType: typeof globalThis.Enum.AvatarItemType;
        }
        export const Asset: Asset;
        /**
         * Avatar bundles.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/AvatarItemType#Bundle)
         */
        export interface Bundle extends globalThis.EnumItem {
            Name: "Bundle";
            Value: 2;
            EnumType: typeof globalThis.Enum.AvatarItemType;
        }
        export const Bundle: Bundle;
        export function GetEnumItems(this: globalThis.Enum): Array<globalThis.Enum.AvatarItemType>;
        export function FromName(this: globalThis.Enum, name: string): globalThis.Enum.AvatarItemType | undefined;
        export function FromValue(this: globalThis.Enum, value: number): globalThis.Enum.AvatarItemType | undefined;
    }
    export type AvatarItemType = AvatarItemType.Asset | AvatarItemType.Bundle;
    /**
     * The result of prompt operations of `AvatarEditorService`.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/AvatarPromptResult)
     */
    export namespace AvatarPromptResult {
        /**
         * The prompted action was completed.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/AvatarPromptResult#Success)
         */
        export interface Success extends globalThis.EnumItem {
            Name: "Success";
            Value: 1;
            EnumType: typeof globalThis.Enum.AvatarPromptResult;
        }
        export const Success: Success;
        /**
         * Denied permission to take the prompted action.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/AvatarPromptResult#PermissionDenied)
         */
        export interface PermissionDenied extends globalThis.EnumItem {
            Name: "PermissionDenied";
            Value: 2;
            EnumType: typeof globalThis.Enum.AvatarPromptResult;
        }
        export const PermissionDenied: PermissionDenied;
        /**
         * Failure while trying to take the prompted action.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/AvatarPromptResult#Failed)
         */
        export interface Failed extends globalThis.EnumItem {
            Name: "Failed";
            Value: 3;
            EnumType: typeof globalThis.Enum.AvatarPromptResult;
        }
        export const Failed: Failed;
        export function GetEnumItems(this: globalThis.Enum): Array<globalThis.Enum.AvatarPromptResult>;
        export function FromName(this: globalThis.Enum, name: string): globalThis.Enum.AvatarPromptResult | undefined;
        export function FromValue(this: globalThis.Enum, value: number): globalThis.Enum.AvatarPromptResult | undefined;
    }
    export type AvatarPromptResult = AvatarPromptResult.Success | AvatarPromptResult.PermissionDenied | AvatarPromptResult.Failed;
    /**
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/AvatarThumbnailCustomizationType)
     */
    export namespace AvatarThumbnailCustomizationType {
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/AvatarThumbnailCustomizationType#Closeup)
         */
        export interface Closeup extends globalThis.EnumItem {
            Name: "Closeup";
            Value: 1;
            EnumType: typeof globalThis.Enum.AvatarThumbnailCustomizationType;
        }
        export const Closeup: Closeup;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/AvatarThumbnailCustomizationType#FullBody)
         */
        export interface FullBody extends globalThis.EnumItem {
            Name: "FullBody";
            Value: 2;
            EnumType: typeof globalThis.Enum.AvatarThumbnailCustomizationType;
        }
        export const FullBody: FullBody;
        export function GetEnumItems(this: globalThis.Enum): Array<globalThis.Enum.AvatarThumbnailCustomizationType>;
        export function FromName(this: globalThis.Enum, name: string): globalThis.Enum.AvatarThumbnailCustomizationType | undefined;
        export function FromValue(this: globalThis.Enum, value: number): globalThis.Enum.AvatarThumbnailCustomizationType | undefined;
    }
    export type AvatarThumbnailCustomizationType = AvatarThumbnailCustomizationType.Closeup | AvatarThumbnailCustomizationType.FullBody;
    /**
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/AvatarUnificationMode)
     */
    export namespace AvatarUnificationMode {
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/AvatarUnificationMode#Default)
         */
        export interface Default extends globalThis.EnumItem {
            Name: "Default";
            Value: 0;
            EnumType: typeof globalThis.Enum.AvatarUnificationMode;
        }
        export const Default: Default;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/AvatarUnificationMode#Disabled)
         */
        export interface Disabled extends globalThis.EnumItem {
            Name: "Disabled";
            Value: 1;
            EnumType: typeof globalThis.Enum.AvatarUnificationMode;
        }
        export const Disabled: Disabled;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/AvatarUnificationMode#Enabled)
         */
        export interface Enabled extends globalThis.EnumItem {
            Name: "Enabled";
            Value: 2;
            EnumType: typeof globalThis.Enum.AvatarUnificationMode;
        }
        export const Enabled: Enabled;
        export function GetEnumItems(this: globalThis.Enum): Array<globalThis.Enum.AvatarUnificationMode>;
        export function FromName(this: globalThis.Enum, name: string): globalThis.Enum.AvatarUnificationMode | undefined;
        export function FromValue(this: globalThis.Enum, value: number): globalThis.Enum.AvatarUnificationMode | undefined;
    }
    export type AvatarUnificationMode = AvatarUnificationMode.Default | AvatarUnificationMode.Disabled | AvatarUnificationMode.Enabled;
    /**
     * One of the 3D axes.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/Axis)
     */
    export namespace Axis {
        /**
         * The X axis.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/Axis#X)
         */
        export interface X extends globalThis.EnumItem {
            Name: "X";
            Value: 0;
            EnumType: typeof globalThis.Enum.Axis;
        }
        export const X: X;
        /**
         * @deprecated renamed to X
         */
        export const Left: X;
        /**
         * @deprecated renamed to X
         */
        export const Right: X;
        /**
         * The Y axis.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/Axis#Y)
         */
        export interface Y extends globalThis.EnumItem {
            Name: "Y";
            Value: 1;
            EnumType: typeof globalThis.Enum.Axis;
        }
        export const Y: Y;
        /**
         * @deprecated renamed to Y
         */
        export const Bottom: Y;
        /**
         * @deprecated renamed to Y
         */
        export const Top: Y;
        /**
         * The Z axis.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/Axis#Z)
         */
        export interface Z extends globalThis.EnumItem {
            Name: "Z";
            Value: 2;
            EnumType: typeof globalThis.Enum.Axis;
        }
        export const Z: Z;
        /**
         * @deprecated renamed to Z
         */
        export const Back: Z;
        /**
         * @deprecated renamed to Z
         */
        export const Front: Z;
        export function GetEnumItems(this: globalThis.Enum): Array<globalThis.Enum.Axis>;
        export function FromName(this: globalThis.Enum, name: string): globalThis.Enum.Axis | undefined;
        export function FromValue(this: globalThis.Enum, value: number): globalThis.Enum.Axis | undefined;
    }
    export type Axis = Axis.X | Axis.Y | Axis.Z;
    /**
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/BenefitType)
     */
    export namespace BenefitType {
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/BenefitType#DeveloperProduct)
         */
        export interface DeveloperProduct extends globalThis.EnumItem {
            Name: "DeveloperProduct";
            Value: 0;
            EnumType: typeof globalThis.Enum.BenefitType;
        }
        export const DeveloperProduct: DeveloperProduct;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/BenefitType#AvatarAsset)
         */
        export interface AvatarAsset extends globalThis.EnumItem {
            Name: "AvatarAsset";
            Value: 1;
            EnumType: typeof globalThis.Enum.BenefitType;
        }
        export const AvatarAsset: AvatarAsset;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/BenefitType#AvatarBundle)
         */
        export interface AvatarBundle extends globalThis.EnumItem {
            Name: "AvatarBundle";
            Value: 2;
            EnumType: typeof globalThis.Enum.BenefitType;
        }
        export const AvatarBundle: AvatarBundle;
        export function GetEnumItems(this: globalThis.Enum): Array<globalThis.Enum.BenefitType>;
        export function FromName(this: globalThis.Enum, name: string): globalThis.Enum.BenefitType | undefined;
        export function FromValue(this: globalThis.Enum, value: number): globalThis.Enum.BenefitType | undefined;
    }
    export type BenefitType = BenefitType.DeveloperProduct | BenefitType.AvatarAsset | BenefitType.AvatarBundle;
    /**
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/BinType)
     */
    export namespace BinType {
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/BinType#Script)
         */
        export interface Script extends globalThis.EnumItem {
            Name: "Script";
            Value: 0;
            EnumType: typeof globalThis.Enum.BinType;
        }
        export const Script: Script;
        /**
         * @deprecated renamed to Script
         */
        export const Laser: Script;
        /**
         * @deprecated renamed to Script
         */
        export const Rocket: Script;
        /**
         * @deprecated renamed to Script
         */
        export const Slingshot: Script;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/BinType#GameTool)
         */
        export interface GameTool extends globalThis.EnumItem {
            Name: "GameTool";
            Value: 1;
            EnumType: typeof globalThis.Enum.BinType;
        }
        export const GameTool: GameTool;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/BinType#Grab)
         */
        export interface Grab extends globalThis.EnumItem {
            Name: "Grab";
            Value: 2;
            EnumType: typeof globalThis.Enum.BinType;
        }
        export const Grab: Grab;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/BinType#Clone)
         */
        export interface Clone extends globalThis.EnumItem {
            Name: "Clone";
            Value: 3;
            EnumType: typeof globalThis.Enum.BinType;
        }
        export const Clone: Clone;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/BinType#Hammer)
         */
        export interface Hammer extends globalThis.EnumItem {
            Name: "Hammer";
            Value: 4;
            EnumType: typeof globalThis.Enum.BinType;
        }
        export const Hammer: Hammer;
        export function GetEnumItems(this: globalThis.Enum): Array<globalThis.Enum.BinType>;
        export function FromName(this: globalThis.Enum, name: string): globalThis.Enum.BinType | undefined;
        export function FromValue(this: globalThis.Enum, value: number): globalThis.Enum.BinType | undefined;
    }
    export type BinType = BinType.Script | BinType.GameTool | BinType.Grab | BinType.Clone | BinType.Hammer;
    /**
     * The BodyPart Enum determines which BodyPart a `CharacterMesh` affects.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/BodyPart)
     */
    export namespace BodyPart {
        /**
         * The head BodyPart.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/BodyPart#Head)
         */
        export interface Head extends globalThis.EnumItem {
            Name: "Head";
            Value: 0;
            EnumType: typeof globalThis.Enum.BodyPart;
        }
        export const Head: Head;
        /**
         * The torso BodyPart.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/BodyPart#Torso)
         */
        export interface Torso extends globalThis.EnumItem {
            Name: "Torso";
            Value: 1;
            EnumType: typeof globalThis.Enum.BodyPart;
        }
        export const Torso: Torso;
        /**
         * The left arm BodyPart.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/BodyPart#LeftArm)
         */
        export interface LeftArm extends globalThis.EnumItem {
            Name: "LeftArm";
            Value: 2;
            EnumType: typeof globalThis.Enum.BodyPart;
        }
        export const LeftArm: LeftArm;
        /**
         * The right arm BodyPart.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/BodyPart#RightArm)
         */
        export interface RightArm extends globalThis.EnumItem {
            Name: "RightArm";
            Value: 3;
            EnumType: typeof globalThis.Enum.BodyPart;
        }
        export const RightArm: RightArm;
        /**
         * The left leg BodyPart.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/BodyPart#LeftLeg)
         */
        export interface LeftLeg extends globalThis.EnumItem {
            Name: "LeftLeg";
            Value: 4;
            EnumType: typeof globalThis.Enum.BodyPart;
        }
        export const LeftLeg: LeftLeg;
        /**
         * The right leg BodyPart.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/BodyPart#RightLeg)
         */
        export interface RightLeg extends globalThis.EnumItem {
            Name: "RightLeg";
            Value: 5;
            EnumType: typeof globalThis.Enum.BodyPart;
        }
        export const RightLeg: RightLeg;
        export function GetEnumItems(this: globalThis.Enum): Array<globalThis.Enum.BodyPart>;
        export function FromName(this: globalThis.Enum, name: string): globalThis.Enum.BodyPart | undefined;
        export function FromValue(this: globalThis.Enum, value: number): globalThis.Enum.BodyPart | undefined;
    }
    export type BodyPart = BodyPart.Head | BodyPart.Torso | BodyPart.LeftArm | BodyPart.RightArm | BodyPart.LeftLeg | BodyPart.RightLeg;
    /**
     * BodyPartR15 is an enum with entries for each of the 15 body parts of an R15 character (plus an entry for the HumanoidRootPart).
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/BodyPartR15)
     */
    export namespace BodyPartR15 {
        /**
         * Reference to a Humanoid's Head.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/BodyPartR15#Head)
         */
        export interface Head extends globalThis.EnumItem {
            Name: "Head";
            Value: 0;
            EnumType: typeof globalThis.Enum.BodyPartR15;
        }
        export const Head: Head;
        /**
         * Reference to a Humanoid's UpperTorso.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/BodyPartR15#UpperTorso)
         */
        export interface UpperTorso extends globalThis.EnumItem {
            Name: "UpperTorso";
            Value: 1;
            EnumType: typeof globalThis.Enum.BodyPartR15;
        }
        export const UpperTorso: UpperTorso;
        /**
         * Reference to a Humanoid's LowerTorso.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/BodyPartR15#LowerTorso)
         */
        export interface LowerTorso extends globalThis.EnumItem {
            Name: "LowerTorso";
            Value: 2;
            EnumType: typeof globalThis.Enum.BodyPartR15;
        }
        export const LowerTorso: LowerTorso;
        /**
         * Reference to a Humanoid's LeftFoot.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/BodyPartR15#LeftFoot)
         */
        export interface LeftFoot extends globalThis.EnumItem {
            Name: "LeftFoot";
            Value: 3;
            EnumType: typeof globalThis.Enum.BodyPartR15;
        }
        export const LeftFoot: LeftFoot;
        /**
         * Reference to a Humanoid's LeftLowerLeg.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/BodyPartR15#LeftLowerLeg)
         */
        export interface LeftLowerLeg extends globalThis.EnumItem {
            Name: "LeftLowerLeg";
            Value: 4;
            EnumType: typeof globalThis.Enum.BodyPartR15;
        }
        export const LeftLowerLeg: LeftLowerLeg;
        /**
         * Reference to a Humanoid's LeftUpperLeg.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/BodyPartR15#LeftUpperLeg)
         */
        export interface LeftUpperLeg extends globalThis.EnumItem {
            Name: "LeftUpperLeg";
            Value: 5;
            EnumType: typeof globalThis.Enum.BodyPartR15;
        }
        export const LeftUpperLeg: LeftUpperLeg;
        /**
         * Reference to a Humanoid's RightFoot.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/BodyPartR15#RightFoot)
         */
        export interface RightFoot extends globalThis.EnumItem {
            Name: "RightFoot";
            Value: 6;
            EnumType: typeof globalThis.Enum.BodyPartR15;
        }
        export const RightFoot: RightFoot;
        /**
         * Reference to a Humanoid's RightLowerLeg.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/BodyPartR15#RightLowerLeg)
         */
        export interface RightLowerLeg extends globalThis.EnumItem {
            Name: "RightLowerLeg";
            Value: 7;
            EnumType: typeof globalThis.Enum.BodyPartR15;
        }
        export const RightLowerLeg: RightLowerLeg;
        /**
         * Reference to a Humanoid's RightUpperLeg.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/BodyPartR15#RightUpperLeg)
         */
        export interface RightUpperLeg extends globalThis.EnumItem {
            Name: "RightUpperLeg";
            Value: 8;
            EnumType: typeof globalThis.Enum.BodyPartR15;
        }
        export const RightUpperLeg: RightUpperLeg;
        /**
         * Reference to a Humanoid's LeftHand.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/BodyPartR15#LeftHand)
         */
        export interface LeftHand extends globalThis.EnumItem {
            Name: "LeftHand";
            Value: 9;
            EnumType: typeof globalThis.Enum.BodyPartR15;
        }
        export const LeftHand: LeftHand;
        /**
         * Reference to a Humanoid's LeftLowerArm.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/BodyPartR15#LeftLowerArm)
         */
        export interface LeftLowerArm extends globalThis.EnumItem {
            Name: "LeftLowerArm";
            Value: 10;
            EnumType: typeof globalThis.Enum.BodyPartR15;
        }
        export const LeftLowerArm: LeftLowerArm;
        /**
         * Reference to a Humanoid's LeftUpperArm.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/BodyPartR15#LeftUpperArm)
         */
        export interface LeftUpperArm extends globalThis.EnumItem {
            Name: "LeftUpperArm";
            Value: 11;
            EnumType: typeof globalThis.Enum.BodyPartR15;
        }
        export const LeftUpperArm: LeftUpperArm;
        /**
         * Reference to a Humanoid's RightHand.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/BodyPartR15#RightHand)
         */
        export interface RightHand extends globalThis.EnumItem {
            Name: "RightHand";
            Value: 12;
            EnumType: typeof globalThis.Enum.BodyPartR15;
        }
        export const RightHand: RightHand;
        /**
         * Reference to a Humanoid's RightLowerArm.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/BodyPartR15#RightLowerArm)
         */
        export interface RightLowerArm extends globalThis.EnumItem {
            Name: "RightLowerArm";
            Value: 13;
            EnumType: typeof globalThis.Enum.BodyPartR15;
        }
        export const RightLowerArm: RightLowerArm;
        /**
         * Reference to a Humanoid's RightUpperArm.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/BodyPartR15#RightUpperArm)
         */
        export interface RightUpperArm extends globalThis.EnumItem {
            Name: "RightUpperArm";
            Value: 14;
            EnumType: typeof globalThis.Enum.BodyPartR15;
        }
        export const RightUpperArm: RightUpperArm;
        /**
         * Reference to a Humanoid's HumanoidRootPart.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/BodyPartR15#RootPart)
         */
        export interface RootPart extends globalThis.EnumItem {
            Name: "RootPart";
            Value: 15;
            EnumType: typeof globalThis.Enum.BodyPartR15;
        }
        export const RootPart: RootPart;
        /**
         * Unknown R15 Humanoid body part.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/BodyPartR15#Unknown)
         */
        export interface Unknown extends globalThis.EnumItem {
            Name: "Unknown";
            Value: 17;
            EnumType: typeof globalThis.Enum.BodyPartR15;
        }
        export const Unknown: Unknown;
        export function GetEnumItems(this: globalThis.Enum): Array<globalThis.Enum.BodyPartR15>;
        export function FromName(this: globalThis.Enum, name: string): globalThis.Enum.BodyPartR15 | undefined;
        export function FromValue(this: globalThis.Enum, value: number): globalThis.Enum.BodyPartR15 | undefined;
    }
    export type BodyPartR15 = BodyPartR15.Head | BodyPartR15.UpperTorso | BodyPartR15.LowerTorso | BodyPartR15.LeftFoot | BodyPartR15.LeftLowerLeg | BodyPartR15.LeftUpperLeg | BodyPartR15.RightFoot | BodyPartR15.RightLowerLeg | BodyPartR15.RightUpperLeg | BodyPartR15.LeftHand | BodyPartR15.LeftLowerArm | BodyPartR15.LeftUpperArm | BodyPartR15.RightHand | BodyPartR15.RightLowerArm | BodyPartR15.RightUpperArm | BodyPartR15.RootPart | BodyPartR15.Unknown;
    /**
     * Used by `GuiObject.BorderMode` to determine where borders are placed.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/BorderMode)
     */
    export namespace BorderMode {
        /**
         * As `GuiObject.BorderSizePixel` increases, the border grows outward. The dimensions of the GuiObject's contents do not change.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/BorderMode#Outline)
         */
        export interface Outline extends globalThis.EnumItem {
            Name: "Outline";
            Value: 0;
            EnumType: typeof globalThis.Enum.BorderMode;
        }
        export const Outline: Outline;
        /**
         * As `GuiObject.BorderSizePixel` increases, the border grows evenly inward and outward. The dimensions of the GuiObject's contents are reduced at a 1:1 ratio.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/BorderMode#Middle)
         */
        export interface Middle extends globalThis.EnumItem {
            Name: "Middle";
            Value: 1;
            EnumType: typeof globalThis.Enum.BorderMode;
        }
        export const Middle: Middle;
        /**
         * As `GuiObject.BorderSizePixel` increases, the border grows evenly inward only. The dimensions of the GuiObject's contents are reduced at a 1:2 ratio.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/BorderMode#Inset)
         */
        export interface Inset extends globalThis.EnumItem {
            Name: "Inset";
            Value: 2;
            EnumType: typeof globalThis.Enum.BorderMode;
        }
        export const Inset: Inset;
        export function GetEnumItems(this: globalThis.Enum): Array<globalThis.Enum.BorderMode>;
        export function FromName(this: globalThis.Enum, name: string): globalThis.Enum.BorderMode | undefined;
        export function FromValue(this: globalThis.Enum, value: number): globalThis.Enum.BorderMode | undefined;
    }
    export type BorderMode = BorderMode.Outline | BorderMode.Middle | BorderMode.Inset;
    /**
     * Reason for the breakpoint hit.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/BreakReason)
     */
    export namespace BreakReason {
        /**
         * Pausing for a reason not covered by other values, for example if the user hit "Pause" button.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/BreakReason#Other)
         */
        export interface Other extends globalThis.EnumItem {
            Name: "Other";
            Value: 0;
            EnumType: typeof globalThis.Enum.BreakReason;
        }
        export const Other: Other;
        /**
         * Pausing on error hit in the code.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/BreakReason#Error)
         */
        export interface Error extends globalThis.EnumItem {
            Name: "Error";
            Value: 1;
            EnumType: typeof globalThis.Enum.BreakReason;
        }
        export const Error: Error;
        /**
         * Pausing on an internal breakpoint set by debugger command: e.g. step over, step into, step out of.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/BreakReason#SpecialBreakpoint)
         */
        export interface SpecialBreakpoint extends globalThis.EnumItem {
            Name: "SpecialBreakpoint";
            Value: 2;
            EnumType: typeof globalThis.Enum.BreakReason;
        }
        export const SpecialBreakpoint: SpecialBreakpoint;
        /**
         * Pausing on a user breakpoint.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/BreakReason#UserBreakpoint)
         */
        export interface UserBreakpoint extends globalThis.EnumItem {
            Name: "UserBreakpoint";
            Value: 3;
            EnumType: typeof globalThis.Enum.BreakReason;
        }
        export const UserBreakpoint: UserBreakpoint;
        export function GetEnumItems(this: globalThis.Enum): Array<globalThis.Enum.BreakReason>;
        export function FromName(this: globalThis.Enum, name: string): globalThis.Enum.BreakReason | undefined;
        export function FromValue(this: globalThis.Enum, value: number): globalThis.Enum.BreakReason | undefined;
    }
    export type BreakReason = BreakReason.Other | BreakReason.Error | BreakReason.SpecialBreakpoint | BreakReason.UserBreakpoint;
    /**
     * Reason that a breakpoint was removed.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/BreakpointRemoveReason)
     */
    export namespace BreakpointRemoveReason {
        /**
         * Breakpoint removal was requested by user or a command.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/BreakpointRemoveReason#Requested)
         */
        export interface Requested extends globalThis.EnumItem {
            Name: "Requested";
            Value: 0;
            EnumType: typeof globalThis.Enum.BreakpointRemoveReason;
        }
        export const Requested: Requested;
        /**
         * Script that contained the breakpoint has changed.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/BreakpointRemoveReason#ScriptChanged)
         */
        export interface ScriptChanged extends globalThis.EnumItem {
            Name: "ScriptChanged";
            Value: 1;
            EnumType: typeof globalThis.Enum.BreakpointRemoveReason;
        }
        export const ScriptChanged: ScriptChanged;
        /**
         * Script that contained the breakpoint was removed.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/BreakpointRemoveReason#ScriptRemoved)
         */
        export interface ScriptRemoved extends globalThis.EnumItem {
            Name: "ScriptRemoved";
            Value: 2;
            EnumType: typeof globalThis.Enum.BreakpointRemoveReason;
        }
        export const ScriptRemoved: ScriptRemoved;
        export function GetEnumItems(this: globalThis.Enum): Array<globalThis.Enum.BreakpointRemoveReason>;
        export function FromName(this: globalThis.Enum, name: string): globalThis.Enum.BreakpointRemoveReason | undefined;
        export function FromValue(this: globalThis.Enum, value: number): globalThis.Enum.BreakpointRemoveReason | undefined;
    }
    export type BreakpointRemoveReason = BreakpointRemoveReason.Requested | BreakpointRemoveReason.ScriptChanged | BreakpointRemoveReason.ScriptRemoved;
    /**
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/BulkMoveMode)
     */
    export namespace BulkMoveMode {
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/BulkMoveMode#FireAllEvents)
         */
        export interface FireAllEvents extends globalThis.EnumItem {
            Name: "FireAllEvents";
            Value: 0;
            EnumType: typeof globalThis.Enum.BulkMoveMode;
        }
        export const FireAllEvents: FireAllEvents;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/BulkMoveMode#FireCFrameChanged)
         */
        export interface FireCFrameChanged extends globalThis.EnumItem {
            Name: "FireCFrameChanged";
            Value: 1;
            EnumType: typeof globalThis.Enum.BulkMoveMode;
        }
        export const FireCFrameChanged: FireCFrameChanged;
        export function GetEnumItems(this: globalThis.Enum): Array<globalThis.Enum.BulkMoveMode>;
        export function FromName(this: globalThis.Enum, name: string): globalThis.Enum.BulkMoveMode | undefined;
        export function FromValue(this: globalThis.Enum, value: number): globalThis.Enum.BulkMoveMode | undefined;
    }
    export type BulkMoveMode = BulkMoveMode.FireAllEvents | BulkMoveMode.FireCFrameChanged;
    /**
     * The type of a bundle of assets.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/BundleType)
     */
    export namespace BundleType {
        /**
         * A bundle of body parts and accessories.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/BundleType#BodyParts)
         */
        export interface BodyParts extends globalThis.EnumItem {
            Name: "BodyParts";
            Value: 1;
            EnumType: typeof globalThis.Enum.BundleType;
        }
        export const BodyParts: BodyParts;
        /**
         * A bundle of just animations.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/BundleType#Animations)
         */
        export interface Animations extends globalThis.EnumItem {
            Name: "Animations";
            Value: 2;
            EnumType: typeof globalThis.Enum.BundleType;
        }
        export const Animations: Animations;
        /**
         * A bundle of left shoe and right shoe.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/BundleType#Shoes)
         */
        export interface Shoes extends globalThis.EnumItem {
            Name: "Shoes";
            Value: 3;
            EnumType: typeof globalThis.Enum.BundleType;
        }
        export const Shoes: Shoes;
        /**
         * A bundle consisting of dynamicHead and moodAnimation assets, optionally with eyebrowAccessory and eyelashAccessory.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/BundleType#DynamicHead)
         */
        export interface DynamicHead extends globalThis.EnumItem {
            Name: "DynamicHead";
            Value: 4;
            EnumType: typeof globalThis.Enum.BundleType;
        }
        export const DynamicHead: DynamicHead;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/BundleType#DynamicHeadAvatar)
         */
        export interface DynamicHeadAvatar extends globalThis.EnumItem {
            Name: "DynamicHeadAvatar";
            Value: 5;
            EnumType: typeof globalThis.Enum.BundleType;
        }
        export const DynamicHeadAvatar: DynamicHeadAvatar;
        export function GetEnumItems(this: globalThis.Enum): Array<globalThis.Enum.BundleType>;
        export function FromName(this: globalThis.Enum, name: string): globalThis.Enum.BundleType | undefined;
        export function FromValue(this: globalThis.Enum, value: number): globalThis.Enum.BundleType | undefined;
    }
    export type BundleType = BundleType.BodyParts | BundleType.Animations | BundleType.Shoes | BundleType.DynamicHead | BundleType.DynamicHeadAvatar;
    /**
     * One of the buttons used by `Controller`.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/Button)
     */
    export namespace Button {
        /**
         * The Jump button.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/Button#Jump)
         */
        export interface Jump extends globalThis.EnumItem {
            Name: "Jump";
            Value: 32;
            EnumType: typeof globalThis.Enum.Button;
        }
        export const Jump: Jump;
        /**
         * The Dismount button.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/Button#Dismount)
         */
        export interface Dismount extends globalThis.EnumItem {
            Name: "Dismount";
            Value: 8;
            EnumType: typeof globalThis.Enum.Button;
        }
        export const Dismount: Dismount;
        export function GetEnumItems(this: globalThis.Enum): Array<globalThis.Enum.Button>;
        export function FromName(this: globalThis.Enum, name: string): globalThis.Enum.Button | undefined;
        export function FromValue(this: globalThis.Enum, value: number): globalThis.Enum.Button | undefined;
    }
    export type Button = Button.Jump | Button.Dismount;
    /**
     * Used by `GuiButton.Style` to set a special hardcoded appearance.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/ButtonStyle)
     */
    export namespace ButtonStyle {
        /**
         * The button will respect the `GuiObject.BorderColor3` and `GuiObject.BackgroundColor3` properties.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/ButtonStyle#Custom)
         */
        export interface Custom extends globalThis.EnumItem {
            Name: "Custom";
            Value: 0;
            EnumType: typeof globalThis.Enum.ButtonStyle;
        }
        export const Custom: Custom;
        /**
         * A black background with a red border, and rounded corners.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/ButtonStyle#RobloxButtonDefault)
         */
        export interface RobloxButtonDefault extends globalThis.EnumItem {
            Name: "RobloxButtonDefault";
            Value: 1;
            EnumType: typeof globalThis.Enum.ButtonStyle;
        }
        export const RobloxButtonDefault: RobloxButtonDefault;
        /**
         * A black background with a grey border, and rounded corners.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/ButtonStyle#RobloxButton)
         */
        export interface RobloxButton extends globalThis.EnumItem {
            Name: "RobloxButton";
            Value: 2;
            EnumType: typeof globalThis.Enum.ButtonStyle;
        }
        export const RobloxButton: RobloxButton;
        /**
         * A grey background with rounded corners, and a slight drop shadow.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/ButtonStyle#RobloxRoundButton)
         */
        export interface RobloxRoundButton extends globalThis.EnumItem {
            Name: "RobloxRoundButton";
            Value: 3;
            EnumType: typeof globalThis.Enum.ButtonStyle;
        }
        export const RobloxRoundButton: RobloxRoundButton;
        /**
         * A blue background with rounded corners, and a slight drop shadow.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/ButtonStyle#RobloxRoundDefaultButton)
         */
        export interface RobloxRoundDefaultButton extends globalThis.EnumItem {
            Name: "RobloxRoundDefaultButton";
            Value: 4;
            EnumType: typeof globalThis.Enum.ButtonStyle;
        }
        export const RobloxRoundDefaultButton: RobloxRoundDefaultButton;
        /**
         * A white background with a thin grey border, rounded corners, and a slight drop shadow.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/ButtonStyle#RobloxRoundDropdownButton)
         */
        export interface RobloxRoundDropdownButton extends globalThis.EnumItem {
            Name: "RobloxRoundDropdownButton";
            Value: 5;
            EnumType: typeof globalThis.Enum.ButtonStyle;
        }
        export const RobloxRoundDropdownButton: RobloxRoundDropdownButton;
        export function GetEnumItems(this: globalThis.Enum): Array<globalThis.Enum.ButtonStyle>;
        export function FromName(this: globalThis.Enum, name: string): globalThis.Enum.ButtonStyle | undefined;
        export function FromValue(this: globalThis.Enum, value: number): globalThis.Enum.ButtonStyle | undefined;
    }
    export type ButtonStyle = ButtonStyle.Custom | ButtonStyle.RobloxButtonDefault | ButtonStyle.RobloxButton | ButtonStyle.RobloxRoundButton | ButtonStyle.RobloxRoundDefaultButton | ButtonStyle.RobloxRoundDropdownButton;
    /**
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/CageType)
     */
    export namespace CageType {
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/CageType#Inner)
         */
        export interface Inner extends globalThis.EnumItem {
            Name: "Inner";
            Value: 0;
            EnumType: typeof globalThis.Enum.CageType;
        }
        export const Inner: Inner;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/CageType#Outer)
         */
        export interface Outer extends globalThis.EnumItem {
            Name: "Outer";
            Value: 1;
            EnumType: typeof globalThis.Enum.CageType;
        }
        export const Outer: Outer;
        export function GetEnumItems(this: globalThis.Enum): Array<globalThis.Enum.CageType>;
        export function FromName(this: globalThis.Enum, name: string): globalThis.Enum.CageType | undefined;
        export function FromValue(this: globalThis.Enum, value: number): globalThis.Enum.CageType | undefined;
    }
    export type CageType = CageType.Inner | CageType.Outer;
    /**
     * Used to set `Player.CameraMode` to determine when first person and third person cameras should be used.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/CameraMode)
     */
    export namespace CameraMode {
        /**
         * Third person camera which can be zoomed into first person.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/CameraMode#Classic)
         */
        export interface Classic extends globalThis.EnumItem {
            Name: "Classic";
            Value: 0;
            EnumType: typeof globalThis.Enum.CameraMode;
        }
        export const Classic: Classic;
        /**
         * Exclusively first person camera.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/CameraMode#LockFirstPerson)
         */
        export interface LockFirstPerson extends globalThis.EnumItem {
            Name: "LockFirstPerson";
            Value: 1;
            EnumType: typeof globalThis.Enum.CameraMode;
        }
        export const LockFirstPerson: LockFirstPerson;
        export function GetEnumItems(this: globalThis.Enum): Array<globalThis.Enum.CameraMode>;
        export function FromName(this: globalThis.Enum, name: string): globalThis.Enum.CameraMode | undefined;
        export function FromValue(this: globalThis.Enum, value: number): globalThis.Enum.CameraMode | undefined;
    }
    export type CameraMode = CameraMode.Classic | CameraMode.LockFirstPerson;
    /**
     * The CameraPanMode Enum represents the available pan modes for `Camera:SetCameraPanMode()`.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/CameraPanMode)
     */
    export namespace CameraPanMode {
        /**
         * Enables swipe and pan on mobile devices, and disables edge bump camera controls. Default.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/CameraPanMode#Classic)
         */
        export interface Classic extends globalThis.EnumItem {
            Name: "Classic";
            Value: 0;
            EnumType: typeof globalThis.Enum.CameraPanMode;
        }
        export const Classic: Classic;
        /**
         * Disables swipe to pan on mobile devices, and enables edge bump camera controls. It does not affect Windows or Mac users.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/CameraPanMode#EdgeBump)
         */
        export interface EdgeBump extends globalThis.EnumItem {
            Name: "EdgeBump";
            Value: 1;
            EnumType: typeof globalThis.Enum.CameraPanMode;
        }
        export const EdgeBump: EdgeBump;
        export function GetEnumItems(this: globalThis.Enum): Array<globalThis.Enum.CameraPanMode>;
        export function FromName(this: globalThis.Enum, name: string): globalThis.Enum.CameraPanMode | undefined;
        export function FromValue(this: globalThis.Enum, value: number): globalThis.Enum.CameraPanMode | undefined;
    }
    export type CameraPanMode = CameraPanMode.Classic | CameraPanMode.EdgeBump;
    /**
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/CameraSpeedAdjustBinding)
     */
    export namespace CameraSpeedAdjustBinding {
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/CameraSpeedAdjustBinding#None)
         */
        export interface None extends globalThis.EnumItem {
            Name: "None";
            Value: 0;
            EnumType: typeof globalThis.Enum.CameraSpeedAdjustBinding;
        }
        export const None: None;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/CameraSpeedAdjustBinding#RmbScroll)
         */
        export interface RmbScroll extends globalThis.EnumItem {
            Name: "RmbScroll";
            Value: 1;
            EnumType: typeof globalThis.Enum.CameraSpeedAdjustBinding;
        }
        export const RmbScroll: RmbScroll;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/CameraSpeedAdjustBinding#AltScroll)
         */
        export interface AltScroll extends globalThis.EnumItem {
            Name: "AltScroll";
            Value: 2;
            EnumType: typeof globalThis.Enum.CameraSpeedAdjustBinding;
        }
        export const AltScroll: AltScroll;
        export function GetEnumItems(this: globalThis.Enum): Array<globalThis.Enum.CameraSpeedAdjustBinding>;
        export function FromName(this: globalThis.Enum, name: string): globalThis.Enum.CameraSpeedAdjustBinding | undefined;
        export function FromValue(this: globalThis.Enum, value: number): globalThis.Enum.CameraSpeedAdjustBinding | undefined;
    }
    export type CameraSpeedAdjustBinding = CameraSpeedAdjustBinding.None | CameraSpeedAdjustBinding.RmbScroll | CameraSpeedAdjustBinding.AltScroll;
    /**
     * Describes the camera behavior mode if using the default PlayerScripts.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/CameraType)
     */
    export namespace CameraType {
        /**
         * Camera is stationary.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/CameraType#Fixed)
         */
        export interface Fixed extends globalThis.EnumItem {
            Name: "Fixed";
            Value: 0;
            EnumType: typeof globalThis.Enum.CameraType;
        }
        export const Fixed: Fixed;
        /**
         * Camera moves with the subject at a fixed offset and will rotate as the subject rotates.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/CameraType#Attach)
         */
        export interface Attach extends globalThis.EnumItem {
            Name: "Attach";
            Value: 1;
            EnumType: typeof globalThis.Enum.CameraType;
        }
        export const Attach: Attach;
        /**
         * Camera is stationary but will rotate to keep the subject in the center of the screen.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/CameraType#Watch)
         */
        export interface Watch extends globalThis.EnumItem {
            Name: "Watch";
            Value: 2;
            EnumType: typeof globalThis.Enum.CameraType;
        }
        export const Watch: Watch;
        /**
         * Camera moves with the subject but does not rotate automatically.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/CameraType#Track)
         */
        export interface Track extends globalThis.EnumItem {
            Name: "Track";
            Value: 3;
            EnumType: typeof globalThis.Enum.CameraType;
        }
        export const Track: Track;
        /**
         * Camera moves with the subject and rotates to keep the subject in the center.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/CameraType#Follow)
         */
        export interface Follow extends globalThis.EnumItem {
            Name: "Follow";
            Value: 4;
            EnumType: typeof globalThis.Enum.CameraType;
        }
        export const Follow: Follow;
        /**
         * Default mode used by Roblox core scripts.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/CameraType#Custom)
         */
        export interface Custom extends globalThis.EnumItem {
            Name: "Custom";
            Value: 5;
            EnumType: typeof globalThis.Enum.CameraType;
        }
        export const Custom: Custom;
        /**
         * No default behavior. Used when developers need to script custom behavior.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/CameraType#Scriptable)
         */
        export interface Scriptable extends globalThis.EnumItem {
            Name: "Scriptable";
            Value: 6;
            EnumType: typeof globalThis.Enum.CameraType;
        }
        export const Scriptable: Scriptable;
        /**
         * The camera has a fixed Y position, but can be rotated around the player.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/CameraType#Orbital)
         */
        export interface Orbital extends globalThis.EnumItem {
            Name: "Orbital";
            Value: 7;
            EnumType: typeof globalThis.Enum.CameraType;
        }
        export const Orbital: Orbital;
        export function GetEnumItems(this: globalThis.Enum): Array<globalThis.Enum.CameraType>;
        export function FromName(this: globalThis.Enum, name: string): globalThis.Enum.CameraType | undefined;
        export function FromValue(this: globalThis.Enum, value: number): globalThis.Enum.CameraType | undefined;
    }
    export type CameraType = CameraType.Fixed | CameraType.Attach | CameraType.Watch | CameraType.Track | CameraType.Follow | CameraType.Custom | CameraType.Scriptable | CameraType.Orbital;
    /**
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/CatalogCategoryFilter)
     */
    export namespace CatalogCategoryFilter {
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/CatalogCategoryFilter#None)
         */
        export interface None extends globalThis.EnumItem {
            Name: "None";
            Value: 1;
            EnumType: typeof globalThis.Enum.CatalogCategoryFilter;
        }
        export const None: None;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/CatalogCategoryFilter#Featured)
         */
        export interface Featured extends globalThis.EnumItem {
            Name: "Featured";
            Value: 2;
            EnumType: typeof globalThis.Enum.CatalogCategoryFilter;
        }
        export const Featured: Featured;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/CatalogCategoryFilter#Collectibles)
         */
        export interface Collectibles extends globalThis.EnumItem {
            Name: "Collectibles";
            Value: 3;
            EnumType: typeof globalThis.Enum.CatalogCategoryFilter;
        }
        export const Collectibles: Collectibles;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/CatalogCategoryFilter#CommunityCreations)
         */
        export interface CommunityCreations extends globalThis.EnumItem {
            Name: "CommunityCreations";
            Value: 4;
            EnumType: typeof globalThis.Enum.CatalogCategoryFilter;
        }
        export const CommunityCreations: CommunityCreations;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/CatalogCategoryFilter#Premium)
         */
        export interface Premium extends globalThis.EnumItem {
            Name: "Premium";
            Value: 5;
            EnumType: typeof globalThis.Enum.CatalogCategoryFilter;
        }
        export const Premium: Premium;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/CatalogCategoryFilter#Recommended)
         */
        export interface Recommended extends globalThis.EnumItem {
            Name: "Recommended";
            Value: 6;
            EnumType: typeof globalThis.Enum.CatalogCategoryFilter;
        }
        export const Recommended: Recommended;
        export function GetEnumItems(this: globalThis.Enum): Array<globalThis.Enum.CatalogCategoryFilter>;
        export function FromName(this: globalThis.Enum, name: string): globalThis.Enum.CatalogCategoryFilter | undefined;
        export function FromValue(this: globalThis.Enum, value: number): globalThis.Enum.CatalogCategoryFilter | undefined;
    }
    export type CatalogCategoryFilter = CatalogCategoryFilter.None | CatalogCategoryFilter.Featured | CatalogCategoryFilter.Collectibles | CatalogCategoryFilter.CommunityCreations | CatalogCategoryFilter.Premium | CatalogCategoryFilter.Recommended;
    /**
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/CatalogSortAggregation)
     */
    export namespace CatalogSortAggregation {
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/CatalogSortAggregation#Past12Hours)
         */
        export interface Past12Hours extends globalThis.EnumItem {
            Name: "Past12Hours";
            Value: 1;
            EnumType: typeof globalThis.Enum.CatalogSortAggregation;
        }
        export const Past12Hours: Past12Hours;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/CatalogSortAggregation#PastDay)
         */
        export interface PastDay extends globalThis.EnumItem {
            Name: "PastDay";
            Value: 2;
            EnumType: typeof globalThis.Enum.CatalogSortAggregation;
        }
        export const PastDay: PastDay;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/CatalogSortAggregation#Past3Days)
         */
        export interface Past3Days extends globalThis.EnumItem {
            Name: "Past3Days";
            Value: 3;
            EnumType: typeof globalThis.Enum.CatalogSortAggregation;
        }
        export const Past3Days: Past3Days;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/CatalogSortAggregation#PastWeek)
         */
        export interface PastWeek extends globalThis.EnumItem {
            Name: "PastWeek";
            Value: 4;
            EnumType: typeof globalThis.Enum.CatalogSortAggregation;
        }
        export const PastWeek: PastWeek;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/CatalogSortAggregation#PastMonth)
         */
        export interface PastMonth extends globalThis.EnumItem {
            Name: "PastMonth";
            Value: 5;
            EnumType: typeof globalThis.Enum.CatalogSortAggregation;
        }
        export const PastMonth: PastMonth;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/CatalogSortAggregation#AllTime)
         */
        export interface AllTime extends globalThis.EnumItem {
            Name: "AllTime";
            Value: 6;
            EnumType: typeof globalThis.Enum.CatalogSortAggregation;
        }
        export const AllTime: AllTime;
        export function GetEnumItems(this: globalThis.Enum): Array<globalThis.Enum.CatalogSortAggregation>;
        export function FromName(this: globalThis.Enum, name: string): globalThis.Enum.CatalogSortAggregation | undefined;
        export function FromValue(this: globalThis.Enum, value: number): globalThis.Enum.CatalogSortAggregation | undefined;
    }
    export type CatalogSortAggregation = CatalogSortAggregation.Past12Hours | CatalogSortAggregation.PastDay | CatalogSortAggregation.Past3Days | CatalogSortAggregation.PastWeek | CatalogSortAggregation.PastMonth | CatalogSortAggregation.AllTime;
    /**
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/CatalogSortType)
     */
    export namespace CatalogSortType {
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/CatalogSortType#Relevance)
         */
        export interface Relevance extends globalThis.EnumItem {
            Name: "Relevance";
            Value: 1;
            EnumType: typeof globalThis.Enum.CatalogSortType;
        }
        export const Relevance: Relevance;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/CatalogSortType#PriceHighToLow)
         */
        export interface PriceHighToLow extends globalThis.EnumItem {
            Name: "PriceHighToLow";
            Value: 2;
            EnumType: typeof globalThis.Enum.CatalogSortType;
        }
        export const PriceHighToLow: PriceHighToLow;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/CatalogSortType#PriceLowToHigh)
         */
        export interface PriceLowToHigh extends globalThis.EnumItem {
            Name: "PriceLowToHigh";
            Value: 3;
            EnumType: typeof globalThis.Enum.CatalogSortType;
        }
        export const PriceLowToHigh: PriceLowToHigh;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/CatalogSortType#MostFavorited)
         */
        export interface MostFavorited extends globalThis.EnumItem {
            Name: "MostFavorited";
            Value: 5;
            EnumType: typeof globalThis.Enum.CatalogSortType;
        }
        export const MostFavorited: MostFavorited;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/CatalogSortType#RecentlyCreated)
         */
        export interface RecentlyCreated extends globalThis.EnumItem {
            Name: "RecentlyCreated";
            Value: 6;
            EnumType: typeof globalThis.Enum.CatalogSortType;
        }
        export const RecentlyCreated: RecentlyCreated;
        /**
         * @deprecated renamed to RecentlyCreated
         */
        export const RecentlyUpdated: RecentlyCreated;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/CatalogSortType#Bestselling)
         */
        export interface Bestselling extends globalThis.EnumItem {
            Name: "Bestselling";
            Value: 7;
            EnumType: typeof globalThis.Enum.CatalogSortType;
        }
        export const Bestselling: Bestselling;
        export function GetEnumItems(this: globalThis.Enum): Array<globalThis.Enum.CatalogSortType>;
        export function FromName(this: globalThis.Enum, name: string): globalThis.Enum.CatalogSortType | undefined;
        export function FromValue(this: globalThis.Enum, value: number): globalThis.Enum.CatalogSortType | undefined;
    }
    export type CatalogSortType = CatalogSortType.Relevance | CatalogSortType.PriceHighToLow | CatalogSortType.PriceLowToHigh | CatalogSortType.MostFavorited | CatalogSortType.RecentlyCreated | CatalogSortType.Bestselling;
    /**
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/CellBlock)
     */
    export namespace CellBlock {
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/CellBlock#Solid)
         */
        export interface Solid extends globalThis.EnumItem {
            Name: "Solid";
            Value: 0;
            EnumType: typeof globalThis.Enum.CellBlock;
        }
        export const Solid: Solid;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/CellBlock#VerticalWedge)
         */
        export interface VerticalWedge extends globalThis.EnumItem {
            Name: "VerticalWedge";
            Value: 1;
            EnumType: typeof globalThis.Enum.CellBlock;
        }
        export const VerticalWedge: VerticalWedge;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/CellBlock#CornerWedge)
         */
        export interface CornerWedge extends globalThis.EnumItem {
            Name: "CornerWedge";
            Value: 2;
            EnumType: typeof globalThis.Enum.CellBlock;
        }
        export const CornerWedge: CornerWedge;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/CellBlock#InverseCornerWedge)
         */
        export interface InverseCornerWedge extends globalThis.EnumItem {
            Name: "InverseCornerWedge";
            Value: 3;
            EnumType: typeof globalThis.Enum.CellBlock;
        }
        export const InverseCornerWedge: InverseCornerWedge;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/CellBlock#HorizontalWedge)
         */
        export interface HorizontalWedge extends globalThis.EnumItem {
            Name: "HorizontalWedge";
            Value: 4;
            EnumType: typeof globalThis.Enum.CellBlock;
        }
        export const HorizontalWedge: HorizontalWedge;
        export function GetEnumItems(this: globalThis.Enum): Array<globalThis.Enum.CellBlock>;
        export function FromName(this: globalThis.Enum, name: string): globalThis.Enum.CellBlock | undefined;
        export function FromValue(this: globalThis.Enum, value: number): globalThis.Enum.CellBlock | undefined;
    }
    export type CellBlock = CellBlock.Solid | CellBlock.VerticalWedge | CellBlock.CornerWedge | CellBlock.InverseCornerWedge | CellBlock.HorizontalWedge;
    /**
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/CellMaterial)
     */
    export namespace CellMaterial {
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/CellMaterial#Empty)
         */
        export interface Empty extends globalThis.EnumItem {
            Name: "Empty";
            Value: 0;
            EnumType: typeof globalThis.Enum.CellMaterial;
        }
        export const Empty: Empty;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/CellMaterial#Grass)
         */
        export interface Grass extends globalThis.EnumItem {
            Name: "Grass";
            Value: 1;
            EnumType: typeof globalThis.Enum.CellMaterial;
        }
        export const Grass: Grass;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/CellMaterial#Sand)
         */
        export interface Sand extends globalThis.EnumItem {
            Name: "Sand";
            Value: 2;
            EnumType: typeof globalThis.Enum.CellMaterial;
        }
        export const Sand: Sand;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/CellMaterial#Brick)
         */
        export interface Brick extends globalThis.EnumItem {
            Name: "Brick";
            Value: 3;
            EnumType: typeof globalThis.Enum.CellMaterial;
        }
        export const Brick: Brick;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/CellMaterial#Granite)
         */
        export interface Granite extends globalThis.EnumItem {
            Name: "Granite";
            Value: 4;
            EnumType: typeof globalThis.Enum.CellMaterial;
        }
        export const Granite: Granite;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/CellMaterial#Asphalt)
         */
        export interface Asphalt extends globalThis.EnumItem {
            Name: "Asphalt";
            Value: 5;
            EnumType: typeof globalThis.Enum.CellMaterial;
        }
        export const Asphalt: Asphalt;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/CellMaterial#Iron)
         */
        export interface Iron extends globalThis.EnumItem {
            Name: "Iron";
            Value: 6;
            EnumType: typeof globalThis.Enum.CellMaterial;
        }
        export const Iron: Iron;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/CellMaterial#Aluminum)
         */
        export interface Aluminum extends globalThis.EnumItem {
            Name: "Aluminum";
            Value: 7;
            EnumType: typeof globalThis.Enum.CellMaterial;
        }
        export const Aluminum: Aluminum;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/CellMaterial#Gold)
         */
        export interface Gold extends globalThis.EnumItem {
            Name: "Gold";
            Value: 8;
            EnumType: typeof globalThis.Enum.CellMaterial;
        }
        export const Gold: Gold;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/CellMaterial#WoodPlank)
         */
        export interface WoodPlank extends globalThis.EnumItem {
            Name: "WoodPlank";
            Value: 9;
            EnumType: typeof globalThis.Enum.CellMaterial;
        }
        export const WoodPlank: WoodPlank;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/CellMaterial#WoodLog)
         */
        export interface WoodLog extends globalThis.EnumItem {
            Name: "WoodLog";
            Value: 10;
            EnumType: typeof globalThis.Enum.CellMaterial;
        }
        export const WoodLog: WoodLog;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/CellMaterial#Gravel)
         */
        export interface Gravel extends globalThis.EnumItem {
            Name: "Gravel";
            Value: 11;
            EnumType: typeof globalThis.Enum.CellMaterial;
        }
        export const Gravel: Gravel;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/CellMaterial#CinderBlock)
         */
        export interface CinderBlock extends globalThis.EnumItem {
            Name: "CinderBlock";
            Value: 12;
            EnumType: typeof globalThis.Enum.CellMaterial;
        }
        export const CinderBlock: CinderBlock;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/CellMaterial#MossyStone)
         */
        export interface MossyStone extends globalThis.EnumItem {
            Name: "MossyStone";
            Value: 13;
            EnumType: typeof globalThis.Enum.CellMaterial;
        }
        export const MossyStone: MossyStone;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/CellMaterial#Cement)
         */
        export interface Cement extends globalThis.EnumItem {
            Name: "Cement";
            Value: 14;
            EnumType: typeof globalThis.Enum.CellMaterial;
        }
        export const Cement: Cement;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/CellMaterial#RedPlastic)
         */
        export interface RedPlastic extends globalThis.EnumItem {
            Name: "RedPlastic";
            Value: 15;
            EnumType: typeof globalThis.Enum.CellMaterial;
        }
        export const RedPlastic: RedPlastic;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/CellMaterial#BluePlastic)
         */
        export interface BluePlastic extends globalThis.EnumItem {
            Name: "BluePlastic";
            Value: 16;
            EnumType: typeof globalThis.Enum.CellMaterial;
        }
        export const BluePlastic: BluePlastic;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/CellMaterial#Water)
         */
        export interface Water extends globalThis.EnumItem {
            Name: "Water";
            Value: 17;
            EnumType: typeof globalThis.Enum.CellMaterial;
        }
        export const Water: Water;
        export function GetEnumItems(this: globalThis.Enum): Array<globalThis.Enum.CellMaterial>;
        export function FromName(this: globalThis.Enum, name: string): globalThis.Enum.CellMaterial | undefined;
        export function FromValue(this: globalThis.Enum, value: number): globalThis.Enum.CellMaterial | undefined;
    }
    export type CellMaterial = CellMaterial.Empty | CellMaterial.Grass | CellMaterial.Sand | CellMaterial.Brick | CellMaterial.Granite | CellMaterial.Asphalt | CellMaterial.Iron | CellMaterial.Aluminum | CellMaterial.Gold | CellMaterial.WoodPlank | CellMaterial.WoodLog | CellMaterial.Gravel | CellMaterial.CinderBlock | CellMaterial.MossyStone | CellMaterial.Cement | CellMaterial.RedPlastic | CellMaterial.BluePlastic | CellMaterial.Water;
    /**
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/CellOrientation)
     */
    export namespace CellOrientation {
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/CellOrientation#NegZ)
         */
        export interface NegZ extends globalThis.EnumItem {
            Name: "NegZ";
            Value: 0;
            EnumType: typeof globalThis.Enum.CellOrientation;
        }
        export const NegZ: NegZ;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/CellOrientation#X)
         */
        export interface X extends globalThis.EnumItem {
            Name: "X";
            Value: 1;
            EnumType: typeof globalThis.Enum.CellOrientation;
        }
        export const X: X;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/CellOrientation#Z)
         */
        export interface Z extends globalThis.EnumItem {
            Name: "Z";
            Value: 2;
            EnumType: typeof globalThis.Enum.CellOrientation;
        }
        export const Z: Z;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/CellOrientation#NegX)
         */
        export interface NegX extends globalThis.EnumItem {
            Name: "NegX";
            Value: 3;
            EnumType: typeof globalThis.Enum.CellOrientation;
        }
        export const NegX: NegX;
        export function GetEnumItems(this: globalThis.Enum): Array<globalThis.Enum.CellOrientation>;
        export function FromName(this: globalThis.Enum, name: string): globalThis.Enum.CellOrientation | undefined;
        export function FromValue(this: globalThis.Enum, value: number): globalThis.Enum.CellOrientation | undefined;
    }
    export type CellOrientation = CellOrientation.NegZ | CellOrientation.X | CellOrientation.Z | CellOrientation.NegX;
    /**
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/CenterDialogType)
     */
    export namespace CenterDialogType {
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/CenterDialogType#UnsolicitedDialog)
         */
        export interface UnsolicitedDialog extends globalThis.EnumItem {
            Name: "UnsolicitedDialog";
            Value: 1;
            EnumType: typeof globalThis.Enum.CenterDialogType;
        }
        export const UnsolicitedDialog: UnsolicitedDialog;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/CenterDialogType#PlayerInitiatedDialog)
         */
        export interface PlayerInitiatedDialog extends globalThis.EnumItem {
            Name: "PlayerInitiatedDialog";
            Value: 2;
            EnumType: typeof globalThis.Enum.CenterDialogType;
        }
        export const PlayerInitiatedDialog: PlayerInitiatedDialog;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/CenterDialogType#ModalDialog)
         */
        export interface ModalDialog extends globalThis.EnumItem {
            Name: "ModalDialog";
            Value: 3;
            EnumType: typeof globalThis.Enum.CenterDialogType;
        }
        export const ModalDialog: ModalDialog;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/CenterDialogType#QuitDialog)
         */
        export interface QuitDialog extends globalThis.EnumItem {
            Name: "QuitDialog";
            Value: 4;
            EnumType: typeof globalThis.Enum.CenterDialogType;
        }
        export const QuitDialog: QuitDialog;
        export function GetEnumItems(this: globalThis.Enum): Array<globalThis.Enum.CenterDialogType>;
        export function FromName(this: globalThis.Enum, name: string): globalThis.Enum.CenterDialogType | undefined;
        export function FromValue(this: globalThis.Enum, value: number): globalThis.Enum.CenterDialogType | undefined;
    }
    export type CenterDialogType = CenterDialogType.UnsolicitedDialog | CenterDialogType.PlayerInitiatedDialog | CenterDialogType.ModalDialog | CenterDialogType.QuitDialog;
    /**
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/CharacterControlMode)
     */
    export namespace CharacterControlMode {
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/CharacterControlMode#Default)
         */
        export interface Default extends globalThis.EnumItem {
            Name: "Default";
            Value: 0;
            EnumType: typeof globalThis.Enum.CharacterControlMode;
        }
        export const Default: Default;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/CharacterControlMode#Legacy)
         */
        export interface Legacy extends globalThis.EnumItem {
            Name: "Legacy";
            Value: 1;
            EnumType: typeof globalThis.Enum.CharacterControlMode;
        }
        export const Legacy: Legacy;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/CharacterControlMode#NoCharacterController)
         */
        export interface NoCharacterController extends globalThis.EnumItem {
            Name: "NoCharacterController";
            Value: 2;
            EnumType: typeof globalThis.Enum.CharacterControlMode;
        }
        export const NoCharacterController: NoCharacterController;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/CharacterControlMode#LuaCharacterController)
         */
        export interface LuaCharacterController extends globalThis.EnumItem {
            Name: "LuaCharacterController";
            Value: 3;
            EnumType: typeof globalThis.Enum.CharacterControlMode;
        }
        export const LuaCharacterController: LuaCharacterController;
        export function GetEnumItems(this: globalThis.Enum): Array<globalThis.Enum.CharacterControlMode>;
        export function FromName(this: globalThis.Enum, name: string): globalThis.Enum.CharacterControlMode | undefined;
        export function FromValue(this: globalThis.Enum, value: number): globalThis.Enum.CharacterControlMode | undefined;
    }
    export type CharacterControlMode = CharacterControlMode.Default | CharacterControlMode.Legacy | CharacterControlMode.NoCharacterController | CharacterControlMode.LuaCharacterController;
    /**
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/ChatCallbackType)
     */
    export namespace ChatCallbackType {
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/ChatCallbackType#OnCreatingChatWindow)
         */
        export interface OnCreatingChatWindow extends globalThis.EnumItem {
            Name: "OnCreatingChatWindow";
            Value: 1;
            EnumType: typeof globalThis.Enum.ChatCallbackType;
        }
        export const OnCreatingChatWindow: OnCreatingChatWindow;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/ChatCallbackType#OnClientSendingMessage)
         */
        export interface OnClientSendingMessage extends globalThis.EnumItem {
            Name: "OnClientSendingMessage";
            Value: 2;
            EnumType: typeof globalThis.Enum.ChatCallbackType;
        }
        export const OnClientSendingMessage: OnClientSendingMessage;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/ChatCallbackType#OnClientFormattingMessage)
         */
        export interface OnClientFormattingMessage extends globalThis.EnumItem {
            Name: "OnClientFormattingMessage";
            Value: 3;
            EnumType: typeof globalThis.Enum.ChatCallbackType;
        }
        export const OnClientFormattingMessage: OnClientFormattingMessage;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/ChatCallbackType#OnServerReceivingMessage)
         */
        export interface OnServerReceivingMessage extends globalThis.EnumItem {
            Name: "OnServerReceivingMessage";
            Value: 17;
            EnumType: typeof globalThis.Enum.ChatCallbackType;
        }
        export const OnServerReceivingMessage: OnServerReceivingMessage;
        export function GetEnumItems(this: globalThis.Enum): Array<globalThis.Enum.ChatCallbackType>;
        export function FromName(this: globalThis.Enum, name: string): globalThis.Enum.ChatCallbackType | undefined;
        export function FromValue(this: globalThis.Enum, value: number): globalThis.Enum.ChatCallbackType | undefined;
    }
    export type ChatCallbackType = ChatCallbackType.OnCreatingChatWindow | ChatCallbackType.OnClientSendingMessage | ChatCallbackType.OnClientFormattingMessage | ChatCallbackType.OnServerReceivingMessage;
    /**
     * Describes the chat color.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/ChatColor)
     */
    export namespace ChatColor {
        /**
         * Blue chat color.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/ChatColor#Blue)
         */
        export interface Blue extends globalThis.EnumItem {
            Name: "Blue";
            Value: 0;
            EnumType: typeof globalThis.Enum.ChatColor;
        }
        export const Blue: Blue;
        /**
         * Green chat color.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/ChatColor#Green)
         */
        export interface Green extends globalThis.EnumItem {
            Name: "Green";
            Value: 1;
            EnumType: typeof globalThis.Enum.ChatColor;
        }
        export const Green: Green;
        /**
         * Red chat color.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/ChatColor#Red)
         */
        export interface Red extends globalThis.EnumItem {
            Name: "Red";
            Value: 2;
            EnumType: typeof globalThis.Enum.ChatColor;
        }
        export const Red: Red;
        /**
         * White chat color.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/ChatColor#White)
         */
        export interface White extends globalThis.EnumItem {
            Name: "White";
            Value: 3;
            EnumType: typeof globalThis.Enum.ChatColor;
        }
        export const White: White;
        export function GetEnumItems(this: globalThis.Enum): Array<globalThis.Enum.ChatColor>;
        export function FromName(this: globalThis.Enum, name: string): globalThis.Enum.ChatColor | undefined;
        export function FromValue(this: globalThis.Enum, value: number): globalThis.Enum.ChatColor | undefined;
    }
    export type ChatColor = ChatColor.Blue | ChatColor.Green | ChatColor.Red | ChatColor.White;
    /**
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/ChatMode)
     */
    export namespace ChatMode {
        /**
         * The player is restricted to chatting via a menu of chat messages.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/ChatMode#Menu)
         */
        export interface Menu extends globalThis.EnumItem {
            Name: "Menu";
            Value: 0;
            EnumType: typeof globalThis.Enum.ChatMode;
        }
        export const Menu: Menu;
        /**
         * A player can chat via custom text messages and a menu of chat messages.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/ChatMode#TextAndMenu)
         */
        export interface TextAndMenu extends globalThis.EnumItem {
            Name: "TextAndMenu";
            Value: 1;
            EnumType: typeof globalThis.Enum.ChatMode;
        }
        export const TextAndMenu: TextAndMenu;
        export function GetEnumItems(this: globalThis.Enum): Array<globalThis.Enum.ChatMode>;
        export function FromName(this: globalThis.Enum, name: string): globalThis.Enum.ChatMode | undefined;
        export function FromValue(this: globalThis.Enum, value: number): globalThis.Enum.ChatMode | undefined;
    }
    export type ChatMode = ChatMode.Menu | ChatMode.TextAndMenu;
    /**
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/ChatPrivacyMode)
     */
    export namespace ChatPrivacyMode {
        /**
         * A player can chat with all users in a game.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/ChatPrivacyMode#AllUsers)
         */
        export interface AllUsers extends globalThis.EnumItem {
            Name: "AllUsers";
            Value: 0;
            EnumType: typeof globalThis.Enum.ChatPrivacyMode;
        }
        export const AllUsers: AllUsers;
        /**
         * A player cannot chat with any other users in a game.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/ChatPrivacyMode#NoOne)
         */
        export interface NoOne extends globalThis.EnumItem {
            Name: "NoOne";
            Value: 1;
            EnumType: typeof globalThis.Enum.ChatPrivacyMode;
        }
        export const NoOne: NoOne;
        /**
         * A player can only chat with users in a game that are on their friends list.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/ChatPrivacyMode#Friends)
         */
        export interface Friends extends globalThis.EnumItem {
            Name: "Friends";
            Value: 2;
            EnumType: typeof globalThis.Enum.ChatPrivacyMode;
        }
        export const Friends: Friends;
        export function GetEnumItems(this: globalThis.Enum): Array<globalThis.Enum.ChatPrivacyMode>;
        export function FromName(this: globalThis.Enum, name: string): globalThis.Enum.ChatPrivacyMode | undefined;
        export function FromValue(this: globalThis.Enum, value: number): globalThis.Enum.ChatPrivacyMode | undefined;
    }
    export type ChatPrivacyMode = ChatPrivacyMode.AllUsers | ChatPrivacyMode.NoOne | ChatPrivacyMode.Friends;
    /**
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/ChatRestrictionStatus)
     */
    export namespace ChatRestrictionStatus {
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/ChatRestrictionStatus#Unknown)
         */
        export interface Unknown extends globalThis.EnumItem {
            Name: "Unknown";
            Value: 0;
            EnumType: typeof globalThis.Enum.ChatRestrictionStatus;
        }
        export const Unknown: Unknown;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/ChatRestrictionStatus#NotRestricted)
         */
        export interface NotRestricted extends globalThis.EnumItem {
            Name: "NotRestricted";
            Value: 1;
            EnumType: typeof globalThis.Enum.ChatRestrictionStatus;
        }
        export const NotRestricted: NotRestricted;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/ChatRestrictionStatus#Restricted)
         */
        export interface Restricted extends globalThis.EnumItem {
            Name: "Restricted";
            Value: 2;
            EnumType: typeof globalThis.Enum.ChatRestrictionStatus;
        }
        export const Restricted: Restricted;
        export function GetEnumItems(this: globalThis.Enum): Array<globalThis.Enum.ChatRestrictionStatus>;
        export function FromName(this: globalThis.Enum, name: string): globalThis.Enum.ChatRestrictionStatus | undefined;
        export function FromValue(this: globalThis.Enum, value: number): globalThis.Enum.ChatRestrictionStatus | undefined;
    }
    export type ChatRestrictionStatus = ChatRestrictionStatus.Unknown | ChatRestrictionStatus.NotRestricted | ChatRestrictionStatus.Restricted;
    /**
     * The ChatStyle Enum is used to set the style of `Chat` used in a game via the `Players:SetChatStyle()` method.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/ChatStyle)
     */
    export namespace ChatStyle {
        /**
         * Displays chats in the chat user interface at the top-left corner of the screen.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/ChatStyle#Classic)
         */
        export interface Classic extends globalThis.EnumItem {
            Name: "Classic";
            Value: 0;
            EnumType: typeof globalThis.Enum.ChatStyle;
        }
        export const Classic: Classic;
        /**
         * Displays chats in a bubble above the sender's head.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/ChatStyle#Bubble)
         */
        export interface Bubble extends globalThis.EnumItem {
            Name: "Bubble";
            Value: 1;
            EnumType: typeof globalThis.Enum.ChatStyle;
        }
        export const Bubble: Bubble;
        /**
         * Has the effects of Classic and Bubble combined.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/ChatStyle#ClassicAndBubble)
         */
        export interface ClassicAndBubble extends globalThis.EnumItem {
            Name: "ClassicAndBubble";
            Value: 2;
            EnumType: typeof globalThis.Enum.ChatStyle;
        }
        export const ClassicAndBubble: ClassicAndBubble;
        export function GetEnumItems(this: globalThis.Enum): Array<globalThis.Enum.ChatStyle>;
        export function FromName(this: globalThis.Enum, name: string): globalThis.Enum.ChatStyle | undefined;
        export function FromValue(this: globalThis.Enum, value: number): globalThis.Enum.ChatStyle | undefined;
    }
    export type ChatStyle = ChatStyle.Classic | ChatStyle.Bubble | ChatStyle.ClassicAndBubble;
    /**
     * Determines whether `TextChatService` should be fully enabled or to allow the legacy system.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/ChatVersion)
     */
    export namespace ChatVersion {
        /**
         * Enables the legacy chat system.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/ChatVersion#LegacyChatService)
         */
        export interface LegacyChatService extends globalThis.EnumItem {
            Name: "LegacyChatService";
            Value: 0;
            EnumType: typeof globalThis.Enum.ChatVersion;
        }
        export const LegacyChatService: LegacyChatService;
        /**
         * Enables `TextChatService` chat and prevents legacy chat system behavior.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/ChatVersion#TextChatService)
         */
        export interface TextChatService extends globalThis.EnumItem {
            Name: "TextChatService";
            Value: 1;
            EnumType: typeof globalThis.Enum.ChatVersion;
        }
        export const TextChatService: TextChatService;
        export function GetEnumItems(this: globalThis.Enum): Array<globalThis.Enum.ChatVersion>;
        export function FromName(this: globalThis.Enum, name: string): globalThis.Enum.ChatVersion | undefined;
        export function FromValue(this: globalThis.Enum, value: number): globalThis.Enum.ChatVersion | undefined;
    }
    export type ChatVersion = ChatVersion.LegacyChatService | ChatVersion.TextChatService;
    /**
     * An Enum describing various animation throttling modes on clients.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/ClientAnimatorThrottlingMode)
     */
    export namespace ClientAnimatorThrottlingMode {
        /**
         * The default animation throttling mode defined by Roblox.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/ClientAnimatorThrottlingMode#Default)
         */
        export interface Default extends globalThis.EnumItem {
            Name: "Default";
            Value: 0;
            EnumType: typeof globalThis.Enum.ClientAnimatorThrottlingMode;
        }
        export const Default: Default;
        /**
         * Disables animation throttling.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/ClientAnimatorThrottlingMode#Disabled)
         */
        export interface Disabled extends globalThis.EnumItem {
            Name: "Disabled";
            Value: 1;
            EnumType: typeof globalThis.Enum.ClientAnimatorThrottlingMode;
        }
        export const Disabled: Disabled;
        /**
         * Enables animation throttling.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/ClientAnimatorThrottlingMode#Enabled)
         */
        export interface Enabled extends globalThis.EnumItem {
            Name: "Enabled";
            Value: 2;
            EnumType: typeof globalThis.Enum.ClientAnimatorThrottlingMode;
        }
        export const Enabled: Enabled;
        export function GetEnumItems(this: globalThis.Enum): Array<globalThis.Enum.ClientAnimatorThrottlingMode>;
        export function FromName(this: globalThis.Enum, name: string): globalThis.Enum.ClientAnimatorThrottlingMode | undefined;
        export function FromValue(this: globalThis.Enum, value: number): globalThis.Enum.ClientAnimatorThrottlingMode | undefined;
    }
    export type ClientAnimatorThrottlingMode = ClientAnimatorThrottlingMode.Default | ClientAnimatorThrottlingMode.Disabled | ClientAnimatorThrottlingMode.Enabled;
    /**
     * Specifies the reason for the experience server shutdown.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/CloseReason)
     */
    export namespace CloseReason {
        /**
         * The server shut down for an unknown reason.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/CloseReason#Unknown)
         */
        export interface Unknown extends globalThis.EnumItem {
            Name: "Unknown";
            Value: 0;
            EnumType: typeof globalThis.Enum.CloseReason;
        }
        export const Unknown: Unknown;
        /**
         * The server shut down for maintenance.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/CloseReason#RobloxMaintenance)
         */
        export interface RobloxMaintenance extends globalThis.EnumItem {
            Name: "RobloxMaintenance";
            Value: 1;
            EnumType: typeof globalThis.Enum.CloseReason;
        }
        export const RobloxMaintenance: RobloxMaintenance;
        /**
         * The experience developer has shut down the server, or functions bound by `BindToClose()` have been called inside Studio.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/CloseReason#DeveloperShutdown)
         */
        export interface DeveloperShutdown extends globalThis.EnumItem {
            Name: "DeveloperShutdown";
            Value: 2;
            EnumType: typeof globalThis.Enum.CloseReason;
        }
        export const DeveloperShutdown: DeveloperShutdown;
        /**
         * The experience developer has migrated the server to a new place version.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/CloseReason#DeveloperUpdate)
         */
        export interface DeveloperUpdate extends globalThis.EnumItem {
            Name: "DeveloperUpdate";
            Value: 3;
            EnumType: typeof globalThis.Enum.CloseReason;
        }
        export const DeveloperUpdate: DeveloperUpdate;
        /**
         * The last player has left and the experience is empty.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/CloseReason#ServerEmpty)
         */
        export interface ServerEmpty extends globalThis.EnumItem {
            Name: "ServerEmpty";
            Value: 4;
            EnumType: typeof globalThis.Enum.CloseReason;
        }
        export const ServerEmpty: ServerEmpty;
        /**
         * The experience has hit the memory limit for the game server.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/CloseReason#OutOfMemory)
         */
        export interface OutOfMemory extends globalThis.EnumItem {
            Name: "OutOfMemory";
            Value: 5;
            EnumType: typeof globalThis.Enum.CloseReason;
        }
        export const OutOfMemory: OutOfMemory;
        export function GetEnumItems(this: globalThis.Enum): Array<globalThis.Enum.CloseReason>;
        export function FromName(this: globalThis.Enum, name: string): globalThis.Enum.CloseReason | undefined;
        export function FromValue(this: globalThis.Enum, value: number): globalThis.Enum.CloseReason | undefined;
    }
    export type CloseReason = CloseReason.Unknown | CloseReason.RobloxMaintenance | CloseReason.DeveloperShutdown | CloseReason.DeveloperUpdate | CloseReason.ServerEmpty | CloseReason.OutOfMemory;
    /**
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/CollaboratorStatus)
     */
    export namespace CollaboratorStatus {
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/CollaboratorStatus#None)
         */
        export interface None extends globalThis.EnumItem {
            Name: "None";
            Value: 0;
            EnumType: typeof globalThis.Enum.CollaboratorStatus;
        }
        export const None: None;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/CollaboratorStatus#Editing3D)
         */
        export interface Editing3D extends globalThis.EnumItem {
            Name: "Editing3D";
            Value: 1;
            EnumType: typeof globalThis.Enum.CollaboratorStatus;
        }
        export const Editing3D: Editing3D;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/CollaboratorStatus#Scripting)
         */
        export interface Scripting extends globalThis.EnumItem {
            Name: "Scripting";
            Value: 2;
            EnumType: typeof globalThis.Enum.CollaboratorStatus;
        }
        export const Scripting: Scripting;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/CollaboratorStatus#PrivateScripting)
         */
        export interface PrivateScripting extends globalThis.EnumItem {
            Name: "PrivateScripting";
            Value: 3;
            EnumType: typeof globalThis.Enum.CollaboratorStatus;
        }
        export const PrivateScripting: PrivateScripting;
        export function GetEnumItems(this: globalThis.Enum): Array<globalThis.Enum.CollaboratorStatus>;
        export function FromName(this: globalThis.Enum, name: string): globalThis.Enum.CollaboratorStatus | undefined;
        export function FromValue(this: globalThis.Enum, value: number): globalThis.Enum.CollaboratorStatus | undefined;
    }
    export type CollaboratorStatus = CollaboratorStatus.None | CollaboratorStatus.Editing3D | CollaboratorStatus.Scripting | CollaboratorStatus.PrivateScripting;
    /**
     * Determines behavior of the collision hitbox for `MeshPart` and `PartOperation` instances.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/CollisionFidelity)
     */
    export namespace CollisionFidelity {
        /**
         * Collision model uses a voxel-based convex-hull decomposition that is relatively fast but may not be highly accurate, especially for holes, doorways, and cavities in general.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/CollisionFidelity#Default)
         */
        export interface Default extends globalThis.EnumItem {
            Name: "Default";
            Value: 0;
            EnumType: typeof globalThis.Enum.CollisionFidelity;
        }
        export const Default: Default;
        /**
         * Collision model uses the convex hull of the visual mesh.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/CollisionFidelity#Hull)
         */
        export interface Hull extends globalThis.EnumItem {
            Name: "Hull";
            Value: 1;
            EnumType: typeof globalThis.Enum.CollisionFidelity;
        }
        export const Hull: Hull;
        /**
         * Collision model uses a bounding box that encompasses the visual mesh.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/CollisionFidelity#Box)
         */
        export interface Box extends globalThis.EnumItem {
            Name: "Box";
            Value: 2;
            EnumType: typeof globalThis.Enum.CollisionFidelity;
        }
        export const Box: Box;
        /**
         * Collison model uses a convex-hull decomposition of the visual mesh which is computed by a variation of an algorithm called HACD. This option is the most accurate representation of collision geometry for complex objects with built-in tolerances to reduce the total number of convex-hulls by compromising on accuracy when justified.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/CollisionFidelity#PreciseConvexDecomposition)
         */
        export interface PreciseConvexDecomposition extends globalThis.EnumItem {
            Name: "PreciseConvexDecomposition";
            Value: 3;
            EnumType: typeof globalThis.Enum.CollisionFidelity;
        }
        export const PreciseConvexDecomposition: PreciseConvexDecomposition;
        export function GetEnumItems(this: globalThis.Enum): Array<globalThis.Enum.CollisionFidelity>;
        export function FromName(this: globalThis.Enum, name: string): globalThis.Enum.CollisionFidelity | undefined;
        export function FromValue(this: globalThis.Enum, value: number): globalThis.Enum.CollisionFidelity | undefined;
    }
    export type CollisionFidelity = CollisionFidelity.Default | CollisionFidelity.Hull | CollisionFidelity.Box | CollisionFidelity.PreciseConvexDecomposition;
    /**
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/CommandPermission)
     */
    export namespace CommandPermission {
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/CommandPermission#Plugin)
         */
        export interface Plugin extends globalThis.EnumItem {
            Name: "Plugin";
            Value: 0;
            EnumType: typeof globalThis.Enum.CommandPermission;
        }
        export const Plugin: Plugin;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/CommandPermission#LocalUser)
         */
        export interface LocalUser extends globalThis.EnumItem {
            Name: "LocalUser";
            Value: 1;
            EnumType: typeof globalThis.Enum.CommandPermission;
        }
        export const LocalUser: LocalUser;
        export function GetEnumItems(this: globalThis.Enum): Array<globalThis.Enum.CommandPermission>;
        export function FromName(this: globalThis.Enum, name: string): globalThis.Enum.CommandPermission | undefined;
        export function FromValue(this: globalThis.Enum, value: number): globalThis.Enum.CommandPermission | undefined;
    }
    export type CommandPermission = CommandPermission.Plugin | CommandPermission.LocalUser;
    /**
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/CompileTarget)
     */
    export namespace CompileTarget {
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/CompileTarget#Client)
         */
        export interface Client extends globalThis.EnumItem {
            Name: "Client";
            Value: 0;
            EnumType: typeof globalThis.Enum.CompileTarget;
        }
        export const Client: Client;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/CompileTarget#CoreScript)
         */
        export interface CoreScript extends globalThis.EnumItem {
            Name: "CoreScript";
            Value: 1;
            EnumType: typeof globalThis.Enum.CompileTarget;
        }
        export const CoreScript: CoreScript;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/CompileTarget#Studio)
         */
        export interface Studio extends globalThis.EnumItem {
            Name: "Studio";
            Value: 2;
            EnumType: typeof globalThis.Enum.CompileTarget;
        }
        export const Studio: Studio;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/CompileTarget#CoreScriptRaw)
         */
        export interface CoreScriptRaw extends globalThis.EnumItem {
            Name: "CoreScriptRaw";
            Value: 3;
            EnumType: typeof globalThis.Enum.CompileTarget;
        }
        export const CoreScriptRaw: CoreScriptRaw;
        export function GetEnumItems(this: globalThis.Enum): Array<globalThis.Enum.CompileTarget>;
        export function FromName(this: globalThis.Enum, name: string): globalThis.Enum.CompileTarget | undefined;
        export function FromValue(this: globalThis.Enum, value: number): globalThis.Enum.CompileTarget | undefined;
    }
    export type CompileTarget = CompileTarget.Client | CompileTarget.CoreScript | CompileTarget.Studio | CompileTarget.CoreScriptRaw;
    /**
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/CompletionAcceptanceBehavior)
     */
    export namespace CompletionAcceptanceBehavior {
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/CompletionAcceptanceBehavior#Insert)
         */
        export interface Insert extends globalThis.EnumItem {
            Name: "Insert";
            Value: 0;
            EnumType: typeof globalThis.Enum.CompletionAcceptanceBehavior;
        }
        export const Insert: Insert;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/CompletionAcceptanceBehavior#Replace)
         */
        export interface Replace extends globalThis.EnumItem {
            Name: "Replace";
            Value: 1;
            EnumType: typeof globalThis.Enum.CompletionAcceptanceBehavior;
        }
        export const Replace: Replace;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/CompletionAcceptanceBehavior#ReplaceOnEnterInsertOnTab)
         */
        export interface ReplaceOnEnterInsertOnTab extends globalThis.EnumItem {
            Name: "ReplaceOnEnterInsertOnTab";
            Value: 2;
            EnumType: typeof globalThis.Enum.CompletionAcceptanceBehavior;
        }
        export const ReplaceOnEnterInsertOnTab: ReplaceOnEnterInsertOnTab;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/CompletionAcceptanceBehavior#InsertOnEnterReplaceOnTab)
         */
        export interface InsertOnEnterReplaceOnTab extends globalThis.EnumItem {
            Name: "InsertOnEnterReplaceOnTab";
            Value: 3;
            EnumType: typeof globalThis.Enum.CompletionAcceptanceBehavior;
        }
        export const InsertOnEnterReplaceOnTab: InsertOnEnterReplaceOnTab;
        export function GetEnumItems(this: globalThis.Enum): Array<globalThis.Enum.CompletionAcceptanceBehavior>;
        export function FromName(this: globalThis.Enum, name: string): globalThis.Enum.CompletionAcceptanceBehavior | undefined;
        export function FromValue(this: globalThis.Enum, value: number): globalThis.Enum.CompletionAcceptanceBehavior | undefined;
    }
    export type CompletionAcceptanceBehavior = CompletionAcceptanceBehavior.Insert | CompletionAcceptanceBehavior.Replace | CompletionAcceptanceBehavior.ReplaceOnEnterInsertOnTab | CompletionAcceptanceBehavior.InsertOnEnterReplaceOnTab;
    /**
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/CompletionItemKind)
     */
    export namespace CompletionItemKind {
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/CompletionItemKind#Text)
         */
        export interface Text extends globalThis.EnumItem {
            Name: "Text";
            Value: 1;
            EnumType: typeof globalThis.Enum.CompletionItemKind;
        }
        export const Text: Text;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/CompletionItemKind#Method)
         */
        export interface Method extends globalThis.EnumItem {
            Name: "Method";
            Value: 2;
            EnumType: typeof globalThis.Enum.CompletionItemKind;
        }
        export const Method: Method;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/CompletionItemKind#Function)
         */
        export interface Function extends globalThis.EnumItem {
            Name: "Function";
            Value: 3;
            EnumType: typeof globalThis.Enum.CompletionItemKind;
        }
        export const Function: Function;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/CompletionItemKind#Constructor)
         */
        export interface Constructor extends globalThis.EnumItem {
            Name: "Constructor";
            Value: 4;
            EnumType: typeof globalThis.Enum.CompletionItemKind;
        }
        export const Constructor: Constructor;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/CompletionItemKind#Field)
         */
        export interface Field extends globalThis.EnumItem {
            Name: "Field";
            Value: 5;
            EnumType: typeof globalThis.Enum.CompletionItemKind;
        }
        export const Field: Field;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/CompletionItemKind#Variable)
         */
        export interface Variable extends globalThis.EnumItem {
            Name: "Variable";
            Value: 6;
            EnumType: typeof globalThis.Enum.CompletionItemKind;
        }
        export const Variable: Variable;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/CompletionItemKind#Class)
         */
        export interface Class extends globalThis.EnumItem {
            Name: "Class";
            Value: 7;
            EnumType: typeof globalThis.Enum.CompletionItemKind;
        }
        export const Class: Class;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/CompletionItemKind#Interface)
         */
        export interface Interface extends globalThis.EnumItem {
            Name: "Interface";
            Value: 8;
            EnumType: typeof globalThis.Enum.CompletionItemKind;
        }
        export const Interface: Interface;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/CompletionItemKind#Module)
         */
        export interface Module extends globalThis.EnumItem {
            Name: "Module";
            Value: 9;
            EnumType: typeof globalThis.Enum.CompletionItemKind;
        }
        export const Module: Module;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/CompletionItemKind#Property)
         */
        export interface Property extends globalThis.EnumItem {
            Name: "Property";
            Value: 10;
            EnumType: typeof globalThis.Enum.CompletionItemKind;
        }
        export const Property: Property;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/CompletionItemKind#Unit)
         */
        export interface Unit extends globalThis.EnumItem {
            Name: "Unit";
            Value: 11;
            EnumType: typeof globalThis.Enum.CompletionItemKind;
        }
        export const Unit: Unit;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/CompletionItemKind#Value)
         */
        export interface Value extends globalThis.EnumItem {
            Name: "Value";
            Value: 12;
            EnumType: typeof globalThis.Enum.CompletionItemKind;
        }
        export const Value: Value;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/CompletionItemKind#Enum)
         */
        export interface Enum extends globalThis.EnumItem {
            Name: "Enum";
            Value: 13;
            EnumType: typeof globalThis.Enum.CompletionItemKind;
        }
        export const Enum: Enum;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/CompletionItemKind#Keyword)
         */
        export interface Keyword extends globalThis.EnumItem {
            Name: "Keyword";
            Value: 14;
            EnumType: typeof globalThis.Enum.CompletionItemKind;
        }
        export const Keyword: Keyword;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/CompletionItemKind#Snippet)
         */
        export interface Snippet extends globalThis.EnumItem {
            Name: "Snippet";
            Value: 15;
            EnumType: typeof globalThis.Enum.CompletionItemKind;
        }
        export const Snippet: Snippet;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/CompletionItemKind#Color)
         */
        export interface Color extends globalThis.EnumItem {
            Name: "Color";
            Value: 16;
            EnumType: typeof globalThis.Enum.CompletionItemKind;
        }
        export const Color: Color;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/CompletionItemKind#File)
         */
        export interface File extends globalThis.EnumItem {
            Name: "File";
            Value: 17;
            EnumType: typeof globalThis.Enum.CompletionItemKind;
        }
        export const File: File;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/CompletionItemKind#Reference)
         */
        export interface Reference extends globalThis.EnumItem {
            Name: "Reference";
            Value: 18;
            EnumType: typeof globalThis.Enum.CompletionItemKind;
        }
        export const Reference: Reference;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/CompletionItemKind#Folder)
         */
        export interface Folder extends globalThis.EnumItem {
            Name: "Folder";
            Value: 19;
            EnumType: typeof globalThis.Enum.CompletionItemKind;
        }
        export const Folder: Folder;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/CompletionItemKind#EnumMember)
         */
        export interface EnumMember extends globalThis.EnumItem {
            Name: "EnumMember";
            Value: 20;
            EnumType: typeof globalThis.Enum.CompletionItemKind;
        }
        export const EnumMember: EnumMember;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/CompletionItemKind#Constant)
         */
        export interface Constant extends globalThis.EnumItem {
            Name: "Constant";
            Value: 21;
            EnumType: typeof globalThis.Enum.CompletionItemKind;
        }
        export const Constant: Constant;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/CompletionItemKind#Struct)
         */
        export interface Struct extends globalThis.EnumItem {
            Name: "Struct";
            Value: 22;
            EnumType: typeof globalThis.Enum.CompletionItemKind;
        }
        export const Struct: Struct;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/CompletionItemKind#Event)
         */
        export interface Event extends globalThis.EnumItem {
            Name: "Event";
            Value: 23;
            EnumType: typeof globalThis.Enum.CompletionItemKind;
        }
        export const Event: Event;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/CompletionItemKind#Operator)
         */
        export interface Operator extends globalThis.EnumItem {
            Name: "Operator";
            Value: 24;
            EnumType: typeof globalThis.Enum.CompletionItemKind;
        }
        export const Operator: Operator;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/CompletionItemKind#TypeParameter)
         */
        export interface TypeParameter extends globalThis.EnumItem {
            Name: "TypeParameter";
            Value: 25;
            EnumType: typeof globalThis.Enum.CompletionItemKind;
        }
        export const TypeParameter: TypeParameter;
        export function GetEnumItems(this: globalThis.Enum): Array<globalThis.Enum.CompletionItemKind>;
        export function FromName(this: globalThis.Enum, name: string): globalThis.Enum.CompletionItemKind | undefined;
        export function FromValue(this: globalThis.Enum, value: number): globalThis.Enum.CompletionItemKind | undefined;
    }
    export type CompletionItemKind = CompletionItemKind.Text | CompletionItemKind.Method | CompletionItemKind.Function | CompletionItemKind.Constructor | CompletionItemKind.Field | CompletionItemKind.Variable | CompletionItemKind.Class | CompletionItemKind.Interface | CompletionItemKind.Module | CompletionItemKind.Property | CompletionItemKind.Unit | CompletionItemKind.Value | CompletionItemKind.Enum | CompletionItemKind.Keyword | CompletionItemKind.Snippet | CompletionItemKind.Color | CompletionItemKind.File | CompletionItemKind.Reference | CompletionItemKind.Folder | CompletionItemKind.EnumMember | CompletionItemKind.Constant | CompletionItemKind.Struct | CompletionItemKind.Event | CompletionItemKind.Operator | CompletionItemKind.TypeParameter;
    /**
     * Determines the tags for completion items in `ScriptEditorService:RegisterAutocompleteCallback()`.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/CompletionItemTag)
     */
    export namespace CompletionItemTag {
        /**
         * Indicates that the completion is deprecated, applying a penalty towards its score and crossing it out in the completion list.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/CompletionItemTag#Deprecated)
         */
        export interface Deprecated extends globalThis.EnumItem {
            Name: "Deprecated";
            Value: 1;
            EnumType: typeof globalThis.Enum.CompletionItemTag;
        }
        export const Deprecated: Deprecated;
        /**
         * Indicates that the completion is a member and being accessed with the wrong index type (e.g. using `:` to access a property), hiding it from the completion list.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/CompletionItemTag#IncorrectIndexType)
         */
        export interface IncorrectIndexType extends globalThis.EnumItem {
            Name: "IncorrectIndexType";
            Value: 2;
            EnumType: typeof globalThis.Enum.CompletionItemTag;
        }
        export const IncorrectIndexType: IncorrectIndexType;
        /**
         * Indicates that the completion requires Plugin security level to access, hiding it if the client lacks this level.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/CompletionItemTag#PluginPermissions)
         */
        export interface PluginPermissions extends globalThis.EnumItem {
            Name: "PluginPermissions";
            Value: 3;
            EnumType: typeof globalThis.Enum.CompletionItemTag;
        }
        export const PluginPermissions: PluginPermissions;
        /**
         * Indicates that the completion requires Command line security level to access, hiding it if the client lacks this level.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/CompletionItemTag#CommandLinePermissions)
         */
        export interface CommandLinePermissions extends globalThis.EnumItem {
            Name: "CommandLinePermissions";
            Value: 4;
            EnumType: typeof globalThis.Enum.CompletionItemTag;
        }
        export const CommandLinePermissions: CommandLinePermissions;
        /**
         * Indicates that the completion requires core script security level to access, hiding it if the client lacks this level.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/CompletionItemTag#RobloxPermissions)
         */
        export interface RobloxPermissions extends globalThis.EnumItem {
            Name: "RobloxPermissions";
            Value: 5;
            EnumType: typeof globalThis.Enum.CompletionItemTag;
        }
        export const RobloxPermissions: RobloxPermissions;
        /**
         * Instructs the editor to add parentheses before the cursor after inserting the given completion, if accepted.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/CompletionItemTag#AddParens)
         */
        export interface AddParens extends globalThis.EnumItem {
            Name: "AddParens";
            Value: 6;
            EnumType: typeof globalThis.Enum.CompletionItemTag;
        }
        export const AddParens: AddParens;
        /**
         * Instructs the editor to add parentheses before the cursor and move the cursor into the parentheses after inserting the given completion, if accepted.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/CompletionItemTag#PutCursorInParens)
         */
        export interface PutCursorInParens extends globalThis.EnumItem {
            Name: "PutCursorInParens";
            Value: 7;
            EnumType: typeof globalThis.Enum.CompletionItemTag;
        }
        export const PutCursorInParens: PutCursorInParens;
        /**
         * Indicates that the completion is type correct in the current context, granting a bonus to its score.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/CompletionItemTag#TypeCorrect)
         */
        export interface TypeCorrect extends globalThis.EnumItem {
            Name: "TypeCorrect";
            Value: 8;
            EnumType: typeof globalThis.Enum.CompletionItemTag;
        }
        export const TypeCorrect: TypeCorrect;
        /**
         * Indicates that the completion is being accessed from the wrong side of the client/server boundary (e.g. Players.LocalPlayer in a server script), hiding it from the completion list.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/CompletionItemTag#ClientServerBoundaryViolation)
         */
        export interface ClientServerBoundaryViolation extends globalThis.EnumItem {
            Name: "ClientServerBoundaryViolation";
            Value: 9;
            EnumType: typeof globalThis.Enum.CompletionItemTag;
        }
        export const ClientServerBoundaryViolation: ClientServerBoundaryViolation;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/CompletionItemTag#Invalidated)
         */
        export interface Invalidated extends globalThis.EnumItem {
            Name: "Invalidated";
            Value: 10;
            EnumType: typeof globalThis.Enum.CompletionItemTag;
        }
        export const Invalidated: Invalidated;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/CompletionItemTag#PutCursorBeforeEnd)
         */
        export interface PutCursorBeforeEnd extends globalThis.EnumItem {
            Name: "PutCursorBeforeEnd";
            Value: 11;
            EnumType: typeof globalThis.Enum.CompletionItemTag;
        }
        export const PutCursorBeforeEnd: PutCursorBeforeEnd;
        export function GetEnumItems(this: globalThis.Enum): Array<globalThis.Enum.CompletionItemTag>;
        export function FromName(this: globalThis.Enum, name: string): globalThis.Enum.CompletionItemTag | undefined;
        export function FromValue(this: globalThis.Enum, value: number): globalThis.Enum.CompletionItemTag | undefined;
    }
    export type CompletionItemTag = CompletionItemTag.Deprecated | CompletionItemTag.IncorrectIndexType | CompletionItemTag.PluginPermissions | CompletionItemTag.CommandLinePermissions | CompletionItemTag.RobloxPermissions | CompletionItemTag.AddParens | CompletionItemTag.PutCursorInParens | CompletionItemTag.TypeCorrect | CompletionItemTag.ClientServerBoundaryViolation | CompletionItemTag.Invalidated | CompletionItemTag.PutCursorBeforeEnd;
    /**
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/CompletionTriggerKind)
     */
    export namespace CompletionTriggerKind {
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/CompletionTriggerKind#Invoked)
         */
        export interface Invoked extends globalThis.EnumItem {
            Name: "Invoked";
            Value: 1;
            EnumType: typeof globalThis.Enum.CompletionTriggerKind;
        }
        export const Invoked: Invoked;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/CompletionTriggerKind#TriggerCharacter)
         */
        export interface TriggerCharacter extends globalThis.EnumItem {
            Name: "TriggerCharacter";
            Value: 2;
            EnumType: typeof globalThis.Enum.CompletionTriggerKind;
        }
        export const TriggerCharacter: TriggerCharacter;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/CompletionTriggerKind#TriggerForIncompleteCompletions)
         */
        export interface TriggerForIncompleteCompletions extends globalThis.EnumItem {
            Name: "TriggerForIncompleteCompletions";
            Value: 3;
            EnumType: typeof globalThis.Enum.CompletionTriggerKind;
        }
        export const TriggerForIncompleteCompletions: TriggerForIncompleteCompletions;
        export function GetEnumItems(this: globalThis.Enum): Array<globalThis.Enum.CompletionTriggerKind>;
        export function FromName(this: globalThis.Enum, name: string): globalThis.Enum.CompletionTriggerKind | undefined;
        export function FromValue(this: globalThis.Enum, value: number): globalThis.Enum.CompletionTriggerKind | undefined;
    }
    export type CompletionTriggerKind = CompletionTriggerKind.Invoked | CompletionTriggerKind.TriggerCharacter | CompletionTriggerKind.TriggerForIncompleteCompletions;
    /**
     * The camera movement mode currently in-use by the client.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/ComputerCameraMovementMode)
     */
    export namespace ComputerCameraMovementMode {
        /**
         * The default camera movement mode is classic.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/ComputerCameraMovementMode#Default)
         */
        export interface Default extends globalThis.EnumItem {
            Name: "Default";
            Value: 0;
            EnumType: typeof globalThis.Enum.ComputerCameraMovementMode;
        }
        export const Default: Default;
        /**
         * Camera tracks the player but will not automatically rotate if the player walks left or right.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/ComputerCameraMovementMode#Classic)
         */
        export interface Classic extends globalThis.EnumItem {
            Name: "Classic";
            Value: 1;
            EnumType: typeof globalThis.Enum.ComputerCameraMovementMode;
        }
        export const Classic: Classic;
        /**
         * Camera tracks the player and automatically rotates if the player walks left or right.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/ComputerCameraMovementMode#Follow)
         */
        export interface Follow extends globalThis.EnumItem {
            Name: "Follow";
            Value: 2;
            EnumType: typeof globalThis.Enum.ComputerCameraMovementMode;
        }
        export const Follow: Follow;
        /**
         * The camera has a fixed Y position, but can be rotated around the player.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/ComputerCameraMovementMode#Orbital)
         */
        export interface Orbital extends globalThis.EnumItem {
            Name: "Orbital";
            Value: 3;
            EnumType: typeof globalThis.Enum.ComputerCameraMovementMode;
        }
        export const Orbital: Orbital;
        /**
         * The camera toggles between locked and free rotation with the right mouse button.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/ComputerCameraMovementMode#CameraToggle)
         */
        export interface CameraToggle extends globalThis.EnumItem {
            Name: "CameraToggle";
            Value: 4;
            EnumType: typeof globalThis.Enum.ComputerCameraMovementMode;
        }
        export const CameraToggle: CameraToggle;
        export function GetEnumItems(this: globalThis.Enum): Array<globalThis.Enum.ComputerCameraMovementMode>;
        export function FromName(this: globalThis.Enum, name: string): globalThis.Enum.ComputerCameraMovementMode | undefined;
        export function FromValue(this: globalThis.Enum, value: number): globalThis.Enum.ComputerCameraMovementMode | undefined;
    }
    export type ComputerCameraMovementMode = ComputerCameraMovementMode.Default | ComputerCameraMovementMode.Classic | ComputerCameraMovementMode.Follow | ComputerCameraMovementMode.Orbital | ComputerCameraMovementMode.CameraToggle;
    /**
     * The computer movement type in-use by the client.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/ComputerMovementMode)
     */
    export namespace ComputerMovementMode {
        /**
         * The default is KeyboardMouse.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/ComputerMovementMode#Default)
         */
        export interface Default extends globalThis.EnumItem {
            Name: "Default";
            Value: 0;
            EnumType: typeof globalThis.Enum.ComputerMovementMode;
        }
        export const Default: Default;
        /**
         * The player's character is controlled using the keyboard and mouse.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/ComputerMovementMode#KeyboardMouse)
         */
        export interface KeyboardMouse extends globalThis.EnumItem {
            Name: "KeyboardMouse";
            Value: 1;
            EnumType: typeof globalThis.Enum.ComputerMovementMode;
        }
        export const KeyboardMouse: KeyboardMouse;
        /**
         * The player can right-click in the game world and their character will move there. In addition, the player can also control their character with their mouse and keyboard.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/ComputerMovementMode#ClickToMove)
         */
        export interface ClickToMove extends globalThis.EnumItem {
            Name: "ClickToMove";
            Value: 2;
            EnumType: typeof globalThis.Enum.ComputerMovementMode;
        }
        export const ClickToMove: ClickToMove;
        export function GetEnumItems(this: globalThis.Enum): Array<globalThis.Enum.ComputerMovementMode>;
        export function FromName(this: globalThis.Enum, name: string): globalThis.Enum.ComputerMovementMode | undefined;
        export function FromValue(this: globalThis.Enum, value: number): globalThis.Enum.ComputerMovementMode | undefined;
    }
    export type ComputerMovementMode = ComputerMovementMode.Default | ComputerMovementMode.KeyboardMouse | ComputerMovementMode.ClickToMove;
    /**
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/ConnectionError)
     */
    export namespace ConnectionError {
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/ConnectionError#OK)
         */
        export interface OK extends globalThis.EnumItem {
            Name: "OK";
            Value: 0;
            EnumType: typeof globalThis.Enum.ConnectionError;
        }
        export const OK: OK;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/ConnectionError#Unknown)
         */
        export interface Unknown extends globalThis.EnumItem {
            Name: "Unknown";
            Value: 1;
            EnumType: typeof globalThis.Enum.ConnectionError;
        }
        export const Unknown: Unknown;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/ConnectionError#DisconnectErrors)
         */
        export interface DisconnectErrors extends globalThis.EnumItem {
            Name: "DisconnectErrors";
            Value: 256;
            EnumType: typeof globalThis.Enum.ConnectionError;
        }
        export const DisconnectErrors: DisconnectErrors;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/ConnectionError#DisconnectBadhash)
         */
        export interface DisconnectBadhash extends globalThis.EnumItem {
            Name: "DisconnectBadhash";
            Value: 257;
            EnumType: typeof globalThis.Enum.ConnectionError;
        }
        export const DisconnectBadhash: DisconnectBadhash;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/ConnectionError#DisconnectSecurityKeyMismatch)
         */
        export interface DisconnectSecurityKeyMismatch extends globalThis.EnumItem {
            Name: "DisconnectSecurityKeyMismatch";
            Value: 258;
            EnumType: typeof globalThis.Enum.ConnectionError;
        }
        export const DisconnectSecurityKeyMismatch: DisconnectSecurityKeyMismatch;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/ConnectionError#DisconnectProtocolMismatch)
         */
        export interface DisconnectProtocolMismatch extends globalThis.EnumItem {
            Name: "DisconnectProtocolMismatch";
            Value: 259;
            EnumType: typeof globalThis.Enum.ConnectionError;
        }
        export const DisconnectProtocolMismatch: DisconnectProtocolMismatch;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/ConnectionError#DisconnectReceivePacketError)
         */
        export interface DisconnectReceivePacketError extends globalThis.EnumItem {
            Name: "DisconnectReceivePacketError";
            Value: 260;
            EnumType: typeof globalThis.Enum.ConnectionError;
        }
        export const DisconnectReceivePacketError: DisconnectReceivePacketError;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/ConnectionError#DisconnectReceivePacketStreamError)
         */
        export interface DisconnectReceivePacketStreamError extends globalThis.EnumItem {
            Name: "DisconnectReceivePacketStreamError";
            Value: 261;
            EnumType: typeof globalThis.Enum.ConnectionError;
        }
        export const DisconnectReceivePacketStreamError: DisconnectReceivePacketStreamError;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/ConnectionError#DisconnectSendPacketError)
         */
        export interface DisconnectSendPacketError extends globalThis.EnumItem {
            Name: "DisconnectSendPacketError";
            Value: 262;
            EnumType: typeof globalThis.Enum.ConnectionError;
        }
        export const DisconnectSendPacketError: DisconnectSendPacketError;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/ConnectionError#DisconnectIllegalTeleport)
         */
        export interface DisconnectIllegalTeleport extends globalThis.EnumItem {
            Name: "DisconnectIllegalTeleport";
            Value: 263;
            EnumType: typeof globalThis.Enum.ConnectionError;
        }
        export const DisconnectIllegalTeleport: DisconnectIllegalTeleport;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/ConnectionError#DisconnectDuplicatePlayer)
         */
        export interface DisconnectDuplicatePlayer extends globalThis.EnumItem {
            Name: "DisconnectDuplicatePlayer";
            Value: 264;
            EnumType: typeof globalThis.Enum.ConnectionError;
        }
        export const DisconnectDuplicatePlayer: DisconnectDuplicatePlayer;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/ConnectionError#DisconnectDuplicateTicket)
         */
        export interface DisconnectDuplicateTicket extends globalThis.EnumItem {
            Name: "DisconnectDuplicateTicket";
            Value: 265;
            EnumType: typeof globalThis.Enum.ConnectionError;
        }
        export const DisconnectDuplicateTicket: DisconnectDuplicateTicket;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/ConnectionError#DisconnectTimeout)
         */
        export interface DisconnectTimeout extends globalThis.EnumItem {
            Name: "DisconnectTimeout";
            Value: 266;
            EnumType: typeof globalThis.Enum.ConnectionError;
        }
        export const DisconnectTimeout: DisconnectTimeout;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/ConnectionError#DisconnectLuaKick)
         */
        export interface DisconnectLuaKick extends globalThis.EnumItem {
            Name: "DisconnectLuaKick";
            Value: 267;
            EnumType: typeof globalThis.Enum.ConnectionError;
        }
        export const DisconnectLuaKick: DisconnectLuaKick;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/ConnectionError#DisconnectOnRemoteSysStats)
         */
        export interface DisconnectOnRemoteSysStats extends globalThis.EnumItem {
            Name: "DisconnectOnRemoteSysStats";
            Value: 268;
            EnumType: typeof globalThis.Enum.ConnectionError;
        }
        export const DisconnectOnRemoteSysStats: DisconnectOnRemoteSysStats;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/ConnectionError#DisconnectHashTimeout)
         */
        export interface DisconnectHashTimeout extends globalThis.EnumItem {
            Name: "DisconnectHashTimeout";
            Value: 269;
            EnumType: typeof globalThis.Enum.ConnectionError;
        }
        export const DisconnectHashTimeout: DisconnectHashTimeout;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/ConnectionError#DisconnectCloudEditKick)
         */
        export interface DisconnectCloudEditKick extends globalThis.EnumItem {
            Name: "DisconnectCloudEditKick";
            Value: 270;
            EnumType: typeof globalThis.Enum.ConnectionError;
        }
        export const DisconnectCloudEditKick: DisconnectCloudEditKick;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/ConnectionError#DisconnectPlayerless)
         */
        export interface DisconnectPlayerless extends globalThis.EnumItem {
            Name: "DisconnectPlayerless";
            Value: 271;
            EnumType: typeof globalThis.Enum.ConnectionError;
        }
        export const DisconnectPlayerless: DisconnectPlayerless;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/ConnectionError#DisconnectNewSecurityKeyMismatch)
         */
        export interface DisconnectNewSecurityKeyMismatch extends globalThis.EnumItem {
            Name: "DisconnectNewSecurityKeyMismatch";
            Value: 272;
            EnumType: typeof globalThis.Enum.ConnectionError;
        }
        export const DisconnectNewSecurityKeyMismatch: DisconnectNewSecurityKeyMismatch;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/ConnectionError#DisconnectEvicted)
         */
        export interface DisconnectEvicted extends globalThis.EnumItem {
            Name: "DisconnectEvicted";
            Value: 273;
            EnumType: typeof globalThis.Enum.ConnectionError;
        }
        export const DisconnectEvicted: DisconnectEvicted;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/ConnectionError#DisconnectDevMaintenance)
         */
        export interface DisconnectDevMaintenance extends globalThis.EnumItem {
            Name: "DisconnectDevMaintenance";
            Value: 274;
            EnumType: typeof globalThis.Enum.ConnectionError;
        }
        export const DisconnectDevMaintenance: DisconnectDevMaintenance;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/ConnectionError#DisconnectRobloxMaintenance)
         */
        export interface DisconnectRobloxMaintenance extends globalThis.EnumItem {
            Name: "DisconnectRobloxMaintenance";
            Value: 275;
            EnumType: typeof globalThis.Enum.ConnectionError;
        }
        export const DisconnectRobloxMaintenance: DisconnectRobloxMaintenance;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/ConnectionError#DisconnectRejoin)
         */
        export interface DisconnectRejoin extends globalThis.EnumItem {
            Name: "DisconnectRejoin";
            Value: 276;
            EnumType: typeof globalThis.Enum.ConnectionError;
        }
        export const DisconnectRejoin: DisconnectRejoin;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/ConnectionError#DisconnectConnectionLost)
         */
        export interface DisconnectConnectionLost extends globalThis.EnumItem {
            Name: "DisconnectConnectionLost";
            Value: 277;
            EnumType: typeof globalThis.Enum.ConnectionError;
        }
        export const DisconnectConnectionLost: DisconnectConnectionLost;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/ConnectionError#DisconnectIdle)
         */
        export interface DisconnectIdle extends globalThis.EnumItem {
            Name: "DisconnectIdle";
            Value: 278;
            EnumType: typeof globalThis.Enum.ConnectionError;
        }
        export const DisconnectIdle: DisconnectIdle;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/ConnectionError#DisconnectRaknetErrors)
         */
        export interface DisconnectRaknetErrors extends globalThis.EnumItem {
            Name: "DisconnectRaknetErrors";
            Value: 279;
            EnumType: typeof globalThis.Enum.ConnectionError;
        }
        export const DisconnectRaknetErrors: DisconnectRaknetErrors;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/ConnectionError#DisconnectWrongVersion)
         */
        export interface DisconnectWrongVersion extends globalThis.EnumItem {
            Name: "DisconnectWrongVersion";
            Value: 280;
            EnumType: typeof globalThis.Enum.ConnectionError;
        }
        export const DisconnectWrongVersion: DisconnectWrongVersion;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/ConnectionError#DisconnectBySecurityPolicy)
         */
        export interface DisconnectBySecurityPolicy extends globalThis.EnumItem {
            Name: "DisconnectBySecurityPolicy";
            Value: 281;
            EnumType: typeof globalThis.Enum.ConnectionError;
        }
        export const DisconnectBySecurityPolicy: DisconnectBySecurityPolicy;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/ConnectionError#DisconnectBlockedIP)
         */
        export interface DisconnectBlockedIP extends globalThis.EnumItem {
            Name: "DisconnectBlockedIP";
            Value: 282;
            EnumType: typeof globalThis.Enum.ConnectionError;
        }
        export const DisconnectBlockedIP: DisconnectBlockedIP;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/ConnectionError#DisconnectClientFailure)
         */
        export interface DisconnectClientFailure extends globalThis.EnumItem {
            Name: "DisconnectClientFailure";
            Value: 284;
            EnumType: typeof globalThis.Enum.ConnectionError;
        }
        export const DisconnectClientFailure: DisconnectClientFailure;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/ConnectionError#DisconnectClientRequest)
         */
        export interface DisconnectClientRequest extends globalThis.EnumItem {
            Name: "DisconnectClientRequest";
            Value: 285;
            EnumType: typeof globalThis.Enum.ConnectionError;
        }
        export const DisconnectClientRequest: DisconnectClientRequest;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/ConnectionError#DisconnectPrivateServerKickout)
         */
        export interface DisconnectPrivateServerKickout extends globalThis.EnumItem {
            Name: "DisconnectPrivateServerKickout";
            Value: 286;
            EnumType: typeof globalThis.Enum.ConnectionError;
        }
        export const DisconnectPrivateServerKickout: DisconnectPrivateServerKickout;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/ConnectionError#DisconnectModeratedGame)
         */
        export interface DisconnectModeratedGame extends globalThis.EnumItem {
            Name: "DisconnectModeratedGame";
            Value: 287;
            EnumType: typeof globalThis.Enum.ConnectionError;
        }
        export const DisconnectModeratedGame: DisconnectModeratedGame;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/ConnectionError#ServerShutdown)
         */
        export interface ServerShutdown extends globalThis.EnumItem {
            Name: "ServerShutdown";
            Value: 288;
            EnumType: typeof globalThis.Enum.ConnectionError;
        }
        export const ServerShutdown: ServerShutdown;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/ConnectionError#ReplicatorTimeout)
         */
        export interface ReplicatorTimeout extends globalThis.EnumItem {
            Name: "ReplicatorTimeout";
            Value: 290;
            EnumType: typeof globalThis.Enum.ConnectionError;
        }
        export const ReplicatorTimeout: ReplicatorTimeout;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/ConnectionError#PlayerRemoved)
         */
        export interface PlayerRemoved extends globalThis.EnumItem {
            Name: "PlayerRemoved";
            Value: 291;
            EnumType: typeof globalThis.Enum.ConnectionError;
        }
        export const PlayerRemoved: PlayerRemoved;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/ConnectionError#DisconnectOutOfMemoryKeepPlayingLeave)
         */
        export interface DisconnectOutOfMemoryKeepPlayingLeave extends globalThis.EnumItem {
            Name: "DisconnectOutOfMemoryKeepPlayingLeave";
            Value: 292;
            EnumType: typeof globalThis.Enum.ConnectionError;
        }
        export const DisconnectOutOfMemoryKeepPlayingLeave: DisconnectOutOfMemoryKeepPlayingLeave;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/ConnectionError#DisconnectRomarkEndOfTest)
         */
        export interface DisconnectRomarkEndOfTest extends globalThis.EnumItem {
            Name: "DisconnectRomarkEndOfTest";
            Value: 293;
            EnumType: typeof globalThis.Enum.ConnectionError;
        }
        export const DisconnectRomarkEndOfTest: DisconnectRomarkEndOfTest;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/ConnectionError#DisconnectCollaboratorPermissionRevoked)
         */
        export interface DisconnectCollaboratorPermissionRevoked extends globalThis.EnumItem {
            Name: "DisconnectCollaboratorPermissionRevoked";
            Value: 294;
            EnumType: typeof globalThis.Enum.ConnectionError;
        }
        export const DisconnectCollaboratorPermissionRevoked: DisconnectCollaboratorPermissionRevoked;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/ConnectionError#DisconnectCollaboratorUnderage)
         */
        export interface DisconnectCollaboratorUnderage extends globalThis.EnumItem {
            Name: "DisconnectCollaboratorUnderage";
            Value: 295;
            EnumType: typeof globalThis.Enum.ConnectionError;
        }
        export const DisconnectCollaboratorUnderage: DisconnectCollaboratorUnderage;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/ConnectionError#NetworkInternal)
         */
        export interface NetworkInternal extends globalThis.EnumItem {
            Name: "NetworkInternal";
            Value: 296;
            EnumType: typeof globalThis.Enum.ConnectionError;
        }
        export const NetworkInternal: NetworkInternal;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/ConnectionError#NetworkSend)
         */
        export interface NetworkSend extends globalThis.EnumItem {
            Name: "NetworkSend";
            Value: 297;
            EnumType: typeof globalThis.Enum.ConnectionError;
        }
        export const NetworkSend: NetworkSend;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/ConnectionError#NetworkTimeout)
         */
        export interface NetworkTimeout extends globalThis.EnumItem {
            Name: "NetworkTimeout";
            Value: 298;
            EnumType: typeof globalThis.Enum.ConnectionError;
        }
        export const NetworkTimeout: NetworkTimeout;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/ConnectionError#NetworkMisbehavior)
         */
        export interface NetworkMisbehavior extends globalThis.EnumItem {
            Name: "NetworkMisbehavior";
            Value: 299;
            EnumType: typeof globalThis.Enum.ConnectionError;
        }
        export const NetworkMisbehavior: NetworkMisbehavior;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/ConnectionError#NetworkSecurity)
         */
        export interface NetworkSecurity extends globalThis.EnumItem {
            Name: "NetworkSecurity";
            Value: 300;
            EnumType: typeof globalThis.Enum.ConnectionError;
        }
        export const NetworkSecurity: NetworkSecurity;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/ConnectionError#ReplacementReady)
         */
        export interface ReplacementReady extends globalThis.EnumItem {
            Name: "ReplacementReady";
            Value: 301;
            EnumType: typeof globalThis.Enum.ConnectionError;
        }
        export const ReplacementReady: ReplacementReady;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/ConnectionError#ServerEmpty)
         */
        export interface ServerEmpty extends globalThis.EnumItem {
            Name: "ServerEmpty";
            Value: 302;
            EnumType: typeof globalThis.Enum.ConnectionError;
        }
        export const ServerEmpty: ServerEmpty;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/ConnectionError#PlacelaunchErrors)
         */
        export interface PlacelaunchErrors extends globalThis.EnumItem {
            Name: "PlacelaunchErrors";
            Value: 512;
            EnumType: typeof globalThis.Enum.ConnectionError;
        }
        export const PlacelaunchErrors: PlacelaunchErrors;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/ConnectionError#PlacelaunchDisabled)
         */
        export interface PlacelaunchDisabled extends globalThis.EnumItem {
            Name: "PlacelaunchDisabled";
            Value: 515;
            EnumType: typeof globalThis.Enum.ConnectionError;
        }
        export const PlacelaunchDisabled: PlacelaunchDisabled;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/ConnectionError#PlacelaunchError)
         */
        export interface PlacelaunchError extends globalThis.EnumItem {
            Name: "PlacelaunchError";
            Value: 516;
            EnumType: typeof globalThis.Enum.ConnectionError;
        }
        export const PlacelaunchError: PlacelaunchError;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/ConnectionError#PlacelaunchGameEnded)
         */
        export interface PlacelaunchGameEnded extends globalThis.EnumItem {
            Name: "PlacelaunchGameEnded";
            Value: 517;
            EnumType: typeof globalThis.Enum.ConnectionError;
        }
        export const PlacelaunchGameEnded: PlacelaunchGameEnded;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/ConnectionError#PlacelaunchGameFull)
         */
        export interface PlacelaunchGameFull extends globalThis.EnumItem {
            Name: "PlacelaunchGameFull";
            Value: 518;
            EnumType: typeof globalThis.Enum.ConnectionError;
        }
        export const PlacelaunchGameFull: PlacelaunchGameFull;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/ConnectionError#PlacelaunchUserLeft)
         */
        export interface PlacelaunchUserLeft extends globalThis.EnumItem {
            Name: "PlacelaunchUserLeft";
            Value: 522;
            EnumType: typeof globalThis.Enum.ConnectionError;
        }
        export const PlacelaunchUserLeft: PlacelaunchUserLeft;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/ConnectionError#PlacelaunchRestricted)
         */
        export interface PlacelaunchRestricted extends globalThis.EnumItem {
            Name: "PlacelaunchRestricted";
            Value: 523;
            EnumType: typeof globalThis.Enum.ConnectionError;
        }
        export const PlacelaunchRestricted: PlacelaunchRestricted;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/ConnectionError#PlacelaunchUnauthorized)
         */
        export interface PlacelaunchUnauthorized extends globalThis.EnumItem {
            Name: "PlacelaunchUnauthorized";
            Value: 524;
            EnumType: typeof globalThis.Enum.ConnectionError;
        }
        export const PlacelaunchUnauthorized: PlacelaunchUnauthorized;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/ConnectionError#PlacelaunchFlooded)
         */
        export interface PlacelaunchFlooded extends globalThis.EnumItem {
            Name: "PlacelaunchFlooded";
            Value: 525;
            EnumType: typeof globalThis.Enum.ConnectionError;
        }
        export const PlacelaunchFlooded: PlacelaunchFlooded;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/ConnectionError#PlacelaunchHashExpired)
         */
        export interface PlacelaunchHashExpired extends globalThis.EnumItem {
            Name: "PlacelaunchHashExpired";
            Value: 526;
            EnumType: typeof globalThis.Enum.ConnectionError;
        }
        export const PlacelaunchHashExpired: PlacelaunchHashExpired;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/ConnectionError#PlacelaunchHashException)
         */
        export interface PlacelaunchHashException extends globalThis.EnumItem {
            Name: "PlacelaunchHashException";
            Value: 527;
            EnumType: typeof globalThis.Enum.ConnectionError;
        }
        export const PlacelaunchHashException: PlacelaunchHashException;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/ConnectionError#PlacelaunchPartyCannotFit)
         */
        export interface PlacelaunchPartyCannotFit extends globalThis.EnumItem {
            Name: "PlacelaunchPartyCannotFit";
            Value: 528;
            EnumType: typeof globalThis.Enum.ConnectionError;
        }
        export const PlacelaunchPartyCannotFit: PlacelaunchPartyCannotFit;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/ConnectionError#PlacelaunchHttpError)
         */
        export interface PlacelaunchHttpError extends globalThis.EnumItem {
            Name: "PlacelaunchHttpError";
            Value: 529;
            EnumType: typeof globalThis.Enum.ConnectionError;
        }
        export const PlacelaunchHttpError: PlacelaunchHttpError;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/ConnectionError#PlacelaunchUserPrivacyUnauthorized)
         */
        export interface PlacelaunchUserPrivacyUnauthorized extends globalThis.EnumItem {
            Name: "PlacelaunchUserPrivacyUnauthorized";
            Value: 533;
            EnumType: typeof globalThis.Enum.ConnectionError;
        }
        export const PlacelaunchUserPrivacyUnauthorized: PlacelaunchUserPrivacyUnauthorized;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/ConnectionError#PlacelaunchCreatorBan)
         */
        export interface PlacelaunchCreatorBan extends globalThis.EnumItem {
            Name: "PlacelaunchCreatorBan";
            Value: 600;
            EnumType: typeof globalThis.Enum.ConnectionError;
        }
        export const PlacelaunchCreatorBan: PlacelaunchCreatorBan;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/ConnectionError#PlacelaunchCustomMessage)
         */
        export interface PlacelaunchCustomMessage extends globalThis.EnumItem {
            Name: "PlacelaunchCustomMessage";
            Value: 610;
            EnumType: typeof globalThis.Enum.ConnectionError;
        }
        export const PlacelaunchCustomMessage: PlacelaunchCustomMessage;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/ConnectionError#PlacelaunchOtherError)
         */
        export interface PlacelaunchOtherError extends globalThis.EnumItem {
            Name: "PlacelaunchOtherError";
            Value: 611;
            EnumType: typeof globalThis.Enum.ConnectionError;
        }
        export const PlacelaunchOtherError: PlacelaunchOtherError;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/ConnectionError#TeleportErrors)
         */
        export interface TeleportErrors extends globalThis.EnumItem {
            Name: "TeleportErrors";
            Value: 768;
            EnumType: typeof globalThis.Enum.ConnectionError;
        }
        export const TeleportErrors: TeleportErrors;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/ConnectionError#TeleportFailure)
         */
        export interface TeleportFailure extends globalThis.EnumItem {
            Name: "TeleportFailure";
            Value: 769;
            EnumType: typeof globalThis.Enum.ConnectionError;
        }
        export const TeleportFailure: TeleportFailure;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/ConnectionError#TeleportGameNotFound)
         */
        export interface TeleportGameNotFound extends globalThis.EnumItem {
            Name: "TeleportGameNotFound";
            Value: 770;
            EnumType: typeof globalThis.Enum.ConnectionError;
        }
        export const TeleportGameNotFound: TeleportGameNotFound;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/ConnectionError#TeleportGameEnded)
         */
        export interface TeleportGameEnded extends globalThis.EnumItem {
            Name: "TeleportGameEnded";
            Value: 771;
            EnumType: typeof globalThis.Enum.ConnectionError;
        }
        export const TeleportGameEnded: TeleportGameEnded;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/ConnectionError#TeleportGameFull)
         */
        export interface TeleportGameFull extends globalThis.EnumItem {
            Name: "TeleportGameFull";
            Value: 772;
            EnumType: typeof globalThis.Enum.ConnectionError;
        }
        export const TeleportGameFull: TeleportGameFull;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/ConnectionError#TeleportUnauthorized)
         */
        export interface TeleportUnauthorized extends globalThis.EnumItem {
            Name: "TeleportUnauthorized";
            Value: 773;
            EnumType: typeof globalThis.Enum.ConnectionError;
        }
        export const TeleportUnauthorized: TeleportUnauthorized;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/ConnectionError#TeleportFlooded)
         */
        export interface TeleportFlooded extends globalThis.EnumItem {
            Name: "TeleportFlooded";
            Value: 774;
            EnumType: typeof globalThis.Enum.ConnectionError;
        }
        export const TeleportFlooded: TeleportFlooded;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/ConnectionError#TeleportIsTeleporting)
         */
        export interface TeleportIsTeleporting extends globalThis.EnumItem {
            Name: "TeleportIsTeleporting";
            Value: 775;
            EnumType: typeof globalThis.Enum.ConnectionError;
        }
        export const TeleportIsTeleporting: TeleportIsTeleporting;
        export function GetEnumItems(this: globalThis.Enum): Array<globalThis.Enum.ConnectionError>;
        export function FromName(this: globalThis.Enum, name: string): globalThis.Enum.ConnectionError | undefined;
        export function FromValue(this: globalThis.Enum, value: number): globalThis.Enum.ConnectionError | undefined;
    }
    export type ConnectionError = ConnectionError.OK | ConnectionError.Unknown | ConnectionError.DisconnectErrors | ConnectionError.DisconnectBadhash | ConnectionError.DisconnectSecurityKeyMismatch | ConnectionError.DisconnectProtocolMismatch | ConnectionError.DisconnectReceivePacketError | ConnectionError.DisconnectReceivePacketStreamError | ConnectionError.DisconnectSendPacketError | ConnectionError.DisconnectIllegalTeleport | ConnectionError.DisconnectDuplicatePlayer | ConnectionError.DisconnectDuplicateTicket | ConnectionError.DisconnectTimeout | ConnectionError.DisconnectLuaKick | ConnectionError.DisconnectOnRemoteSysStats | ConnectionError.DisconnectHashTimeout | ConnectionError.DisconnectCloudEditKick | ConnectionError.DisconnectPlayerless | ConnectionError.DisconnectNewSecurityKeyMismatch | ConnectionError.DisconnectEvicted | ConnectionError.DisconnectDevMaintenance | ConnectionError.DisconnectRobloxMaintenance | ConnectionError.DisconnectRejoin | ConnectionError.DisconnectConnectionLost | ConnectionError.DisconnectIdle | ConnectionError.DisconnectRaknetErrors | ConnectionError.DisconnectWrongVersion | ConnectionError.DisconnectBySecurityPolicy | ConnectionError.DisconnectBlockedIP | ConnectionError.DisconnectClientFailure | ConnectionError.DisconnectClientRequest | ConnectionError.DisconnectPrivateServerKickout | ConnectionError.DisconnectModeratedGame | ConnectionError.ServerShutdown | ConnectionError.ReplicatorTimeout | ConnectionError.PlayerRemoved | ConnectionError.DisconnectOutOfMemoryKeepPlayingLeave | ConnectionError.DisconnectRomarkEndOfTest | ConnectionError.DisconnectCollaboratorPermissionRevoked | ConnectionError.DisconnectCollaboratorUnderage | ConnectionError.NetworkInternal | ConnectionError.NetworkSend | ConnectionError.NetworkTimeout | ConnectionError.NetworkMisbehavior | ConnectionError.NetworkSecurity | ConnectionError.ReplacementReady | ConnectionError.ServerEmpty | ConnectionError.PlacelaunchErrors | ConnectionError.PlacelaunchDisabled | ConnectionError.PlacelaunchError | ConnectionError.PlacelaunchGameEnded | ConnectionError.PlacelaunchGameFull | ConnectionError.PlacelaunchUserLeft | ConnectionError.PlacelaunchRestricted | ConnectionError.PlacelaunchUnauthorized | ConnectionError.PlacelaunchFlooded | ConnectionError.PlacelaunchHashExpired | ConnectionError.PlacelaunchHashException | ConnectionError.PlacelaunchPartyCannotFit | ConnectionError.PlacelaunchHttpError | ConnectionError.PlacelaunchUserPrivacyUnauthorized | ConnectionError.PlacelaunchCreatorBan | ConnectionError.PlacelaunchCustomMessage | ConnectionError.PlacelaunchOtherError | ConnectionError.TeleportErrors | ConnectionError.TeleportFailure | ConnectionError.TeleportGameNotFound | ConnectionError.TeleportGameEnded | ConnectionError.TeleportGameFull | ConnectionError.TeleportUnauthorized | ConnectionError.TeleportFlooded | ConnectionError.TeleportIsTeleporting;
    /**
     * Used to determine the connection state of the client to the game server.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/ConnectionState)
     */
    export namespace ConnectionState {
        /**
         * The client is connected.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/ConnectionState#Connected)
         */
        export interface Connected extends globalThis.EnumItem {
            Name: "Connected";
            Value: 0;
            EnumType: typeof globalThis.Enum.ConnectionState;
        }
        export const Connected: Connected;
        /**
         * The client is disconnected.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/ConnectionState#Disconnected)
         */
        export interface Disconnected extends globalThis.EnumItem {
            Name: "Disconnected";
            Value: 1;
            EnumType: typeof globalThis.Enum.ConnectionState;
        }
        export const Disconnected: Disconnected;
        export function GetEnumItems(this: globalThis.Enum): Array<globalThis.Enum.ConnectionState>;
        export function FromName(this: globalThis.Enum, name: string): globalThis.Enum.ConnectionState | undefined;
        export function FromValue(this: globalThis.Enum, value: number): globalThis.Enum.ConnectionState | undefined;
    }
    export type ConnectionState = ConnectionState.Connected | ConnectionState.Disconnected;
    /**
     * The source type of a `Content` value.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/ContentSourceType)
     */
    export namespace ContentSourceType {
        /**
         * Empty value with no source type. Does not reference any content or hold any non‑`nil` value.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/ContentSourceType#None)
         */
        export interface None extends globalThis.EnumItem {
            Name: "None";
            Value: 0;
            EnumType: typeof globalThis.Enum.ContentSourceType;
        }
        export const None: None;
        /**
         * An [asset URI](../../../projects/assets/index.md#asset-uris) `string` value contained in `Content.Uri`.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/ContentSourceType#Uri)
         */
        export interface Uri extends globalThis.EnumItem {
            Name: "Uri";
            Value: 1;
            EnumType: typeof globalThis.Enum.ContentSourceType;
        }
        export const Uri: Uri;
        /**
         * A non-`nil` `Object` reference contained in `Content.Object`.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/ContentSourceType#Object)
         */
        export interface Object extends globalThis.EnumItem {
            Name: "Object";
            Value: 2;
            EnumType: typeof globalThis.Enum.ContentSourceType;
        }
        export const Object: Object;
        export function GetEnumItems(this: globalThis.Enum): Array<globalThis.Enum.ContentSourceType>;
        export function FromName(this: globalThis.Enum, name: string): globalThis.Enum.ContentSourceType | undefined;
        export function FromValue(this: globalThis.Enum, value: number): globalThis.Enum.ContentSourceType | undefined;
    }
    export type ContentSourceType = ContentSourceType.None | ContentSourceType.Uri | ContentSourceType.Object;
    /**
     * Describes the priority of a context action.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/ContextActionPriority)
     */
    export namespace ContextActionPriority {
        /**
         * Low priority.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/ContextActionPriority#Low)
         */
        export interface Low extends globalThis.EnumItem {
            Name: "Low";
            Value: 1000;
            EnumType: typeof globalThis.Enum.ContextActionPriority;
        }
        export const Low: Low;
        /**
         * Medium priority.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/ContextActionPriority#Medium)
         */
        export interface Medium extends globalThis.EnumItem {
            Name: "Medium";
            Value: 2000;
            EnumType: typeof globalThis.Enum.ContextActionPriority;
        }
        export const Medium: Medium;
        /**
         * @deprecated renamed to Medium
         */
        export const Default: Medium;
        /**
         * High priority.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/ContextActionPriority#High)
         */
        export interface High extends globalThis.EnumItem {
            Name: "High";
            Value: 3000;
            EnumType: typeof globalThis.Enum.ContextActionPriority;
        }
        export const High: High;
        export function GetEnumItems(this: globalThis.Enum): Array<globalThis.Enum.ContextActionPriority>;
        export function FromName(this: globalThis.Enum, name: string): globalThis.Enum.ContextActionPriority | undefined;
        export function FromValue(this: globalThis.Enum, value: number): globalThis.Enum.ContextActionPriority | undefined;
    }
    export type ContextActionPriority = ContextActionPriority.Low | ContextActionPriority.Medium | ContextActionPriority.High;
    /**
     * Describes whether a ContextAction should sink or pass input events.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/ContextActionResult)
     */
    export namespace ContextActionResult {
        /**
         * If *functionToBind* from `ContextActionService:BindAction()` returns Enum.ContextActionResult.Sink, the input event will stop at that function and no other bound actions under it will be processed. This is the default behavior if *functionToBind* does not return anything or yields in any way.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/ContextActionResult#Sink)
         */
        export interface Sink extends globalThis.EnumItem {
            Name: "Sink";
            Value: 0;
            EnumType: typeof globalThis.Enum.ContextActionResult;
        }
        export const Sink: Sink;
        /**
         * If *functionToBind* from `ContextActionService:BindAction()` returns Enum.ContextActionResult.Pass, the input event is considered to have not been handled by *functionToBind* and will continue being passed to actions bound to the same input type.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/ContextActionResult#Pass)
         */
        export interface Pass extends globalThis.EnumItem {
            Name: "Pass";
            Value: 1;
            EnumType: typeof globalThis.Enum.ContextActionResult;
        }
        export const Pass: Pass;
        export function GetEnumItems(this: globalThis.Enum): Array<globalThis.Enum.ContextActionResult>;
        export function FromName(this: globalThis.Enum, name: string): globalThis.Enum.ContextActionResult | undefined;
        export function FromValue(this: globalThis.Enum, value: number): globalThis.Enum.ContextActionResult | undefined;
    }
    export type ContextActionResult = ContextActionResult.Sink | ContextActionResult.Pass;
    /**
     * The ControlMode Enum sets how the player is controlled.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/ControlMode)
     */
    export namespace ControlMode {
        /**
         * Allows the camera to be moved by clicking and dragging with the right mouse button.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/ControlMode#Classic)
         */
        export interface Classic extends globalThis.EnumItem {
            Name: "Classic";
            Value: 0;
            EnumType: typeof globalThis.Enum.ControlMode;
        }
        export const Classic: Classic;
        /**
         * Similar to classic, but allows the player to toggle mouse locking, causing the camera to rotate as the player moves the mouse (without holding down a button).
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/ControlMode#MouseLockSwitch)
         */
        export interface MouseLockSwitch extends globalThis.EnumItem {
            Name: "MouseLockSwitch";
            Value: 1;
            EnumType: typeof globalThis.Enum.ControlMode;
        }
        export const MouseLockSwitch: MouseLockSwitch;
        export function GetEnumItems(this: globalThis.Enum): Array<globalThis.Enum.ControlMode>;
        export function FromName(this: globalThis.Enum, name: string): globalThis.Enum.ControlMode | undefined;
        export function FromValue(this: globalThis.Enum, value: number): globalThis.Enum.ControlMode | undefined;
    }
    export type ControlMode = ControlMode.Classic | ControlMode.MouseLockSwitch;
    /**
     * Represents all available `CoreGui` "types" such as the `Backpack` and text chat window.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/CoreGuiType)
     */
    export namespace CoreGuiType {
        /**
         * Dynamically updated `Players` list, commonly used as a [leaderboard](../../../players/leaderboards.md).
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/CoreGuiType#PlayerList)
         */
        export interface PlayerList extends globalThis.EnumItem {
            Name: "PlayerList";
            Value: 0;
            EnumType: typeof globalThis.Enum.CoreGuiType;
        }
        export const PlayerList: PlayerList;
        /**
         * The character's `Health` bar.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/CoreGuiType#Health)
         */
        export interface Health extends globalThis.EnumItem {
            Name: "Health";
            Value: 1;
            EnumType: typeof globalThis.Enum.CoreGuiType;
        }
        export const Health: Health;
        /**
         * The character's `Backpack` which contains [in‑experience tools](../../../players/tools.md).
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/CoreGuiType#Backpack)
         */
        export interface Backpack extends globalThis.EnumItem {
            Name: "Backpack";
            Value: 2;
            EnumType: typeof globalThis.Enum.CoreGuiType;
        }
        export const Backpack: Backpack;
        /**
         * The [text chat](../../../chat/in-experience-text-chat.md) window.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/CoreGuiType#Chat)
         */
        export interface Chat extends globalThis.EnumItem {
            Name: "Chat";
            Value: 3;
            EnumType: typeof globalThis.Enum.CoreGuiType;
        }
        export const Chat: Chat;
        /**
         * Refers to all available core UI.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/CoreGuiType#All)
         */
        export interface All extends globalThis.EnumItem {
            Name: "All";
            Value: 4;
            EnumType: typeof globalThis.Enum.CoreGuiType;
        }
        export const All: All;
        /**
         * Popup menu of character [emotes](../../../characters/emotes.md).
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/CoreGuiType#EmotesMenu)
         */
        export interface EmotesMenu extends globalThis.EnumItem {
            Name: "EmotesMenu";
            Value: 5;
            EnumType: typeof globalThis.Enum.CoreGuiType;
        }
        export const EmotesMenu: EmotesMenu;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/CoreGuiType#SelfView)
         */
        export interface SelfView extends globalThis.EnumItem {
            Name: "SelfView";
            Value: 6;
            EnumType: typeof globalThis.Enum.CoreGuiType;
        }
        export const SelfView: SelfView;
        /**
         * A "capture" button along the right side of the screen.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/CoreGuiType#Captures)
         */
        export interface Captures extends globalThis.EnumItem {
            Name: "Captures";
            Value: 7;
            EnumType: typeof globalThis.Enum.CoreGuiType;
        }
        export const Captures: Captures;
        export function GetEnumItems(this: globalThis.Enum): Array<globalThis.Enum.CoreGuiType>;
        export function FromName(this: globalThis.Enum, name: string): globalThis.Enum.CoreGuiType | undefined;
        export function FromValue(this: globalThis.Enum, value: number): globalThis.Enum.CoreGuiType | undefined;
    }
    export type CoreGuiType = CoreGuiType.PlayerList | CoreGuiType.Health | CoreGuiType.Backpack | CoreGuiType.Chat | CoreGuiType.All | CoreGuiType.EmotesMenu | CoreGuiType.SelfView | CoreGuiType.Captures;
    /**
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/CreateAssetResult)
     */
    export namespace CreateAssetResult {
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/CreateAssetResult#Success)
         */
        export interface Success extends globalThis.EnumItem {
            Name: "Success";
            Value: 1;
            EnumType: typeof globalThis.Enum.CreateAssetResult;
        }
        export const Success: Success;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/CreateAssetResult#PermissionDenied)
         */
        export interface PermissionDenied extends globalThis.EnumItem {
            Name: "PermissionDenied";
            Value: 2;
            EnumType: typeof globalThis.Enum.CreateAssetResult;
        }
        export const PermissionDenied: PermissionDenied;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/CreateAssetResult#UploadFailed)
         */
        export interface UploadFailed extends globalThis.EnumItem {
            Name: "UploadFailed";
            Value: 3;
            EnumType: typeof globalThis.Enum.CreateAssetResult;
        }
        export const UploadFailed: UploadFailed;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/CreateAssetResult#Unknown)
         */
        export interface Unknown extends globalThis.EnumItem {
            Name: "Unknown";
            Value: 4;
            EnumType: typeof globalThis.Enum.CreateAssetResult;
        }
        export const Unknown: Unknown;
        export function GetEnumItems(this: globalThis.Enum): Array<globalThis.Enum.CreateAssetResult>;
        export function FromName(this: globalThis.Enum, name: string): globalThis.Enum.CreateAssetResult | undefined;
        export function FromValue(this: globalThis.Enum, value: number): globalThis.Enum.CreateAssetResult | undefined;
    }
    export type CreateAssetResult = CreateAssetResult.Success | CreateAssetResult.PermissionDenied | CreateAssetResult.UploadFailed | CreateAssetResult.Unknown;
    /**
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/CreateOutfitFailure)
     */
    export namespace CreateOutfitFailure {
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/CreateOutfitFailure#InvalidName)
         */
        export interface InvalidName extends globalThis.EnumItem {
            Name: "InvalidName";
            Value: 1;
            EnumType: typeof globalThis.Enum.CreateOutfitFailure;
        }
        export const InvalidName: InvalidName;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/CreateOutfitFailure#OutfitLimitReached)
         */
        export interface OutfitLimitReached extends globalThis.EnumItem {
            Name: "OutfitLimitReached";
            Value: 2;
            EnumType: typeof globalThis.Enum.CreateOutfitFailure;
        }
        export const OutfitLimitReached: OutfitLimitReached;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/CreateOutfitFailure#Other)
         */
        export interface Other extends globalThis.EnumItem {
            Name: "Other";
            Value: 3;
            EnumType: typeof globalThis.Enum.CreateOutfitFailure;
        }
        export const Other: Other;
        export function GetEnumItems(this: globalThis.Enum): Array<globalThis.Enum.CreateOutfitFailure>;
        export function FromName(this: globalThis.Enum, name: string): globalThis.Enum.CreateOutfitFailure | undefined;
        export function FromValue(this: globalThis.Enum, value: number): globalThis.Enum.CreateOutfitFailure | undefined;
    }
    export type CreateOutfitFailure = CreateOutfitFailure.InvalidName | CreateOutfitFailure.OutfitLimitReached | CreateOutfitFailure.Other;
    /**
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/CreatorType)
     */
    export namespace CreatorType {
        /**
         * The place is owned by a single user.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/CreatorType#User)
         */
        export interface User extends globalThis.EnumItem {
            Name: "User";
            Value: 0;
            EnumType: typeof globalThis.Enum.CreatorType;
        }
        export const User: User;
        /**
         * The place is owned by a group.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/CreatorType#Group)
         */
        export interface Group extends globalThis.EnumItem {
            Name: "Group";
            Value: 1;
            EnumType: typeof globalThis.Enum.CreatorType;
        }
        export const Group: Group;
        export function GetEnumItems(this: globalThis.Enum): Array<globalThis.Enum.CreatorType>;
        export function FromName(this: globalThis.Enum, name: string): globalThis.Enum.CreatorType | undefined;
        export function FromValue(this: globalThis.Enum, value: number): globalThis.Enum.CreatorType | undefined;
    }
    export type CreatorType = CreatorType.User | CreatorType.Group;
    /**
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/CreatorTypeFilter)
     */
    export namespace CreatorTypeFilter {
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/CreatorTypeFilter#User)
         */
        export interface User extends globalThis.EnumItem {
            Name: "User";
            Value: 0;
            EnumType: typeof globalThis.Enum.CreatorTypeFilter;
        }
        export const User: User;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/CreatorTypeFilter#Group)
         */
        export interface Group extends globalThis.EnumItem {
            Name: "Group";
            Value: 1;
            EnumType: typeof globalThis.Enum.CreatorTypeFilter;
        }
        export const Group: Group;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/CreatorTypeFilter#All)
         */
        export interface All extends globalThis.EnumItem {
            Name: "All";
            Value: 2;
            EnumType: typeof globalThis.Enum.CreatorTypeFilter;
        }
        export const All: All;
        export function GetEnumItems(this: globalThis.Enum): Array<globalThis.Enum.CreatorTypeFilter>;
        export function FromName(this: globalThis.Enum, name: string): globalThis.Enum.CreatorTypeFilter | undefined;
        export function FromValue(this: globalThis.Enum, value: number): globalThis.Enum.CreatorTypeFilter | undefined;
    }
    export type CreatorTypeFilter = CreatorTypeFilter.User | CreatorTypeFilter.Group | CreatorTypeFilter.All;
    /**
     * The CurrencyType Enum is used with `MarketplaceService` to set the currency used.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/CurrencyType)
     */
    export namespace CurrencyType {
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/CurrencyType#Default)
         */
        export interface Default extends globalThis.EnumItem {
            Name: "Default";
            Value: 0;
            EnumType: typeof globalThis.Enum.CurrencyType;
        }
        export const Default: Default;
        /**
         * Use Robux.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/CurrencyType#Robux)
         */
        export interface Robux extends globalThis.EnumItem {
            Name: "Robux";
            Value: 1;
            EnumType: typeof globalThis.Enum.CurrencyType;
        }
        export const Robux: Robux;
        /**
         * Use Tickets.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/CurrencyType#Tix)
         */
        export interface Tix extends globalThis.EnumItem {
            Name: "Tix";
            Value: 2;
            EnumType: typeof globalThis.Enum.CurrencyType;
        }
        export const Tix: Tix;
        export function GetEnumItems(this: globalThis.Enum): Array<globalThis.Enum.CurrencyType>;
        export function FromName(this: globalThis.Enum, name: string): globalThis.Enum.CurrencyType | undefined;
        export function FromValue(this: globalThis.Enum, value: number): globalThis.Enum.CurrencyType | undefined;
    }
    export type CurrencyType = CurrencyType.Default | CurrencyType.Robux | CurrencyType.Tix;
    /**
     * Changes the player's camera mode in Roblox's Game settings.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/CustomCameraMode)
     */
    export namespace CustomCameraMode {
        /**
         * The default camera mode is classic.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/CustomCameraMode#Default)
         */
        export interface Default extends globalThis.EnumItem {
            Name: "Default";
            Value: 0;
            EnumType: typeof globalThis.Enum.CustomCameraMode;
        }
        export const Default: Default;
        /**
         * Camera tracks the player but will not automatically rotate if the player walks left or right.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/CustomCameraMode#Classic)
         */
        export interface Classic extends globalThis.EnumItem {
            Name: "Classic";
            Value: 1;
            EnumType: typeof globalThis.Enum.CustomCameraMode;
        }
        export const Classic: Classic;
        /**
         * Camera tracks the player and automatically rotates if the player walks left or right.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/CustomCameraMode#Follow)
         */
        export interface Follow extends globalThis.EnumItem {
            Name: "Follow";
            Value: 2;
            EnumType: typeof globalThis.Enum.CustomCameraMode;
        }
        export const Follow: Follow;
        export function GetEnumItems(this: globalThis.Enum): Array<globalThis.Enum.CustomCameraMode>;
        export function FromName(this: globalThis.Enum, name: string): globalThis.Enum.CustomCameraMode | undefined;
        export function FromValue(this: globalThis.Enum, value: number): globalThis.Enum.CustomCameraMode | undefined;
    }
    export type CustomCameraMode = CustomCameraMode.Default | CustomCameraMode.Classic | CustomCameraMode.Follow;
    /**
     * Indicates the type of data store request being made.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/DataStoreRequestType)
     */
    export namespace DataStoreRequestType {
        /**
         * Refers to `GetAsync()` and the read of `UpdateAsync()`.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/DataStoreRequestType#GetAsync)
         */
        export interface GetAsync extends globalThis.EnumItem {
            Name: "GetAsync";
            Value: 0;
            EnumType: typeof globalThis.Enum.DataStoreRequestType;
        }
        export const GetAsync: GetAsync;
        /**
         * Refers to `SetAsync()`, `IncrementAsync()`, `RemoveAsync()`, and the write of `UpdateAsync()` when it returns a non-`nil` value.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/DataStoreRequestType#SetIncrementAsync)
         */
        export interface SetIncrementAsync extends globalThis.EnumItem {
            Name: "SetIncrementAsync";
            Value: 1;
            EnumType: typeof globalThis.Enum.DataStoreRequestType;
        }
        export const SetIncrementAsync: SetIncrementAsync;
        /**
         * Refers to `UpdateAsync()`.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/DataStoreRequestType#UpdateAsync)
         */
        export interface UpdateAsync extends globalThis.EnumItem {
            Name: "UpdateAsync";
            Value: 2;
            EnumType: typeof globalThis.Enum.DataStoreRequestType;
        }
        export const UpdateAsync: UpdateAsync;
        /**
         * Refers to `GetSortedAsync()`.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/DataStoreRequestType#GetSortedAsync)
         */
        export interface GetSortedAsync extends globalThis.EnumItem {
            Name: "GetSortedAsync";
            Value: 3;
            EnumType: typeof globalThis.Enum.DataStoreRequestType;
        }
        export const GetSortedAsync: GetSortedAsync;
        /**
         * Refers to `SetAsync()` and `IncrementAsync()` while using an `OrderedDataStore`.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/DataStoreRequestType#SetIncrementSortedAsync)
         */
        export interface SetIncrementSortedAsync extends globalThis.EnumItem {
            Name: "SetIncrementSortedAsync";
            Value: 4;
            EnumType: typeof globalThis.Enum.DataStoreRequestType;
        }
        export const SetIncrementSortedAsync: SetIncrementSortedAsync;
        /**
         * Refers to `OnUpdate()`.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/DataStoreRequestType#OnUpdate)
         */
        export interface OnUpdate extends globalThis.EnumItem {
            Name: "OnUpdate";
            Value: 5;
            EnumType: typeof globalThis.Enum.DataStoreRequestType;
        }
        export const OnUpdate: OnUpdate;
        /**
         * Refers to `ListKeysAsync()` and `ListVersionsAsync()`.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/DataStoreRequestType#ListAsync)
         */
        export interface ListAsync extends globalThis.EnumItem {
            Name: "ListAsync";
            Value: 6;
            EnumType: typeof globalThis.Enum.DataStoreRequestType;
        }
        export const ListAsync: ListAsync;
        /**
         * Refers to `GetVersionAsync()`.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/DataStoreRequestType#GetVersionAsync)
         */
        export interface GetVersionAsync extends globalThis.EnumItem {
            Name: "GetVersionAsync";
            Value: 7;
            EnumType: typeof globalThis.Enum.DataStoreRequestType;
        }
        export const GetVersionAsync: GetVersionAsync;
        /**
         * Refers to `RemoveVersionAsync()`.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/DataStoreRequestType#RemoveVersionAsync)
         */
        export interface RemoveVersionAsync extends globalThis.EnumItem {
            Name: "RemoveVersionAsync";
            Value: 8;
            EnumType: typeof globalThis.Enum.DataStoreRequestType;
        }
        export const RemoveVersionAsync: RemoveVersionAsync;
        export function GetEnumItems(this: globalThis.Enum): Array<globalThis.Enum.DataStoreRequestType>;
        export function FromName(this: globalThis.Enum, name: string): globalThis.Enum.DataStoreRequestType | undefined;
        export function FromValue(this: globalThis.Enum, value: number): globalThis.Enum.DataStoreRequestType | undefined;
    }
    export type DataStoreRequestType = DataStoreRequestType.GetAsync | DataStoreRequestType.SetIncrementAsync | DataStoreRequestType.UpdateAsync | DataStoreRequestType.GetSortedAsync | DataStoreRequestType.SetIncrementSortedAsync | DataStoreRequestType.OnUpdate | DataStoreRequestType.ListAsync | DataStoreRequestType.GetVersionAsync | DataStoreRequestType.RemoveVersionAsync;
    /**
     * Reason for the end of the debugger session.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/DebuggerEndReason)
     */
    export namespace DebuggerEndReason {
        /**
         * Client requested connection termination.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/DebuggerEndReason#ClientRequest)
         */
        export interface ClientRequest extends globalThis.EnumItem {
            Name: "ClientRequest";
            Value: 0;
            EnumType: typeof globalThis.Enum.DebuggerEndReason;
        }
        export const ClientRequest: ClientRequest;
        /**
         * Connection timed out.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/DebuggerEndReason#Timeout)
         */
        export interface Timeout extends globalThis.EnumItem {
            Name: "Timeout";
            Value: 1;
            EnumType: typeof globalThis.Enum.DebuggerEndReason;
        }
        export const Timeout: Timeout;
        /**
         * Invalid host:port combination.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/DebuggerEndReason#InvalidHost)
         */
        export interface InvalidHost extends globalThis.EnumItem {
            Name: "InvalidHost";
            Value: 2;
            EnumType: typeof globalThis.Enum.DebuggerEndReason;
        }
        export const InvalidHost: InvalidHost;
        /**
         * Connection was lost.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/DebuggerEndReason#Disconnected)
         */
        export interface Disconnected extends globalThis.EnumItem {
            Name: "Disconnected";
            Value: 3;
            EnumType: typeof globalThis.Enum.DebuggerEndReason;
        }
        export const Disconnected: Disconnected;
        /**
         * Server terminated the connection because it shut down.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/DebuggerEndReason#ServerShutdown)
         */
        export interface ServerShutdown extends globalThis.EnumItem {
            Name: "ServerShutdown";
            Value: 4;
            EnumType: typeof globalThis.Enum.DebuggerEndReason;
        }
        export const ServerShutdown: ServerShutdown;
        /**
         * Server has wrong version of protocol.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/DebuggerEndReason#ServerProtocolMismatch)
         */
        export interface ServerProtocolMismatch extends globalThis.EnumItem {
            Name: "ServerProtocolMismatch";
            Value: 5;
            EnumType: typeof globalThis.Enum.DebuggerEndReason;
        }
        export const ServerProtocolMismatch: ServerProtocolMismatch;
        /**
         * Got a failure response when trying to configure the server.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/DebuggerEndReason#ConfigurationFailed)
         */
        export interface ConfigurationFailed extends globalThis.EnumItem {
            Name: "ConfigurationFailed";
            Value: 6;
            EnumType: typeof globalThis.Enum.DebuggerEndReason;
        }
        export const ConfigurationFailed: ConfigurationFailed;
        /**
         * An error occurred in the RPC layer.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/DebuggerEndReason#RpcError)
         */
        export interface RpcError extends globalThis.EnumItem {
            Name: "RpcError";
            Value: 7;
            EnumType: typeof globalThis.Enum.DebuggerEndReason;
        }
        export const RpcError: RpcError;
        export function GetEnumItems(this: globalThis.Enum): Array<globalThis.Enum.DebuggerEndReason>;
        export function FromName(this: globalThis.Enum, name: string): globalThis.Enum.DebuggerEndReason | undefined;
        export function FromValue(this: globalThis.Enum, value: number): globalThis.Enum.DebuggerEndReason | undefined;
    }
    export type DebuggerEndReason = DebuggerEndReason.ClientRequest | DebuggerEndReason.Timeout | DebuggerEndReason.InvalidHost | DebuggerEndReason.Disconnected | DebuggerEndReason.ServerShutdown | DebuggerEndReason.ServerProtocolMismatch | DebuggerEndReason.ConfigurationFailed | DebuggerEndReason.RpcError;
    /**
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/DebuggerExceptionBreakMode)
     */
    export namespace DebuggerExceptionBreakMode {
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/DebuggerExceptionBreakMode#Never)
         */
        export interface Never extends globalThis.EnumItem {
            Name: "Never";
            Value: 0;
            EnumType: typeof globalThis.Enum.DebuggerExceptionBreakMode;
        }
        export const Never: Never;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/DebuggerExceptionBreakMode#Always)
         */
        export interface Always extends globalThis.EnumItem {
            Name: "Always";
            Value: 1;
            EnumType: typeof globalThis.Enum.DebuggerExceptionBreakMode;
        }
        export const Always: Always;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/DebuggerExceptionBreakMode#Unhandled)
         */
        export interface Unhandled extends globalThis.EnumItem {
            Name: "Unhandled";
            Value: 2;
            EnumType: typeof globalThis.Enum.DebuggerExceptionBreakMode;
        }
        export const Unhandled: Unhandled;
        export function GetEnumItems(this: globalThis.Enum): Array<globalThis.Enum.DebuggerExceptionBreakMode>;
        export function FromName(this: globalThis.Enum, name: string): globalThis.Enum.DebuggerExceptionBreakMode | undefined;
        export function FromValue(this: globalThis.Enum, value: number): globalThis.Enum.DebuggerExceptionBreakMode | undefined;
    }
    export type DebuggerExceptionBreakMode = DebuggerExceptionBreakMode.Never | DebuggerExceptionBreakMode.Always | DebuggerExceptionBreakMode.Unhandled;
    /**
     * Call stack frame type.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/DebuggerFrameType)
     */
    export namespace DebuggerFrameType {
        /**
         * Call stack frame belongs to a C (native) function.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/DebuggerFrameType#C)
         */
        export interface C extends globalThis.EnumItem {
            Name: "C";
            Value: 0;
            EnumType: typeof globalThis.Enum.DebuggerFrameType;
        }
        export const C: C;
        /**
         * Call stack frame belongs to a Lua function.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/DebuggerFrameType#Lua)
         */
        export interface Lua extends globalThis.EnumItem {
            Name: "Lua";
            Value: 1;
            EnumType: typeof globalThis.Enum.DebuggerFrameType;
        }
        export const Lua: Lua;
        export function GetEnumItems(this: globalThis.Enum): Array<globalThis.Enum.DebuggerFrameType>;
        export function FromName(this: globalThis.Enum, name: string): globalThis.Enum.DebuggerFrameType | undefined;
        export function FromValue(this: globalThis.Enum, value: number): globalThis.Enum.DebuggerFrameType | undefined;
    }
    export type DebuggerFrameType = DebuggerFrameType.C | DebuggerFrameType.Lua;
    /**
     * Reason that the DataModel was paused.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/DebuggerPauseReason)
     */
    export namespace DebuggerPauseReason {
        /**
         * Pausing for a reason not covered by other values.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/DebuggerPauseReason#Unknown)
         */
        export interface Unknown extends globalThis.EnumItem {
            Name: "Unknown";
            Value: 0;
            EnumType: typeof globalThis.Enum.DebuggerPauseReason;
        }
        export const Unknown: Unknown;
        /**
         * Pause was requested by user.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/DebuggerPauseReason#Requested)
         */
        export interface Requested extends globalThis.EnumItem {
            Name: "Requested";
            Value: 1;
            EnumType: typeof globalThis.Enum.DebuggerPauseReason;
        }
        export const Requested: Requested;
        /**
         * Pausing on a user breakpoint.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/DebuggerPauseReason#Breakpoint)
         */
        export interface Breakpoint extends globalThis.EnumItem {
            Name: "Breakpoint";
            Value: 2;
            EnumType: typeof globalThis.Enum.DebuggerPauseReason;
        }
        export const Breakpoint: Breakpoint;
        /**
         * Pausing on error hit in the code.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/DebuggerPauseReason#Exception)
         */
        export interface Exception extends globalThis.EnumItem {
            Name: "Exception";
            Value: 3;
            EnumType: typeof globalThis.Enum.DebuggerPauseReason;
        }
        export const Exception: Exception;
        /**
         * Pausing on an internal breakpoint set by debugger command: e.g. step over, step into, step out of.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/DebuggerPauseReason#SingleStep)
         */
        export interface SingleStep extends globalThis.EnumItem {
            Name: "SingleStep";
            Value: 4;
            EnumType: typeof globalThis.Enum.DebuggerPauseReason;
        }
        export const SingleStep: SingleStep;
        /**
         * Pausing at the entry on the script.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/DebuggerPauseReason#Entrypoint)
         */
        export interface Entrypoint extends globalThis.EnumItem {
            Name: "Entrypoint";
            Value: 5;
            EnumType: typeof globalThis.Enum.DebuggerPauseReason;
        }
        export const Entrypoint: Entrypoint;
        export function GetEnumItems(this: globalThis.Enum): Array<globalThis.Enum.DebuggerPauseReason>;
        export function FromName(this: globalThis.Enum, name: string): globalThis.Enum.DebuggerPauseReason | undefined;
        export function FromValue(this: globalThis.Enum, value: number): globalThis.Enum.DebuggerPauseReason | undefined;
    }
    export type DebuggerPauseReason = DebuggerPauseReason.Unknown | DebuggerPauseReason.Requested | DebuggerPauseReason.Breakpoint | DebuggerPauseReason.Exception | DebuggerPauseReason.SingleStep | DebuggerPauseReason.Entrypoint;
    /**
     * Result of a debugger request.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/DebuggerStatus)
     */
    export namespace DebuggerStatus {
        /**
         * Request has completed successfully.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/DebuggerStatus#Success)
         */
        export interface Success extends globalThis.EnumItem {
            Name: "Success";
            Value: 0;
            EnumType: typeof globalThis.Enum.DebuggerStatus;
        }
        export const Success: Success;
        /**
         * Timed out while waiting for response.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/DebuggerStatus#Timeout)
         */
        export interface Timeout extends globalThis.EnumItem {
            Name: "Timeout";
            Value: 1;
            EnumType: typeof globalThis.Enum.DebuggerStatus;
        }
        export const Timeout: Timeout;
        /**
         * Connection to the debugger was lost.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/DebuggerStatus#ConnectionLost)
         */
        export interface ConnectionLost extends globalThis.EnumItem {
            Name: "ConnectionLost";
            Value: 2;
            EnumType: typeof globalThis.Enum.DebuggerStatus;
        }
        export const ConnectionLost: ConnectionLost;
        /**
         * Failed to parse response.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/DebuggerStatus#InvalidResponse)
         */
        export interface InvalidResponse extends globalThis.EnumItem {
            Name: "InvalidResponse";
            Value: 3;
            EnumType: typeof globalThis.Enum.DebuggerStatus;
        }
        export const InvalidResponse: InvalidResponse;
        /**
         * Exception encountered while processing response.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/DebuggerStatus#InternalError)
         */
        export interface InternalError extends globalThis.EnumItem {
            Name: "InternalError";
            Value: 4;
            EnumType: typeof globalThis.Enum.DebuggerStatus;
        }
        export const InternalError: InternalError;
        /**
         * The request was not appropriate for the current debugger state.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/DebuggerStatus#InvalidState)
         */
        export interface InvalidState extends globalThis.EnumItem {
            Name: "InvalidState";
            Value: 5;
            EnumType: typeof globalThis.Enum.DebuggerStatus;
        }
        export const InvalidState: InvalidState;
        /**
         * Response was an error.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/DebuggerStatus#RpcError)
         */
        export interface RpcError extends globalThis.EnumItem {
            Name: "RpcError";
            Value: 6;
            EnumType: typeof globalThis.Enum.DebuggerStatus;
        }
        export const RpcError: RpcError;
        /**
         * One of the request arguments was invalid.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/DebuggerStatus#InvalidArgument)
         */
        export interface InvalidArgument extends globalThis.EnumItem {
            Name: "InvalidArgument";
            Value: 7;
            EnumType: typeof globalThis.Enum.DebuggerStatus;
        }
        export const InvalidArgument: InvalidArgument;
        /**
         * Connection closed while waiting for response.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/DebuggerStatus#ConnectionClosed)
         */
        export interface ConnectionClosed extends globalThis.EnumItem {
            Name: "ConnectionClosed";
            Value: 8;
            EnumType: typeof globalThis.Enum.DebuggerStatus;
        }
        export const ConnectionClosed: ConnectionClosed;
        export function GetEnumItems(this: globalThis.Enum): Array<globalThis.Enum.DebuggerStatus>;
        export function FromName(this: globalThis.Enum, name: string): globalThis.Enum.DebuggerStatus | undefined;
        export function FromValue(this: globalThis.Enum, value: number): globalThis.Enum.DebuggerStatus | undefined;
    }
    export type DebuggerStatus = DebuggerStatus.Success | DebuggerStatus.Timeout | DebuggerStatus.ConnectionLost | DebuggerStatus.InvalidResponse | DebuggerStatus.InternalError | DebuggerStatus.InvalidState | DebuggerStatus.RpcError | DebuggerStatus.InvalidArgument | DebuggerStatus.ConnectionClosed;
    /**
     * Determines how the default camera handles objects that are in-between the camera and the camera subject.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/DevCameraOcclusionMode)
     */
    export namespace DevCameraOcclusionMode {
        /**
         * The camera zooms in until there is nothing between it and its subject.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/DevCameraOcclusionMode#Zoom)
         */
        export interface Zoom extends globalThis.EnumItem {
            Name: "Zoom";
            Value: 0;
            EnumType: typeof globalThis.Enum.DevCameraOcclusionMode;
        }
        export const Zoom: Zoom;
        /**
         * Any objects between the camera and its subject become translucent locally.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/DevCameraOcclusionMode#Invisicam)
         */
        export interface Invisicam extends globalThis.EnumItem {
            Name: "Invisicam";
            Value: 1;
            EnumType: typeof globalThis.Enum.DevCameraOcclusionMode;
        }
        export const Invisicam: Invisicam;
        export function GetEnumItems(this: globalThis.Enum): Array<globalThis.Enum.DevCameraOcclusionMode>;
        export function FromName(this: globalThis.Enum, name: string): globalThis.Enum.DevCameraOcclusionMode | undefined;
        export function FromValue(this: globalThis.Enum, value: number): globalThis.Enum.DevCameraOcclusionMode | undefined;
    }
    export type DevCameraOcclusionMode = DevCameraOcclusionMode.Zoom | DevCameraOcclusionMode.Invisicam;
    /**
     * Overwrites the player's camera movement mode setting on a computer.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/DevComputerCameraMovementMode)
     */
    export namespace DevComputerCameraMovementMode {
        /**
         * The camera will move based on the player's settings.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/DevComputerCameraMovementMode#UserChoice)
         */
        export interface UserChoice extends globalThis.EnumItem {
            Name: "UserChoice";
            Value: 0;
            EnumType: typeof globalThis.Enum.DevComputerCameraMovementMode;
        }
        export const UserChoice: UserChoice;
        /**
         * Camera tracks the player but will not automatically rotate if the player walks left or right.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/DevComputerCameraMovementMode#Classic)
         */
        export interface Classic extends globalThis.EnumItem {
            Name: "Classic";
            Value: 1;
            EnumType: typeof globalThis.Enum.DevComputerCameraMovementMode;
        }
        export const Classic: Classic;
        /**
         * Camera tracks the player and automatically rotates if the player walks left or right.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/DevComputerCameraMovementMode#Follow)
         */
        export interface Follow extends globalThis.EnumItem {
            Name: "Follow";
            Value: 2;
            EnumType: typeof globalThis.Enum.DevComputerCameraMovementMode;
        }
        export const Follow: Follow;
        /**
         * The camera has a fixed Y position, but can be rotated around the player.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/DevComputerCameraMovementMode#Orbital)
         */
        export interface Orbital extends globalThis.EnumItem {
            Name: "Orbital";
            Value: 3;
            EnumType: typeof globalThis.Enum.DevComputerCameraMovementMode;
        }
        export const Orbital: Orbital;
        /**
         * The camera toggles between locked and free rotation with the right mouse button.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/DevComputerCameraMovementMode#CameraToggle)
         */
        export interface CameraToggle extends globalThis.EnumItem {
            Name: "CameraToggle";
            Value: 4;
            EnumType: typeof globalThis.Enum.DevComputerCameraMovementMode;
        }
        export const CameraToggle: CameraToggle;
        export function GetEnumItems(this: globalThis.Enum): Array<globalThis.Enum.DevComputerCameraMovementMode>;
        export function FromName(this: globalThis.Enum, name: string): globalThis.Enum.DevComputerCameraMovementMode | undefined;
        export function FromValue(this: globalThis.Enum, value: number): globalThis.Enum.DevComputerCameraMovementMode | undefined;
    }
    export type DevComputerCameraMovementMode = DevComputerCameraMovementMode.UserChoice | DevComputerCameraMovementMode.Classic | DevComputerCameraMovementMode.Follow | DevComputerCameraMovementMode.Orbital | DevComputerCameraMovementMode.CameraToggle;
    /**
     * Sets the movement mode of players who are playing on computers.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/DevComputerMovementMode)
     */
    export namespace DevComputerMovementMode {
        /**
         * The player's character will moved based on the user's settings.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/DevComputerMovementMode#UserChoice)
         */
        export interface UserChoice extends globalThis.EnumItem {
            Name: "UserChoice";
            Value: 0;
            EnumType: typeof globalThis.Enum.DevComputerMovementMode;
        }
        export const UserChoice: UserChoice;
        /**
         * The player's character will be controlled using the keyboard and mouse.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/DevComputerMovementMode#KeyboardMouse)
         */
        export interface KeyboardMouse extends globalThis.EnumItem {
            Name: "KeyboardMouse";
            Value: 1;
            EnumType: typeof globalThis.Enum.DevComputerMovementMode;
        }
        export const KeyboardMouse: KeyboardMouse;
        /**
         * The player can right click in the game world and the character will move there. Player can also control character with mouse and keyboard.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/DevComputerMovementMode#ClickToMove)
         */
        export interface ClickToMove extends globalThis.EnumItem {
            Name: "ClickToMove";
            Value: 2;
            EnumType: typeof globalThis.Enum.DevComputerMovementMode;
        }
        export const ClickToMove: ClickToMove;
        /**
         * The player will not respond to default controls. You must define any character movement in custom scripts.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/DevComputerMovementMode#Scriptable)
         */
        export interface Scriptable extends globalThis.EnumItem {
            Name: "Scriptable";
            Value: 3;
            EnumType: typeof globalThis.Enum.DevComputerMovementMode;
        }
        export const Scriptable: Scriptable;
        export function GetEnumItems(this: globalThis.Enum): Array<globalThis.Enum.DevComputerMovementMode>;
        export function FromName(this: globalThis.Enum, name: string): globalThis.Enum.DevComputerMovementMode | undefined;
        export function FromValue(this: globalThis.Enum, value: number): globalThis.Enum.DevComputerMovementMode | undefined;
    }
    export type DevComputerMovementMode = DevComputerMovementMode.UserChoice | DevComputerMovementMode.KeyboardMouse | DevComputerMovementMode.ClickToMove | DevComputerMovementMode.Scriptable;
    /**
     * Overwrites the camera mode if the player is on a touch device.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/DevTouchCameraMovementMode)
     */
    export namespace DevTouchCameraMovementMode {
        /**
         * The camera will move based on the player's settings.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/DevTouchCameraMovementMode#UserChoice)
         */
        export interface UserChoice extends globalThis.EnumItem {
            Name: "UserChoice";
            Value: 0;
            EnumType: typeof globalThis.Enum.DevTouchCameraMovementMode;
        }
        export const UserChoice: UserChoice;
        /**
         * Camera tracks the player but will not automatically rotate if the player walks left or right.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/DevTouchCameraMovementMode#Classic)
         */
        export interface Classic extends globalThis.EnumItem {
            Name: "Classic";
            Value: 1;
            EnumType: typeof globalThis.Enum.DevTouchCameraMovementMode;
        }
        export const Classic: Classic;
        /**
         * Camera tracks the player and automatically rotates if the player walks left or right.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/DevTouchCameraMovementMode#Follow)
         */
        export interface Follow extends globalThis.EnumItem {
            Name: "Follow";
            Value: 2;
            EnumType: typeof globalThis.Enum.DevTouchCameraMovementMode;
        }
        export const Follow: Follow;
        /**
         * The camera has a fixed Y position, but can be rotated around the player.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/DevTouchCameraMovementMode#Orbital)
         */
        export interface Orbital extends globalThis.EnumItem {
            Name: "Orbital";
            Value: 3;
            EnumType: typeof globalThis.Enum.DevTouchCameraMovementMode;
        }
        export const Orbital: Orbital;
        export function GetEnumItems(this: globalThis.Enum): Array<globalThis.Enum.DevTouchCameraMovementMode>;
        export function FromName(this: globalThis.Enum, name: string): globalThis.Enum.DevTouchCameraMovementMode | undefined;
        export function FromValue(this: globalThis.Enum, value: number): globalThis.Enum.DevTouchCameraMovementMode | undefined;
    }
    export type DevTouchCameraMovementMode = DevTouchCameraMovementMode.UserChoice | DevTouchCameraMovementMode.Classic | DevTouchCameraMovementMode.Follow | DevTouchCameraMovementMode.Orbital;
    /**
     * Overrides the movement mode of players who are playing on touch devices.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/DevTouchMovementMode)
     */
    export namespace DevTouchMovementMode {
        /**
         * The player's character will moved based on the user's settings.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/DevTouchMovementMode#UserChoice)
         */
        export interface UserChoice extends globalThis.EnumItem {
            Name: "UserChoice";
            Value: 0;
            EnumType: typeof globalThis.Enum.DevTouchMovementMode;
        }
        export const UserChoice: UserChoice;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/DevTouchMovementMode#Thumbstick)
         */
        export interface Thumbstick extends globalThis.EnumItem {
            Name: "Thumbstick";
            Value: 1;
            EnumType: typeof globalThis.Enum.DevTouchMovementMode;
        }
        export const Thumbstick: Thumbstick;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/DevTouchMovementMode#DPad)
         */
        export interface DPad extends globalThis.EnumItem {
            Name: "DPad";
            Value: 2;
            EnumType: typeof globalThis.Enum.DevTouchMovementMode;
        }
        export const DPad: DPad;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/DevTouchMovementMode#Thumbpad)
         */
        export interface Thumbpad extends globalThis.EnumItem {
            Name: "Thumbpad";
            Value: 3;
            EnumType: typeof globalThis.Enum.DevTouchMovementMode;
        }
        export const Thumbpad: Thumbpad;
        /**
         * The player's character will attempt to move to a location in the world when the player taps a location.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/DevTouchMovementMode#ClickToMove)
         */
        export interface ClickToMove extends globalThis.EnumItem {
            Name: "ClickToMove";
            Value: 4;
            EnumType: typeof globalThis.Enum.DevTouchMovementMode;
        }
        export const ClickToMove: ClickToMove;
        /**
         * The player will not respond to default controls; any character movement must be defined in custom scripts.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/DevTouchMovementMode#Scriptable)
         */
        export interface Scriptable extends globalThis.EnumItem {
            Name: "Scriptable";
            Value: 5;
            EnumType: typeof globalThis.Enum.DevTouchMovementMode;
        }
        export const Scriptable: Scriptable;
        /**
         * The player's character is controlled with a virtual thumbstick that appears when they touch the lower portion of the screen. Jumping is controlled with a separate button. Good for portrait mode and one handed play.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/DevTouchMovementMode#DynamicThumbstick)
         */
        export interface DynamicThumbstick extends globalThis.EnumItem {
            Name: "DynamicThumbstick";
            Value: 6;
            EnumType: typeof globalThis.Enum.DevTouchMovementMode;
        }
        export const DynamicThumbstick: DynamicThumbstick;
        export function GetEnumItems(this: globalThis.Enum): Array<globalThis.Enum.DevTouchMovementMode>;
        export function FromName(this: globalThis.Enum, name: string): globalThis.Enum.DevTouchMovementMode | undefined;
        export function FromValue(this: globalThis.Enum, value: number): globalThis.Enum.DevTouchMovementMode | undefined;
    }
    export type DevTouchMovementMode = DevTouchMovementMode.UserChoice | DevTouchMovementMode.Thumbstick | DevTouchMovementMode.DPad | DevTouchMovementMode.Thumbpad | DevTouchMovementMode.ClickToMove | DevTouchMovementMode.Scriptable | DevTouchMovementMode.DynamicThumbstick;
    /**
     * A memory tracking category.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/DeveloperMemoryTag)
     */
    export namespace DeveloperMemoryTag {
        /**
         * General data that doesn't have any categorization. This could be due to either internal reasons, or because it simply isn't being tracked categorically.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/DeveloperMemoryTag#Internal)
         */
        export interface Internal extends globalThis.EnumItem {
            Name: "Internal";
            Value: 0;
            EnumType: typeof globalThis.Enum.DeveloperMemoryTag;
        }
        export const Internal: Internal;
        /**
         * A cache of HTTP responses.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/DeveloperMemoryTag#HttpCache)
         */
        export interface HttpCache extends globalThis.EnumItem {
            Name: "HttpCache";
            Value: 1;
            EnumType: typeof globalThis.Enum.DeveloperMemoryTag;
        }
        export const HttpCache: HttpCache;
        /**
         * All the Instances present in memory.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/DeveloperMemoryTag#Instances)
         */
        export interface Instances extends globalThis.EnumItem {
            Name: "Instances";
            Value: 2;
            EnumType: typeof globalThis.Enum.DeveloperMemoryTag;
        }
        export const Instances: Instances;
        /**
         * Events, signals, connections, etc.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/DeveloperMemoryTag#Signals)
         */
        export interface Signals extends globalThis.EnumItem {
            Name: "Signals";
            Value: 3;
            EnumType: typeof globalThis.Enum.DeveloperMemoryTag;
        }
        export const Signals: Signals;
        /**
         * All of the data in Lua, including everything happening in core scripts, built-in data types, etc.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/DeveloperMemoryTag#LuaHeap)
         */
        export interface LuaHeap extends globalThis.EnumItem {
            Name: "LuaHeap";
            Value: 4;
            EnumType: typeof globalThis.Enum.DeveloperMemoryTag;
        }
        export const LuaHeap: LuaHeap;
        /**
         * All memory being manipulated and referenced by scripts.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/DeveloperMemoryTag#Script)
         */
        export interface Script extends globalThis.EnumItem {
            Name: "Script";
            Value: 5;
            EnumType: typeof globalThis.Enum.DeveloperMemoryTag;
        }
        export const Script: Script;
        /**
         * Collision detection in the `Workspace`.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/DeveloperMemoryTag#PhysicsCollision)
         */
        export interface PhysicsCollision extends globalThis.EnumItem {
            Name: "PhysicsCollision";
            Value: 6;
            EnumType: typeof globalThis.Enum.DeveloperMemoryTag;
        }
        export const PhysicsCollision: PhysicsCollision;
        /**
         * Physics bodies and the components that control their behavior.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/DeveloperMemoryTag#PhysicsParts)
         */
        export interface PhysicsParts extends globalThis.EnumItem {
            Name: "PhysicsParts";
            Value: 7;
            EnumType: typeof globalThis.Enum.DeveloperMemoryTag;
        }
        export const PhysicsParts: PhysicsParts;
        /**
         * Rendering solid models (stuff made with Union, Negate, etc.).
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/DeveloperMemoryTag#GraphicsSolidModels)
         */
        export interface GraphicsSolidModels extends globalThis.EnumItem {
            Name: "GraphicsSolidModels";
            Value: 8;
            EnumType: typeof globalThis.Enum.DeveloperMemoryTag;
        }
        export const GraphicsSolidModels: GraphicsSolidModels;
        /**
         * Rendering of mesh parts.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/DeveloperMemoryTag#GraphicsMeshParts)
         */
        export interface GraphicsMeshParts extends globalThis.EnumItem {
            Name: "GraphicsMeshParts";
            Value: 10;
            EnumType: typeof globalThis.Enum.DeveloperMemoryTag;
        }
        export const GraphicsMeshParts: GraphicsMeshParts;
        /**
         * Rendering of particles from ParticleEmitters.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/DeveloperMemoryTag#GraphicsParticles)
         */
        export interface GraphicsParticles extends globalThis.EnumItem {
            Name: "GraphicsParticles";
            Value: 11;
            EnumType: typeof globalThis.Enum.DeveloperMemoryTag;
        }
        export const GraphicsParticles: GraphicsParticles;
        /**
         * Rendering of regular parts.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/DeveloperMemoryTag#GraphicsParts)
         */
        export interface GraphicsParts extends globalThis.EnumItem {
            Name: "GraphicsParts";
            Value: 12;
            EnumType: typeof globalThis.Enum.DeveloperMemoryTag;
        }
        export const GraphicsParts: GraphicsParts;
        /**
         * Spatial hash lookup tables of the game world that are used for rendering.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/DeveloperMemoryTag#GraphicsSpatialHash)
         */
        export interface GraphicsSpatialHash extends globalThis.EnumItem {
            Name: "GraphicsSpatialHash";
            Value: 13;
            EnumType: typeof globalThis.Enum.DeveloperMemoryTag;
        }
        export const GraphicsSpatialHash: GraphicsSpatialHash;
        /**
         * Rendering of terrain geometry.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/DeveloperMemoryTag#GraphicsTerrain)
         */
        export interface GraphicsTerrain extends globalThis.EnumItem {
            Name: "GraphicsTerrain";
            Value: 14;
            EnumType: typeof globalThis.Enum.DeveloperMemoryTag;
        }
        export const GraphicsTerrain: GraphicsTerrain;
        /**
         * Rendering of textures in the game world.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/DeveloperMemoryTag#GraphicsTexture)
         */
        export interface GraphicsTexture extends globalThis.EnumItem {
            Name: "GraphicsTexture";
            Value: 15;
            EnumType: typeof globalThis.Enum.DeveloperMemoryTag;
        }
        export const GraphicsTexture: GraphicsTexture;
        /**
         * Rendering of texture composition maps that are generated for Humanoids.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/DeveloperMemoryTag#GraphicsTextureCharacter)
         */
        export interface GraphicsTextureCharacter extends globalThis.EnumItem {
            Name: "GraphicsTextureCharacter";
            Value: 16;
            EnumType: typeof globalThis.Enum.DeveloperMemoryTag;
        }
        export const GraphicsTextureCharacter: GraphicsTextureCharacter;
        /**
         * Data of sounds in-game.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/DeveloperMemoryTag#Sounds)
         */
        export interface Sounds extends globalThis.EnumItem {
            Name: "Sounds";
            Value: 17;
            EnumType: typeof globalThis.Enum.DeveloperMemoryTag;
        }
        export const Sounds: Sounds;
        /**
         * Playback of sounds in-game.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/DeveloperMemoryTag#StreamingSounds)
         */
        export interface StreamingSounds extends globalThis.EnumItem {
            Name: "StreamingSounds";
            Value: 18;
            EnumType: typeof globalThis.Enum.DeveloperMemoryTag;
        }
        export const StreamingSounds: StreamingSounds;
        /**
         * Occupancy/Material data of the Terrain.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/DeveloperMemoryTag#TerrainVoxels)
         */
        export interface TerrainVoxels extends globalThis.EnumItem {
            Name: "TerrainVoxels";
            Value: 19;
            EnumType: typeof globalThis.Enum.DeveloperMemoryTag;
        }
        export const TerrainVoxels: TerrainVoxels;
        /**
         * Gui element data and rendering.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/DeveloperMemoryTag#Gui)
         */
        export interface Gui extends globalThis.EnumItem {
            Name: "Gui";
            Value: 21;
            EnumType: typeof globalThis.Enum.DeveloperMemoryTag;
        }
        export const Gui: Gui;
        /**
         * Playback of Animations on Humanoids and AnimationControllers.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/DeveloperMemoryTag#Animation)
         */
        export interface Animation extends globalThis.EnumItem {
            Name: "Animation";
            Value: 22;
            EnumType: typeof globalThis.Enum.DeveloperMemoryTag;
        }
        export const Animation: Animation;
        /**
         * Pathfinding for Humanoids via the PathfindingService.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/DeveloperMemoryTag#Navigation)
         */
        export interface Navigation extends globalThis.EnumItem {
            Name: "Navigation";
            Value: 23;
            EnumType: typeof globalThis.Enum.DeveloperMemoryTag;
        }
        export const Navigation: Navigation;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/DeveloperMemoryTag#GeometryCSG)
         */
        export interface GeometryCSG extends globalThis.EnumItem {
            Name: "GeometryCSG";
            Value: 24;
            EnumType: typeof globalThis.Enum.DeveloperMemoryTag;
        }
        export const GeometryCSG: GeometryCSG;
        export function GetEnumItems(this: globalThis.Enum): Array<globalThis.Enum.DeveloperMemoryTag>;
        export function FromName(this: globalThis.Enum, name: string): globalThis.Enum.DeveloperMemoryTag | undefined;
        export function FromValue(this: globalThis.Enum, value: number): globalThis.Enum.DeveloperMemoryTag | undefined;
    }
    export type DeveloperMemoryTag = DeveloperMemoryTag.Internal | DeveloperMemoryTag.HttpCache | DeveloperMemoryTag.Instances | DeveloperMemoryTag.Signals | DeveloperMemoryTag.LuaHeap | DeveloperMemoryTag.Script | DeveloperMemoryTag.PhysicsCollision | DeveloperMemoryTag.PhysicsParts | DeveloperMemoryTag.GraphicsSolidModels | DeveloperMemoryTag.GraphicsMeshParts | DeveloperMemoryTag.GraphicsParticles | DeveloperMemoryTag.GraphicsParts | DeveloperMemoryTag.GraphicsSpatialHash | DeveloperMemoryTag.GraphicsTerrain | DeveloperMemoryTag.GraphicsTexture | DeveloperMemoryTag.GraphicsTextureCharacter | DeveloperMemoryTag.Sounds | DeveloperMemoryTag.StreamingSounds | DeveloperMemoryTag.TerrainVoxels | DeveloperMemoryTag.Gui | DeveloperMemoryTag.Animation | DeveloperMemoryTag.Navigation | DeveloperMemoryTag.GeometryCSG;
    /**
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/DeviceFeatureType)
     */
    export namespace DeviceFeatureType {
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/DeviceFeatureType#DeviceCapture)
         */
        export interface DeviceCapture extends globalThis.EnumItem {
            Name: "DeviceCapture";
            Value: 0;
            EnumType: typeof globalThis.Enum.DeviceFeatureType;
        }
        export const DeviceCapture: DeviceCapture;
        export function GetEnumItems(this: globalThis.Enum): Array<globalThis.Enum.DeviceFeatureType>;
        export function FromName(this: globalThis.Enum, name: string): globalThis.Enum.DeviceFeatureType | undefined;
        export function FromValue(this: globalThis.Enum, value: number): globalThis.Enum.DeviceFeatureType | undefined;
    }
    export type DeviceFeatureType = DeviceFeatureType.DeviceCapture;
    /**
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/DeviceForm)
     */
    export namespace DeviceForm {
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/DeviceForm#Console)
         */
        export interface Console extends globalThis.EnumItem {
            Name: "Console";
            Value: 0;
            EnumType: typeof globalThis.Enum.DeviceForm;
        }
        export const Console: Console;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/DeviceForm#Phone)
         */
        export interface Phone extends globalThis.EnumItem {
            Name: "Phone";
            Value: 1;
            EnumType: typeof globalThis.Enum.DeviceForm;
        }
        export const Phone: Phone;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/DeviceForm#Tablet)
         */
        export interface Tablet extends globalThis.EnumItem {
            Name: "Tablet";
            Value: 2;
            EnumType: typeof globalThis.Enum.DeviceForm;
        }
        export const Tablet: Tablet;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/DeviceForm#Desktop)
         */
        export interface Desktop extends globalThis.EnumItem {
            Name: "Desktop";
            Value: 3;
            EnumType: typeof globalThis.Enum.DeviceForm;
        }
        export const Desktop: Desktop;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/DeviceForm#VR)
         */
        export interface VR extends globalThis.EnumItem {
            Name: "VR";
            Value: 4;
            EnumType: typeof globalThis.Enum.DeviceForm;
        }
        export const VR: VR;
        export function GetEnumItems(this: globalThis.Enum): Array<globalThis.Enum.DeviceForm>;
        export function FromName(this: globalThis.Enum, name: string): globalThis.Enum.DeviceForm | undefined;
        export function FromValue(this: globalThis.Enum, value: number): globalThis.Enum.DeviceForm | undefined;
    }
    export type DeviceForm = DeviceForm.Console | DeviceForm.Phone | DeviceForm.Tablet | DeviceForm.Desktop | DeviceForm.VR;
    /**
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/DeviceLevel)
     */
    export namespace DeviceLevel {
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/DeviceLevel#Low)
         */
        export interface Low extends globalThis.EnumItem {
            Name: "Low";
            Value: 0;
            EnumType: typeof globalThis.Enum.DeviceLevel;
        }
        export const Low: Low;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/DeviceLevel#Medium)
         */
        export interface Medium extends globalThis.EnumItem {
            Name: "Medium";
            Value: 1;
            EnumType: typeof globalThis.Enum.DeviceLevel;
        }
        export const Medium: Medium;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/DeviceLevel#High)
         */
        export interface High extends globalThis.EnumItem {
            Name: "High";
            Value: 2;
            EnumType: typeof globalThis.Enum.DeviceLevel;
        }
        export const High: High;
        export function GetEnumItems(this: globalThis.Enum): Array<globalThis.Enum.DeviceLevel>;
        export function FromName(this: globalThis.Enum, name: string): globalThis.Enum.DeviceLevel | undefined;
        export function FromValue(this: globalThis.Enum, value: number): globalThis.Enum.DeviceLevel | undefined;
    }
    export type DeviceLevel = DeviceLevel.Low | DeviceLevel.Medium | DeviceLevel.High;
    /**
     * Device category of the client.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/DeviceType)
     */
    export namespace DeviceType {
        /**
         * The client is an unknown device.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/DeviceType#Unknown)
         */
        export interface Unknown extends globalThis.EnumItem {
            Name: "Unknown";
            Value: 0;
            EnumType: typeof globalThis.Enum.DeviceType;
        }
        export const Unknown: Unknown;
        /**
         * The client is a desktop device.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/DeviceType#Desktop)
         */
        export interface Desktop extends globalThis.EnumItem {
            Name: "Desktop";
            Value: 1;
            EnumType: typeof globalThis.Enum.DeviceType;
        }
        export const Desktop: Desktop;
        /**
         * The client is a tablet device.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/DeviceType#Tablet)
         */
        export interface Tablet extends globalThis.EnumItem {
            Name: "Tablet";
            Value: 2;
            EnumType: typeof globalThis.Enum.DeviceType;
        }
        export const Tablet: Tablet;
        /**
         * The client is a phone device.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/DeviceType#Phone)
         */
        export interface Phone extends globalThis.EnumItem {
            Name: "Phone";
            Value: 3;
            EnumType: typeof globalThis.Enum.DeviceType;
        }
        export const Phone: Phone;
        export function GetEnumItems(this: globalThis.Enum): Array<globalThis.Enum.DeviceType>;
        export function FromName(this: globalThis.Enum, name: string): globalThis.Enum.DeviceType | undefined;
        export function FromValue(this: globalThis.Enum, value: number): globalThis.Enum.DeviceType | undefined;
    }
    export type DeviceType = DeviceType.Unknown | DeviceType.Desktop | DeviceType.Tablet | DeviceType.Phone;
    /**
     * Controls whether multiple people can use this dialog, or only one person at a time can use it.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/DialogBehaviorType)
     */
    export namespace DialogBehaviorType {
        /**
         * Only one player can interact with this dialog at a time. The conversation between the player and dialog can be seen by all players.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/DialogBehaviorType#SinglePlayer)
         */
        export interface SinglePlayer extends globalThis.EnumItem {
            Name: "SinglePlayer";
            Value: 0;
            EnumType: typeof globalThis.Enum.DialogBehaviorType;
        }
        export const SinglePlayer: SinglePlayer;
        /**
         * Multiple players can simultaneously interact with this dialog. The conversation between the player and the dialog cannot be seen by other players.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/DialogBehaviorType#MultiplePlayers)
         */
        export interface MultiplePlayers extends globalThis.EnumItem {
            Name: "MultiplePlayers";
            Value: 1;
            EnumType: typeof globalThis.Enum.DialogBehaviorType;
        }
        export const MultiplePlayers: MultiplePlayers;
        export function GetEnumItems(this: globalThis.Enum): Array<globalThis.Enum.DialogBehaviorType>;
        export function FromName(this: globalThis.Enum, name: string): globalThis.Enum.DialogBehaviorType | undefined;
        export function FromValue(this: globalThis.Enum, value: number): globalThis.Enum.DialogBehaviorType | undefined;
    }
    export type DialogBehaviorType = DialogBehaviorType.SinglePlayer | DialogBehaviorType.MultiplePlayers;
    /**
     * The DialogPurpose enum is used to set the icon of a `Dialog`.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/DialogPurpose)
     */
    export namespace DialogPurpose {
        /**
         * Shows an exclamation point ('''!''').
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/DialogPurpose#Quest)
         */
        export interface Quest extends globalThis.EnumItem {
            Name: "Quest";
            Value: 0;
            EnumType: typeof globalThis.Enum.DialogPurpose;
        }
        export const Quest: Quest;
        /**
         * Shows a question mark ('''?''').
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/DialogPurpose#Help)
         */
        export interface Help extends globalThis.EnumItem {
            Name: "Help";
            Value: 1;
            EnumType: typeof globalThis.Enum.DialogPurpose;
        }
        export const Help: Help;
        /**
         * Shows a dollar sign ('''$''').
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/DialogPurpose#Shop)
         */
        export interface Shop extends globalThis.EnumItem {
            Name: "Shop";
            Value: 2;
            EnumType: typeof globalThis.Enum.DialogPurpose;
        }
        export const Shop: Shop;
        export function GetEnumItems(this: globalThis.Enum): Array<globalThis.Enum.DialogPurpose>;
        export function FromName(this: globalThis.Enum, name: string): globalThis.Enum.DialogPurpose | undefined;
        export function FromValue(this: globalThis.Enum, value: number): globalThis.Enum.DialogPurpose | undefined;
    }
    export type DialogPurpose = DialogPurpose.Quest | DialogPurpose.Help | DialogPurpose.Shop;
    /**
     * Sets the `Dialog.Tone` of a `Dialog` object, which influences how the dialog appears.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/DialogTone)
     */
    export namespace DialogTone {
        /**
         * Causes the dialog to have a blue bar on its left-hand side.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/DialogTone#Neutral)
         */
        export interface Neutral extends globalThis.EnumItem {
            Name: "Neutral";
            Value: 0;
            EnumType: typeof globalThis.Enum.DialogTone;
        }
        export const Neutral: Neutral;
        /**
         * Causes the dialog to have a green bar on its left-hand side.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/DialogTone#Friendly)
         */
        export interface Friendly extends globalThis.EnumItem {
            Name: "Friendly";
            Value: 1;
            EnumType: typeof globalThis.Enum.DialogTone;
        }
        export const Friendly: Friendly;
        /**
         * Causes the dialog to have a red bar on its left-hand side.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/DialogTone#Enemy)
         */
        export interface Enemy extends globalThis.EnumItem {
            Name: "Enemy";
            Value: 2;
            EnumType: typeof globalThis.Enum.DialogTone;
        }
        export const Enemy: Enemy;
        export function GetEnumItems(this: globalThis.Enum): Array<globalThis.Enum.DialogTone>;
        export function FromName(this: globalThis.Enum, name: string): globalThis.Enum.DialogTone | undefined;
        export function FromValue(this: globalThis.Enum, value: number): globalThis.Enum.DialogTone | undefined;
    }
    export type DialogTone = DialogTone.Neutral | DialogTone.Friendly | DialogTone.Enemy;
    /**
     * Used by `UIAspectRatioConstraint.DominantAxis` for resizing the object to maintain the aspect ratio.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/DominantAxis)
     */
    export namespace DominantAxis {
        /**
         * The X axis.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/DominantAxis#Width)
         */
        export interface Width extends globalThis.EnumItem {
            Name: "Width";
            Value: 0;
            EnumType: typeof globalThis.Enum.DominantAxis;
        }
        export const Width: Width;
        /**
         * The Y axis.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/DominantAxis#Height)
         */
        export interface Height extends globalThis.EnumItem {
            Name: "Height";
            Value: 1;
            EnumType: typeof globalThis.Enum.DominantAxis;
        }
        export const Height: Height;
        export function GetEnumItems(this: globalThis.Enum): Array<globalThis.Enum.DominantAxis>;
        export function FromName(this: globalThis.Enum, name: string): globalThis.Enum.DominantAxis | undefined;
        export function FromValue(this: globalThis.Enum, value: number): globalThis.Enum.DominantAxis | undefined;
    }
    export type DominantAxis = DominantAxis.Width | DominantAxis.Height;
    /**
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/DraftStatusCode)
     */
    export namespace DraftStatusCode {
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/DraftStatusCode#OK)
         */
        export interface OK extends globalThis.EnumItem {
            Name: "OK";
            Value: 0;
            EnumType: typeof globalThis.Enum.DraftStatusCode;
        }
        export const OK: OK;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/DraftStatusCode#DraftOutdated)
         */
        export interface DraftOutdated extends globalThis.EnumItem {
            Name: "DraftOutdated";
            Value: 1;
            EnumType: typeof globalThis.Enum.DraftStatusCode;
        }
        export const DraftOutdated: DraftOutdated;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/DraftStatusCode#ScriptRemoved)
         */
        export interface ScriptRemoved extends globalThis.EnumItem {
            Name: "ScriptRemoved";
            Value: 2;
            EnumType: typeof globalThis.Enum.DraftStatusCode;
        }
        export const ScriptRemoved: ScriptRemoved;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/DraftStatusCode#DraftCommitted)
         */
        export interface DraftCommitted extends globalThis.EnumItem {
            Name: "DraftCommitted";
            Value: 3;
            EnumType: typeof globalThis.Enum.DraftStatusCode;
        }
        export const DraftCommitted: DraftCommitted;
        export function GetEnumItems(this: globalThis.Enum): Array<globalThis.Enum.DraftStatusCode>;
        export function FromName(this: globalThis.Enum, name: string): globalThis.Enum.DraftStatusCode | undefined;
        export function FromValue(this: globalThis.Enum, value: number): globalThis.Enum.DraftStatusCode | undefined;
    }
    export type DraftStatusCode = DraftStatusCode.OK | DraftStatusCode.DraftOutdated | DraftStatusCode.ScriptRemoved | DraftStatusCode.DraftCommitted;
    /**
     * Used with `DragDetector` as the paradigm to generate proposed motion, given a stream of cursor rays.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/DragDetectorDragStyle)
     */
    export namespace DragDetectorDragStyle {
        /**
         * 1D motion along the detector's `Axis`, by default the world **Y** axis.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/DragDetectorDragStyle#TranslateLine)
         */
        export interface TranslateLine extends globalThis.EnumItem {
            Name: "TranslateLine";
            Value: 0;
            EnumType: typeof globalThis.Enum.DragDetectorDragStyle;
        }
        export const TranslateLine: TranslateLine;
        /**
         * 2D motion in the plane **perpendicular** to the detector's `Axis`, by default the world **XZ** plane.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/DragDetectorDragStyle#TranslatePlane)
         */
        export interface TranslatePlane extends globalThis.EnumItem {
            Name: "TranslatePlane";
            Value: 1;
            EnumType: typeof globalThis.Enum.DragDetectorDragStyle;
        }
        export const TranslatePlane: TranslatePlane;
        /**
         * 2D motion in the plane **perpendicular** to the detector's `Axis` and, when the modifier is active, 1D motion along the detector's `Axis`.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/DragDetectorDragStyle#TranslatePlaneOrLine)
         */
        export interface TranslatePlaneOrLine extends globalThis.EnumItem {
            Name: "TranslatePlaneOrLine";
            Value: 2;
            EnumType: typeof globalThis.Enum.DragDetectorDragStyle;
        }
        export const TranslatePlaneOrLine: TranslatePlaneOrLine;
        /**
         * 1D motion along the detector's `Axis` and, when the modifier is active, 2D motion in the plane **perpendicular** to the detector's `Axis`.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/DragDetectorDragStyle#TranslateLineOrPlane)
         */
        export interface TranslateLineOrPlane extends globalThis.EnumItem {
            Name: "TranslateLineOrPlane";
            Value: 3;
            EnumType: typeof globalThis.Enum.DragDetectorDragStyle;
        }
        export const TranslateLineOrPlane: TranslateLineOrPlane;
        /**
         * 2D motion in the plane perpendicular to the camera's view. In this mode, the plane is constantly updated, even while dragging, and will always face the camera's current view.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/DragDetectorDragStyle#TranslateViewPlane)
         */
        export interface TranslateViewPlane extends globalThis.EnumItem {
            Name: "TranslateViewPlane";
            Value: 4;
            EnumType: typeof globalThis.Enum.DragDetectorDragStyle;
        }
        export const TranslateViewPlane: TranslateViewPlane;
        /**
         * Rotation about the detector's `Axis`, by default the world **Y** axis.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/DragDetectorDragStyle#RotateAxis)
         */
        export interface RotateAxis extends globalThis.EnumItem {
            Name: "RotateAxis";
            Value: 5;
            EnumType: typeof globalThis.Enum.DragDetectorDragStyle;
        }
        export const RotateAxis: RotateAxis;
        /**
         * Trackball rotation, further customized through the `TrackballRadialPullFactor` and `TrackballRollFactor` properties.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/DragDetectorDragStyle#RotateTrackball)
         */
        export interface RotateTrackball extends globalThis.EnumItem {
            Name: "RotateTrackball";
            Value: 6;
            EnumType: typeof globalThis.Enum.DragDetectorDragStyle;
        }
        export const RotateTrackball: RotateTrackball;
        /**
         * Calculates desired motion via a custom function provided through `SetDragStyleFunction()`.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/DragDetectorDragStyle#Scriptable)
         */
        export interface Scriptable extends globalThis.EnumItem {
            Name: "Scriptable";
            Value: 7;
            EnumType: typeof globalThis.Enum.DragDetectorDragStyle;
        }
        export const Scriptable: Scriptable;
        /**
         * **TranslatePlaneOrLine** for mouse and gamepad; **TranslatePlane** for touch; **6DOF** for VR.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/DragDetectorDragStyle#BestForDevice)
         */
        export interface BestForDevice extends globalThis.EnumItem {
            Name: "BestForDevice";
            Value: 8;
            EnumType: typeof globalThis.Enum.DragDetectorDragStyle;
        }
        export const BestForDevice: BestForDevice;
        export function GetEnumItems(this: globalThis.Enum): Array<globalThis.Enum.DragDetectorDragStyle>;
        export function FromName(this: globalThis.Enum, name: string): globalThis.Enum.DragDetectorDragStyle | undefined;
        export function FromValue(this: globalThis.Enum, value: number): globalThis.Enum.DragDetectorDragStyle | undefined;
    }
    export type DragDetectorDragStyle = DragDetectorDragStyle.TranslateLine | DragDetectorDragStyle.TranslatePlane | DragDetectorDragStyle.TranslatePlaneOrLine | DragDetectorDragStyle.TranslateLineOrPlane | DragDetectorDragStyle.TranslateViewPlane | DragDetectorDragStyle.RotateAxis | DragDetectorDragStyle.RotateTrackball | DragDetectorDragStyle.Scriptable | DragDetectorDragStyle.BestForDevice;
    /**
     * Used to control the permission level for which players can interact with a `DragDetector`.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/DragDetectorPermissionPolicy)
     */
    export namespace DragDetectorPermissionPolicy {
        /**
         * No players can interact with the `DragDetector`.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/DragDetectorPermissionPolicy#Nobody)
         */
        export interface Nobody extends globalThis.EnumItem {
            Name: "Nobody";
            Value: 0;
            EnumType: typeof globalThis.Enum.DragDetectorPermissionPolicy;
        }
        export const Nobody: Nobody;
        /**
         * All players can interact with the `DragDetector`.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/DragDetectorPermissionPolicy#Everybody)
         */
        export interface Everybody extends globalThis.EnumItem {
            Name: "Everybody";
            Value: 1;
            EnumType: typeof globalThis.Enum.DragDetectorPermissionPolicy;
        }
        export const Everybody: Everybody;
        /**
         * Invokes the function registered via `DragDetector:SetPermissionPolicyFunction()`, enabling/disabling the detector based on whether the function returns `true` or `false`.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/DragDetectorPermissionPolicy#Scriptable)
         */
        export interface Scriptable extends globalThis.EnumItem {
            Name: "Scriptable";
            Value: 2;
            EnumType: typeof globalThis.Enum.DragDetectorPermissionPolicy;
        }
        export const Scriptable: Scriptable;
        export function GetEnumItems(this: globalThis.Enum): Array<globalThis.Enum.DragDetectorPermissionPolicy>;
        export function FromName(this: globalThis.Enum, name: string): globalThis.Enum.DragDetectorPermissionPolicy | undefined;
        export function FromValue(this: globalThis.Enum, value: number): globalThis.Enum.DragDetectorPermissionPolicy | undefined;
    }
    export type DragDetectorPermissionPolicy = DragDetectorPermissionPolicy.Nobody | DragDetectorPermissionPolicy.Everybody | DragDetectorPermissionPolicy.Scriptable;
    /**
     * Describes how the clicked object will be treated once the desired motion has been calculated.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/DragDetectorResponseStyle)
     */
    export namespace DragDetectorResponseStyle {
        /**
         * For an `Anchored` object both inside the running experience and in Studio edit mode, the position/orientation of the object will be updated to exactly reflect the proposed motion. For an unanchored object, behavior is the same as for an anchored object; however, in a running experience, the object will be anchored at the start of the drag and restored to unanchored upon drag release.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/DragDetectorResponseStyle#Geometric)
         */
        export interface Geometric extends globalThis.EnumItem {
            Name: "Geometric";
            Value: 0;
            EnumType: typeof globalThis.Enum.DragDetectorResponseStyle;
        }
        export const Geometric: Geometric;
        /**
         * An `Anchored` object will default to **Geometric** behavior as it is not affected by forces. An unanchored object will be moved by constraint forces that attempt to bring it to the desired position and/or orientation given by the proposed motion.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/DragDetectorResponseStyle#Physical)
         */
        export interface Physical extends globalThis.EnumItem {
            Name: "Physical";
            Value: 1;
            EnumType: typeof globalThis.Enum.DragDetectorResponseStyle;
        }
        export const Physical: Physical;
        /**
         * The object will not move at all, but `DragFrame` will still be updated and you can respond to drag manipulation however you'd like.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/DragDetectorResponseStyle#Custom)
         */
        export interface Custom extends globalThis.EnumItem {
            Name: "Custom";
            Value: 2;
            EnumType: typeof globalThis.Enum.DragDetectorResponseStyle;
        }
        export const Custom: Custom;
        export function GetEnumItems(this: globalThis.Enum): Array<globalThis.Enum.DragDetectorResponseStyle>;
        export function FromName(this: globalThis.Enum, name: string): globalThis.Enum.DragDetectorResponseStyle | undefined;
        export function FromValue(this: globalThis.Enum, value: number): globalThis.Enum.DragDetectorResponseStyle | undefined;
    }
    export type DragDetectorResponseStyle = DragDetectorResponseStyle.Geometric | DragDetectorResponseStyle.Physical | DragDetectorResponseStyle.Custom;
    /**
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/DraggerCoordinateSpace)
     */
    export namespace DraggerCoordinateSpace {
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/DraggerCoordinateSpace#Object)
         */
        export interface Object extends globalThis.EnumItem {
            Name: "Object";
            Value: 0;
            EnumType: typeof globalThis.Enum.DraggerCoordinateSpace;
        }
        export const Object: Object;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/DraggerCoordinateSpace#World)
         */
        export interface World extends globalThis.EnumItem {
            Name: "World";
            Value: 1;
            EnumType: typeof globalThis.Enum.DraggerCoordinateSpace;
        }
        export const World: World;
        export function GetEnumItems(this: globalThis.Enum): Array<globalThis.Enum.DraggerCoordinateSpace>;
        export function FromName(this: globalThis.Enum, name: string): globalThis.Enum.DraggerCoordinateSpace | undefined;
        export function FromValue(this: globalThis.Enum, value: number): globalThis.Enum.DraggerCoordinateSpace | undefined;
    }
    export type DraggerCoordinateSpace = DraggerCoordinateSpace.Object | DraggerCoordinateSpace.World;
    /**
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/DraggerMovementMode)
     */
    export namespace DraggerMovementMode {
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/DraggerMovementMode#Geometric)
         */
        export interface Geometric extends globalThis.EnumItem {
            Name: "Geometric";
            Value: 0;
            EnumType: typeof globalThis.Enum.DraggerMovementMode;
        }
        export const Geometric: Geometric;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/DraggerMovementMode#Physical)
         */
        export interface Physical extends globalThis.EnumItem {
            Name: "Physical";
            Value: 1;
            EnumType: typeof globalThis.Enum.DraggerMovementMode;
        }
        export const Physical: Physical;
        export function GetEnumItems(this: globalThis.Enum): Array<globalThis.Enum.DraggerMovementMode>;
        export function FromName(this: globalThis.Enum, name: string): globalThis.Enum.DraggerMovementMode | undefined;
        export function FromValue(this: globalThis.Enum, value: number): globalThis.Enum.DraggerMovementMode | undefined;
    }
    export type DraggerMovementMode = DraggerMovementMode.Geometric | DraggerMovementMode.Physical;
    /**
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/DraggingScrollBar)
     */
    export namespace DraggingScrollBar {
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/DraggingScrollBar#None)
         */
        export interface None extends globalThis.EnumItem {
            Name: "None";
            Value: 0;
            EnumType: typeof globalThis.Enum.DraggingScrollBar;
        }
        export const None: None;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/DraggingScrollBar#Horizontal)
         */
        export interface Horizontal extends globalThis.EnumItem {
            Name: "Horizontal";
            Value: 1;
            EnumType: typeof globalThis.Enum.DraggingScrollBar;
        }
        export const Horizontal: Horizontal;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/DraggingScrollBar#Vertical)
         */
        export interface Vertical extends globalThis.EnumItem {
            Name: "Vertical";
            Value: 2;
            EnumType: typeof globalThis.Enum.DraggingScrollBar;
        }
        export const Vertical: Vertical;
        export function GetEnumItems(this: globalThis.Enum): Array<globalThis.Enum.DraggingScrollBar>;
        export function FromName(this: globalThis.Enum, name: string): globalThis.Enum.DraggingScrollBar | undefined;
        export function FromValue(this: globalThis.Enum, value: number): globalThis.Enum.DraggingScrollBar | undefined;
    }
    export type DraggingScrollBar = DraggingScrollBar.None | DraggingScrollBar.Horizontal | DraggingScrollBar.Vertical;
    /**
     * Enum used with `TweenInfo.new()` to control the direction `Tweens` play in.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/EasingDirection)
     */
    export namespace EasingDirection {
        /**
         * The easing style is applied in a forward direction.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/EasingDirection#In)
         */
        export interface In extends globalThis.EnumItem {
            Name: "In";
            Value: 0;
            EnumType: typeof globalThis.Enum.EasingDirection;
        }
        export const In: In;
        /**
         * The easing style is applied in a reverse direction.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/EasingDirection#Out)
         */
        export interface Out extends globalThis.EnumItem {
            Name: "Out";
            Value: 1;
            EnumType: typeof globalThis.Enum.EasingDirection;
        }
        export const Out: Out;
        /**
         * The easing style is applied forward for the first half and in reverse for the second half.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/EasingDirection#InOut)
         */
        export interface InOut extends globalThis.EnumItem {
            Name: "InOut";
            Value: 2;
            EnumType: typeof globalThis.Enum.EasingDirection;
        }
        export const InOut: InOut;
        export function GetEnumItems(this: globalThis.Enum): Array<globalThis.Enum.EasingDirection>;
        export function FromName(this: globalThis.Enum, name: string): globalThis.Enum.EasingDirection | undefined;
        export function FromValue(this: globalThis.Enum, value: number): globalThis.Enum.EasingDirection | undefined;
    }
    export type EasingDirection = EasingDirection.In | EasingDirection.Out | EasingDirection.InOut;
    /**
     * Enum used with `TweenInfo.new` to control the motion of a `Tween`.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/EasingStyle)
     */
    export namespace EasingStyle {
        /**
         * Moves at a constant speed.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/EasingStyle#Linear)
         */
        export interface Linear extends globalThis.EnumItem {
            Name: "Linear";
            Value: 0;
            EnumType: typeof globalThis.Enum.EasingStyle;
        }
        export const Linear: Linear;
        /**
         * Speed is determined by a sine wave for a gentle easing motion.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/EasingStyle#Sine)
         */
        export interface Sine extends globalThis.EnumItem {
            Name: "Sine";
            Value: 1;
            EnumType: typeof globalThis.Enum.EasingStyle;
        }
        export const Sine: Sine;
        /**
         * Slightly overshoots the target, then backs into place.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/EasingStyle#Back)
         */
        export interface Back extends globalThis.EnumItem {
            Name: "Back";
            Value: 2;
            EnumType: typeof globalThis.Enum.EasingStyle;
        }
        export const Back: Back;
        /**
         * Similar to `Sine` but with a slightly sharper curve based on quadratic interpolation.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/EasingStyle#Quad)
         */
        export interface Quad extends globalThis.EnumItem {
            Name: "Quad";
            Value: 3;
            EnumType: typeof globalThis.Enum.EasingStyle;
        }
        export const Quad: Quad;
        /**
         * Similar to `Cubic` but with an even sharper curve based on quartic interpolation.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/EasingStyle#Quart)
         */
        export interface Quart extends globalThis.EnumItem {
            Name: "Quart";
            Value: 4;
            EnumType: typeof globalThis.Enum.EasingStyle;
        }
        export const Quart: Quart;
        /**
         * Similar to `Quart` but with an even sharper curve based on quintic interpolation.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/EasingStyle#Quint)
         */
        export interface Quint extends globalThis.EnumItem {
            Name: "Quint";
            Value: 5;
            EnumType: typeof globalThis.Enum.EasingStyle;
        }
        export const Quint: Quint;
        /**
         * Bounces backwards multiple times after reaching the target, before eventually settling.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/EasingStyle#Bounce)
         */
        export interface Bounce extends globalThis.EnumItem {
            Name: "Bounce";
            Value: 6;
            EnumType: typeof globalThis.Enum.EasingStyle;
        }
        export const Bounce: Bounce;
        /**
         * Moves as if attached to a rubber band, overshooting the target several times.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/EasingStyle#Elastic)
         */
        export interface Elastic extends globalThis.EnumItem {
            Name: "Elastic";
            Value: 7;
            EnumType: typeof globalThis.Enum.EasingStyle;
        }
        export const Elastic: Elastic;
        /**
         * The sharpest curve based on exponential interpolation.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/EasingStyle#Exponential)
         */
        export interface Exponential extends globalThis.EnumItem {
            Name: "Exponential";
            Value: 8;
            EnumType: typeof globalThis.Enum.EasingStyle;
        }
        export const Exponential: Exponential;
        /**
         * Follows a circular arc, such that acceleration is more sudden and deceleration more gradual versus `Quint` or `Exponential`.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/EasingStyle#Circular)
         */
        export interface Circular extends globalThis.EnumItem {
            Name: "Circular";
            Value: 9;
            EnumType: typeof globalThis.Enum.EasingStyle;
        }
        export const Circular: Circular;
        /**
         * Similar to `Quad` but with a slightly sharper curve based on cubic interpolation.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/EasingStyle#Cubic)
         */
        export interface Cubic extends globalThis.EnumItem {
            Name: "Cubic";
            Value: 10;
            EnumType: typeof globalThis.Enum.EasingStyle;
        }
        export const Cubic: Cubic;
        export function GetEnumItems(this: globalThis.Enum): Array<globalThis.Enum.EasingStyle>;
        export function FromName(this: globalThis.Enum, name: string): globalThis.Enum.EasingStyle | undefined;
        export function FromValue(this: globalThis.Enum, value: number): globalThis.Enum.EasingStyle | undefined;
    }
    export type EasingStyle = EasingStyle.Linear | EasingStyle.Sine | EasingStyle.Back | EasingStyle.Quad | EasingStyle.Quart | EasingStyle.Quint | EasingStyle.Bounce | EasingStyle.Elastic | EasingStyle.Exponential | EasingStyle.Circular | EasingStyle.Cubic;
    /**
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/EditableStatus)
     */
    export namespace EditableStatus {
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/EditableStatus#Unknown)
         */
        export interface Unknown extends globalThis.EnumItem {
            Name: "Unknown";
            Value: 0;
            EnumType: typeof globalThis.Enum.EditableStatus;
        }
        export const Unknown: Unknown;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/EditableStatus#Allowed)
         */
        export interface Allowed extends globalThis.EnumItem {
            Name: "Allowed";
            Value: 1;
            EnumType: typeof globalThis.Enum.EditableStatus;
        }
        export const Allowed: Allowed;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/EditableStatus#Disallowed)
         */
        export interface Disallowed extends globalThis.EnumItem {
            Name: "Disallowed";
            Value: 2;
            EnumType: typeof globalThis.Enum.EditableStatus;
        }
        export const Disallowed: Disallowed;
        export function GetEnumItems(this: globalThis.Enum): Array<globalThis.Enum.EditableStatus>;
        export function FromName(this: globalThis.Enum, name: string): globalThis.Enum.EditableStatus | undefined;
        export function FromValue(this: globalThis.Enum, value: number): globalThis.Enum.EditableStatus | undefined;
    }
    export type EditableStatus = EditableStatus.Unknown | EditableStatus.Allowed | EditableStatus.Disallowed;
    /**
     * This enum is used by `ScrollingFrame.ElasticBehavior` to specifies how elastic scrolling behaves for a `ScrollingFrame`.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/ElasticBehavior)
     */
    export namespace ElasticBehavior {
        /**
         * The scrollbar will be elastic when there is content to be scrolled to.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/ElasticBehavior#WhenScrollable)
         */
        export interface WhenScrollable extends globalThis.EnumItem {
            Name: "WhenScrollable";
            Value: 0;
            EnumType: typeof globalThis.Enum.ElasticBehavior;
        }
        export const WhenScrollable: WhenScrollable;
        /**
         * The scrollbar will always have elastic scrolling available, even when there isn't content available to scroll to.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/ElasticBehavior#Always)
         */
        export interface Always extends globalThis.EnumItem {
            Name: "Always";
            Value: 1;
            EnumType: typeof globalThis.Enum.ElasticBehavior;
        }
        export const Always: Always;
        /**
         * The scrollbar will never have elastic scrolling available.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/ElasticBehavior#Never)
         */
        export interface Never extends globalThis.EnumItem {
            Name: "Never";
            Value: 2;
            EnumType: typeof globalThis.Enum.ElasticBehavior;
        }
        export const Never: Never;
        export function GetEnumItems(this: globalThis.Enum): Array<globalThis.Enum.ElasticBehavior>;
        export function FromName(this: globalThis.Enum, name: string): globalThis.Enum.ElasticBehavior | undefined;
        export function FromValue(this: globalThis.Enum, value: number): globalThis.Enum.ElasticBehavior | undefined;
    }
    export type ElasticBehavior = ElasticBehavior.WhenScrollable | ElasticBehavior.Always | ElasticBehavior.Never;
    /**
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/EnviromentalPhysicsThrottle)
     */
    export namespace EnviromentalPhysicsThrottle {
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/EnviromentalPhysicsThrottle#DefaultAuto)
         */
        export interface DefaultAuto extends globalThis.EnumItem {
            Name: "DefaultAuto";
            Value: 0;
            EnumType: typeof globalThis.Enum.EnviromentalPhysicsThrottle;
        }
        export const DefaultAuto: DefaultAuto;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/EnviromentalPhysicsThrottle#Disabled)
         */
        export interface Disabled extends globalThis.EnumItem {
            Name: "Disabled";
            Value: 1;
            EnumType: typeof globalThis.Enum.EnviromentalPhysicsThrottle;
        }
        export const Disabled: Disabled;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/EnviromentalPhysicsThrottle#Always)
         */
        export interface Always extends globalThis.EnumItem {
            Name: "Always";
            Value: 2;
            EnumType: typeof globalThis.Enum.EnviromentalPhysicsThrottle;
        }
        export const Always: Always;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/EnviromentalPhysicsThrottle#Skip2)
         */
        export interface Skip2 extends globalThis.EnumItem {
            Name: "Skip2";
            Value: 3;
            EnumType: typeof globalThis.Enum.EnviromentalPhysicsThrottle;
        }
        export const Skip2: Skip2;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/EnviromentalPhysicsThrottle#Skip4)
         */
        export interface Skip4 extends globalThis.EnumItem {
            Name: "Skip4";
            Value: 4;
            EnumType: typeof globalThis.Enum.EnviromentalPhysicsThrottle;
        }
        export const Skip4: Skip4;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/EnviromentalPhysicsThrottle#Skip8)
         */
        export interface Skip8 extends globalThis.EnumItem {
            Name: "Skip8";
            Value: 5;
            EnumType: typeof globalThis.Enum.EnviromentalPhysicsThrottle;
        }
        export const Skip8: Skip8;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/EnviromentalPhysicsThrottle#Skip16)
         */
        export interface Skip16 extends globalThis.EnumItem {
            Name: "Skip16";
            Value: 6;
            EnumType: typeof globalThis.Enum.EnviromentalPhysicsThrottle;
        }
        export const Skip16: Skip16;
        export function GetEnumItems(this: globalThis.Enum): Array<globalThis.Enum.EnviromentalPhysicsThrottle>;
        export function FromName(this: globalThis.Enum, name: string): globalThis.Enum.EnviromentalPhysicsThrottle | undefined;
        export function FromValue(this: globalThis.Enum, value: number): globalThis.Enum.EnviromentalPhysicsThrottle | undefined;
    }
    export type EnviromentalPhysicsThrottle = EnviromentalPhysicsThrottle.DefaultAuto | EnviromentalPhysicsThrottle.Disabled | EnviromentalPhysicsThrottle.Always | EnviromentalPhysicsThrottle.Skip2 | EnviromentalPhysicsThrottle.Skip4 | EnviromentalPhysicsThrottle.Skip8 | EnviromentalPhysicsThrottle.Skip16;
    /**
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/ExperienceAuthScope)
     */
    export namespace ExperienceAuthScope {
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/ExperienceAuthScope#DefaultScope)
         */
        export interface DefaultScope extends globalThis.EnumItem {
            Name: "DefaultScope";
            Value: 0;
            EnumType: typeof globalThis.Enum.ExperienceAuthScope;
        }
        export const DefaultScope: DefaultScope;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/ExperienceAuthScope#CreatorAssetsCreate)
         */
        export interface CreatorAssetsCreate extends globalThis.EnumItem {
            Name: "CreatorAssetsCreate";
            Value: 1;
            EnumType: typeof globalThis.Enum.ExperienceAuthScope;
        }
        export const CreatorAssetsCreate: CreatorAssetsCreate;
        export function GetEnumItems(this: globalThis.Enum): Array<globalThis.Enum.ExperienceAuthScope>;
        export function FromName(this: globalThis.Enum, name: string): globalThis.Enum.ExperienceAuthScope | undefined;
        export function FromValue(this: globalThis.Enum, value: number): globalThis.Enum.ExperienceAuthScope | undefined;
    }
    export type ExperienceAuthScope = ExperienceAuthScope.DefaultScope | ExperienceAuthScope.CreatorAssetsCreate;
    /**
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/ExplosionType)
     */
    export namespace ExplosionType {
        /**
         * Explosion does not generate craters.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/ExplosionType#NoCraters)
         */
        export interface NoCraters extends globalThis.EnumItem {
            Name: "NoCraters";
            Value: 0;
            EnumType: typeof globalThis.Enum.ExplosionType;
        }
        export const NoCraters: NoCraters;
        /**
         * Explosion generates craters.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/ExplosionType#Craters)
         */
        export interface Craters extends globalThis.EnumItem {
            Name: "Craters";
            Value: 1;
            EnumType: typeof globalThis.Enum.ExplosionType;
        }
        export const Craters: Craters;
        /**
         * @deprecated renamed to Craters
         */
        export const CratersAndDebris: Craters;
        export function GetEnumItems(this: globalThis.Enum): Array<globalThis.Enum.ExplosionType>;
        export function FromName(this: globalThis.Enum, name: string): globalThis.Enum.ExplosionType | undefined;
        export function FromValue(this: globalThis.Enum, value: number): globalThis.Enum.ExplosionType | undefined;
    }
    export type ExplosionType = ExplosionType.NoCraters | ExplosionType.Craters;
    /**
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/FACSDataLod)
     */
    export namespace FACSDataLod {
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/FACSDataLod#LOD0)
         */
        export interface LOD0 extends globalThis.EnumItem {
            Name: "LOD0";
            Value: 0;
            EnumType: typeof globalThis.Enum.FACSDataLod;
        }
        export const LOD0: LOD0;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/FACSDataLod#LOD1)
         */
        export interface LOD1 extends globalThis.EnumItem {
            Name: "LOD1";
            Value: 1;
            EnumType: typeof globalThis.Enum.FACSDataLod;
        }
        export const LOD1: LOD1;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/FACSDataLod#LODCount)
         */
        export interface LODCount extends globalThis.EnumItem {
            Name: "LODCount";
            Value: 2;
            EnumType: typeof globalThis.Enum.FACSDataLod;
        }
        export const LODCount: LODCount;
        export function GetEnumItems(this: globalThis.Enum): Array<globalThis.Enum.FACSDataLod>;
        export function FromName(this: globalThis.Enum, name: string): globalThis.Enum.FACSDataLod | undefined;
        export function FromValue(this: globalThis.Enum, value: number): globalThis.Enum.FACSDataLod | undefined;
    }
    export type FACSDataLod = FACSDataLod.LOD0 | FACSDataLod.LOD1 | FACSDataLod.LODCount;
    /**
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/FacialAnimationStreamingState)
     */
    export namespace FacialAnimationStreamingState {
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/FacialAnimationStreamingState#None)
         */
        export interface None extends globalThis.EnumItem {
            Name: "None";
            Value: 0;
            EnumType: typeof globalThis.Enum.FacialAnimationStreamingState;
        }
        export const None: None;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/FacialAnimationStreamingState#Audio)
         */
        export interface Audio extends globalThis.EnumItem {
            Name: "Audio";
            Value: 1;
            EnumType: typeof globalThis.Enum.FacialAnimationStreamingState;
        }
        export const Audio: Audio;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/FacialAnimationStreamingState#Video)
         */
        export interface Video extends globalThis.EnumItem {
            Name: "Video";
            Value: 2;
            EnumType: typeof globalThis.Enum.FacialAnimationStreamingState;
        }
        export const Video: Video;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/FacialAnimationStreamingState#Place)
         */
        export interface Place extends globalThis.EnumItem {
            Name: "Place";
            Value: 4;
            EnumType: typeof globalThis.Enum.FacialAnimationStreamingState;
        }
        export const Place: Place;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/FacialAnimationStreamingState#Server)
         */
        export interface Server extends globalThis.EnumItem {
            Name: "Server";
            Value: 8;
            EnumType: typeof globalThis.Enum.FacialAnimationStreamingState;
        }
        export const Server: Server;
        export function GetEnumItems(this: globalThis.Enum): Array<globalThis.Enum.FacialAnimationStreamingState>;
        export function FromName(this: globalThis.Enum, name: string): globalThis.Enum.FacialAnimationStreamingState | undefined;
        export function FromValue(this: globalThis.Enum, value: number): globalThis.Enum.FacialAnimationStreamingState | undefined;
    }
    export type FacialAnimationStreamingState = FacialAnimationStreamingState.None | FacialAnimationStreamingState.Audio | FacialAnimationStreamingState.Video | FacialAnimationStreamingState.Place | FacialAnimationStreamingState.Server;
    /**
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/FieldOfViewMode)
     */
    export namespace FieldOfViewMode {
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/FieldOfViewMode#Vertical)
         */
        export interface Vertical extends globalThis.EnumItem {
            Name: "Vertical";
            Value: 0;
            EnumType: typeof globalThis.Enum.FieldOfViewMode;
        }
        export const Vertical: Vertical;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/FieldOfViewMode#Diagonal)
         */
        export interface Diagonal extends globalThis.EnumItem {
            Name: "Diagonal";
            Value: 1;
            EnumType: typeof globalThis.Enum.FieldOfViewMode;
        }
        export const Diagonal: Diagonal;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/FieldOfViewMode#MaxAxis)
         */
        export interface MaxAxis extends globalThis.EnumItem {
            Name: "MaxAxis";
            Value: 2;
            EnumType: typeof globalThis.Enum.FieldOfViewMode;
        }
        export const MaxAxis: MaxAxis;
        export function GetEnumItems(this: globalThis.Enum): Array<globalThis.Enum.FieldOfViewMode>;
        export function FromName(this: globalThis.Enum, name: string): globalThis.Enum.FieldOfViewMode | undefined;
        export function FromValue(this: globalThis.Enum, value: number): globalThis.Enum.FieldOfViewMode | undefined;
    }
    export type FieldOfViewMode = FieldOfViewMode.Vertical | FieldOfViewMode.Diagonal | FieldOfViewMode.MaxAxis;
    /**
     * Used by `UIGridStyleLayout.FillDirection` to control which direction elements are placed.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/FillDirection)
     */
    export namespace FillDirection {
        /**
         * Fill in the left-to-right direction.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/FillDirection#Horizontal)
         */
        export interface Horizontal extends globalThis.EnumItem {
            Name: "Horizontal";
            Value: 0;
            EnumType: typeof globalThis.Enum.FillDirection;
        }
        export const Horizontal: Horizontal;
        /**
         * Fill in the top-to-bottom direction.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/FillDirection#Vertical)
         */
        export interface Vertical extends globalThis.EnumItem {
            Name: "Vertical";
            Value: 1;
            EnumType: typeof globalThis.Enum.FillDirection;
        }
        export const Vertical: Vertical;
        export function GetEnumItems(this: globalThis.Enum): Array<globalThis.Enum.FillDirection>;
        export function FromName(this: globalThis.Enum, name: string): globalThis.Enum.FillDirection | undefined;
        export function FromValue(this: globalThis.Enum, value: number): globalThis.Enum.FillDirection | undefined;
    }
    export type FillDirection = FillDirection.Horizontal | FillDirection.Vertical;
    /**
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/FilterErrorType)
     */
    export namespace FilterErrorType {
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/FilterErrorType#BackslashNotEscapingAnything)
         */
        export interface BackslashNotEscapingAnything extends globalThis.EnumItem {
            Name: "BackslashNotEscapingAnything";
            Value: 0;
            EnumType: typeof globalThis.Enum.FilterErrorType;
        }
        export const BackslashNotEscapingAnything: BackslashNotEscapingAnything;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/FilterErrorType#BadBespokeFilter)
         */
        export interface BadBespokeFilter extends globalThis.EnumItem {
            Name: "BadBespokeFilter";
            Value: 1;
            EnumType: typeof globalThis.Enum.FilterErrorType;
        }
        export const BadBespokeFilter: BadBespokeFilter;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/FilterErrorType#BadName)
         */
        export interface BadName extends globalThis.EnumItem {
            Name: "BadName";
            Value: 2;
            EnumType: typeof globalThis.Enum.FilterErrorType;
        }
        export const BadName: BadName;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/FilterErrorType#IncompleteOr)
         */
        export interface IncompleteOr extends globalThis.EnumItem {
            Name: "IncompleteOr";
            Value: 3;
            EnumType: typeof globalThis.Enum.FilterErrorType;
        }
        export const IncompleteOr: IncompleteOr;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/FilterErrorType#IncompleteParenthesis)
         */
        export interface IncompleteParenthesis extends globalThis.EnumItem {
            Name: "IncompleteParenthesis";
            Value: 4;
            EnumType: typeof globalThis.Enum.FilterErrorType;
        }
        export const IncompleteParenthesis: IncompleteParenthesis;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/FilterErrorType#InvalidDoubleStar)
         */
        export interface InvalidDoubleStar extends globalThis.EnumItem {
            Name: "InvalidDoubleStar";
            Value: 5;
            EnumType: typeof globalThis.Enum.FilterErrorType;
        }
        export const InvalidDoubleStar: InvalidDoubleStar;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/FilterErrorType#InvalidTilde)
         */
        export interface InvalidTilde extends globalThis.EnumItem {
            Name: "InvalidTilde";
            Value: 6;
            EnumType: typeof globalThis.Enum.FilterErrorType;
        }
        export const InvalidTilde: InvalidTilde;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/FilterErrorType#PropertyBadOperator)
         */
        export interface PropertyBadOperator extends globalThis.EnumItem {
            Name: "PropertyBadOperator";
            Value: 7;
            EnumType: typeof globalThis.Enum.FilterErrorType;
        }
        export const PropertyBadOperator: PropertyBadOperator;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/FilterErrorType#PropertyDoesNotExist)
         */
        export interface PropertyDoesNotExist extends globalThis.EnumItem {
            Name: "PropertyDoesNotExist";
            Value: 8;
            EnumType: typeof globalThis.Enum.FilterErrorType;
        }
        export const PropertyDoesNotExist: PropertyDoesNotExist;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/FilterErrorType#PropertyInvalidField)
         */
        export interface PropertyInvalidField extends globalThis.EnumItem {
            Name: "PropertyInvalidField";
            Value: 9;
            EnumType: typeof globalThis.Enum.FilterErrorType;
        }
        export const PropertyInvalidField: PropertyInvalidField;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/FilterErrorType#PropertyInvalidValue)
         */
        export interface PropertyInvalidValue extends globalThis.EnumItem {
            Name: "PropertyInvalidValue";
            Value: 10;
            EnumType: typeof globalThis.Enum.FilterErrorType;
        }
        export const PropertyInvalidValue: PropertyInvalidValue;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/FilterErrorType#PropertyUnsupportedFields)
         */
        export interface PropertyUnsupportedFields extends globalThis.EnumItem {
            Name: "PropertyUnsupportedFields";
            Value: 11;
            EnumType: typeof globalThis.Enum.FilterErrorType;
        }
        export const PropertyUnsupportedFields: PropertyUnsupportedFields;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/FilterErrorType#PropertyUnsupportedProperty)
         */
        export interface PropertyUnsupportedProperty extends globalThis.EnumItem {
            Name: "PropertyUnsupportedProperty";
            Value: 12;
            EnumType: typeof globalThis.Enum.FilterErrorType;
        }
        export const PropertyUnsupportedProperty: PropertyUnsupportedProperty;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/FilterErrorType#UnexpectedNameIndex)
         */
        export interface UnexpectedNameIndex extends globalThis.EnumItem {
            Name: "UnexpectedNameIndex";
            Value: 13;
            EnumType: typeof globalThis.Enum.FilterErrorType;
        }
        export const UnexpectedNameIndex: UnexpectedNameIndex;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/FilterErrorType#UnexpectedToken)
         */
        export interface UnexpectedToken extends globalThis.EnumItem {
            Name: "UnexpectedToken";
            Value: 14;
            EnumType: typeof globalThis.Enum.FilterErrorType;
        }
        export const UnexpectedToken: UnexpectedToken;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/FilterErrorType#UnfinishedBinaryOperator)
         */
        export interface UnfinishedBinaryOperator extends globalThis.EnumItem {
            Name: "UnfinishedBinaryOperator";
            Value: 15;
            EnumType: typeof globalThis.Enum.FilterErrorType;
        }
        export const UnfinishedBinaryOperator: UnfinishedBinaryOperator;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/FilterErrorType#UnfinishedQuote)
         */
        export interface UnfinishedQuote extends globalThis.EnumItem {
            Name: "UnfinishedQuote";
            Value: 16;
            EnumType: typeof globalThis.Enum.FilterErrorType;
        }
        export const UnfinishedQuote: UnfinishedQuote;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/FilterErrorType#UnknownBespokeFilter)
         */
        export interface UnknownBespokeFilter extends globalThis.EnumItem {
            Name: "UnknownBespokeFilter";
            Value: 17;
            EnumType: typeof globalThis.Enum.FilterErrorType;
        }
        export const UnknownBespokeFilter: UnknownBespokeFilter;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/FilterErrorType#WildcardInProperty)
         */
        export interface WildcardInProperty extends globalThis.EnumItem {
            Name: "WildcardInProperty";
            Value: 18;
            EnumType: typeof globalThis.Enum.FilterErrorType;
        }
        export const WildcardInProperty: WildcardInProperty;
        export function GetEnumItems(this: globalThis.Enum): Array<globalThis.Enum.FilterErrorType>;
        export function FromName(this: globalThis.Enum, name: string): globalThis.Enum.FilterErrorType | undefined;
        export function FromValue(this: globalThis.Enum, value: number): globalThis.Enum.FilterErrorType | undefined;
    }
    export type FilterErrorType = FilterErrorType.BackslashNotEscapingAnything | FilterErrorType.BadBespokeFilter | FilterErrorType.BadName | FilterErrorType.IncompleteOr | FilterErrorType.IncompleteParenthesis | FilterErrorType.InvalidDoubleStar | FilterErrorType.InvalidTilde | FilterErrorType.PropertyBadOperator | FilterErrorType.PropertyDoesNotExist | FilterErrorType.PropertyInvalidField | FilterErrorType.PropertyInvalidValue | FilterErrorType.PropertyUnsupportedFields | FilterErrorType.PropertyUnsupportedProperty | FilterErrorType.UnexpectedNameIndex | FilterErrorType.UnexpectedToken | FilterErrorType.UnfinishedBinaryOperator | FilterErrorType.UnfinishedQuote | FilterErrorType.UnknownBespokeFilter | FilterErrorType.WildcardInProperty;
    /**
     * Used to determine the result of a text filter request.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/FilterResult)
     */
    export namespace FilterResult {
        /**
         * Text accepted by filter.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/FilterResult#Accepted)
         */
        export interface Accepted extends globalThis.EnumItem {
            Name: "Accepted";
            Value: 0;
            EnumType: typeof globalThis.Enum.FilterResult;
        }
        export const Accepted: Accepted;
        /**
         * Text rejected by filter.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/FilterResult#Rejected)
         */
        export interface Rejected extends globalThis.EnumItem {
            Name: "Rejected";
            Value: 1;
            EnumType: typeof globalThis.Enum.FilterResult;
        }
        export const Rejected: Rejected;
        export function GetEnumItems(this: globalThis.Enum): Array<globalThis.Enum.FilterResult>;
        export function FromName(this: globalThis.Enum, name: string): globalThis.Enum.FilterResult | undefined;
        export function FromValue(this: globalThis.Enum, value: number): globalThis.Enum.FilterResult | undefined;
    }
    export type FilterResult = FilterResult.Accepted | FilterResult.Rejected;
    /**
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/FinishRecordingOperation)
     */
    export namespace FinishRecordingOperation {
        /**
         * Cancels the recording, automatically undoing any work in progress.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/FinishRecordingOperation#Cancel)
         */
        export interface Cancel extends globalThis.EnumItem {
            Name: "Cancel";
            Value: 0;
            EnumType: typeof globalThis.Enum.FinishRecordingOperation;
        }
        export const Cancel: Cancel;
        /**
         * Commits the recorded work.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/FinishRecordingOperation#Commit)
         */
        export interface Commit extends globalThis.EnumItem {
            Name: "Commit";
            Value: 1;
            EnumType: typeof globalThis.Enum.FinishRecordingOperation;
        }
        export const Commit: Commit;
        /**
         * Commits the recorded work and merges with the previous recording if possible.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/FinishRecordingOperation#Append)
         */
        export interface Append extends globalThis.EnumItem {
            Name: "Append";
            Value: 2;
            EnumType: typeof globalThis.Enum.FinishRecordingOperation;
        }
        export const Append: Append;
        export function GetEnumItems(this: globalThis.Enum): Array<globalThis.Enum.FinishRecordingOperation>;
        export function FromName(this: globalThis.Enum, name: string): globalThis.Enum.FinishRecordingOperation | undefined;
        export function FromValue(this: globalThis.Enum, value: number): globalThis.Enum.FinishRecordingOperation | undefined;
    }
    export type FinishRecordingOperation = FinishRecordingOperation.Cancel | FinishRecordingOperation.Commit | FinishRecordingOperation.Append;
    /**
     * Determines the geometric representation used to compute aerodynamic forces.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/FluidFidelity)
     */
    export namespace FluidFidelity {
        /**
         * Let the physics engine select the geometric representation for aerodynamic force and torque calculations.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/FluidFidelity#Automatic)
         */
        export interface Automatic extends globalThis.EnumItem {
            Name: "Automatic";
            Value: 0;
            EnumType: typeof globalThis.Enum.FluidFidelity;
        }
        export const Automatic: Automatic;
        /**
         * Use the current collision geometry specified by `TriangleMeshPart.CollisionFidelity` for aerodynamic force and torque calculations .
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/FluidFidelity#UseCollisionGeometry)
         */
        export interface UseCollisionGeometry extends globalThis.EnumItem {
            Name: "UseCollisionGeometry";
            Value: 1;
            EnumType: typeof globalThis.Enum.FluidFidelity;
        }
        export const UseCollisionGeometry: UseCollisionGeometry;
        /**
         * Force the engine to compute aerodynamic forces and torques using a more precise geometry representation based on the original mesh. This option may increase join and replication time if used on a large scale.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/FluidFidelity#UsePreciseGeometry)
         */
        export interface UsePreciseGeometry extends globalThis.EnumItem {
            Name: "UsePreciseGeometry";
            Value: 2;
            EnumType: typeof globalThis.Enum.FluidFidelity;
        }
        export const UsePreciseGeometry: UsePreciseGeometry;
        export function GetEnumItems(this: globalThis.Enum): Array<globalThis.Enum.FluidFidelity>;
        export function FromName(this: globalThis.Enum, name: string): globalThis.Enum.FluidFidelity | undefined;
        export function FromValue(this: globalThis.Enum, value: number): globalThis.Enum.FluidFidelity | undefined;
    }
    export type FluidFidelity = FluidFidelity.Automatic | FluidFidelity.UseCollisionGeometry | FluidFidelity.UsePreciseGeometry;
    /**
     * Controls the enablement of aerodynamic forces on parts and assemblies in the workspace.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/FluidForces)
     */
    export namespace FluidForces {
        /**
         * Aerodynamic forces will not be calculated on any `BaseParts`.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/FluidForces#Default)
         */
        export interface Default extends globalThis.EnumItem {
            Name: "Default";
            Value: 0;
            EnumType: typeof globalThis.Enum.FluidForces;
        }
        export const Default: Default;
        /**
         * Aerodynamic forces will be calculated on `BaseParts` with `EnableFluidForces` set to true. During the beta phase, the behavior of the aerodynamic force model may change as the model improves.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/FluidForces#Experimental)
         */
        export interface Experimental extends globalThis.EnumItem {
            Name: "Experimental";
            Value: 1;
            EnumType: typeof globalThis.Enum.FluidForces;
        }
        export const Experimental: Experimental;
        export function GetEnumItems(this: globalThis.Enum): Array<globalThis.Enum.FluidForces>;
        export function FromName(this: globalThis.Enum, name: string): globalThis.Enum.FluidForces | undefined;
        export function FromValue(this: globalThis.Enum, value: number): globalThis.Enum.FluidForces | undefined;
    }
    export type FluidForces = FluidForces.Default | FluidForces.Experimental;
    /**
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/Font)
     */
    export namespace Font {
        /**
         * ![](https://prod.docsiteassets.roblox.com/../../../assets/engine-api/enums/Font/Legacy.png)
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/Font#Legacy)
         */
        export interface Legacy extends globalThis.EnumItem {
            Name: "Legacy";
            Value: 0;
            EnumType: typeof globalThis.Enum.Font;
        }
        export const Legacy: Legacy;
        /**
         * Arial has been removed from Roblox. Use Arimo instead.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/Font#Arial)
         */
        export interface Arial extends globalThis.EnumItem {
            Name: "Arial";
            Value: 1;
            EnumType: typeof globalThis.Enum.Font;
        }
        export const Arial: Arial;
        /**
         * Arial has been removed from Roblox. Use Arimo instead.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/Font#ArialBold)
         */
        export interface ArialBold extends globalThis.EnumItem {
            Name: "ArialBold";
            Value: 2;
            EnumType: typeof globalThis.Enum.Font;
        }
        export const ArialBold: ArialBold;
        /**
         * ![](https://prod.docsiteassets.roblox.com/../../../assets/engine-api/enums/Font/SourceSans.png)
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/Font#SourceSans)
         */
        export interface SourceSans extends globalThis.EnumItem {
            Name: "SourceSans";
            Value: 3;
            EnumType: typeof globalThis.Enum.Font;
        }
        export const SourceSans: SourceSans;
        /**
         * ![](https://prod.docsiteassets.roblox.com/../../../assets/engine-api/enums/Font/SourceSansBold.png)
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/Font#SourceSansBold)
         */
        export interface SourceSansBold extends globalThis.EnumItem {
            Name: "SourceSansBold";
            Value: 4;
            EnumType: typeof globalThis.Enum.Font;
        }
        export const SourceSansBold: SourceSansBold;
        /**
         * ![](https://prod.docsiteassets.roblox.com/../../../assets/engine-api/enums/Font/SourceSansLight.png)
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/Font#SourceSansLight)
         */
        export interface SourceSansLight extends globalThis.EnumItem {
            Name: "SourceSansLight";
            Value: 5;
            EnumType: typeof globalThis.Enum.Font;
        }
        export const SourceSansLight: SourceSansLight;
        /**
         * ![](https://prod.docsiteassets.roblox.com/../../../assets/engine-api/enums/Font/SourceSansItalic.png)
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/Font#SourceSansItalic)
         */
        export interface SourceSansItalic extends globalThis.EnumItem {
            Name: "SourceSansItalic";
            Value: 6;
            EnumType: typeof globalThis.Enum.Font;
        }
        export const SourceSansItalic: SourceSansItalic;
        /**
         * ![](https://prod.docsiteassets.roblox.com/../../../assets/engine-api/enums/Font/Bodoni.png)
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/Font#Bodoni)
         */
        export interface Bodoni extends globalThis.EnumItem {
            Name: "Bodoni";
            Value: 7;
            EnumType: typeof globalThis.Enum.Font;
        }
        export const Bodoni: Bodoni;
        /**
         * ![](https://prod.docsiteassets.roblox.com/../../../assets/engine-api/enums/Font/Garamond.png)
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/Font#Garamond)
         */
        export interface Garamond extends globalThis.EnumItem {
            Name: "Garamond";
            Value: 8;
            EnumType: typeof globalThis.Enum.Font;
        }
        export const Garamond: Garamond;
        /**
         * ![](https://prod.docsiteassets.roblox.com/../../../assets/engine-api/enums/Font/Cartoon.png)
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/Font#Cartoon)
         */
        export interface Cartoon extends globalThis.EnumItem {
            Name: "Cartoon";
            Value: 9;
            EnumType: typeof globalThis.Enum.Font;
        }
        export const Cartoon: Cartoon;
        /**
         * ![](https://prod.docsiteassets.roblox.com/../../../assets/engine-api/enums/Font/Code.png)
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/Font#Code)
         */
        export interface Code extends globalThis.EnumItem {
            Name: "Code";
            Value: 10;
            EnumType: typeof globalThis.Enum.Font;
        }
        export const Code: Code;
        /**
         * ![](https://prod.docsiteassets.roblox.com/../../../assets/engine-api/enums/Font/Highway.png)
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/Font#Highway)
         */
        export interface Highway extends globalThis.EnumItem {
            Name: "Highway";
            Value: 11;
            EnumType: typeof globalThis.Enum.Font;
        }
        export const Highway: Highway;
        /**
         * ![](https://prod.docsiteassets.roblox.com/../../../assets/engine-api/enums/Font/SciFi.png)
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/Font#SciFi)
         */
        export interface SciFi extends globalThis.EnumItem {
            Name: "SciFi";
            Value: 12;
            EnumType: typeof globalThis.Enum.Font;
        }
        export const SciFi: SciFi;
        /**
         * ![](https://prod.docsiteassets.roblox.com/../../../assets/engine-api/enums/Font/Arcade.png)
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/Font#Arcade)
         */
        export interface Arcade extends globalThis.EnumItem {
            Name: "Arcade";
            Value: 13;
            EnumType: typeof globalThis.Enum.Font;
        }
        export const Arcade: Arcade;
        /**
         * ![](https://prod.docsiteassets.roblox.com/../../../assets/engine-api/enums/Font/Fantasy.png)
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/Font#Fantasy)
         */
        export interface Fantasy extends globalThis.EnumItem {
            Name: "Fantasy";
            Value: 14;
            EnumType: typeof globalThis.Enum.Font;
        }
        export const Fantasy: Fantasy;
        /**
         * ![](https://prod.docsiteassets.roblox.com/../../../assets/engine-api/enums/Font/Antique.png)
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/Font#Antique)
         */
        export interface Antique extends globalThis.EnumItem {
            Name: "Antique";
            Value: 15;
            EnumType: typeof globalThis.Enum.Font;
        }
        export const Antique: Antique;
        /**
         * ![](https://prod.docsiteassets.roblox.com/../../../assets/engine-api/enums/Font/SourceSansSemibold.png)
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/Font#SourceSansSemibold)
         */
        export interface SourceSansSemibold extends globalThis.EnumItem {
            Name: "SourceSansSemibold";
            Value: 16;
            EnumType: typeof globalThis.Enum.Font;
        }
        export const SourceSansSemibold: SourceSansSemibold;
        /**
         * Gotham has been removed from Roblox. Use Montserrat instead.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/Font#Gotham)
         */
        export interface Gotham extends globalThis.EnumItem {
            Name: "Gotham";
            Value: 17;
            EnumType: typeof globalThis.Enum.Font;
        }
        export const Gotham: Gotham;
        /**
         * @deprecated renamed to Gotham
         */
        export const Montserrat: Gotham;
        /**
         * Gotham has been removed from Roblox. Use Montserrat instead.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/Font#GothamMedium)
         */
        export interface GothamMedium extends globalThis.EnumItem {
            Name: "GothamMedium";
            Value: 18;
            EnumType: typeof globalThis.Enum.Font;
        }
        export const GothamMedium: GothamMedium;
        /**
         * @deprecated renamed to GothamMedium
         */
        export const GothamSemibold: GothamMedium;
        /**
         * @deprecated renamed to GothamMedium
         */
        export const MontserratMedium: GothamMedium;
        /**
         * Gotham has been removed from Roblox. Use Montserrat instead.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/Font#GothamBold)
         */
        export interface GothamBold extends globalThis.EnumItem {
            Name: "GothamBold";
            Value: 19;
            EnumType: typeof globalThis.Enum.Font;
        }
        export const GothamBold: GothamBold;
        /**
         * @deprecated renamed to GothamBold
         */
        export const MontserratBold: GothamBold;
        /**
         * Gotham has been removed from Roblox. Use Montserrat instead.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/Font#GothamBlack)
         */
        export interface GothamBlack extends globalThis.EnumItem {
            Name: "GothamBlack";
            Value: 20;
            EnumType: typeof globalThis.Enum.Font;
        }
        export const GothamBlack: GothamBlack;
        /**
         * @deprecated renamed to GothamBlack
         */
        export const MontserratBlack: GothamBlack;
        /**
         * ![](https://prod.docsiteassets.roblox.com/../../../assets/engine-api/enums/Font/AmaticSC.png)
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/Font#AmaticSC)
         */
        export interface AmaticSC extends globalThis.EnumItem {
            Name: "AmaticSC";
            Value: 21;
            EnumType: typeof globalThis.Enum.Font;
        }
        export const AmaticSC: AmaticSC;
        /**
         * ![](https://prod.docsiteassets.roblox.com/../../../assets/engine-api/enums/Font/Bangers.png)
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/Font#Bangers)
         */
        export interface Bangers extends globalThis.EnumItem {
            Name: "Bangers";
            Value: 22;
            EnumType: typeof globalThis.Enum.Font;
        }
        export const Bangers: Bangers;
        /**
         * ![](https://prod.docsiteassets.roblox.com/../../../assets/engine-api/enums/Font/Creepster.png)
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/Font#Creepster)
         */
        export interface Creepster extends globalThis.EnumItem {
            Name: "Creepster";
            Value: 23;
            EnumType: typeof globalThis.Enum.Font;
        }
        export const Creepster: Creepster;
        /**
         * ![](https://prod.docsiteassets.roblox.com/../../../assets/engine-api/enums/Font/DenkOne.png)
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/Font#DenkOne)
         */
        export interface DenkOne extends globalThis.EnumItem {
            Name: "DenkOne";
            Value: 24;
            EnumType: typeof globalThis.Enum.Font;
        }
        export const DenkOne: DenkOne;
        /**
         * ![](https://prod.docsiteassets.roblox.com/../../../assets/engine-api/enums/Font/Fondamento.png)
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/Font#Fondamento)
         */
        export interface Fondamento extends globalThis.EnumItem {
            Name: "Fondamento";
            Value: 25;
            EnumType: typeof globalThis.Enum.Font;
        }
        export const Fondamento: Fondamento;
        /**
         * ![](https://prod.docsiteassets.roblox.com/../../../assets/engine-api/enums/Font/FredokaOne.png)
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/Font#FredokaOne)
         */
        export interface FredokaOne extends globalThis.EnumItem {
            Name: "FredokaOne";
            Value: 26;
            EnumType: typeof globalThis.Enum.Font;
        }
        export const FredokaOne: FredokaOne;
        /**
         * ![](https://prod.docsiteassets.roblox.com/../../../assets/engine-api/enums/Font/GrenzeGotisch.png)
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/Font#GrenzeGotisch)
         */
        export interface GrenzeGotisch extends globalThis.EnumItem {
            Name: "GrenzeGotisch";
            Value: 27;
            EnumType: typeof globalThis.Enum.Font;
        }
        export const GrenzeGotisch: GrenzeGotisch;
        /**
         * ![](https://prod.docsiteassets.roblox.com/../../../assets/engine-api/enums/Font/IndieFlower.png)
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/Font#IndieFlower)
         */
        export interface IndieFlower extends globalThis.EnumItem {
            Name: "IndieFlower";
            Value: 28;
            EnumType: typeof globalThis.Enum.Font;
        }
        export const IndieFlower: IndieFlower;
        /**
         * ![](https://prod.docsiteassets.roblox.com/../../../assets/engine-api/enums/Font/JosefinSans.png)
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/Font#JosefinSans)
         */
        export interface JosefinSans extends globalThis.EnumItem {
            Name: "JosefinSans";
            Value: 29;
            EnumType: typeof globalThis.Enum.Font;
        }
        export const JosefinSans: JosefinSans;
        /**
         * ![](https://prod.docsiteassets.roblox.com/../../../assets/engine-api/enums/Font/Jura.png)
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/Font#Jura)
         */
        export interface Jura extends globalThis.EnumItem {
            Name: "Jura";
            Value: 30;
            EnumType: typeof globalThis.Enum.Font;
        }
        export const Jura: Jura;
        /**
         * ![](https://prod.docsiteassets.roblox.com/../../../assets/engine-api/enums/Font/Kalam.png)
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/Font#Kalam)
         */
        export interface Kalam extends globalThis.EnumItem {
            Name: "Kalam";
            Value: 31;
            EnumType: typeof globalThis.Enum.Font;
        }
        export const Kalam: Kalam;
        /**
         * ![](https://prod.docsiteassets.roblox.com/../../../assets/engine-api/enums/Font/LuckiestGuy.png)
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/Font#LuckiestGuy)
         */
        export interface LuckiestGuy extends globalThis.EnumItem {
            Name: "LuckiestGuy";
            Value: 32;
            EnumType: typeof globalThis.Enum.Font;
        }
        export const LuckiestGuy: LuckiestGuy;
        /**
         * ![](https://prod.docsiteassets.roblox.com/../../../assets/engine-api/enums/Font/Merriweather.png)
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/Font#Merriweather)
         */
        export interface Merriweather extends globalThis.EnumItem {
            Name: "Merriweather";
            Value: 33;
            EnumType: typeof globalThis.Enum.Font;
        }
        export const Merriweather: Merriweather;
        /**
         * ![](https://prod.docsiteassets.roblox.com/../../../assets/engine-api/enums/Font/Michroma.png)
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/Font#Michroma)
         */
        export interface Michroma extends globalThis.EnumItem {
            Name: "Michroma";
            Value: 34;
            EnumType: typeof globalThis.Enum.Font;
        }
        export const Michroma: Michroma;
        /**
         * ![](https://prod.docsiteassets.roblox.com/../../../assets/engine-api/enums/Font/Nunito.png)
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/Font#Nunito)
         */
        export interface Nunito extends globalThis.EnumItem {
            Name: "Nunito";
            Value: 35;
            EnumType: typeof globalThis.Enum.Font;
        }
        export const Nunito: Nunito;
        /**
         * ![](https://prod.docsiteassets.roblox.com/../../../assets/engine-api/enums/Font/Oswald.png)
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/Font#Oswald)
         */
        export interface Oswald extends globalThis.EnumItem {
            Name: "Oswald";
            Value: 36;
            EnumType: typeof globalThis.Enum.Font;
        }
        export const Oswald: Oswald;
        /**
         * ![](https://prod.docsiteassets.roblox.com/../../../assets/engine-api/enums/Font/PatrickHand.png)
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/Font#PatrickHand)
         */
        export interface PatrickHand extends globalThis.EnumItem {
            Name: "PatrickHand";
            Value: 37;
            EnumType: typeof globalThis.Enum.Font;
        }
        export const PatrickHand: PatrickHand;
        /**
         * ![](https://prod.docsiteassets.roblox.com/../../../assets/engine-api/enums/Font/PermanentMarker.png)
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/Font#PermanentMarker)
         */
        export interface PermanentMarker extends globalThis.EnumItem {
            Name: "PermanentMarker";
            Value: 38;
            EnumType: typeof globalThis.Enum.Font;
        }
        export const PermanentMarker: PermanentMarker;
        /**
         * ![](https://prod.docsiteassets.roblox.com/../../../assets/engine-api/enums/Font/Roboto.png)
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/Font#Roboto)
         */
        export interface Roboto extends globalThis.EnumItem {
            Name: "Roboto";
            Value: 39;
            EnumType: typeof globalThis.Enum.Font;
        }
        export const Roboto: Roboto;
        /**
         * ![](https://prod.docsiteassets.roblox.com/../../../assets/engine-api/enums/Font/RobotoCondensed.png)
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/Font#RobotoCondensed)
         */
        export interface RobotoCondensed extends globalThis.EnumItem {
            Name: "RobotoCondensed";
            Value: 40;
            EnumType: typeof globalThis.Enum.Font;
        }
        export const RobotoCondensed: RobotoCondensed;
        /**
         * ![](https://prod.docsiteassets.roblox.com/../../../assets/engine-api/enums/Font/RobotoMono.png)
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/Font#RobotoMono)
         */
        export interface RobotoMono extends globalThis.EnumItem {
            Name: "RobotoMono";
            Value: 41;
            EnumType: typeof globalThis.Enum.Font;
        }
        export const RobotoMono: RobotoMono;
        /**
         * ![](https://prod.docsiteassets.roblox.com/../../../assets/engine-api/enums/Font/Sarpanch.png)
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/Font#Sarpanch)
         */
        export interface Sarpanch extends globalThis.EnumItem {
            Name: "Sarpanch";
            Value: 42;
            EnumType: typeof globalThis.Enum.Font;
        }
        export const Sarpanch: Sarpanch;
        /**
         * ![](https://prod.docsiteassets.roblox.com/../../../assets/engine-api/enums/Font/SpecialElite.png)
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/Font#SpecialElite)
         */
        export interface SpecialElite extends globalThis.EnumItem {
            Name: "SpecialElite";
            Value: 43;
            EnumType: typeof globalThis.Enum.Font;
        }
        export const SpecialElite: SpecialElite;
        /**
         * ![](https://prod.docsiteassets.roblox.com/../../../assets/engine-api/enums/Font/TitilliumWeb.png)
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/Font#TitilliumWeb)
         */
        export interface TitilliumWeb extends globalThis.EnumItem {
            Name: "TitilliumWeb";
            Value: 44;
            EnumType: typeof globalThis.Enum.Font;
        }
        export const TitilliumWeb: TitilliumWeb;
        /**
         * ![](https://prod.docsiteassets.roblox.com/../../../assets/engine-api/enums/Font/Ubuntu.png)
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/Font#Ubuntu)
         */
        export interface Ubuntu extends globalThis.EnumItem {
            Name: "Ubuntu";
            Value: 45;
            EnumType: typeof globalThis.Enum.Font;
        }
        export const Ubuntu: Ubuntu;
        /**
         * ![](https://prod.docsiteassets.roblox.com/../../../assets/engine-api/enums/Font/BuilderSans.png) See [Builder Font License](../../../resources/builder-font-license.md).
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/Font#BuilderSans)
         */
        export interface BuilderSans extends globalThis.EnumItem {
            Name: "BuilderSans";
            Value: 46;
            EnumType: typeof globalThis.Enum.Font;
        }
        export const BuilderSans: BuilderSans;
        /**
         * ![](https://prod.docsiteassets.roblox.com/../../../assets/engine-api/enums/Font/BuilderSansMedium.png) See [Builder Font License](../../../resources/builder-font-license.md).
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/Font#BuilderSansMedium)
         */
        export interface BuilderSansMedium extends globalThis.EnumItem {
            Name: "BuilderSansMedium";
            Value: 47;
            EnumType: typeof globalThis.Enum.Font;
        }
        export const BuilderSansMedium: BuilderSansMedium;
        /**
         * ![](https://prod.docsiteassets.roblox.com/../../../assets/engine-api/enums/Font/BuilderSansBold.png) See [Builder Font License](../../../resources/builder-font-license.md).
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/Font#BuilderSansBold)
         */
        export interface BuilderSansBold extends globalThis.EnumItem {
            Name: "BuilderSansBold";
            Value: 48;
            EnumType: typeof globalThis.Enum.Font;
        }
        export const BuilderSansBold: BuilderSansBold;
        /**
         * ![](https://prod.docsiteassets.roblox.com/../../../assets/engine-api/enums/Font/BuilderSansExtraBold.png) See [Builder Font License](../../../resources/builder-font-license.md).
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/Font#BuilderSansExtraBold)
         */
        export interface BuilderSansExtraBold extends globalThis.EnumItem {
            Name: "BuilderSansExtraBold";
            Value: 49;
            EnumType: typeof globalThis.Enum.Font;
        }
        export const BuilderSansExtraBold: BuilderSansExtraBold;
        /**
         * ![](https://prod.docsiteassets.roblox.com/../../../assets/engine-api/enums/Font/Arimo.png)
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/Font#Arimo)
         */
        export interface Arimo extends globalThis.EnumItem {
            Name: "Arimo";
            Value: 50;
            EnumType: typeof globalThis.Enum.Font;
        }
        export const Arimo: Arimo;
        /**
         * ![](https://prod.docsiteassets.roblox.com/../../../assets/engine-api/enums/Font/ArimoBold.png)
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/Font#ArimoBold)
         */
        export interface ArimoBold extends globalThis.EnumItem {
            Name: "ArimoBold";
            Value: 51;
            EnumType: typeof globalThis.Enum.Font;
        }
        export const ArimoBold: ArimoBold;
        /**
         * Set when the `TextLabel.FontFace` property is set to a `Font` that has no corresponding enum value.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/Font#Unknown)
         */
        export interface Unknown extends globalThis.EnumItem {
            Name: "Unknown";
            Value: 100;
            EnumType: typeof globalThis.Enum.Font;
        }
        export const Unknown: Unknown;
        export function GetEnumItems(this: globalThis.Enum): Array<globalThis.Enum.Font>;
        export function FromName(this: globalThis.Enum, name: string): globalThis.Enum.Font | undefined;
        export function FromValue(this: globalThis.Enum, value: number): globalThis.Enum.Font | undefined;
    }
    export type Font = Font.Legacy | Font.Arial | Font.ArialBold | Font.SourceSans | Font.SourceSansBold | Font.SourceSansLight | Font.SourceSansItalic | Font.Bodoni | Font.Garamond | Font.Cartoon | Font.Code | Font.Highway | Font.SciFi | Font.Arcade | Font.Fantasy | Font.Antique | Font.SourceSansSemibold | Font.Gotham | Font.GothamMedium | Font.GothamBold | Font.GothamBlack | Font.AmaticSC | Font.Bangers | Font.Creepster | Font.DenkOne | Font.Fondamento | Font.FredokaOne | Font.GrenzeGotisch | Font.IndieFlower | Font.JosefinSans | Font.Jura | Font.Kalam | Font.LuckiestGuy | Font.Merriweather | Font.Michroma | Font.Nunito | Font.Oswald | Font.PatrickHand | Font.PermanentMarker | Font.Roboto | Font.RobotoCondensed | Font.RobotoMono | Font.Sarpanch | Font.SpecialElite | Font.TitilliumWeb | Font.Ubuntu | Font.BuilderSans | Font.BuilderSansMedium | Font.BuilderSansBold | Font.BuilderSansExtraBold | Font.Arimo | Font.ArimoBold | Font.Unknown;
    /**
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/FontSize)
     */
    export namespace FontSize {
        /**
         * Font size 8.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/FontSize#Size8)
         */
        export interface Size8 extends globalThis.EnumItem {
            Name: "Size8";
            Value: 0;
            EnumType: typeof globalThis.Enum.FontSize;
        }
        export const Size8: Size8;
        /**
         * Font size 9.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/FontSize#Size9)
         */
        export interface Size9 extends globalThis.EnumItem {
            Name: "Size9";
            Value: 1;
            EnumType: typeof globalThis.Enum.FontSize;
        }
        export const Size9: Size9;
        /**
         * Font size 10.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/FontSize#Size10)
         */
        export interface Size10 extends globalThis.EnumItem {
            Name: "Size10";
            Value: 2;
            EnumType: typeof globalThis.Enum.FontSize;
        }
        export const Size10: Size10;
        /**
         * Font size 11.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/FontSize#Size11)
         */
        export interface Size11 extends globalThis.EnumItem {
            Name: "Size11";
            Value: 3;
            EnumType: typeof globalThis.Enum.FontSize;
        }
        export const Size11: Size11;
        /**
         * Font size 12.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/FontSize#Size12)
         */
        export interface Size12 extends globalThis.EnumItem {
            Name: "Size12";
            Value: 4;
            EnumType: typeof globalThis.Enum.FontSize;
        }
        export const Size12: Size12;
        /**
         * Font size 14.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/FontSize#Size14)
         */
        export interface Size14 extends globalThis.EnumItem {
            Name: "Size14";
            Value: 5;
            EnumType: typeof globalThis.Enum.FontSize;
        }
        export const Size14: Size14;
        /**
         * Font size 18.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/FontSize#Size18)
         */
        export interface Size18 extends globalThis.EnumItem {
            Name: "Size18";
            Value: 6;
            EnumType: typeof globalThis.Enum.FontSize;
        }
        export const Size18: Size18;
        /**
         * Font size 24.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/FontSize#Size24)
         */
        export interface Size24 extends globalThis.EnumItem {
            Name: "Size24";
            Value: 7;
            EnumType: typeof globalThis.Enum.FontSize;
        }
        export const Size24: Size24;
        /**
         * Font size 36.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/FontSize#Size36)
         */
        export interface Size36 extends globalThis.EnumItem {
            Name: "Size36";
            Value: 8;
            EnumType: typeof globalThis.Enum.FontSize;
        }
        export const Size36: Size36;
        /**
         * Font size 48.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/FontSize#Size48)
         */
        export interface Size48 extends globalThis.EnumItem {
            Name: "Size48";
            Value: 9;
            EnumType: typeof globalThis.Enum.FontSize;
        }
        export const Size48: Size48;
        /**
         * Font size 28.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/FontSize#Size28)
         */
        export interface Size28 extends globalThis.EnumItem {
            Name: "Size28";
            Value: 10;
            EnumType: typeof globalThis.Enum.FontSize;
        }
        export const Size28: Size28;
        /**
         * Font size 32.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/FontSize#Size32)
         */
        export interface Size32 extends globalThis.EnumItem {
            Name: "Size32";
            Value: 11;
            EnumType: typeof globalThis.Enum.FontSize;
        }
        export const Size32: Size32;
        /**
         * Font size 42.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/FontSize#Size42)
         */
        export interface Size42 extends globalThis.EnumItem {
            Name: "Size42";
            Value: 12;
            EnumType: typeof globalThis.Enum.FontSize;
        }
        export const Size42: Size42;
        /**
         * Font size 60.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/FontSize#Size60)
         */
        export interface Size60 extends globalThis.EnumItem {
            Name: "Size60";
            Value: 13;
            EnumType: typeof globalThis.Enum.FontSize;
        }
        export const Size60: Size60;
        /**
         * Font size 96.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/FontSize#Size96)
         */
        export interface Size96 extends globalThis.EnumItem {
            Name: "Size96";
            Value: 14;
            EnumType: typeof globalThis.Enum.FontSize;
        }
        export const Size96: Size96;
        export function GetEnumItems(this: globalThis.Enum): Array<globalThis.Enum.FontSize>;
        export function FromName(this: globalThis.Enum, name: string): globalThis.Enum.FontSize | undefined;
        export function FromValue(this: globalThis.Enum, value: number): globalThis.Enum.FontSize | undefined;
    }
    export type FontSize = FontSize.Size8 | FontSize.Size9 | FontSize.Size10 | FontSize.Size11 | FontSize.Size12 | FontSize.Size14 | FontSize.Size18 | FontSize.Size24 | FontSize.Size36 | FontSize.Size48 | FontSize.Size28 | FontSize.Size32 | FontSize.Size42 | FontSize.Size60 | FontSize.Size96;
    /**
     * Describes whether a `Font` is italic or not.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/FontStyle)
     */
    export namespace FontStyle {
        /**
         * The text renders normally with this font.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/FontStyle#Normal)
         */
        export interface Normal extends globalThis.EnumItem {
            Name: "Normal";
            Value: 0;
            EnumType: typeof globalThis.Enum.FontStyle;
        }
        export const Normal: Normal;
        /**
         * The text renders italic with this font.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/FontStyle#Italic)
         */
        export interface Italic extends globalThis.EnumItem {
            Name: "Italic";
            Value: 1;
            EnumType: typeof globalThis.Enum.FontStyle;
        }
        export const Italic: Italic;
        export function GetEnumItems(this: globalThis.Enum): Array<globalThis.Enum.FontStyle>;
        export function FromName(this: globalThis.Enum, name: string): globalThis.Enum.FontStyle | undefined;
        export function FromValue(this: globalThis.Enum, value: number): globalThis.Enum.FontStyle | undefined;
    }
    export type FontStyle = FontStyle.Normal | FontStyle.Italic;
    /**
     * Describes how thick a `Font` is.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/FontWeight)
     */
    export namespace FontWeight {
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/FontWeight#Thin)
         */
        export interface Thin extends globalThis.EnumItem {
            Name: "Thin";
            Value: 100;
            EnumType: typeof globalThis.Enum.FontWeight;
        }
        export const Thin: Thin;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/FontWeight#ExtraLight)
         */
        export interface ExtraLight extends globalThis.EnumItem {
            Name: "ExtraLight";
            Value: 200;
            EnumType: typeof globalThis.Enum.FontWeight;
        }
        export const ExtraLight: ExtraLight;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/FontWeight#Light)
         */
        export interface Light extends globalThis.EnumItem {
            Name: "Light";
            Value: 300;
            EnumType: typeof globalThis.Enum.FontWeight;
        }
        export const Light: Light;
        /**
         * The default thickness for text.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/FontWeight#Regular)
         */
        export interface Regular extends globalThis.EnumItem {
            Name: "Regular";
            Value: 400;
            EnumType: typeof globalThis.Enum.FontWeight;
        }
        export const Regular: Regular;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/FontWeight#Medium)
         */
        export interface Medium extends globalThis.EnumItem {
            Name: "Medium";
            Value: 500;
            EnumType: typeof globalThis.Enum.FontWeight;
        }
        export const Medium: Medium;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/FontWeight#SemiBold)
         */
        export interface SemiBold extends globalThis.EnumItem {
            Name: "SemiBold";
            Value: 600;
            EnumType: typeof globalThis.Enum.FontWeight;
        }
        export const SemiBold: SemiBold;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/FontWeight#Bold)
         */
        export interface Bold extends globalThis.EnumItem {
            Name: "Bold";
            Value: 700;
            EnumType: typeof globalThis.Enum.FontWeight;
        }
        export const Bold: Bold;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/FontWeight#ExtraBold)
         */
        export interface ExtraBold extends globalThis.EnumItem {
            Name: "ExtraBold";
            Value: 800;
            EnumType: typeof globalThis.Enum.FontWeight;
        }
        export const ExtraBold: ExtraBold;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/FontWeight#Heavy)
         */
        export interface Heavy extends globalThis.EnumItem {
            Name: "Heavy";
            Value: 900;
            EnumType: typeof globalThis.Enum.FontWeight;
        }
        export const Heavy: Heavy;
        export function GetEnumItems(this: globalThis.Enum): Array<globalThis.Enum.FontWeight>;
        export function FromName(this: globalThis.Enum, name: string): globalThis.Enum.FontWeight | undefined;
        export function FromValue(this: globalThis.Enum, value: number): globalThis.Enum.FontWeight | undefined;
    }
    export type FontWeight = FontWeight.Thin | FontWeight.ExtraLight | FontWeight.Light | FontWeight.Regular | FontWeight.Medium | FontWeight.SemiBold | FontWeight.Bold | FontWeight.ExtraBold | FontWeight.Heavy;
    /**
     * The **ForceLimitMode** enum determines how the maximum force for a constraint is specified and how that limit is enforced by the constraint.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/ForceLimitMode)
     */
    export namespace ForceLimitMode {
        /**
         * A single number is used to specify the magnitude of the maximum constraint force. The constraint will ensure that the force it applies will have a magnitude that is less than this limit.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/ForceLimitMode#Magnitude)
         */
        export interface Magnitude extends globalThis.EnumItem {
            Name: "Magnitude";
            Value: 0;
            EnumType: typeof globalThis.Enum.ForceLimitMode;
        }
        export const Magnitude: Magnitude;
        /**
         * A vector is used to specify the maximum force value along each axis of a given reference frame. The constraint will ensure that each component of the force will have an absolute value that's less than the corresponding vector entry.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/ForceLimitMode#PerAxis)
         */
        export interface PerAxis extends globalThis.EnumItem {
            Name: "PerAxis";
            Value: 1;
            EnumType: typeof globalThis.Enum.ForceLimitMode;
        }
        export const PerAxis: PerAxis;
        export function GetEnumItems(this: globalThis.Enum): Array<globalThis.Enum.ForceLimitMode>;
        export function FromName(this: globalThis.Enum, name: string): globalThis.Enum.ForceLimitMode | undefined;
        export function FromValue(this: globalThis.Enum, value: number): globalThis.Enum.ForceLimitMode | undefined;
    }
    export type ForceLimitMode = ForceLimitMode.Magnitude | ForceLimitMode.PerAxis;
    /**
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/FormFactor)
     */
    export namespace FormFactor {
        /**
         * Increases by a rate of 1 along all axes.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/FormFactor#Symmetric)
         */
        export interface Symmetric extends globalThis.EnumItem {
            Name: "Symmetric";
            Value: 0;
            EnumType: typeof globalThis.Enum.FormFactor;
        }
        export const Symmetric: Symmetric;
        /**
         * Increases by a rate of 1 along the x- and z- axes, 1.2 along the y-axis.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/FormFactor#Brick)
         */
        export interface Brick extends globalThis.EnumItem {
            Name: "Brick";
            Value: 1;
            EnumType: typeof globalThis.Enum.FormFactor;
        }
        export const Brick: Brick;
        /**
         * @deprecated renamed to Brick
         */
        export const Block: Brick;
        /**
         * Increases by a rate of 1 along the x- and z- axes, 0.4 along the y-axis.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/FormFactor#Plate)
         */
        export interface Plate extends globalThis.EnumItem {
            Name: "Plate";
            Value: 2;
            EnumType: typeof globalThis.Enum.FormFactor;
        }
        export const Plate: Plate;
        /**
         * Increases by a rate as low as .001 along all axes.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/FormFactor#Custom)
         */
        export interface Custom extends globalThis.EnumItem {
            Name: "Custom";
            Value: 3;
            EnumType: typeof globalThis.Enum.FormFactor;
        }
        export const Custom: Custom;
        export function GetEnumItems(this: globalThis.Enum): Array<globalThis.Enum.FormFactor>;
        export function FromName(this: globalThis.Enum, name: string): globalThis.Enum.FormFactor | undefined;
        export function FromValue(this: globalThis.Enum, value: number): globalThis.Enum.FormFactor | undefined;
    }
    export type FormFactor = FormFactor.Symmetric | FormFactor.Brick | FormFactor.Plate | FormFactor.Custom;
    /**
     * Used to set the style of a `Frame`.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/FrameStyle)
     */
    export namespace FrameStyle {
        /**
         * Uses the frame's `GuiObject.BackgroundColor3`, `GuiObject.BorderColor3`, and `GuiObject.BackgroundTransparency` properties to determine the frame's appearance. It has no padding; elements with the position `UDim2.new(0, 0, 0, 0)` will appear at the frame's top-left corner.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/FrameStyle#Custom)
         */
        export interface Custom extends globalThis.EnumItem {
            Name: "Custom";
            Value: 0;
            EnumType: typeof globalThis.Enum.FrameStyle;
        }
        export const Custom: Custom;
        /**
         * Causes the frame to appear similar to a `Dialog` with its `Tone` property set to `DialogTone.Neutral`. Like **ChatGreen** and **ChatRed**, this has a padding of fifteen pixels on all sides.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/FrameStyle#ChatBlue)
         */
        export interface ChatBlue extends globalThis.EnumItem {
            Name: "ChatBlue";
            Value: 1;
            EnumType: typeof globalThis.Enum.FrameStyle;
        }
        export const ChatBlue: ChatBlue;
        /**
         * Causes the frame to appear as a translucent dark gray rectangle with a padding of five pixels on all sides.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/FrameStyle#RobloxSquare)
         */
        export interface RobloxSquare extends globalThis.EnumItem {
            Name: "RobloxSquare";
            Value: 2;
            EnumType: typeof globalThis.Enum.FrameStyle;
        }
        export const RobloxSquare: RobloxSquare;
        /**
         * Causes the frame to appear as a translucent dark gray rectangle with rounded edges. Like **RobloxSquare**, this has a padding of five pixels on all sides.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/FrameStyle#RobloxRound)
         */
        export interface RobloxRound extends globalThis.EnumItem {
            Name: "RobloxRound";
            Value: 3;
            EnumType: typeof globalThis.Enum.FrameStyle;
        }
        export const RobloxRound: RobloxRound;
        /**
         * Causes the frame to appear similar to a `Dialog` with its `Tone` property set to `DialogTone.Friendly`. Like **ChatBlue** and **ChatRed**, this has a padding of fifteen pixels on all sides.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/FrameStyle#ChatGreen)
         */
        export interface ChatGreen extends globalThis.EnumItem {
            Name: "ChatGreen";
            Value: 4;
            EnumType: typeof globalThis.Enum.FrameStyle;
        }
        export const ChatGreen: ChatGreen;
        /**
         * Causes the frame to appear similar to a `Dialog` with its `Tone` property set to `DialogTone.Enemy`. Like **ChatBlue** and **ChatGreen**, this has a padding of fifteen pixels on all sides.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/FrameStyle#ChatRed)
         */
        export interface ChatRed extends globalThis.EnumItem {
            Name: "ChatRed";
            Value: 5;
            EnumType: typeof globalThis.Enum.FrameStyle;
        }
        export const ChatRed: ChatRed;
        /**
         * Causes the frame to appear as a translucent gray rectangle with blurred sides. The blur is more apparent on the bottom edge. It has a padding of eight pixels on all sides.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/FrameStyle#DropShadow)
         */
        export interface DropShadow extends globalThis.EnumItem {
            Name: "DropShadow";
            Value: 6;
            EnumType: typeof globalThis.Enum.FrameStyle;
        }
        export const DropShadow: DropShadow;
        export function GetEnumItems(this: globalThis.Enum): Array<globalThis.Enum.FrameStyle>;
        export function FromName(this: globalThis.Enum, name: string): globalThis.Enum.FrameStyle | undefined;
        export function FromValue(this: globalThis.Enum, value: number): globalThis.Enum.FrameStyle | undefined;
    }
    export type FrameStyle = FrameStyle.Custom | FrameStyle.ChatBlue | FrameStyle.RobloxSquare | FrameStyle.RobloxRound | FrameStyle.ChatGreen | FrameStyle.ChatRed | FrameStyle.DropShadow;
    /**
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/FramerateManagerMode)
     */
    export namespace FramerateManagerMode {
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/FramerateManagerMode#Automatic)
         */
        export interface Automatic extends globalThis.EnumItem {
            Name: "Automatic";
            Value: 0;
            EnumType: typeof globalThis.Enum.FramerateManagerMode;
        }
        export const Automatic: Automatic;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/FramerateManagerMode#On)
         */
        export interface On extends globalThis.EnumItem {
            Name: "On";
            Value: 1;
            EnumType: typeof globalThis.Enum.FramerateManagerMode;
        }
        export const On: On;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/FramerateManagerMode#Off)
         */
        export interface Off extends globalThis.EnumItem {
            Name: "Off";
            Value: 2;
            EnumType: typeof globalThis.Enum.FramerateManagerMode;
        }
        export const Off: Off;
        export function GetEnumItems(this: globalThis.Enum): Array<globalThis.Enum.FramerateManagerMode>;
        export function FromName(this: globalThis.Enum, name: string): globalThis.Enum.FramerateManagerMode | undefined;
        export function FromValue(this: globalThis.Enum, value: number): globalThis.Enum.FramerateManagerMode | undefined;
    }
    export type FramerateManagerMode = FramerateManagerMode.Automatic | FramerateManagerMode.On | FramerateManagerMode.Off;
    /**
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/FriendRequestEvent)
     */
    export namespace FriendRequestEvent {
        /**
         * A player invokes (sends) a friend request.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/FriendRequestEvent#Issue)
         */
        export interface Issue extends globalThis.EnumItem {
            Name: "Issue";
            Value: 0;
            EnumType: typeof globalThis.Enum.FriendRequestEvent;
        }
        export const Issue: Issue;
        /**
         * A player revokes (cancels) a previously invoked (sent) friend request.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/FriendRequestEvent#Revoke)
         */
        export interface Revoke extends globalThis.EnumItem {
            Name: "Revoke";
            Value: 1;
            EnumType: typeof globalThis.Enum.FriendRequestEvent;
        }
        export const Revoke: Revoke;
        /**
         * A player accepts a friend request.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/FriendRequestEvent#Accept)
         */
        export interface Accept extends globalThis.EnumItem {
            Name: "Accept";
            Value: 2;
            EnumType: typeof globalThis.Enum.FriendRequestEvent;
        }
        export const Accept: Accept;
        /**
         * A player denies a friend request.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/FriendRequestEvent#Deny)
         */
        export interface Deny extends globalThis.EnumItem {
            Name: "Deny";
            Value: 3;
            EnumType: typeof globalThis.Enum.FriendRequestEvent;
        }
        export const Deny: Deny;
        export function GetEnumItems(this: globalThis.Enum): Array<globalThis.Enum.FriendRequestEvent>;
        export function FromName(this: globalThis.Enum, name: string): globalThis.Enum.FriendRequestEvent | undefined;
        export function FromValue(this: globalThis.Enum, value: number): globalThis.Enum.FriendRequestEvent | undefined;
    }
    export type FriendRequestEvent = FriendRequestEvent.Issue | FriendRequestEvent.Revoke | FriendRequestEvent.Accept | FriendRequestEvent.Deny;
    /**
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/FriendStatus)
     */
    export namespace FriendStatus {
        /**
         * The friendship status of two players is unknown.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/FriendStatus#Unknown)
         */
        export interface Unknown extends globalThis.EnumItem {
            Name: "Unknown";
            Value: 0;
            EnumType: typeof globalThis.Enum.FriendStatus;
        }
        export const Unknown: Unknown;
        /**
         * Two players are not friends.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/FriendStatus#NotFriend)
         */
        export interface NotFriend extends globalThis.EnumItem {
            Name: "NotFriend";
            Value: 1;
            EnumType: typeof globalThis.Enum.FriendStatus;
        }
        export const NotFriend: NotFriend;
        /**
         * Two players are friends.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/FriendStatus#Friend)
         */
        export interface Friend extends globalThis.EnumItem {
            Name: "Friend";
            Value: 2;
            EnumType: typeof globalThis.Enum.FriendStatus;
        }
        export const Friend: Friend;
        /**
         * At least one of two players has sent a friend request to the other player.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/FriendStatus#FriendRequestSent)
         */
        export interface FriendRequestSent extends globalThis.EnumItem {
            Name: "FriendRequestSent";
            Value: 3;
            EnumType: typeof globalThis.Enum.FriendStatus;
        }
        export const FriendRequestSent: FriendRequestSent;
        /**
         * At least one of two players has received a friend request sent by the other player.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/FriendStatus#FriendRequestReceived)
         */
        export interface FriendRequestReceived extends globalThis.EnumItem {
            Name: "FriendRequestReceived";
            Value: 4;
            EnumType: typeof globalThis.Enum.FriendStatus;
        }
        export const FriendRequestReceived: FriendRequestReceived;
        export function GetEnumItems(this: globalThis.Enum): Array<globalThis.Enum.FriendStatus>;
        export function FromName(this: globalThis.Enum, name: string): globalThis.Enum.FriendStatus | undefined;
        export function FromValue(this: globalThis.Enum, value: number): globalThis.Enum.FriendStatus | undefined;
    }
    export type FriendStatus = FriendStatus.Unknown | FriendStatus.NotFriend | FriendStatus.Friend | FriendStatus.FriendRequestSent | FriendStatus.FriendRequestReceived;
    /**
     * Status of a single functional test run.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/FunctionalTestResult)
     */
    export namespace FunctionalTestResult {
        /**
         * The test run was successful.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/FunctionalTestResult#Passed)
         */
        export interface Passed extends globalThis.EnumItem {
            Name: "Passed";
            Value: 0;
            EnumType: typeof globalThis.Enum.FunctionalTestResult;
        }
        export const Passed: Passed;
        /**
         * The test run is potentially unstable.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/FunctionalTestResult#Warning)
         */
        export interface Warning extends globalThis.EnumItem {
            Name: "Warning";
            Value: 1;
            EnumType: typeof globalThis.Enum.FunctionalTestResult;
        }
        export const Warning: Warning;
        /**
         * The test run failed.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/FunctionalTestResult#Error)
         */
        export interface Error extends globalThis.EnumItem {
            Name: "Error";
            Value: 2;
            EnumType: typeof globalThis.Enum.FunctionalTestResult;
        }
        export const Error: Error;
        export function GetEnumItems(this: globalThis.Enum): Array<globalThis.Enum.FunctionalTestResult>;
        export function FromName(this: globalThis.Enum, name: string): globalThis.Enum.FunctionalTestResult | undefined;
        export function FromValue(this: globalThis.Enum, value: number): globalThis.Enum.FunctionalTestResult | undefined;
    }
    export type FunctionalTestResult = FunctionalTestResult.Passed | FunctionalTestResult.Warning | FunctionalTestResult.Error;
    /**
     * Value indicating which type of avatar an experience uses.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/GameAvatarType)
     */
    export namespace GameAvatarType {
        /**
         * The R6 character rig.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/GameAvatarType#R6)
         */
        export interface R6 extends globalThis.EnumItem {
            Name: "R6";
            Value: 0;
            EnumType: typeof globalThis.Enum.GameAvatarType;
        }
        export const R6: R6;
        /**
         * The R15 character rig.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/GameAvatarType#R15)
         */
        export interface R15 extends globalThis.EnumItem {
            Name: "R15";
            Value: 1;
            EnumType: typeof globalThis.Enum.GameAvatarType;
        }
        export const R15: R15;
        /**
         * The rig (either R6 or R15) determined by a player's character settings set on the website in the 'Edit Avatar' page.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/GameAvatarType#PlayerChoice)
         */
        export interface PlayerChoice extends globalThis.EnumItem {
            Name: "PlayerChoice";
            Value: 2;
            EnumType: typeof globalThis.Enum.GameAvatarType;
        }
        export const PlayerChoice: PlayerChoice;
        export function GetEnumItems(this: globalThis.Enum): Array<globalThis.Enum.GameAvatarType>;
        export function FromName(this: globalThis.Enum, name: string): globalThis.Enum.GameAvatarType | undefined;
        export function FromValue(this: globalThis.Enum, value: number): globalThis.Enum.GameAvatarType | undefined;
    }
    export type GameAvatarType = GameAvatarType.R6 | GameAvatarType.R15 | GameAvatarType.PlayerChoice;
    /**
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/GamepadType)
     */
    export namespace GamepadType {
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/GamepadType#Unknown)
         */
        export interface Unknown extends globalThis.EnumItem {
            Name: "Unknown";
            Value: 0;
            EnumType: typeof globalThis.Enum.GamepadType;
        }
        export const Unknown: Unknown;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/GamepadType#PS4)
         */
        export interface PS4 extends globalThis.EnumItem {
            Name: "PS4";
            Value: 1;
            EnumType: typeof globalThis.Enum.GamepadType;
        }
        export const PS4: PS4;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/GamepadType#PS5)
         */
        export interface PS5 extends globalThis.EnumItem {
            Name: "PS5";
            Value: 2;
            EnumType: typeof globalThis.Enum.GamepadType;
        }
        export const PS5: PS5;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/GamepadType#XboxOne)
         */
        export interface XboxOne extends globalThis.EnumItem {
            Name: "XboxOne";
            Value: 3;
            EnumType: typeof globalThis.Enum.GamepadType;
        }
        export const XboxOne: XboxOne;
        export function GetEnumItems(this: globalThis.Enum): Array<globalThis.Enum.GamepadType>;
        export function FromName(this: globalThis.Enum, name: string): globalThis.Enum.GamepadType | undefined;
        export function FromValue(this: globalThis.Enum, value: number): globalThis.Enum.GamepadType | undefined;
    }
    export type GamepadType = GamepadType.Unknown | GamepadType.PS4 | GamepadType.PS5 | GamepadType.XboxOne;
    /**
     * **Deprecated:** This enum is deprecated as it is used by deprecated properties that are no longer functional. It should not be used.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/GearGenreSetting)
     */
    export namespace GearGenreSetting {
        /**
         * **Deprecated:**
         *
         * All gear genres are allowed.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/GearGenreSetting#AllGenres)
         */
        export interface AllGenres extends globalThis.EnumItem {
            Name: "AllGenres";
            Value: 0;
            EnumType: typeof globalThis.Enum.GearGenreSetting;
        }
        export const AllGenres: AllGenres;
        /**
         * **Deprecated:**
         *
         * Only gear genres matching the allowed genres specified in a place's configuration settings.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/GearGenreSetting#MatchingGenreOnly)
         */
        export interface MatchingGenreOnly extends globalThis.EnumItem {
            Name: "MatchingGenreOnly";
            Value: 1;
            EnumType: typeof globalThis.Enum.GearGenreSetting;
        }
        export const MatchingGenreOnly: MatchingGenreOnly;
        export function GetEnumItems(this: globalThis.Enum): Array<globalThis.Enum.GearGenreSetting>;
        export function FromName(this: globalThis.Enum, name: string): globalThis.Enum.GearGenreSetting | undefined;
        export function FromValue(this: globalThis.Enum, value: number): globalThis.Enum.GearGenreSetting | undefined;
    }
    export type GearGenreSetting = GearGenreSetting.AllGenres | GearGenreSetting.MatchingGenreOnly;
    /**
     * **Deprecated:** This enum is deprecated because it's used by deprecated properties. Don't use it.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/GearType)
     */
    export namespace GearType {
        /**
         * **Deprecated:**
         *
         * Gear with the 'Melee' attribute.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/GearType#MeleeWeapons)
         */
        export interface MeleeWeapons extends globalThis.EnumItem {
            Name: "MeleeWeapons";
            Value: 0;
            EnumType: typeof globalThis.Enum.GearType;
        }
        export const MeleeWeapons: MeleeWeapons;
        /**
         * **Deprecated:**
         *
         * Gear with the 'Ranged' attribute.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/GearType#RangedWeapons)
         */
        export interface RangedWeapons extends globalThis.EnumItem {
            Name: "RangedWeapons";
            Value: 1;
            EnumType: typeof globalThis.Enum.GearType;
        }
        export const RangedWeapons: RangedWeapons;
        /**
         * **Deprecated:**
         *
         * Gear with the 'Explosive' attribute.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/GearType#Explosives)
         */
        export interface Explosives extends globalThis.EnumItem {
            Name: "Explosives";
            Value: 2;
            EnumType: typeof globalThis.Enum.GearType;
        }
        export const Explosives: Explosives;
        /**
         * **Deprecated:**
         *
         * Gear with the 'Power Up' attribute.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/GearType#PowerUps)
         */
        export interface PowerUps extends globalThis.EnumItem {
            Name: "PowerUps";
            Value: 3;
            EnumType: typeof globalThis.Enum.GearType;
        }
        export const PowerUps: PowerUps;
        /**
         * **Deprecated:**
         *
         * Gear with the 'Navigation' attribute.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/GearType#NavigationEnhancers)
         */
        export interface NavigationEnhancers extends globalThis.EnumItem {
            Name: "NavigationEnhancers";
            Value: 4;
            EnumType: typeof globalThis.Enum.GearType;
        }
        export const NavigationEnhancers: NavigationEnhancers;
        /**
         * **Deprecated:**
         *
         * Gear with the 'Musical' attribute.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/GearType#MusicalInstruments)
         */
        export interface MusicalInstruments extends globalThis.EnumItem {
            Name: "MusicalInstruments";
            Value: 5;
            EnumType: typeof globalThis.Enum.GearType;
        }
        export const MusicalInstruments: MusicalInstruments;
        /**
         * **Deprecated:**
         *
         * Gear with the 'Social' attribute.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/GearType#SocialItems)
         */
        export interface SocialItems extends globalThis.EnumItem {
            Name: "SocialItems";
            Value: 6;
            EnumType: typeof globalThis.Enum.GearType;
        }
        export const SocialItems: SocialItems;
        /**
         * **Deprecated:**
         *
         * Gear with the 'Building' attribute.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/GearType#BuildingTools)
         */
        export interface BuildingTools extends globalThis.EnumItem {
            Name: "BuildingTools";
            Value: 7;
            EnumType: typeof globalThis.Enum.GearType;
        }
        export const BuildingTools: BuildingTools;
        /**
         * **Deprecated:**
         *
         * Gear with the 'Transport' attribute.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/GearType#Transport)
         */
        export interface Transport extends globalThis.EnumItem {
            Name: "Transport";
            Value: 8;
            EnumType: typeof globalThis.Enum.GearType;
        }
        export const Transport: Transport;
        export function GetEnumItems(this: globalThis.Enum): Array<globalThis.Enum.GearType>;
        export function FromName(this: globalThis.Enum, name: string): globalThis.Enum.GearType | undefined;
        export function FromValue(this: globalThis.Enum, value: number): globalThis.Enum.GearType | undefined;
    }
    export type GearType = GearType.MeleeWeapons | GearType.RangedWeapons | GearType.Explosives | GearType.PowerUps | GearType.NavigationEnhancers | GearType.MusicalInstruments | GearType.SocialItems | GearType.BuildingTools | GearType.Transport;
    /**
     * **Deprecated:**
     *
     * Used to represent the type of game.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/Genre)
     */
    export namespace Genre {
        /**
         * The game's genre is set to All. The game will be listed as all possible genres.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/Genre#All)
         */
        export interface All extends globalThis.EnumItem {
            Name: "All";
            Value: 0;
            EnumType: typeof globalThis.Enum.Genre;
        }
        export const All: All;
        /**
         * The game's genre is set to Town and City.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/Genre#TownAndCity)
         */
        export interface TownAndCity extends globalThis.EnumItem {
            Name: "TownAndCity";
            Value: 1;
            EnumType: typeof globalThis.Enum.Genre;
        }
        export const TownAndCity: TownAndCity;
        /**
         * The game's genre is set to Fantasy.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/Genre#Fantasy)
         */
        export interface Fantasy extends globalThis.EnumItem {
            Name: "Fantasy";
            Value: 2;
            EnumType: typeof globalThis.Enum.Genre;
        }
        export const Fantasy: Fantasy;
        /**
         * The game's genre is set to SciFi (Science Fiction).
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/Genre#SciFi)
         */
        export interface SciFi extends globalThis.EnumItem {
            Name: "SciFi";
            Value: 3;
            EnumType: typeof globalThis.Enum.Genre;
        }
        export const SciFi: SciFi;
        /**
         * The game's genre is set to Ninja.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/Genre#Ninja)
         */
        export interface Ninja extends globalThis.EnumItem {
            Name: "Ninja";
            Value: 4;
            EnumType: typeof globalThis.Enum.Genre;
        }
        export const Ninja: Ninja;
        /**
         * The game's genre is set to Scary.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/Genre#Scary)
         */
        export interface Scary extends globalThis.EnumItem {
            Name: "Scary";
            Value: 5;
            EnumType: typeof globalThis.Enum.Genre;
        }
        export const Scary: Scary;
        /**
         * The game's genre is set to Pirate.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/Genre#Pirate)
         */
        export interface Pirate extends globalThis.EnumItem {
            Name: "Pirate";
            Value: 6;
            EnumType: typeof globalThis.Enum.Genre;
        }
        export const Pirate: Pirate;
        /**
         * The game's genre is set to Adventure.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/Genre#Adventure)
         */
        export interface Adventure extends globalThis.EnumItem {
            Name: "Adventure";
            Value: 7;
            EnumType: typeof globalThis.Enum.Genre;
        }
        export const Adventure: Adventure;
        /**
         * The game's genre is set to Sports.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/Genre#Sports)
         */
        export interface Sports extends globalThis.EnumItem {
            Name: "Sports";
            Value: 8;
            EnumType: typeof globalThis.Enum.Genre;
        }
        export const Sports: Sports;
        /**
         * The game's genre is set to Funny.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/Genre#Funny)
         */
        export interface Funny extends globalThis.EnumItem {
            Name: "Funny";
            Value: 9;
            EnumType: typeof globalThis.Enum.Genre;
        }
        export const Funny: Funny;
        /**
         * The game's genre is set to Wild West.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/Genre#WildWest)
         */
        export interface WildWest extends globalThis.EnumItem {
            Name: "WildWest";
            Value: 10;
            EnumType: typeof globalThis.Enum.Genre;
        }
        export const WildWest: WildWest;
        /**
         * The game's genre is set to War.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/Genre#War)
         */
        export interface War extends globalThis.EnumItem {
            Name: "War";
            Value: 11;
            EnumType: typeof globalThis.Enum.Genre;
        }
        export const War: War;
        /**
         * The game's genre is set to Skate Park.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/Genre#SkatePark)
         */
        export interface SkatePark extends globalThis.EnumItem {
            Name: "SkatePark";
            Value: 12;
            EnumType: typeof globalThis.Enum.Genre;
        }
        export const SkatePark: SkatePark;
        /**
         * The game's genre is set to Tutorial.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/Genre#Tutorial)
         */
        export interface Tutorial extends globalThis.EnumItem {
            Name: "Tutorial";
            Value: 13;
            EnumType: typeof globalThis.Enum.Genre;
        }
        export const Tutorial: Tutorial;
        export function GetEnumItems(this: globalThis.Enum): Array<globalThis.Enum.Genre>;
        export function FromName(this: globalThis.Enum, name: string): globalThis.Enum.Genre | undefined;
        export function FromValue(this: globalThis.Enum, value: number): globalThis.Enum.Genre | undefined;
    }
    export type Genre = Genre.All | Genre.TownAndCity | Genre.Fantasy | Genre.SciFi | Genre.Ninja | Genre.Scary | Genre.Pirate | Genre.Adventure | Genre.Sports | Genre.Funny | Genre.WildWest | Genre.War | Genre.SkatePark | Genre.Tutorial;
    /**
     * Used to set the graphics API that Roblox uses to render the game.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/GraphicsMode)
     */
    export namespace GraphicsMode {
        /**
         * Roblox will automatically decide what graphics mode to use, depending on what best suits your device's specifications.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/GraphicsMode#Automatic)
         */
        export interface Automatic extends globalThis.EnumItem {
            Name: "Automatic";
            Value: 1;
            EnumType: typeof globalThis.Enum.GraphicsMode;
        }
        export const Automatic: Automatic;
        /**
         * Direct3D Version 11 (Microsoft).
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/GraphicsMode#Direct3D11)
         */
        export interface Direct3D11 extends globalThis.EnumItem {
            Name: "Direct3D11";
            Value: 2;
            EnumType: typeof globalThis.Enum.GraphicsMode;
        }
        export const Direct3D11: Direct3D11;
        /**
         * OpenGL (Khronos Group).
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/GraphicsMode#OpenGL)
         */
        export interface OpenGL extends globalThis.EnumItem {
            Name: "OpenGL";
            Value: 4;
            EnumType: typeof globalThis.Enum.GraphicsMode;
        }
        export const OpenGL: OpenGL;
        /**
         * Metal (Apple).
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/GraphicsMode#Metal)
         */
        export interface Metal extends globalThis.EnumItem {
            Name: "Metal";
            Value: 5;
            EnumType: typeof globalThis.Enum.GraphicsMode;
        }
        export const Metal: Metal;
        /**
         * Vulkan (Khronos Group).
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/GraphicsMode#Vulkan)
         */
        export interface Vulkan extends globalThis.EnumItem {
            Name: "Vulkan";
            Value: 6;
            EnumType: typeof globalThis.Enum.GraphicsMode;
        }
        export const Vulkan: Vulkan;
        /**
         * Game will not be rendered, and instead a *Diagnostics* window is rendered on screen.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/GraphicsMode#NoGraphics)
         */
        export interface NoGraphics extends globalThis.EnumItem {
            Name: "NoGraphics";
            Value: 9;
            EnumType: typeof globalThis.Enum.GraphicsMode;
        }
        export const NoGraphics: NoGraphics;
        export function GetEnumItems(this: globalThis.Enum): Array<globalThis.Enum.GraphicsMode>;
        export function FromName(this: globalThis.Enum, name: string): globalThis.Enum.GraphicsMode | undefined;
        export function FromValue(this: globalThis.Enum, value: number): globalThis.Enum.GraphicsMode | undefined;
    }
    export type GraphicsMode = GraphicsMode.Automatic | GraphicsMode.Direct3D11 | GraphicsMode.OpenGL | GraphicsMode.Metal | GraphicsMode.Vulkan | GraphicsMode.NoGraphics;
    /**
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/GraphicsOptimizationMode)
     */
    export namespace GraphicsOptimizationMode {
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/GraphicsOptimizationMode#Performance)
         */
        export interface Performance extends globalThis.EnumItem {
            Name: "Performance";
            Value: 0;
            EnumType: typeof globalThis.Enum.GraphicsOptimizationMode;
        }
        export const Performance: Performance;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/GraphicsOptimizationMode#Balanced)
         */
        export interface Balanced extends globalThis.EnumItem {
            Name: "Balanced";
            Value: 1;
            EnumType: typeof globalThis.Enum.GraphicsOptimizationMode;
        }
        export const Balanced: Balanced;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/GraphicsOptimizationMode#Quality)
         */
        export interface Quality extends globalThis.EnumItem {
            Name: "Quality";
            Value: 2;
            EnumType: typeof globalThis.Enum.GraphicsOptimizationMode;
        }
        export const Quality: Quality;
        export function GetEnumItems(this: globalThis.Enum): Array<globalThis.Enum.GraphicsOptimizationMode>;
        export function FromName(this: globalThis.Enum, name: string): globalThis.Enum.GraphicsOptimizationMode | undefined;
        export function FromValue(this: globalThis.Enum, value: number): globalThis.Enum.GraphicsOptimizationMode | undefined;
    }
    export type GraphicsOptimizationMode = GraphicsOptimizationMode.Performance | GraphicsOptimizationMode.Balanced | GraphicsOptimizationMode.Quality;
    /**
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/GuiState)
     */
    export namespace GuiState {
        /**
         * The GUI currently has no state.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/GuiState#Idle)
         */
        export interface Idle extends globalThis.EnumItem {
            Name: "Idle";
            Value: 0;
            EnumType: typeof globalThis.Enum.GuiState;
        }
        export const Idle: Idle;
        /**
         * The GUI is being hovered over by the user.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/GuiState#Hover)
         */
        export interface Hover extends globalThis.EnumItem {
            Name: "Hover";
            Value: 1;
            EnumType: typeof globalThis.Enum.GuiState;
        }
        export const Hover: Hover;
        /**
         * The GUI is being pressed/held down by the user.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/GuiState#Press)
         */
        export interface Press extends globalThis.EnumItem {
            Name: "Press";
            Value: 2;
            EnumType: typeof globalThis.Enum.GuiState;
        }
        export const Press: Press;
        /**
         * The GUI cannot be interacted with and therefore has no states.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/GuiState#NonInteractable)
         */
        export interface NonInteractable extends globalThis.EnumItem {
            Name: "NonInteractable";
            Value: 3;
            EnumType: typeof globalThis.Enum.GuiState;
        }
        export const NonInteractable: NonInteractable;
        export function GetEnumItems(this: globalThis.Enum): Array<globalThis.Enum.GuiState>;
        export function FromName(this: globalThis.Enum, name: string): globalThis.Enum.GuiState | undefined;
        export function FromValue(this: globalThis.Enum, value: number): globalThis.Enum.GuiState | undefined;
    }
    export type GuiState = GuiState.Idle | GuiState.Hover | GuiState.Press | GuiState.NonInteractable;
    /**
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/GuiType)
     */
    export namespace GuiType {
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/GuiType#Core)
         */
        export interface Core extends globalThis.EnumItem {
            Name: "Core";
            Value: 0;
            EnumType: typeof globalThis.Enum.GuiType;
        }
        export const Core: Core;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/GuiType#Custom)
         */
        export interface Custom extends globalThis.EnumItem {
            Name: "Custom";
            Value: 1;
            EnumType: typeof globalThis.Enum.GuiType;
        }
        export const Custom: Custom;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/GuiType#PlayerNameplates)
         */
        export interface PlayerNameplates extends globalThis.EnumItem {
            Name: "PlayerNameplates";
            Value: 2;
            EnumType: typeof globalThis.Enum.GuiType;
        }
        export const PlayerNameplates: PlayerNameplates;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/GuiType#CustomBillboards)
         */
        export interface CustomBillboards extends globalThis.EnumItem {
            Name: "CustomBillboards";
            Value: 3;
            EnumType: typeof globalThis.Enum.GuiType;
        }
        export const CustomBillboards: CustomBillboards;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/GuiType#CoreBillboards)
         */
        export interface CoreBillboards extends globalThis.EnumItem {
            Name: "CoreBillboards";
            Value: 4;
            EnumType: typeof globalThis.Enum.GuiType;
        }
        export const CoreBillboards: CoreBillboards;
        export function GetEnumItems(this: globalThis.Enum): Array<globalThis.Enum.GuiType>;
        export function FromName(this: globalThis.Enum, name: string): globalThis.Enum.GuiType | undefined;
        export function FromValue(this: globalThis.Enum, value: number): globalThis.Enum.GuiType | undefined;
    }
    export type GuiType = GuiType.Core | GuiType.Custom | GuiType.PlayerNameplates | GuiType.CustomBillboards | GuiType.CoreBillboards;
    /**
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/HandlesStyle)
     */
    export namespace HandlesStyle {
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/HandlesStyle#Resize)
         */
        export interface Resize extends globalThis.EnumItem {
            Name: "Resize";
            Value: 0;
            EnumType: typeof globalThis.Enum.HandlesStyle;
        }
        export const Resize: Resize;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/HandlesStyle#Movement)
         */
        export interface Movement extends globalThis.EnumItem {
            Name: "Movement";
            Value: 1;
            EnumType: typeof globalThis.Enum.HandlesStyle;
        }
        export const Movement: Movement;
        export function GetEnumItems(this: globalThis.Enum): Array<globalThis.Enum.HandlesStyle>;
        export function FromName(this: globalThis.Enum, name: string): globalThis.Enum.HandlesStyle | undefined;
        export function FromValue(this: globalThis.Enum, value: number): globalThis.Enum.HandlesStyle | undefined;
    }
    export type HandlesStyle = HandlesStyle.Resize | HandlesStyle.Movement;
    /**
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/HapticEffectType)
     */
    export namespace HapticEffectType {
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/HapticEffectType#Custom)
         */
        export interface Custom extends globalThis.EnumItem {
            Name: "Custom";
            Value: 0;
            EnumType: typeof globalThis.Enum.HapticEffectType;
        }
        export const Custom: Custom;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/HapticEffectType#UIHover)
         */
        export interface UIHover extends globalThis.EnumItem {
            Name: "UIHover";
            Value: 1;
            EnumType: typeof globalThis.Enum.HapticEffectType;
        }
        export const UIHover: UIHover;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/HapticEffectType#UIClick)
         */
        export interface UIClick extends globalThis.EnumItem {
            Name: "UIClick";
            Value: 2;
            EnumType: typeof globalThis.Enum.HapticEffectType;
        }
        export const UIClick: UIClick;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/HapticEffectType#UINotification)
         */
        export interface UINotification extends globalThis.EnumItem {
            Name: "UINotification";
            Value: 3;
            EnumType: typeof globalThis.Enum.HapticEffectType;
        }
        export const UINotification: UINotification;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/HapticEffectType#GameplayExplosion)
         */
        export interface GameplayExplosion extends globalThis.EnumItem {
            Name: "GameplayExplosion";
            Value: 4;
            EnumType: typeof globalThis.Enum.HapticEffectType;
        }
        export const GameplayExplosion: GameplayExplosion;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/HapticEffectType#GameplayCollision)
         */
        export interface GameplayCollision extends globalThis.EnumItem {
            Name: "GameplayCollision";
            Value: 5;
            EnumType: typeof globalThis.Enum.HapticEffectType;
        }
        export const GameplayCollision: GameplayCollision;
        export function GetEnumItems(this: globalThis.Enum): Array<globalThis.Enum.HapticEffectType>;
        export function FromName(this: globalThis.Enum, name: string): globalThis.Enum.HapticEffectType | undefined;
        export function FromValue(this: globalThis.Enum, value: number): globalThis.Enum.HapticEffectType | undefined;
    }
    export type HapticEffectType = HapticEffectType.Custom | HapticEffectType.UIHover | HapticEffectType.UIClick | HapticEffectType.UINotification | HapticEffectType.GameplayExplosion | HapticEffectType.GameplayCollision;
    /**
     * Controls how the `Highlight` effect displays with respect to other objects in the world.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/HighlightDepthMode)
     */
    export namespace HighlightDepthMode {
        /**
         * Allows the `Highlight` to display regardless if there are objects between the camera and the highlighted object. This means the viewer is always able to see the highlight regardless of what is between the highlighted object and the camera. ![](https://prod.docsiteassets.roblox.com/assets/ui/highlighting-objects/DepthMode-AlwaysOnTop.jpg)
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/HighlightDepthMode#AlwaysOnTop)
         */
        export interface AlwaysOnTop extends globalThis.EnumItem {
            Name: "AlwaysOnTop";
            Value: 0;
            EnumType: typeof globalThis.Enum.HighlightDepthMode;
        }
        export const AlwaysOnTop: AlwaysOnTop;
        /**
         * Hides the `Highlight` if there are objects between the camera and the highlighted object. This means the viewer is only able to see the object if there are no obstructing objects between the highlighted object and the camera's view. ![](https://prod.docsiteassets.roblox.com/assets/ui/highlighting-objects/DepthMode-Occluded.jpg)
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/HighlightDepthMode#Occluded)
         */
        export interface Occluded extends globalThis.EnumItem {
            Name: "Occluded";
            Value: 1;
            EnumType: typeof globalThis.Enum.HighlightDepthMode;
        }
        export const Occluded: Occluded;
        export function GetEnumItems(this: globalThis.Enum): Array<globalThis.Enum.HighlightDepthMode>;
        export function FromName(this: globalThis.Enum, name: string): globalThis.Enum.HighlightDepthMode | undefined;
        export function FromValue(this: globalThis.Enum, value: number): globalThis.Enum.HighlightDepthMode | undefined;
    }
    export type HighlightDepthMode = HighlightDepthMode.AlwaysOnTop | HighlightDepthMode.Occluded;
    /**
     * Used by `UIGridStyleLayout.HorizontalAlignment` to align the layout horizontally within its parent.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/HorizontalAlignment)
     */
    export namespace HorizontalAlignment {
        /**
         * Grid is aligned to the center of its parent along the **X** axis.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/HorizontalAlignment#Center)
         */
        export interface Center extends globalThis.EnumItem {
            Name: "Center";
            Value: 0;
            EnumType: typeof globalThis.Enum.HorizontalAlignment;
        }
        export const Center: Center;
        /**
         * Grid is aligned to the left edge of its parent.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/HorizontalAlignment#Left)
         */
        export interface Left extends globalThis.EnumItem {
            Name: "Left";
            Value: 1;
            EnumType: typeof globalThis.Enum.HorizontalAlignment;
        }
        export const Left: Left;
        /**
         * Grid is aligned to the right edge of its parent.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/HorizontalAlignment#Right)
         */
        export interface Right extends globalThis.EnumItem {
            Name: "Right";
            Value: 2;
            EnumType: typeof globalThis.Enum.HorizontalAlignment;
        }
        export const Right: Right;
        export function GetEnumItems(this: globalThis.Enum): Array<globalThis.Enum.HorizontalAlignment>;
        export function FromName(this: globalThis.Enum, name: string): globalThis.Enum.HorizontalAlignment | undefined;
        export function FromValue(this: globalThis.Enum, value: number): globalThis.Enum.HorizontalAlignment | undefined;
    }
    export type HorizontalAlignment = HorizontalAlignment.Center | HorizontalAlignment.Left | HorizontalAlignment.Right;
    /**
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/HoverAnimateSpeed)
     */
    export namespace HoverAnimateSpeed {
        /**
         * 2 seconds per cycle.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/HoverAnimateSpeed#VerySlow)
         */
        export interface VerySlow extends globalThis.EnumItem {
            Name: "VerySlow";
            Value: 0;
            EnumType: typeof globalThis.Enum.HoverAnimateSpeed;
        }
        export const VerySlow: VerySlow;
        /**
         * 1 second per cycle.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/HoverAnimateSpeed#Slow)
         */
        export interface Slow extends globalThis.EnumItem {
            Name: "Slow";
            Value: 1;
            EnumType: typeof globalThis.Enum.HoverAnimateSpeed;
        }
        export const Slow: Slow;
        /**
         * 0.5 seconds per cycle.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/HoverAnimateSpeed#Medium)
         */
        export interface Medium extends globalThis.EnumItem {
            Name: "Medium";
            Value: 2;
            EnumType: typeof globalThis.Enum.HoverAnimateSpeed;
        }
        export const Medium: Medium;
        /**
         * 0.25 seconds per cycle.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/HoverAnimateSpeed#Fast)
         */
        export interface Fast extends globalThis.EnumItem {
            Name: "Fast";
            Value: 3;
            EnumType: typeof globalThis.Enum.HoverAnimateSpeed;
        }
        export const Fast: Fast;
        /**
         * 0.1 seconds per cycle.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/HoverAnimateSpeed#VeryFast)
         */
        export interface VeryFast extends globalThis.EnumItem {
            Name: "VeryFast";
            Value: 4;
            EnumType: typeof globalThis.Enum.HoverAnimateSpeed;
        }
        export const VeryFast: VeryFast;
        export function GetEnumItems(this: globalThis.Enum): Array<globalThis.Enum.HoverAnimateSpeed>;
        export function FromName(this: globalThis.Enum, name: string): globalThis.Enum.HoverAnimateSpeed | undefined;
        export function FromValue(this: globalThis.Enum, value: number): globalThis.Enum.HoverAnimateSpeed | undefined;
    }
    export type HoverAnimateSpeed = HoverAnimateSpeed.VerySlow | HoverAnimateSpeed.Slow | HoverAnimateSpeed.Medium | HoverAnimateSpeed.Fast | HoverAnimateSpeed.VeryFast;
    /**
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/HttpCachePolicy)
     */
    export namespace HttpCachePolicy {
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/HttpCachePolicy#None)
         */
        export interface None extends globalThis.EnumItem {
            Name: "None";
            Value: 0;
            EnumType: typeof globalThis.Enum.HttpCachePolicy;
        }
        export const None: None;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/HttpCachePolicy#Full)
         */
        export interface Full extends globalThis.EnumItem {
            Name: "Full";
            Value: 1;
            EnumType: typeof globalThis.Enum.HttpCachePolicy;
        }
        export const Full: Full;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/HttpCachePolicy#DataOnly)
         */
        export interface DataOnly extends globalThis.EnumItem {
            Name: "DataOnly";
            Value: 2;
            EnumType: typeof globalThis.Enum.HttpCachePolicy;
        }
        export const DataOnly: DataOnly;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/HttpCachePolicy#Default)
         */
        export interface Default extends globalThis.EnumItem {
            Name: "Default";
            Value: 3;
            EnumType: typeof globalThis.Enum.HttpCachePolicy;
        }
        export const Default: Default;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/HttpCachePolicy#InternalRedirectRefresh)
         */
        export interface InternalRedirectRefresh extends globalThis.EnumItem {
            Name: "InternalRedirectRefresh";
            Value: 4;
            EnumType: typeof globalThis.Enum.HttpCachePolicy;
        }
        export const InternalRedirectRefresh: InternalRedirectRefresh;
        export function GetEnumItems(this: globalThis.Enum): Array<globalThis.Enum.HttpCachePolicy>;
        export function FromName(this: globalThis.Enum, name: string): globalThis.Enum.HttpCachePolicy | undefined;
        export function FromValue(this: globalThis.Enum, value: number): globalThis.Enum.HttpCachePolicy | undefined;
    }
    export type HttpCachePolicy = HttpCachePolicy.None | HttpCachePolicy.Full | HttpCachePolicy.DataOnly | HttpCachePolicy.Default | HttpCachePolicy.InternalRedirectRefresh;
    /**
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/HttpCompression)
     */
    export namespace HttpCompression {
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/HttpCompression#None)
         */
        export interface None extends globalThis.EnumItem {
            Name: "None";
            Value: 0;
            EnumType: typeof globalThis.Enum.HttpCompression;
        }
        export const None: None;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/HttpCompression#Gzip)
         */
        export interface Gzip extends globalThis.EnumItem {
            Name: "Gzip";
            Value: 1;
            EnumType: typeof globalThis.Enum.HttpCompression;
        }
        export const Gzip: Gzip;
        export function GetEnumItems(this: globalThis.Enum): Array<globalThis.Enum.HttpCompression>;
        export function FromName(this: globalThis.Enum, name: string): globalThis.Enum.HttpCompression | undefined;
        export function FromValue(this: globalThis.Enum, value: number): globalThis.Enum.HttpCompression | undefined;
    }
    export type HttpCompression = HttpCompression.None | HttpCompression.Gzip;
    /**
     * Specifies the value of the HTTP Content-Type header which describes the HTTP request data type.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/HttpContentType)
     */
    export namespace HttpContentType {
        /**
         * Represents the "application/json" Content-Type.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/HttpContentType#ApplicationJson)
         */
        export interface ApplicationJson extends globalThis.EnumItem {
            Name: "ApplicationJson";
            Value: 0;
            EnumType: typeof globalThis.Enum.HttpContentType;
        }
        export const ApplicationJson: ApplicationJson;
        /**
         * Represents the "application/xml" Content-Type.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/HttpContentType#ApplicationXml)
         */
        export interface ApplicationXml extends globalThis.EnumItem {
            Name: "ApplicationXml";
            Value: 1;
            EnumType: typeof globalThis.Enum.HttpContentType;
        }
        export const ApplicationXml: ApplicationXml;
        /**
         * Represents the "application/x-www-form-urlencoded" Content-Type.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/HttpContentType#ApplicationUrlEncoded)
         */
        export interface ApplicationUrlEncoded extends globalThis.EnumItem {
            Name: "ApplicationUrlEncoded";
            Value: 2;
            EnumType: typeof globalThis.Enum.HttpContentType;
        }
        export const ApplicationUrlEncoded: ApplicationUrlEncoded;
        /**
         * Represents the "text/plain" Content-Type.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/HttpContentType#TextPlain)
         */
        export interface TextPlain extends globalThis.EnumItem {
            Name: "TextPlain";
            Value: 3;
            EnumType: typeof globalThis.Enum.HttpContentType;
        }
        export const TextPlain: TextPlain;
        /**
         * Represents the "text/xml" Content-Type.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/HttpContentType#TextXml)
         */
        export interface TextXml extends globalThis.EnumItem {
            Name: "TextXml";
            Value: 4;
            EnumType: typeof globalThis.Enum.HttpContentType;
        }
        export const TextXml: TextXml;
        export function GetEnumItems(this: globalThis.Enum): Array<globalThis.Enum.HttpContentType>;
        export function FromName(this: globalThis.Enum, name: string): globalThis.Enum.HttpContentType | undefined;
        export function FromValue(this: globalThis.Enum, value: number): globalThis.Enum.HttpContentType | undefined;
    }
    export type HttpContentType = HttpContentType.ApplicationJson | HttpContentType.ApplicationXml | HttpContentType.ApplicationUrlEncoded | HttpContentType.TextPlain | HttpContentType.TextXml;
    /**
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/HttpError)
     */
    export namespace HttpError {
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/HttpError#OK)
         */
        export interface OK extends globalThis.EnumItem {
            Name: "OK";
            Value: 0;
            EnumType: typeof globalThis.Enum.HttpError;
        }
        export const OK: OK;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/HttpError#InvalidUrl)
         */
        export interface InvalidUrl extends globalThis.EnumItem {
            Name: "InvalidUrl";
            Value: 1;
            EnumType: typeof globalThis.Enum.HttpError;
        }
        export const InvalidUrl: InvalidUrl;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/HttpError#DnsResolve)
         */
        export interface DnsResolve extends globalThis.EnumItem {
            Name: "DnsResolve";
            Value: 2;
            EnumType: typeof globalThis.Enum.HttpError;
        }
        export const DnsResolve: DnsResolve;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/HttpError#ConnectFail)
         */
        export interface ConnectFail extends globalThis.EnumItem {
            Name: "ConnectFail";
            Value: 3;
            EnumType: typeof globalThis.Enum.HttpError;
        }
        export const ConnectFail: ConnectFail;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/HttpError#OutOfMemory)
         */
        export interface OutOfMemory extends globalThis.EnumItem {
            Name: "OutOfMemory";
            Value: 4;
            EnumType: typeof globalThis.Enum.HttpError;
        }
        export const OutOfMemory: OutOfMemory;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/HttpError#TimedOut)
         */
        export interface TimedOut extends globalThis.EnumItem {
            Name: "TimedOut";
            Value: 5;
            EnumType: typeof globalThis.Enum.HttpError;
        }
        export const TimedOut: TimedOut;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/HttpError#TooManyRedirects)
         */
        export interface TooManyRedirects extends globalThis.EnumItem {
            Name: "TooManyRedirects";
            Value: 6;
            EnumType: typeof globalThis.Enum.HttpError;
        }
        export const TooManyRedirects: TooManyRedirects;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/HttpError#InvalidRedirect)
         */
        export interface InvalidRedirect extends globalThis.EnumItem {
            Name: "InvalidRedirect";
            Value: 7;
            EnumType: typeof globalThis.Enum.HttpError;
        }
        export const InvalidRedirect: InvalidRedirect;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/HttpError#NetFail)
         */
        export interface NetFail extends globalThis.EnumItem {
            Name: "NetFail";
            Value: 8;
            EnumType: typeof globalThis.Enum.HttpError;
        }
        export const NetFail: NetFail;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/HttpError#Aborted)
         */
        export interface Aborted extends globalThis.EnumItem {
            Name: "Aborted";
            Value: 9;
            EnumType: typeof globalThis.Enum.HttpError;
        }
        export const Aborted: Aborted;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/HttpError#SslConnectFail)
         */
        export interface SslConnectFail extends globalThis.EnumItem {
            Name: "SslConnectFail";
            Value: 10;
            EnumType: typeof globalThis.Enum.HttpError;
        }
        export const SslConnectFail: SslConnectFail;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/HttpError#SslVerificationFail)
         */
        export interface SslVerificationFail extends globalThis.EnumItem {
            Name: "SslVerificationFail";
            Value: 11;
            EnumType: typeof globalThis.Enum.HttpError;
        }
        export const SslVerificationFail: SslVerificationFail;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/HttpError#Unknown)
         */
        export interface Unknown extends globalThis.EnumItem {
            Name: "Unknown";
            Value: 12;
            EnumType: typeof globalThis.Enum.HttpError;
        }
        export const Unknown: Unknown;
        export function GetEnumItems(this: globalThis.Enum): Array<globalThis.Enum.HttpError>;
        export function FromName(this: globalThis.Enum, name: string): globalThis.Enum.HttpError | undefined;
        export function FromValue(this: globalThis.Enum, value: number): globalThis.Enum.HttpError | undefined;
    }
    export type HttpError = HttpError.OK | HttpError.InvalidUrl | HttpError.DnsResolve | HttpError.ConnectFail | HttpError.OutOfMemory | HttpError.TimedOut | HttpError.TooManyRedirects | HttpError.InvalidRedirect | HttpError.NetFail | HttpError.Aborted | HttpError.SslConnectFail | HttpError.SslVerificationFail | HttpError.Unknown;
    /**
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/HttpRequestType)
     */
    export namespace HttpRequestType {
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/HttpRequestType#Default)
         */
        export interface Default extends globalThis.EnumItem {
            Name: "Default";
            Value: 0;
            EnumType: typeof globalThis.Enum.HttpRequestType;
        }
        export const Default: Default;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/HttpRequestType#MarketplaceService)
         */
        export interface MarketplaceService extends globalThis.EnumItem {
            Name: "MarketplaceService";
            Value: 2;
            EnumType: typeof globalThis.Enum.HttpRequestType;
        }
        export const MarketplaceService: MarketplaceService;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/HttpRequestType#Players)
         */
        export interface Players extends globalThis.EnumItem {
            Name: "Players";
            Value: 7;
            EnumType: typeof globalThis.Enum.HttpRequestType;
        }
        export const Players: Players;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/HttpRequestType#Chat)
         */
        export interface Chat extends globalThis.EnumItem {
            Name: "Chat";
            Value: 15;
            EnumType: typeof globalThis.Enum.HttpRequestType;
        }
        export const Chat: Chat;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/HttpRequestType#Avatar)
         */
        export interface Avatar extends globalThis.EnumItem {
            Name: "Avatar";
            Value: 16;
            EnumType: typeof globalThis.Enum.HttpRequestType;
        }
        export const Avatar: Avatar;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/HttpRequestType#Analytics)
         */
        export interface Analytics extends globalThis.EnumItem {
            Name: "Analytics";
            Value: 23;
            EnumType: typeof globalThis.Enum.HttpRequestType;
        }
        export const Analytics: Analytics;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/HttpRequestType#Localization)
         */
        export interface Localization extends globalThis.EnumItem {
            Name: "Localization";
            Value: 25;
            EnumType: typeof globalThis.Enum.HttpRequestType;
        }
        export const Localization: Localization;
        export function GetEnumItems(this: globalThis.Enum): Array<globalThis.Enum.HttpRequestType>;
        export function FromName(this: globalThis.Enum, name: string): globalThis.Enum.HttpRequestType | undefined;
        export function FromValue(this: globalThis.Enum, value: number): globalThis.Enum.HttpRequestType | undefined;
    }
    export type HttpRequestType = HttpRequestType.Default | HttpRequestType.MarketplaceService | HttpRequestType.Players | HttpRequestType.Chat | HttpRequestType.Avatar | HttpRequestType.Analytics | HttpRequestType.Localization;
    /**
     * The collision `Humanoid` uses. A large bounding box, or more fitted collision geometry.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/HumanoidCollisionType)
     */
    export namespace HumanoidCollisionType {
        /**
         * Dynamically sized collision boxes based on mesh sizes.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/HumanoidCollisionType#OuterBox)
         */
        export interface OuterBox extends globalThis.EnumItem {
            Name: "OuterBox";
            Value: 0;
            EnumType: typeof globalThis.Enum.HumanoidCollisionType;
        }
        export const OuterBox: OuterBox;
        /**
         * Fixed size collision boxes, similar to the classic avatar collision.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/HumanoidCollisionType#InnerBox)
         */
        export interface InnerBox extends globalThis.EnumItem {
            Name: "InnerBox";
            Value: 1;
            EnumType: typeof globalThis.Enum.HumanoidCollisionType;
        }
        export const InnerBox: InnerBox;
        export function GetEnumItems(this: globalThis.Enum): Array<globalThis.Enum.HumanoidCollisionType>;
        export function FromName(this: globalThis.Enum, name: string): globalThis.Enum.HumanoidCollisionType | undefined;
        export function FromValue(this: globalThis.Enum, value: number): globalThis.Enum.HumanoidCollisionType | undefined;
    }
    export type HumanoidCollisionType = HumanoidCollisionType.OuterBox | HumanoidCollisionType.InnerBox;
    /**
     * HumanoidDisplayDistanceType determines how `Humanoid.HealthDisplayDistance`, and `Humanoid.NameDisplayDistance` are used in determining whether a players's name and health are visible to other players.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/HumanoidDisplayDistanceType)
     */
    export namespace HumanoidDisplayDistanceType {
        /**
         * A player selecting `Viewer` on their `Humanoid` will see the Name and healthbar of other players if those other players are within the distance settings set in the `Humanoid` selecting `Viewer` (this can be thought of as the lowest priority, and will not be taken into account if other players are selecting 'Subject' or 'None').
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/HumanoidDisplayDistanceType#Viewer)
         */
        export interface Viewer extends globalThis.EnumItem {
            Name: "Viewer";
            Value: 0;
            EnumType: typeof globalThis.Enum.HumanoidDisplayDistanceType;
        }
        export const Viewer: Viewer;
        /**
         * A player selecting `Subject` on their `Humanoid` will allow other players to see their Name and healthbar if those other players are within the distance settings set in the `Humanoid` selecting `Subject` (this can be thought of as the second highest priority).
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/HumanoidDisplayDistanceType#Subject)
         */
        export interface Subject extends globalThis.EnumItem {
            Name: "Subject";
            Value: 1;
            EnumType: typeof globalThis.Enum.HumanoidDisplayDistanceType;
        }
        export const Subject: Subject;
        /**
         * A player selecting `None` on their `Humanoid` will not have their Name and healthbar displayed to other players under any circumstance (this can be thought of as the highest priority).
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/HumanoidDisplayDistanceType#None)
         */
        export interface None extends globalThis.EnumItem {
            Name: "None";
            Value: 2;
            EnumType: typeof globalThis.Enum.HumanoidDisplayDistanceType;
        }
        export const None: None;
        export function GetEnumItems(this: globalThis.Enum): Array<globalThis.Enum.HumanoidDisplayDistanceType>;
        export function FromName(this: globalThis.Enum, name: string): globalThis.Enum.HumanoidDisplayDistanceType | undefined;
        export function FromValue(this: globalThis.Enum, value: number): globalThis.Enum.HumanoidDisplayDistanceType | undefined;
    }
    export type HumanoidDisplayDistanceType = HumanoidDisplayDistanceType.Viewer | HumanoidDisplayDistanceType.Subject | HumanoidDisplayDistanceType.None;
    /**
     * Controls under what circumstances the `Humanoid` health bar is displayed.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/HumanoidHealthDisplayType)
     */
    export namespace HumanoidHealthDisplayType {
        /**
         * The humanoid's health bar is only visible when the humanoid is not at full health (assuming `MaxHealth` is greater than zero).
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/HumanoidHealthDisplayType#DisplayWhenDamaged)
         */
        export interface DisplayWhenDamaged extends globalThis.EnumItem {
            Name: "DisplayWhenDamaged";
            Value: 0;
            EnumType: typeof globalThis.Enum.HumanoidHealthDisplayType;
        }
        export const DisplayWhenDamaged: DisplayWhenDamaged;
        /**
         * The humanoid's health bar is always visible (assuming `MaxHealth` is greater than zero).
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/HumanoidHealthDisplayType#AlwaysOn)
         */
        export interface AlwaysOn extends globalThis.EnumItem {
            Name: "AlwaysOn";
            Value: 1;
            EnumType: typeof globalThis.Enum.HumanoidHealthDisplayType;
        }
        export const AlwaysOn: AlwaysOn;
        /**
         * The humanoid's health bar is never visible.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/HumanoidHealthDisplayType#AlwaysOff)
         */
        export interface AlwaysOff extends globalThis.EnumItem {
            Name: "AlwaysOff";
            Value: 2;
            EnumType: typeof globalThis.Enum.HumanoidHealthDisplayType;
        }
        export const AlwaysOff: AlwaysOff;
        export function GetEnumItems(this: globalThis.Enum): Array<globalThis.Enum.HumanoidHealthDisplayType>;
        export function FromName(this: globalThis.Enum, name: string): globalThis.Enum.HumanoidHealthDisplayType | undefined;
        export function FromValue(this: globalThis.Enum, value: number): globalThis.Enum.HumanoidHealthDisplayType | undefined;
    }
    export type HumanoidHealthDisplayType = HumanoidHealthDisplayType.DisplayWhenDamaged | HumanoidHealthDisplayType.AlwaysOn | HumanoidHealthDisplayType.AlwaysOff;
    /**
     * Describes whether or not a character is using the new R15 rig, or the legacy R6 rig.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/HumanoidRigType)
     */
    export namespace HumanoidRigType {
        /**
         * Indicates that a character is using the legacy R6 rig.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/HumanoidRigType#R6)
         */
        export interface R6 extends globalThis.EnumItem {
            Name: "R6";
            Value: 0;
            EnumType: typeof globalThis.Enum.HumanoidRigType;
        }
        export const R6: R6;
        /**
         * Indicates that a character is using the new R15 rig.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/HumanoidRigType#R15)
         */
        export interface R15 extends globalThis.EnumItem {
            Name: "R15";
            Value: 1;
            EnumType: typeof globalThis.Enum.HumanoidRigType;
        }
        export const R15: R15;
        export function GetEnumItems(this: globalThis.Enum): Array<globalThis.Enum.HumanoidRigType>;
        export function FromName(this: globalThis.Enum, name: string): globalThis.Enum.HumanoidRigType | undefined;
        export function FromValue(this: globalThis.Enum, value: number): globalThis.Enum.HumanoidRigType | undefined;
    }
    export type HumanoidRigType = HumanoidRigType.R6 | HumanoidRigType.R15;
    /**
     * Describes the physics control states within the Humanoid.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/HumanoidStateType)
     */
    export namespace HumanoidStateType {
        /**
         * The Humanoid has been tripped, and will attempt to get up in a few moments.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/HumanoidStateType#FallingDown)
         */
        export interface FallingDown extends globalThis.EnumItem {
            Name: "FallingDown";
            Value: 0;
            EnumType: typeof globalThis.Enum.HumanoidStateType;
        }
        export const FallingDown: FallingDown;
        /**
         * (Deprecated) The Humanoid has been hit by a fast moving object (uncontrolled falling). *The Humanoid can recover from this.* This state has to be set and unset manually using `Humanoid:ChangeState()`.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/HumanoidStateType#Ragdoll)
         */
        export interface Ragdoll extends globalThis.EnumItem {
            Name: "Ragdoll";
            Value: 1;
            EnumType: typeof globalThis.Enum.HumanoidStateType;
        }
        export const Ragdoll: Ragdoll;
        /**
         * The Humanoid is getting back on their feet after FallingDown or Ragdoll.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/HumanoidStateType#GettingUp)
         */
        export interface GettingUp extends globalThis.EnumItem {
            Name: "GettingUp";
            Value: 2;
            EnumType: typeof globalThis.Enum.HumanoidStateType;
        }
        export const GettingUp: GettingUp;
        /**
         * The Humanoid just jumped. (Check `Humanoid.Jump`). This state lasts only briefly. This state normally transitions into either Landed, if on the ground, or Freefall, if still in the air.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/HumanoidStateType#Jumping)
         */
        export interface Jumping extends globalThis.EnumItem {
            Name: "Jumping";
            Value: 3;
            EnumType: typeof globalThis.Enum.HumanoidStateType;
        }
        export const Jumping: Jumping;
        /**
         * The Humanoid is currently swimming in `Terrain` water.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/HumanoidStateType#Swimming)
         */
        export interface Swimming extends globalThis.EnumItem {
            Name: "Swimming";
            Value: 4;
            EnumType: typeof globalThis.Enum.HumanoidStateType;
        }
        export const Swimming: Swimming;
        /**
         * The Humanoid is currently freefalling (jumped from a height or fell off a ledge).
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/HumanoidStateType#Freefall)
         */
        export interface Freefall extends globalThis.EnumItem {
            Name: "Freefall";
            Value: 5;
            EnumType: typeof globalThis.Enum.HumanoidStateType;
        }
        export const Freefall: Freefall;
        /**
         * When set, the Humanoid won't be animated, as with the `Humanoid.PlatformStand` property. This state lasts as long as the player flies.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/HumanoidStateType#Flying)
         */
        export interface Flying extends globalThis.EnumItem {
            Name: "Flying";
            Value: 6;
            EnumType: typeof globalThis.Enum.HumanoidStateType;
        }
        export const Flying: Flying;
        /**
         * The Humanoid touched the ground after a Freefall. This state lasts only briefly.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/HumanoidStateType#Landed)
         */
        export interface Landed extends globalThis.EnumItem {
            Name: "Landed";
            Value: 7;
            EnumType: typeof globalThis.Enum.HumanoidStateType;
        }
        export const Landed: Landed;
        /**
         * Currently running while on the ground.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/HumanoidStateType#Running)
         */
        export interface Running extends globalThis.EnumItem {
            Name: "Running";
            Value: 8;
            EnumType: typeof globalThis.Enum.HumanoidStateType;
        }
        export const Running: Running;
        /**
         * (Deprecated) Currently running and not near other physical objects.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/HumanoidStateType#RunningNoPhysics)
         */
        export interface RunningNoPhysics extends globalThis.EnumItem {
            Name: "RunningNoPhysics";
            Value: 10;
            EnumType: typeof globalThis.Enum.HumanoidStateType;
        }
        export const RunningNoPhysics: RunningNoPhysics;
        /**
         * Not currently used with default Humanoid. Cannot be set with `Humanoid:ChangeState()`.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/HumanoidStateType#StrafingNoPhysics)
         */
        export interface StrafingNoPhysics extends globalThis.EnumItem {
            Name: "StrafingNoPhysics";
            Value: 11;
            EnumType: typeof globalThis.Enum.HumanoidStateType;
        }
        export const StrafingNoPhysics: StrafingNoPhysics;
        /**
         * The Humanoid is climbing (e.g. up a `TrussPart` or ladder).
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/HumanoidStateType#Climbing)
         */
        export interface Climbing extends globalThis.EnumItem {
            Name: "Climbing";
            Value: 12;
            EnumType: typeof globalThis.Enum.HumanoidStateType;
        }
        export const Climbing: Climbing;
        /**
         * The Humanoid is currently sitting in a Seat or VehicleSeat. Check the `Humanoid.Sit` property.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/HumanoidStateType#Seated)
         */
        export interface Seated extends globalThis.EnumItem {
            Name: "Seated";
            Value: 13;
            EnumType: typeof globalThis.Enum.HumanoidStateType;
        }
        export const Seated: Seated;
        /**
         * The Humanoid is platformstanding. Check the `Humanoid.PlatformStand` property.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/HumanoidStateType#PlatformStanding)
         */
        export interface PlatformStanding extends globalThis.EnumItem {
            Name: "PlatformStanding";
            Value: 14;
            EnumType: typeof globalThis.Enum.HumanoidStateType;
        }
        export const PlatformStanding: PlatformStanding;
        /**
         * The Humanoid died. Changing a Humanoid's state to this state will kill it.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/HumanoidStateType#Dead)
         */
        export interface Dead extends globalThis.EnumItem {
            Name: "Dead";
            Value: 15;
            EnumType: typeof globalThis.Enum.HumanoidStateType;
        }
        export const Dead: Dead;
        /**
         * The Humanoid doesn't apply any force on its own and will not automatically transition to any other state. This state has to be set and unset manually using `Humanoid:ChangeState()`.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/HumanoidStateType#Physics)
         */
        export interface Physics extends globalThis.EnumItem {
            Name: "Physics";
            Value: 16;
            EnumType: typeof globalThis.Enum.HumanoidStateType;
        }
        export const Physics: Physics;
        /**
         * Unusable placeholder in case an unknown state gets triggered internally.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/HumanoidStateType#None)
         */
        export interface None extends globalThis.EnumItem {
            Name: "None";
            Value: 18;
            EnumType: typeof globalThis.Enum.HumanoidStateType;
        }
        export const None: None;
        export function GetEnumItems(this: globalThis.Enum): Array<globalThis.Enum.HumanoidStateType>;
        export function FromName(this: globalThis.Enum, name: string): globalThis.Enum.HumanoidStateType | undefined;
        export function FromValue(this: globalThis.Enum, value: number): globalThis.Enum.HumanoidStateType | undefined;
    }
    export type HumanoidStateType = HumanoidStateType.FallingDown | HumanoidStateType.Ragdoll | HumanoidStateType.GettingUp | HumanoidStateType.Jumping | HumanoidStateType.Swimming | HumanoidStateType.Freefall | HumanoidStateType.Flying | HumanoidStateType.Landed | HumanoidStateType.Running | HumanoidStateType.RunningNoPhysics | HumanoidStateType.StrafingNoPhysics | HumanoidStateType.Climbing | HumanoidStateType.Seated | HumanoidStateType.PlatformStanding | HumanoidStateType.Dead | HumanoidStateType.Physics | HumanoidStateType.None;
    /**
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/IKCollisionsMode)
     */
    export namespace IKCollisionsMode {
        /**
         * Only the part and any parts directly joined to it via joints/`constraints` be involved in the resolution, everything else in the workspace will be treated as though it doesn't exist.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/IKCollisionsMode#NoCollisions)
         */
        export interface NoCollisions extends globalThis.EnumItem {
            Name: "NoCollisions";
            Value: 0;
            EnumType: typeof globalThis.Enum.IKCollisionsMode;
        }
        export const NoCollisions: NoCollisions;
        /**
         * Only the part and any parts directly jointed to it via joints/`constraints` will be moved during resolution, but they will collide with other objects in the workspace.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/IKCollisionsMode#OtherMechanismsAnchored)
         */
        export interface OtherMechanismsAnchored extends globalThis.EnumItem {
            Name: "OtherMechanismsAnchored";
            Value: 1;
            EnumType: typeof globalThis.Enum.IKCollisionsMode;
        }
        export const OtherMechanismsAnchored: OtherMechanismsAnchored;
        /**
         * The part, any parts directly joined to it via joints/`constraints`, and any parts which it comes into contact with during the solve will be moved during the resolution. That is, the moved parts will be allowed to "push" other unanchored parts in the workspace out of the way in order to get to the target position.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/IKCollisionsMode#IncludeContactedMechanisms)
         */
        export interface IncludeContactedMechanisms extends globalThis.EnumItem {
            Name: "IncludeContactedMechanisms";
            Value: 2;
            EnumType: typeof globalThis.Enum.IKCollisionsMode;
        }
        export const IncludeContactedMechanisms: IncludeContactedMechanisms;
        export function GetEnumItems(this: globalThis.Enum): Array<globalThis.Enum.IKCollisionsMode>;
        export function FromName(this: globalThis.Enum, name: string): globalThis.Enum.IKCollisionsMode | undefined;
        export function FromValue(this: globalThis.Enum, value: number): globalThis.Enum.IKCollisionsMode | undefined;
    }
    export type IKCollisionsMode = IKCollisionsMode.NoCollisions | IKCollisionsMode.OtherMechanismsAnchored | IKCollisionsMode.IncludeContactedMechanisms;
    /**
     * Values for `Workspace.IKControlConstraintSupport`. Sets the support for constraints for `IKControls` in your experience.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/IKControlConstraintSupport)
     */
    export namespace IKControlConstraintSupport {
        /**
         * The default option for `IKControls`. The default is currently set to `Enabled`.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/IKControlConstraintSupport#Default)
         */
        export interface Default extends globalThis.EnumItem {
            Name: "Default";
            Value: 0;
            EnumType: typeof globalThis.Enum.IKControlConstraintSupport;
        }
        export const Default: Default;
        /**
         * Disables support for constraints for `IKControls`. When disabled, `IKControls` still work, but ignore physics constraints.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/IKControlConstraintSupport#Disabled)
         */
        export interface Disabled extends globalThis.EnumItem {
            Name: "Disabled";
            Value: 1;
            EnumType: typeof globalThis.Enum.IKControlConstraintSupport;
        }
        export const Disabled: Disabled;
        /**
         * Enables support for constraints for `IKControls`.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/IKControlConstraintSupport#Enabled)
         */
        export interface Enabled extends globalThis.EnumItem {
            Name: "Enabled";
            Value: 2;
            EnumType: typeof globalThis.Enum.IKControlConstraintSupport;
        }
        export const Enabled: Enabled;
        export function GetEnumItems(this: globalThis.Enum): Array<globalThis.Enum.IKControlConstraintSupport>;
        export function FromName(this: globalThis.Enum, name: string): globalThis.Enum.IKControlConstraintSupport | undefined;
        export function FromValue(this: globalThis.Enum, value: number): globalThis.Enum.IKControlConstraintSupport | undefined;
    }
    export type IKControlConstraintSupport = IKControlConstraintSupport.Default | IKControlConstraintSupport.Disabled | IKControlConstraintSupport.Enabled;
    /**
     * Used on `IKControl` to specify their `Type`, to change their behavior.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/IKControlType)
     */
    export namespace IKControlType {
        /**
         * It is a full 6-DoF constraint. Aligns the `EndEffector` `CFrame` to that of the `Target`. It is the default value.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/IKControlType#Transform)
         */
        export interface Transform extends globalThis.EnumItem {
            Name: "Transform";
            Value: 0;
            EnumType: typeof globalThis.Enum.IKControlType;
        }
        export const Transform: Transform;
        /**
         * Aligns the `EndEffector` position to that of the `Target` .
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/IKControlType#Position)
         */
        export interface Position extends globalThis.EnumItem {
            Name: "Position";
            Value: 1;
            EnumType: typeof globalThis.Enum.IKControlType;
        }
        export const Position: Position;
        /**
         * Aligns the `EndEffector` rotation to that of the `Target`.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/IKControlType#Rotation)
         */
        export interface Rotation extends globalThis.EnumItem {
            Name: "Rotation";
            Value: 2;
            EnumType: typeof globalThis.Enum.IKControlType;
        }
        export const Rotation: Rotation;
        /**
         * Moves and orients the whole chain to make the forward axis on the `EndEffector` point at a position in the world specified by `Target`.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/IKControlType#LookAt)
         */
        export interface LookAt extends globalThis.EnumItem {
            Name: "LookAt";
            Value: 3;
            EnumType: typeof globalThis.Enum.IKControlType;
        }
        export const LookAt: LookAt;
        export function GetEnumItems(this: globalThis.Enum): Array<globalThis.Enum.IKControlType>;
        export function FromName(this: globalThis.Enum, name: string): globalThis.Enum.IKControlType | undefined;
        export function FromValue(this: globalThis.Enum, value: number): globalThis.Enum.IKControlType | undefined;
    }
    export type IKControlType = IKControlType.Transform | IKControlType.Position | IKControlType.Rotation | IKControlType.LookAt;
    /**
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/IXPLoadingStatus)
     */
    export namespace IXPLoadingStatus {
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/IXPLoadingStatus#None)
         */
        export interface None extends globalThis.EnumItem {
            Name: "None";
            Value: 0;
            EnumType: typeof globalThis.Enum.IXPLoadingStatus;
        }
        export const None: None;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/IXPLoadingStatus#Pending)
         */
        export interface Pending extends globalThis.EnumItem {
            Name: "Pending";
            Value: 1;
            EnumType: typeof globalThis.Enum.IXPLoadingStatus;
        }
        export const Pending: Pending;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/IXPLoadingStatus#Initialized)
         */
        export interface Initialized extends globalThis.EnumItem {
            Name: "Initialized";
            Value: 2;
            EnumType: typeof globalThis.Enum.IXPLoadingStatus;
        }
        export const Initialized: Initialized;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/IXPLoadingStatus#ErrorInvalidUser)
         */
        export interface ErrorInvalidUser extends globalThis.EnumItem {
            Name: "ErrorInvalidUser";
            Value: 3;
            EnumType: typeof globalThis.Enum.IXPLoadingStatus;
        }
        export const ErrorInvalidUser: ErrorInvalidUser;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/IXPLoadingStatus#ErrorConnection)
         */
        export interface ErrorConnection extends globalThis.EnumItem {
            Name: "ErrorConnection";
            Value: 4;
            EnumType: typeof globalThis.Enum.IXPLoadingStatus;
        }
        export const ErrorConnection: ErrorConnection;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/IXPLoadingStatus#ErrorJsonParse)
         */
        export interface ErrorJsonParse extends globalThis.EnumItem {
            Name: "ErrorJsonParse";
            Value: 5;
            EnumType: typeof globalThis.Enum.IXPLoadingStatus;
        }
        export const ErrorJsonParse: ErrorJsonParse;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/IXPLoadingStatus#ErrorTimedOut)
         */
        export interface ErrorTimedOut extends globalThis.EnumItem {
            Name: "ErrorTimedOut";
            Value: 6;
            EnumType: typeof globalThis.Enum.IXPLoadingStatus;
        }
        export const ErrorTimedOut: ErrorTimedOut;
        export function GetEnumItems(this: globalThis.Enum): Array<globalThis.Enum.IXPLoadingStatus>;
        export function FromName(this: globalThis.Enum, name: string): globalThis.Enum.IXPLoadingStatus | undefined;
        export function FromValue(this: globalThis.Enum, value: number): globalThis.Enum.IXPLoadingStatus | undefined;
    }
    export type IXPLoadingStatus = IXPLoadingStatus.None | IXPLoadingStatus.Pending | IXPLoadingStatus.Initialized | IXPLoadingStatus.ErrorInvalidUser | IXPLoadingStatus.ErrorConnection | IXPLoadingStatus.ErrorJsonParse | IXPLoadingStatus.ErrorTimedOut;
    /**
     * Enum for determining if the alpha or color is locked while combining two images.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/ImageAlphaType)
     */
    export namespace ImageAlphaType {
        /**
         * The default behavior in which neither color nor alpha values are locked.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/ImageAlphaType#Default)
         */
        export interface Default extends globalThis.EnumItem {
            Name: "Default";
            Value: 1;
            EnumType: typeof globalThis.Enum.ImageAlphaType;
        }
        export const Default: Default;
        /**
         * The alpha values of the image will not be modified.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/ImageAlphaType#LockCanvasAlpha)
         */
        export interface LockCanvasAlpha extends globalThis.EnumItem {
            Name: "LockCanvasAlpha";
            Value: 2;
            EnumType: typeof globalThis.Enum.ImageAlphaType;
        }
        export const LockCanvasAlpha: LockCanvasAlpha;
        /**
         * The color values of the image will not be modified.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/ImageAlphaType#LockCanvasColor)
         */
        export interface LockCanvasColor extends globalThis.EnumItem {
            Name: "LockCanvasColor";
            Value: 3;
            EnumType: typeof globalThis.Enum.ImageAlphaType;
        }
        export const LockCanvasColor: LockCanvasColor;
        export function GetEnumItems(this: globalThis.Enum): Array<globalThis.Enum.ImageAlphaType>;
        export function FromName(this: globalThis.Enum, name: string): globalThis.Enum.ImageAlphaType | undefined;
        export function FromValue(this: globalThis.Enum, value: number): globalThis.Enum.ImageAlphaType | undefined;
    }
    export type ImageAlphaType = ImageAlphaType.Default | ImageAlphaType.LockCanvasAlpha | ImageAlphaType.LockCanvasColor;
    /**
     * Enum for determining how two images are combined together.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/ImageCombineType)
     */
    export namespace ImageCombineType {
        /**
         * Blends pixels from the source with pixels from the destination using source over alpha blending.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/ImageCombineType#BlendSourceOver)
         */
        export interface BlendSourceOver extends globalThis.EnumItem {
            Name: "BlendSourceOver";
            Value: 1;
            EnumType: typeof globalThis.Enum.ImageCombineType;
        }
        export const BlendSourceOver: BlendSourceOver;
        /**
         * Overwrites all pixels in the destination image with pixels from the source image.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/ImageCombineType#Overwrite)
         */
        export interface Overwrite extends globalThis.EnumItem {
            Name: "Overwrite";
            Value: 2;
            EnumType: typeof globalThis.Enum.ImageCombineType;
        }
        export const Overwrite: Overwrite;
        /**
         * Adds pixels from the source and pixels from the destination together.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/ImageCombineType#Add)
         */
        export interface Add extends globalThis.EnumItem {
            Name: "Add";
            Value: 3;
            EnumType: typeof globalThis.Enum.ImageCombineType;
        }
        export const Add: Add;
        /**
         * Multiplies pixels from the source and pixels from the destination together. RGBA values are multiplied as values between `0` and `1`. Values lower than `1` have a darkening effect on the image.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/ImageCombineType#Multiply)
         */
        export interface Multiply extends globalThis.EnumItem {
            Name: "Multiply";
            Value: 4;
            EnumType: typeof globalThis.Enum.ImageCombineType;
        }
        export const Multiply: Multiply;
        /**
         * Blends pixels from the source with pixels from the destination based on the alpha of the source pixels. Unlike **BlendSourceOver**, the destination color in **AlphaBlend** affects the resulting color of the image, regardless of the destination color's alpha.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/ImageCombineType#AlphaBlend)
         */
        export interface AlphaBlend extends globalThis.EnumItem {
            Name: "AlphaBlend";
            Value: 5;
            EnumType: typeof globalThis.Enum.ImageCombineType;
        }
        export const AlphaBlend: AlphaBlend;
        export function GetEnumItems(this: globalThis.Enum): Array<globalThis.Enum.ImageCombineType>;
        export function FromName(this: globalThis.Enum, name: string): globalThis.Enum.ImageCombineType | undefined;
        export function FromValue(this: globalThis.Enum, value: number): globalThis.Enum.ImageCombineType | undefined;
    }
    export type ImageCombineType = ImageCombineType.BlendSourceOver | ImageCombineType.Overwrite | ImageCombineType.Add | ImageCombineType.Multiply | ImageCombineType.AlphaBlend;
    /**
     * The InOut Enum is used to set where the object is on the side of its parent.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/InOut)
     */
    export namespace InOut {
        /**
         * The object is located along an edge of its parent.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/InOut#Edge)
         */
        export interface Edge extends globalThis.EnumItem {
            Name: "Edge";
            Value: 0;
            EnumType: typeof globalThis.Enum.InOut;
        }
        export const Edge: Edge;
        /**
         * The object's located is inset from its parent's location.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/InOut#Inset)
         */
        export interface Inset extends globalThis.EnumItem {
            Name: "Inset";
            Value: 1;
            EnumType: typeof globalThis.Enum.InOut;
        }
        export const Inset: Inset;
        /**
         * The object's location is centered on it's parent.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/InOut#Center)
         */
        export interface Center extends globalThis.EnumItem {
            Name: "Center";
            Value: 2;
            EnumType: typeof globalThis.Enum.InOut;
        }
        export const Center: Center;
        export function GetEnumItems(this: globalThis.Enum): Array<globalThis.Enum.InOut>;
        export function FromName(this: globalThis.Enum, name: string): globalThis.Enum.InOut | undefined;
        export function FromValue(this: globalThis.Enum, value: number): globalThis.Enum.InOut | undefined;
    }
    export type InOut = InOut.Edge | InOut.Inset | InOut.Center;
    /**
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/InfoType)
     */
    export namespace InfoType {
        /**
         * The product is an asset.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/InfoType#Asset)
         */
        export interface Asset extends globalThis.EnumItem {
            Name: "Asset";
            Value: 0;
            EnumType: typeof globalThis.Enum.InfoType;
        }
        export const Asset: Asset;
        /**
         * Product such as a [Developer Product](../../../production/monetization/developer-products.md).
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/InfoType#Product)
         */
        export interface Product extends globalThis.EnumItem {
            Name: "Product";
            Value: 1;
            EnumType: typeof globalThis.Enum.InfoType;
        }
        export const Product: Product;
        /**
         * The product is a game pass.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/InfoType#GamePass)
         */
        export interface GamePass extends globalThis.EnumItem {
            Name: "GamePass";
            Value: 2;
            EnumType: typeof globalThis.Enum.InfoType;
        }
        export const GamePass: GamePass;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/InfoType#Subscription)
         */
        export interface Subscription extends globalThis.EnumItem {
            Name: "Subscription";
            Value: 3;
            EnumType: typeof globalThis.Enum.InfoType;
        }
        export const Subscription: Subscription;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/InfoType#Bundle)
         */
        export interface Bundle extends globalThis.EnumItem {
            Name: "Bundle";
            Value: 4;
            EnumType: typeof globalThis.Enum.InfoType;
        }
        export const Bundle: Bundle;
        export function GetEnumItems(this: globalThis.Enum): Array<globalThis.Enum.InfoType>;
        export function FromName(this: globalThis.Enum, name: string): globalThis.Enum.InfoType | undefined;
        export function FromValue(this: globalThis.Enum, value: number): globalThis.Enum.InfoType | undefined;
    }
    export type InfoType = InfoType.Asset | InfoType.Product | InfoType.GamePass | InfoType.Subscription | InfoType.Bundle;
    /**
     * Describes the initial docking state of a `DockWidgetPluginGui`.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/InitialDockState)
     */
    export namespace InitialDockState {
        /**
         * The widget will appear docked above the game screen.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/InitialDockState#Top)
         */
        export interface Top extends globalThis.EnumItem {
            Name: "Top";
            Value: 0;
            EnumType: typeof globalThis.Enum.InitialDockState;
        }
        export const Top: Top;
        /**
         * The widget will appear docked below the game screen.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/InitialDockState#Bottom)
         */
        export interface Bottom extends globalThis.EnumItem {
            Name: "Bottom";
            Value: 1;
            EnumType: typeof globalThis.Enum.InitialDockState;
        }
        export const Bottom: Bottom;
        /**
         * The widget will appear docked to the left of the game screen.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/InitialDockState#Left)
         */
        export interface Left extends globalThis.EnumItem {
            Name: "Left";
            Value: 2;
            EnumType: typeof globalThis.Enum.InitialDockState;
        }
        export const Left: Left;
        /**
         * The widget will appear docked to the right of the game screen.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/InitialDockState#Right)
         */
        export interface Right extends globalThis.EnumItem {
            Name: "Right";
            Value: 3;
            EnumType: typeof globalThis.Enum.InitialDockState;
        }
        export const Right: Right;
        /**
         * The widget will not be docked to any side of the game screen, and instead can be freely dragged around.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/InitialDockState#Float)
         */
        export interface Float extends globalThis.EnumItem {
            Name: "Float";
            Value: 4;
            EnumType: typeof globalThis.Enum.InitialDockState;
        }
        export const Float: Float;
        export function GetEnumItems(this: globalThis.Enum): Array<globalThis.Enum.InitialDockState>;
        export function FromName(this: globalThis.Enum, name: string): globalThis.Enum.InitialDockState | undefined;
        export function FromValue(this: globalThis.Enum, value: number): globalThis.Enum.InitialDockState | undefined;
    }
    export type InitialDockState = InitialDockState.Top | InitialDockState.Bottom | InitialDockState.Left | InitialDockState.Right | InitialDockState.Float;
    /**
     * The InputType Enum controls the SurfaceInputs of `Part`.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/InputType)
     */
    export namespace InputType {
        /**
         * Behaves like a weld and does nothing.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/InputType#NoInput)
         */
        export interface NoInput extends globalThis.EnumItem {
            Name: "NoInput";
            Value: 0;
            EnumType: typeof globalThis.Enum.InputType;
        }
        export const NoInput: NoInput;
        /**
         * @deprecated renamed to NoInput
         */
        export const Action1: NoInput;
        /**
         * @deprecated renamed to NoInput
         */
        export const Action2: NoInput;
        /**
         * @deprecated renamed to NoInput
         */
        export const Action3: NoInput;
        /**
         * @deprecated renamed to NoInput
         */
        export const Action4: NoInput;
        /**
         * @deprecated renamed to NoInput
         */
        export const Action5: NoInput;
        /**
         * @deprecated renamed to NoInput
         */
        export const LeftTread: NoInput;
        /**
         * @deprecated renamed to NoInput
         */
        export const RightTread: NoInput;
        /**
         * @deprecated renamed to NoInput
         */
        export const Steer: NoInput;
        /**
         * @deprecated renamed to NoInput
         */
        export const Throtle: NoInput;
        /**
         * @deprecated renamed to NoInput
         */
        export const Throttle: NoInput;
        /**
         * @deprecated renamed to NoInput
         */
        export const UpDown: NoInput;
        /**
         * Rotate at a constant velocity of `BasePart` `ParamB`.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/InputType#Constant)
         */
        export interface Constant extends globalThis.EnumItem {
            Name: "Constant";
            Value: 12;
            EnumType: typeof globalThis.Enum.InputType;
        }
        export const Constant: Constant;
        /**
         * Rotate at a velocity of: `ParamA * math.sin(workspace.DistributedGameTime * ParamB)`, where `BasePart` `ParamA` determines the maximum speed at which the part spins, and `BasePart` `ParamB` determines how frequently it changes direction.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/InputType#Sin)
         */
        export interface Sin extends globalThis.EnumItem {
            Name: "Sin";
            Value: 13;
            EnumType: typeof globalThis.Enum.InputType;
        }
        export const Sin: Sin;
        export function GetEnumItems(this: globalThis.Enum): Array<globalThis.Enum.InputType>;
        export function FromName(this: globalThis.Enum, name: string): globalThis.Enum.InputType | undefined;
        export function FromValue(this: globalThis.Enum, value: number): globalThis.Enum.InputType | undefined;
    }
    export type InputType = InputType.NoInput | InputType.Constant | InputType.Sin;
    /**
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/InterpolationThrottlingMode)
     */
    export namespace InterpolationThrottlingMode {
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/InterpolationThrottlingMode#Default)
         */
        export interface Default extends globalThis.EnumItem {
            Name: "Default";
            Value: 0;
            EnumType: typeof globalThis.Enum.InterpolationThrottlingMode;
        }
        export const Default: Default;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/InterpolationThrottlingMode#Disabled)
         */
        export interface Disabled extends globalThis.EnumItem {
            Name: "Disabled";
            Value: 1;
            EnumType: typeof globalThis.Enum.InterpolationThrottlingMode;
        }
        export const Disabled: Disabled;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/InterpolationThrottlingMode#Enabled)
         */
        export interface Enabled extends globalThis.EnumItem {
            Name: "Enabled";
            Value: 2;
            EnumType: typeof globalThis.Enum.InterpolationThrottlingMode;
        }
        export const Enabled: Enabled;
        export function GetEnumItems(this: globalThis.Enum): Array<globalThis.Enum.InterpolationThrottlingMode>;
        export function FromName(this: globalThis.Enum, name: string): globalThis.Enum.InterpolationThrottlingMode | undefined;
        export function FromValue(this: globalThis.Enum, value: number): globalThis.Enum.InterpolationThrottlingMode | undefined;
    }
    export type InterpolationThrottlingMode = InterpolationThrottlingMode.Default | InterpolationThrottlingMode.Disabled | InterpolationThrottlingMode.Enabled;
    /**
     * Describes a player's call invite state.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/InviteState)
     */
    export namespace InviteState {
        /**
         * Call invite was placed.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/InviteState#Placed)
         */
        export interface Placed extends globalThis.EnumItem {
            Name: "Placed";
            Value: 0;
            EnumType: typeof globalThis.Enum.InviteState;
        }
        export const Placed: Placed;
        /**
         * Call invite was accepted.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/InviteState#Accepted)
         */
        export interface Accepted extends globalThis.EnumItem {
            Name: "Accepted";
            Value: 1;
            EnumType: typeof globalThis.Enum.InviteState;
        }
        export const Accepted: Accepted;
        /**
         * Call invite was declined.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/InviteState#Declined)
         */
        export interface Declined extends globalThis.EnumItem {
            Name: "Declined";
            Value: 2;
            EnumType: typeof globalThis.Enum.InviteState;
        }
        export const Declined: Declined;
        /**
         * Call invite was missed.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/InviteState#Missed)
         */
        export interface Missed extends globalThis.EnumItem {
            Name: "Missed";
            Value: 3;
            EnumType: typeof globalThis.Enum.InviteState;
        }
        export const Missed: Missed;
        export function GetEnumItems(this: globalThis.Enum): Array<globalThis.Enum.InviteState>;
        export function FromName(this: globalThis.Enum, name: string): globalThis.Enum.InviteState | undefined;
        export function FromValue(this: globalThis.Enum, value: number): globalThis.Enum.InviteState | undefined;
    }
    export type InviteState = InviteState.Placed | InviteState.Accepted | InviteState.Declined | InviteState.Missed;
    /**
     * Used for `UIListLayout.ItemLineAlignment` and `UIFlexItem.ItemLineAlignment` in a flex layout to define the cross-directional alignment of siblings or the parent within a line.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/ItemLineAlignment)
     */
    export namespace ItemLineAlignment {
        /**
         * Aligns the siblings of the `UIListLayout` or the specific `UIFlexItem` parent to the layout's `HorizontalAlignment` or `VerticalAlignment`, depending on its `FillDirection`. If `HorizontalFlex` or `VerticalFlex` is enabled for the `UIListLayout` cross‑direction, `Stretch` will be used for that direction.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/ItemLineAlignment#Automatic)
         */
        export interface Automatic extends globalThis.EnumItem {
            Name: "Automatic";
            Value: 0;
            EnumType: typeof globalThis.Enum.ItemLineAlignment;
        }
        export const Automatic: Automatic;
        /**
         * Aligns the siblings of the `UIListLayout` or the specific `UIFlexItem` parent to the line's **top** in a horizontal fill or the line's **left** in a vertical fill.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/ItemLineAlignment#Start)
         */
        export interface Start extends globalThis.EnumItem {
            Name: "Start";
            Value: 1;
            EnumType: typeof globalThis.Enum.ItemLineAlignment;
        }
        export const Start: Start;
        /**
         * Aligns the siblings of the `UIListLayout` or the specific `UIFlexItem` parent to the line's **center** in either a horizontal or vertical fill.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/ItemLineAlignment#Center)
         */
        export interface Center extends globalThis.EnumItem {
            Name: "Center";
            Value: 2;
            EnumType: typeof globalThis.Enum.ItemLineAlignment;
        }
        export const Center: Center;
        /**
         * Aligns the siblings of the `UIListLayout` or the specific `UIFlexItem` parent to the line's **bottom** in a horizontal fill or the line's **right** in a vertical fill.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/ItemLineAlignment#End)
         */
        export interface End extends globalThis.EnumItem {
            Name: "End";
            Value: 3;
            EnumType: typeof globalThis.Enum.ItemLineAlignment;
        }
        export const End: End;
        /**
         * Stretches the siblings of the `UIListLayout` or the specific `UIFlexItem` parent to fill the entire cross‑direction of the line in either a horizontal or vertical fill.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/ItemLineAlignment#Stretch)
         */
        export interface Stretch extends globalThis.EnumItem {
            Name: "Stretch";
            Value: 4;
            EnumType: typeof globalThis.Enum.ItemLineAlignment;
        }
        export const Stretch: Stretch;
        export function GetEnumItems(this: globalThis.Enum): Array<globalThis.Enum.ItemLineAlignment>;
        export function FromName(this: globalThis.Enum, name: string): globalThis.Enum.ItemLineAlignment | undefined;
        export function FromValue(this: globalThis.Enum, value: number): globalThis.Enum.ItemLineAlignment | undefined;
    }
    export type ItemLineAlignment = ItemLineAlignment.Automatic | ItemLineAlignment.Start | ItemLineAlignment.Center | ItemLineAlignment.End | ItemLineAlignment.Stretch;
    /**
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/JoinSource)
     */
    export namespace JoinSource {
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/JoinSource#CreatedItemAttribution)
         */
        export interface CreatedItemAttribution extends globalThis.EnumItem {
            Name: "CreatedItemAttribution";
            Value: 1;
            EnumType: typeof globalThis.Enum.JoinSource;
        }
        export const CreatedItemAttribution: CreatedItemAttribution;
        export function GetEnumItems(this: globalThis.Enum): Array<globalThis.Enum.JoinSource>;
        export function FromName(this: globalThis.Enum, name: string): globalThis.Enum.JoinSource | undefined;
        export function FromValue(this: globalThis.Enum, value: number): globalThis.Enum.JoinSource | undefined;
    }
    export type JoinSource = JoinSource.CreatedItemAttribution;
    /**
     * The way joints are created between two surfaces.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/JointCreationMode)
     */
    export namespace JointCreationMode {
        /**
         * Joints are created between any kind of surface. Functions identically to Surface.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/JointCreationMode#All)
         */
        export interface All extends globalThis.EnumItem {
            Name: "All";
            Value: 0;
            EnumType: typeof globalThis.Enum.JointCreationMode;
        }
        export const All: All;
        /**
         * Joints are created between any kind of surface. Functions identically to All.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/JointCreationMode#Surface)
         */
        export interface Surface extends globalThis.EnumItem {
            Name: "Surface";
            Value: 1;
            EnumType: typeof globalThis.Enum.JointCreationMode;
        }
        export const Surface: Surface;
        /**
         * Joints are never created, no matter what.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/JointCreationMode#None)
         */
        export interface None extends globalThis.EnumItem {
            Name: "None";
            Value: 2;
            EnumType: typeof globalThis.Enum.JointCreationMode;
        }
        export const None: None;
        export function GetEnumItems(this: globalThis.Enum): Array<globalThis.Enum.JointCreationMode>;
        export function FromName(this: globalThis.Enum, name: string): globalThis.Enum.JointCreationMode | undefined;
        export function FromValue(this: globalThis.Enum, value: number): globalThis.Enum.JointCreationMode | undefined;
    }
    export type JointCreationMode = JointCreationMode.All | JointCreationMode.Surface | JointCreationMode.None;
    /**
     * A physical button that a user is pressing.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/KeyCode)
     */
    export namespace KeyCode {
        /**
         * Blank value that represents no key being pressed.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/KeyCode#Unknown)
         */
        export interface Unknown extends globalThis.EnumItem {
            Name: "Unknown";
            Value: 0;
            EnumType: typeof globalThis.Enum.KeyCode;
        }
        export const Unknown: Unknown;
        /**
         * The `Backspace` key.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/KeyCode#Backspace)
         */
        export interface Backspace extends globalThis.EnumItem {
            Name: "Backspace";
            Value: 8;
            EnumType: typeof globalThis.Enum.KeyCode;
        }
        export const Backspace: Backspace;
        /**
         * The `Tab` key.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/KeyCode#Tab)
         */
        export interface Tab extends globalThis.EnumItem {
            Name: "Tab";
            Value: 9;
            EnumType: typeof globalThis.Enum.KeyCode;
        }
        export const Tab: Tab;
        /**
         * Only present on certain keyboards.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/KeyCode#Clear)
         */
        export interface Clear extends globalThis.EnumItem {
            Name: "Clear";
            Value: 12;
            EnumType: typeof globalThis.Enum.KeyCode;
        }
        export const Clear: Clear;
        /**
         * Better known as enter.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/KeyCode#Return)
         */
        export interface Return extends globalThis.EnumItem {
            Name: "Return";
            Value: 13;
            EnumType: typeof globalThis.Enum.KeyCode;
        }
        export const Return: Return;
        /**
         * Only present on certain keyboards.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/KeyCode#Pause)
         */
        export interface Pause extends globalThis.EnumItem {
            Name: "Pause";
            Value: 19;
            EnumType: typeof globalThis.Enum.KeyCode;
        }
        export const Pause: Pause;
        /**
         * The `Escape` key.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/KeyCode#Escape)
         */
        export interface Escape extends globalThis.EnumItem {
            Name: "Escape";
            Value: 27;
            EnumType: typeof globalThis.Enum.KeyCode;
        }
        export const Escape: Escape;
        /**
         * The `Space` key.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/KeyCode#Space)
         */
        export interface Space extends globalThis.EnumItem {
            Name: "Space";
            Value: 32;
            EnumType: typeof globalThis.Enum.KeyCode;
        }
        export const Space: Space;
        /**
         * The `"` key.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/KeyCode#QuotedDouble)
         */
        export interface QuotedDouble extends globalThis.EnumItem {
            Name: "QuotedDouble";
            Value: 34;
            EnumType: typeof globalThis.Enum.KeyCode;
        }
        export const QuotedDouble: QuotedDouble;
        /**
         * The `#` key.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/KeyCode#Hash)
         */
        export interface Hash extends globalThis.EnumItem {
            Name: "Hash";
            Value: 35;
            EnumType: typeof globalThis.Enum.KeyCode;
        }
        export const Hash: Hash;
        /**
         * The `$` key.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/KeyCode#Dollar)
         */
        export interface Dollar extends globalThis.EnumItem {
            Name: "Dollar";
            Value: 36;
            EnumType: typeof globalThis.Enum.KeyCode;
        }
        export const Dollar: Dollar;
        /**
         * The `%` key.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/KeyCode#Percent)
         */
        export interface Percent extends globalThis.EnumItem {
            Name: "Percent";
            Value: 37;
            EnumType: typeof globalThis.Enum.KeyCode;
        }
        export const Percent: Percent;
        /**
         * The `&` key.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/KeyCode#Ampersand)
         */
        export interface Ampersand extends globalThis.EnumItem {
            Name: "Ampersand";
            Value: 38;
            EnumType: typeof globalThis.Enum.KeyCode;
        }
        export const Ampersand: Ampersand;
        /**
         * The `'` key.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/KeyCode#Quote)
         */
        export interface Quote extends globalThis.EnumItem {
            Name: "Quote";
            Value: 39;
            EnumType: typeof globalThis.Enum.KeyCode;
        }
        export const Quote: Quote;
        /**
         * The `(` key.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/KeyCode#LeftParenthesis)
         */
        export interface LeftParenthesis extends globalThis.EnumItem {
            Name: "LeftParenthesis";
            Value: 40;
            EnumType: typeof globalThis.Enum.KeyCode;
        }
        export const LeftParenthesis: LeftParenthesis;
        /**
         * The `)` key.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/KeyCode#RightParenthesis)
         */
        export interface RightParenthesis extends globalThis.EnumItem {
            Name: "RightParenthesis";
            Value: 41;
            EnumType: typeof globalThis.Enum.KeyCode;
        }
        export const RightParenthesis: RightParenthesis;
        /**
         * The `*` key.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/KeyCode#Asterisk)
         */
        export interface Asterisk extends globalThis.EnumItem {
            Name: "Asterisk";
            Value: 42;
            EnumType: typeof globalThis.Enum.KeyCode;
        }
        export const Asterisk: Asterisk;
        /**
         * The `+` key.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/KeyCode#Plus)
         */
        export interface Plus extends globalThis.EnumItem {
            Name: "Plus";
            Value: 43;
            EnumType: typeof globalThis.Enum.KeyCode;
        }
        export const Plus: Plus;
        /**
         * The `,` key.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/KeyCode#Comma)
         */
        export interface Comma extends globalThis.EnumItem {
            Name: "Comma";
            Value: 44;
            EnumType: typeof globalThis.Enum.KeyCode;
        }
        export const Comma: Comma;
        /**
         * The `-` key.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/KeyCode#Minus)
         */
        export interface Minus extends globalThis.EnumItem {
            Name: "Minus";
            Value: 45;
            EnumType: typeof globalThis.Enum.KeyCode;
        }
        export const Minus: Minus;
        /**
         * The `.` key.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/KeyCode#Period)
         */
        export interface Period extends globalThis.EnumItem {
            Name: "Period";
            Value: 46;
            EnumType: typeof globalThis.Enum.KeyCode;
        }
        export const Period: Period;
        /**
         * The `/` key.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/KeyCode#Slash)
         */
        export interface Slash extends globalThis.EnumItem {
            Name: "Slash";
            Value: 47;
            EnumType: typeof globalThis.Enum.KeyCode;
        }
        export const Slash: Slash;
        /**
         * The `0` key.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/KeyCode#Zero)
         */
        export interface Zero extends globalThis.EnumItem {
            Name: "Zero";
            Value: 48;
            EnumType: typeof globalThis.Enum.KeyCode;
        }
        export const Zero: Zero;
        /**
         * The `1` key.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/KeyCode#One)
         */
        export interface One extends globalThis.EnumItem {
            Name: "One";
            Value: 49;
            EnumType: typeof globalThis.Enum.KeyCode;
        }
        export const One: One;
        /**
         * The `2` key.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/KeyCode#Two)
         */
        export interface Two extends globalThis.EnumItem {
            Name: "Two";
            Value: 50;
            EnumType: typeof globalThis.Enum.KeyCode;
        }
        export const Two: Two;
        /**
         * The `3` key.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/KeyCode#Three)
         */
        export interface Three extends globalThis.EnumItem {
            Name: "Three";
            Value: 51;
            EnumType: typeof globalThis.Enum.KeyCode;
        }
        export const Three: Three;
        /**
         * The `4` key.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/KeyCode#Four)
         */
        export interface Four extends globalThis.EnumItem {
            Name: "Four";
            Value: 52;
            EnumType: typeof globalThis.Enum.KeyCode;
        }
        export const Four: Four;
        /**
         * The `5` key.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/KeyCode#Five)
         */
        export interface Five extends globalThis.EnumItem {
            Name: "Five";
            Value: 53;
            EnumType: typeof globalThis.Enum.KeyCode;
        }
        export const Five: Five;
        /**
         * The `6` key.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/KeyCode#Six)
         */
        export interface Six extends globalThis.EnumItem {
            Name: "Six";
            Value: 54;
            EnumType: typeof globalThis.Enum.KeyCode;
        }
        export const Six: Six;
        /**
         * The `7` key.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/KeyCode#Seven)
         */
        export interface Seven extends globalThis.EnumItem {
            Name: "Seven";
            Value: 55;
            EnumType: typeof globalThis.Enum.KeyCode;
        }
        export const Seven: Seven;
        /**
         * The `8` key.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/KeyCode#Eight)
         */
        export interface Eight extends globalThis.EnumItem {
            Name: "Eight";
            Value: 56;
            EnumType: typeof globalThis.Enum.KeyCode;
        }
        export const Eight: Eight;
        /**
         * The `9` key.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/KeyCode#Nine)
         */
        export interface Nine extends globalThis.EnumItem {
            Name: "Nine";
            Value: 57;
            EnumType: typeof globalThis.Enum.KeyCode;
        }
        export const Nine: Nine;
        /**
         * The `:` key.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/KeyCode#Colon)
         */
        export interface Colon extends globalThis.EnumItem {
            Name: "Colon";
            Value: 58;
            EnumType: typeof globalThis.Enum.KeyCode;
        }
        export const Colon: Colon;
        /**
         * The `;` key.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/KeyCode#Semicolon)
         */
        export interface Semicolon extends globalThis.EnumItem {
            Name: "Semicolon";
            Value: 59;
            EnumType: typeof globalThis.Enum.KeyCode;
        }
        export const Semicolon: Semicolon;
        /**
         * The `<` key.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/KeyCode#LessThan)
         */
        export interface LessThan extends globalThis.EnumItem {
            Name: "LessThan";
            Value: 60;
            EnumType: typeof globalThis.Enum.KeyCode;
        }
        export const LessThan: LessThan;
        /**
         * The `=` key.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/KeyCode#Equals)
         */
        export interface Equals extends globalThis.EnumItem {
            Name: "Equals";
            Value: 61;
            EnumType: typeof globalThis.Enum.KeyCode;
        }
        export const Equals: Equals;
        /**
         * The `>` key.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/KeyCode#GreaterThan)
         */
        export interface GreaterThan extends globalThis.EnumItem {
            Name: "GreaterThan";
            Value: 62;
            EnumType: typeof globalThis.Enum.KeyCode;
        }
        export const GreaterThan: GreaterThan;
        /**
         * The `?` key.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/KeyCode#Question)
         */
        export interface Question extends globalThis.EnumItem {
            Name: "Question";
            Value: 63;
            EnumType: typeof globalThis.Enum.KeyCode;
        }
        export const Question: Question;
        /**
         * The `@` key.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/KeyCode#At)
         */
        export interface At extends globalThis.EnumItem {
            Name: "At";
            Value: 64;
            EnumType: typeof globalThis.Enum.KeyCode;
        }
        export const At: At;
        /**
         * The `[` key.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/KeyCode#LeftBracket)
         */
        export interface LeftBracket extends globalThis.EnumItem {
            Name: "LeftBracket";
            Value: 91;
            EnumType: typeof globalThis.Enum.KeyCode;
        }
        export const LeftBracket: LeftBracket;
        /**
         * The `\` key.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/KeyCode#BackSlash)
         */
        export interface BackSlash extends globalThis.EnumItem {
            Name: "BackSlash";
            Value: 92;
            EnumType: typeof globalThis.Enum.KeyCode;
        }
        export const BackSlash: BackSlash;
        /**
         * The `]` key.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/KeyCode#RightBracket)
         */
        export interface RightBracket extends globalThis.EnumItem {
            Name: "RightBracket";
            Value: 93;
            EnumType: typeof globalThis.Enum.KeyCode;
        }
        export const RightBracket: RightBracket;
        /**
         * The `^` key.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/KeyCode#Caret)
         */
        export interface Caret extends globalThis.EnumItem {
            Name: "Caret";
            Value: 94;
            EnumType: typeof globalThis.Enum.KeyCode;
        }
        export const Caret: Caret;
        /**
         * The `_` key.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/KeyCode#Underscore)
         */
        export interface Underscore extends globalThis.EnumItem {
            Name: "Underscore";
            Value: 95;
            EnumType: typeof globalThis.Enum.KeyCode;
        }
        export const Underscore: Underscore;
        /**
         * The ``` key.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/KeyCode#Backquote)
         */
        export interface Backquote extends globalThis.EnumItem {
            Name: "Backquote";
            Value: 96;
            EnumType: typeof globalThis.Enum.KeyCode;
        }
        export const Backquote: Backquote;
        /**
         * The `A` key.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/KeyCode#A)
         */
        export interface A extends globalThis.EnumItem {
            Name: "A";
            Value: 97;
            EnumType: typeof globalThis.Enum.KeyCode;
        }
        export const A: A;
        /**
         * The `B` key.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/KeyCode#B)
         */
        export interface B extends globalThis.EnumItem {
            Name: "B";
            Value: 98;
            EnumType: typeof globalThis.Enum.KeyCode;
        }
        export const B: B;
        /**
         * The `C` key.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/KeyCode#C)
         */
        export interface C extends globalThis.EnumItem {
            Name: "C";
            Value: 99;
            EnumType: typeof globalThis.Enum.KeyCode;
        }
        export const C: C;
        /**
         * The `D` key.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/KeyCode#D)
         */
        export interface D extends globalThis.EnumItem {
            Name: "D";
            Value: 100;
            EnumType: typeof globalThis.Enum.KeyCode;
        }
        export const D: D;
        /**
         * The `E` key.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/KeyCode#E)
         */
        export interface E extends globalThis.EnumItem {
            Name: "E";
            Value: 101;
            EnumType: typeof globalThis.Enum.KeyCode;
        }
        export const E: E;
        /**
         * The `F` key.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/KeyCode#F)
         */
        export interface F extends globalThis.EnumItem {
            Name: "F";
            Value: 102;
            EnumType: typeof globalThis.Enum.KeyCode;
        }
        export const F: F;
        /**
         * The `G` key.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/KeyCode#G)
         */
        export interface G extends globalThis.EnumItem {
            Name: "G";
            Value: 103;
            EnumType: typeof globalThis.Enum.KeyCode;
        }
        export const G: G;
        /**
         * The `H` key.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/KeyCode#H)
         */
        export interface H extends globalThis.EnumItem {
            Name: "H";
            Value: 104;
            EnumType: typeof globalThis.Enum.KeyCode;
        }
        export const H: H;
        /**
         * The `I` key.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/KeyCode#I)
         */
        export interface I extends globalThis.EnumItem {
            Name: "I";
            Value: 105;
            EnumType: typeof globalThis.Enum.KeyCode;
        }
        export const I: I;
        /**
         * The `J` key.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/KeyCode#J)
         */
        export interface J extends globalThis.EnumItem {
            Name: "J";
            Value: 106;
            EnumType: typeof globalThis.Enum.KeyCode;
        }
        export const J: J;
        /**
         * The `K` key.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/KeyCode#K)
         */
        export interface K extends globalThis.EnumItem {
            Name: "K";
            Value: 107;
            EnumType: typeof globalThis.Enum.KeyCode;
        }
        export const K: K;
        /**
         * The `L` key.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/KeyCode#L)
         */
        export interface L extends globalThis.EnumItem {
            Name: "L";
            Value: 108;
            EnumType: typeof globalThis.Enum.KeyCode;
        }
        export const L: L;
        /**
         * The `M` key.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/KeyCode#M)
         */
        export interface M extends globalThis.EnumItem {
            Name: "M";
            Value: 109;
            EnumType: typeof globalThis.Enum.KeyCode;
        }
        export const M: M;
        /**
         * The `N` key.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/KeyCode#N)
         */
        export interface N extends globalThis.EnumItem {
            Name: "N";
            Value: 110;
            EnumType: typeof globalThis.Enum.KeyCode;
        }
        export const N: N;
        /**
         * The `O` key.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/KeyCode#O)
         */
        export interface O extends globalThis.EnumItem {
            Name: "O";
            Value: 111;
            EnumType: typeof globalThis.Enum.KeyCode;
        }
        export const O: O;
        /**
         * The `P` key.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/KeyCode#P)
         */
        export interface P extends globalThis.EnumItem {
            Name: "P";
            Value: 112;
            EnumType: typeof globalThis.Enum.KeyCode;
        }
        export const P: P;
        /**
         * The `Q` key.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/KeyCode#Q)
         */
        export interface Q extends globalThis.EnumItem {
            Name: "Q";
            Value: 113;
            EnumType: typeof globalThis.Enum.KeyCode;
        }
        export const Q: Q;
        /**
         * The `R` key.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/KeyCode#R)
         */
        export interface R extends globalThis.EnumItem {
            Name: "R";
            Value: 114;
            EnumType: typeof globalThis.Enum.KeyCode;
        }
        export const R: R;
        /**
         * The `S` key.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/KeyCode#S)
         */
        export interface S extends globalThis.EnumItem {
            Name: "S";
            Value: 115;
            EnumType: typeof globalThis.Enum.KeyCode;
        }
        export const S: S;
        /**
         * The `T` key.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/KeyCode#T)
         */
        export interface T extends globalThis.EnumItem {
            Name: "T";
            Value: 116;
            EnumType: typeof globalThis.Enum.KeyCode;
        }
        export const T: T;
        /**
         * The `U` key.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/KeyCode#U)
         */
        export interface U extends globalThis.EnumItem {
            Name: "U";
            Value: 117;
            EnumType: typeof globalThis.Enum.KeyCode;
        }
        export const U: U;
        /**
         * The `V` key.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/KeyCode#V)
         */
        export interface V extends globalThis.EnumItem {
            Name: "V";
            Value: 118;
            EnumType: typeof globalThis.Enum.KeyCode;
        }
        export const V: V;
        /**
         * The `W` key.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/KeyCode#W)
         */
        export interface W extends globalThis.EnumItem {
            Name: "W";
            Value: 119;
            EnumType: typeof globalThis.Enum.KeyCode;
        }
        export const W: W;
        /**
         * The `X` key.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/KeyCode#X)
         */
        export interface X extends globalThis.EnumItem {
            Name: "X";
            Value: 120;
            EnumType: typeof globalThis.Enum.KeyCode;
        }
        export const X: X;
        /**
         * The `Y` key.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/KeyCode#Y)
         */
        export interface Y extends globalThis.EnumItem {
            Name: "Y";
            Value: 121;
            EnumType: typeof globalThis.Enum.KeyCode;
        }
        export const Y: Y;
        /**
         * The `Z` key.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/KeyCode#Z)
         */
        export interface Z extends globalThis.EnumItem {
            Name: "Z";
            Value: 122;
            EnumType: typeof globalThis.Enum.KeyCode;
        }
        export const Z: Z;
        /**
         * The `{` key.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/KeyCode#LeftCurly)
         */
        export interface LeftCurly extends globalThis.EnumItem {
            Name: "LeftCurly";
            Value: 123;
            EnumType: typeof globalThis.Enum.KeyCode;
        }
        export const LeftCurly: LeftCurly;
        /**
         * The `|` key.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/KeyCode#Pipe)
         */
        export interface Pipe extends globalThis.EnumItem {
            Name: "Pipe";
            Value: 124;
            EnumType: typeof globalThis.Enum.KeyCode;
        }
        export const Pipe: Pipe;
        /**
         * The `}` key.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/KeyCode#RightCurly)
         */
        export interface RightCurly extends globalThis.EnumItem {
            Name: "RightCurly";
            Value: 125;
            EnumType: typeof globalThis.Enum.KeyCode;
        }
        export const RightCurly: RightCurly;
        /**
         * The `~` key.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/KeyCode#Tilde)
         */
        export interface Tilde extends globalThis.EnumItem {
            Name: "Tilde";
            Value: 126;
            EnumType: typeof globalThis.Enum.KeyCode;
        }
        export const Tilde: Tilde;
        /**
         * The `Del` key.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/KeyCode#Delete)
         */
        export interface Delete extends globalThis.EnumItem {
            Name: "Delete";
            Value: 127;
            EnumType: typeof globalThis.Enum.KeyCode;
        }
        export const Delete: Delete;
        /**
         * Generally not used.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/KeyCode#World0)
         */
        export interface World0 extends globalThis.EnumItem {
            Name: "World0";
            Value: 160;
            EnumType: typeof globalThis.Enum.KeyCode;
        }
        export const World0: World0;
        /**
         * Generally not used.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/KeyCode#World1)
         */
        export interface World1 extends globalThis.EnumItem {
            Name: "World1";
            Value: 161;
            EnumType: typeof globalThis.Enum.KeyCode;
        }
        export const World1: World1;
        /**
         * Generally not used.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/KeyCode#World2)
         */
        export interface World2 extends globalThis.EnumItem {
            Name: "World2";
            Value: 162;
            EnumType: typeof globalThis.Enum.KeyCode;
        }
        export const World2: World2;
        /**
         * Generally not used.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/KeyCode#World3)
         */
        export interface World3 extends globalThis.EnumItem {
            Name: "World3";
            Value: 163;
            EnumType: typeof globalThis.Enum.KeyCode;
        }
        export const World3: World3;
        /**
         * Generally not used.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/KeyCode#World4)
         */
        export interface World4 extends globalThis.EnumItem {
            Name: "World4";
            Value: 164;
            EnumType: typeof globalThis.Enum.KeyCode;
        }
        export const World4: World4;
        /**
         * Generally not used.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/KeyCode#World5)
         */
        export interface World5 extends globalThis.EnumItem {
            Name: "World5";
            Value: 165;
            EnumType: typeof globalThis.Enum.KeyCode;
        }
        export const World5: World5;
        /**
         * Generally not used.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/KeyCode#World6)
         */
        export interface World6 extends globalThis.EnumItem {
            Name: "World6";
            Value: 166;
            EnumType: typeof globalThis.Enum.KeyCode;
        }
        export const World6: World6;
        /**
         * Generally not used.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/KeyCode#World7)
         */
        export interface World7 extends globalThis.EnumItem {
            Name: "World7";
            Value: 167;
            EnumType: typeof globalThis.Enum.KeyCode;
        }
        export const World7: World7;
        /**
         * Generally not used.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/KeyCode#World8)
         */
        export interface World8 extends globalThis.EnumItem {
            Name: "World8";
            Value: 168;
            EnumType: typeof globalThis.Enum.KeyCode;
        }
        export const World8: World8;
        /**
         * Generally not used.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/KeyCode#World9)
         */
        export interface World9 extends globalThis.EnumItem {
            Name: "World9";
            Value: 169;
            EnumType: typeof globalThis.Enum.KeyCode;
        }
        export const World9: World9;
        /**
         * Generally not used.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/KeyCode#World10)
         */
        export interface World10 extends globalThis.EnumItem {
            Name: "World10";
            Value: 170;
            EnumType: typeof globalThis.Enum.KeyCode;
        }
        export const World10: World10;
        /**
         * Generally not used.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/KeyCode#World11)
         */
        export interface World11 extends globalThis.EnumItem {
            Name: "World11";
            Value: 171;
            EnumType: typeof globalThis.Enum.KeyCode;
        }
        export const World11: World11;
        /**
         * Generally not used.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/KeyCode#World12)
         */
        export interface World12 extends globalThis.EnumItem {
            Name: "World12";
            Value: 172;
            EnumType: typeof globalThis.Enum.KeyCode;
        }
        export const World12: World12;
        /**
         * Generally not used.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/KeyCode#World13)
         */
        export interface World13 extends globalThis.EnumItem {
            Name: "World13";
            Value: 173;
            EnumType: typeof globalThis.Enum.KeyCode;
        }
        export const World13: World13;
        /**
         * Generally not used.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/KeyCode#World14)
         */
        export interface World14 extends globalThis.EnumItem {
            Name: "World14";
            Value: 174;
            EnumType: typeof globalThis.Enum.KeyCode;
        }
        export const World14: World14;
        /**
         * Generally not used.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/KeyCode#World15)
         */
        export interface World15 extends globalThis.EnumItem {
            Name: "World15";
            Value: 175;
            EnumType: typeof globalThis.Enum.KeyCode;
        }
        export const World15: World15;
        /**
         * Generally not used.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/KeyCode#World16)
         */
        export interface World16 extends globalThis.EnumItem {
            Name: "World16";
            Value: 176;
            EnumType: typeof globalThis.Enum.KeyCode;
        }
        export const World16: World16;
        /**
         * Generally not used.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/KeyCode#World17)
         */
        export interface World17 extends globalThis.EnumItem {
            Name: "World17";
            Value: 177;
            EnumType: typeof globalThis.Enum.KeyCode;
        }
        export const World17: World17;
        /**
         * Generally not used.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/KeyCode#World18)
         */
        export interface World18 extends globalThis.EnumItem {
            Name: "World18";
            Value: 178;
            EnumType: typeof globalThis.Enum.KeyCode;
        }
        export const World18: World18;
        /**
         * Generally not used.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/KeyCode#World19)
         */
        export interface World19 extends globalThis.EnumItem {
            Name: "World19";
            Value: 179;
            EnumType: typeof globalThis.Enum.KeyCode;
        }
        export const World19: World19;
        /**
         * Generally not used.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/KeyCode#World20)
         */
        export interface World20 extends globalThis.EnumItem {
            Name: "World20";
            Value: 180;
            EnumType: typeof globalThis.Enum.KeyCode;
        }
        export const World20: World20;
        /**
         * Generally not used.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/KeyCode#World21)
         */
        export interface World21 extends globalThis.EnumItem {
            Name: "World21";
            Value: 181;
            EnumType: typeof globalThis.Enum.KeyCode;
        }
        export const World21: World21;
        /**
         * Generally not used.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/KeyCode#World22)
         */
        export interface World22 extends globalThis.EnumItem {
            Name: "World22";
            Value: 182;
            EnumType: typeof globalThis.Enum.KeyCode;
        }
        export const World22: World22;
        /**
         * Generally not used.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/KeyCode#World23)
         */
        export interface World23 extends globalThis.EnumItem {
            Name: "World23";
            Value: 183;
            EnumType: typeof globalThis.Enum.KeyCode;
        }
        export const World23: World23;
        /**
         * Generally not used.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/KeyCode#World24)
         */
        export interface World24 extends globalThis.EnumItem {
            Name: "World24";
            Value: 184;
            EnumType: typeof globalThis.Enum.KeyCode;
        }
        export const World24: World24;
        /**
         * Generally not used.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/KeyCode#World25)
         */
        export interface World25 extends globalThis.EnumItem {
            Name: "World25";
            Value: 185;
            EnumType: typeof globalThis.Enum.KeyCode;
        }
        export const World25: World25;
        /**
         * Generally not used.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/KeyCode#World26)
         */
        export interface World26 extends globalThis.EnumItem {
            Name: "World26";
            Value: 186;
            EnumType: typeof globalThis.Enum.KeyCode;
        }
        export const World26: World26;
        /**
         * Generally not used.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/KeyCode#World27)
         */
        export interface World27 extends globalThis.EnumItem {
            Name: "World27";
            Value: 187;
            EnumType: typeof globalThis.Enum.KeyCode;
        }
        export const World27: World27;
        /**
         * Generally not used.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/KeyCode#World28)
         */
        export interface World28 extends globalThis.EnumItem {
            Name: "World28";
            Value: 188;
            EnumType: typeof globalThis.Enum.KeyCode;
        }
        export const World28: World28;
        /**
         * Generally not used.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/KeyCode#World29)
         */
        export interface World29 extends globalThis.EnumItem {
            Name: "World29";
            Value: 189;
            EnumType: typeof globalThis.Enum.KeyCode;
        }
        export const World29: World29;
        /**
         * Generally not used.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/KeyCode#World30)
         */
        export interface World30 extends globalThis.EnumItem {
            Name: "World30";
            Value: 190;
            EnumType: typeof globalThis.Enum.KeyCode;
        }
        export const World30: World30;
        /**
         * Generally not used.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/KeyCode#World31)
         */
        export interface World31 extends globalThis.EnumItem {
            Name: "World31";
            Value: 191;
            EnumType: typeof globalThis.Enum.KeyCode;
        }
        export const World31: World31;
        /**
         * Generally not used.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/KeyCode#World32)
         */
        export interface World32 extends globalThis.EnumItem {
            Name: "World32";
            Value: 192;
            EnumType: typeof globalThis.Enum.KeyCode;
        }
        export const World32: World32;
        /**
         * Generally not used.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/KeyCode#World33)
         */
        export interface World33 extends globalThis.EnumItem {
            Name: "World33";
            Value: 193;
            EnumType: typeof globalThis.Enum.KeyCode;
        }
        export const World33: World33;
        /**
         * Generally not used.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/KeyCode#World34)
         */
        export interface World34 extends globalThis.EnumItem {
            Name: "World34";
            Value: 194;
            EnumType: typeof globalThis.Enum.KeyCode;
        }
        export const World34: World34;
        /**
         * Generally not used.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/KeyCode#World35)
         */
        export interface World35 extends globalThis.EnumItem {
            Name: "World35";
            Value: 195;
            EnumType: typeof globalThis.Enum.KeyCode;
        }
        export const World35: World35;
        /**
         * Generally not used.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/KeyCode#World36)
         */
        export interface World36 extends globalThis.EnumItem {
            Name: "World36";
            Value: 196;
            EnumType: typeof globalThis.Enum.KeyCode;
        }
        export const World36: World36;
        /**
         * Generally not used.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/KeyCode#World37)
         */
        export interface World37 extends globalThis.EnumItem {
            Name: "World37";
            Value: 197;
            EnumType: typeof globalThis.Enum.KeyCode;
        }
        export const World37: World37;
        /**
         * Generally not used.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/KeyCode#World38)
         */
        export interface World38 extends globalThis.EnumItem {
            Name: "World38";
            Value: 198;
            EnumType: typeof globalThis.Enum.KeyCode;
        }
        export const World38: World38;
        /**
         * Generally not used.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/KeyCode#World39)
         */
        export interface World39 extends globalThis.EnumItem {
            Name: "World39";
            Value: 199;
            EnumType: typeof globalThis.Enum.KeyCode;
        }
        export const World39: World39;
        /**
         * Generally not used.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/KeyCode#World40)
         */
        export interface World40 extends globalThis.EnumItem {
            Name: "World40";
            Value: 200;
            EnumType: typeof globalThis.Enum.KeyCode;
        }
        export const World40: World40;
        /**
         * Generally not used.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/KeyCode#World41)
         */
        export interface World41 extends globalThis.EnumItem {
            Name: "World41";
            Value: 201;
            EnumType: typeof globalThis.Enum.KeyCode;
        }
        export const World41: World41;
        /**
         * Generally not used.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/KeyCode#World42)
         */
        export interface World42 extends globalThis.EnumItem {
            Name: "World42";
            Value: 202;
            EnumType: typeof globalThis.Enum.KeyCode;
        }
        export const World42: World42;
        /**
         * Generally not used.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/KeyCode#World43)
         */
        export interface World43 extends globalThis.EnumItem {
            Name: "World43";
            Value: 203;
            EnumType: typeof globalThis.Enum.KeyCode;
        }
        export const World43: World43;
        /**
         * Generally not used.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/KeyCode#World44)
         */
        export interface World44 extends globalThis.EnumItem {
            Name: "World44";
            Value: 204;
            EnumType: typeof globalThis.Enum.KeyCode;
        }
        export const World44: World44;
        /**
         * Generally not used.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/KeyCode#World45)
         */
        export interface World45 extends globalThis.EnumItem {
            Name: "World45";
            Value: 205;
            EnumType: typeof globalThis.Enum.KeyCode;
        }
        export const World45: World45;
        /**
         * Generally not used.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/KeyCode#World46)
         */
        export interface World46 extends globalThis.EnumItem {
            Name: "World46";
            Value: 206;
            EnumType: typeof globalThis.Enum.KeyCode;
        }
        export const World46: World46;
        /**
         * Generally not used.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/KeyCode#World47)
         */
        export interface World47 extends globalThis.EnumItem {
            Name: "World47";
            Value: 207;
            EnumType: typeof globalThis.Enum.KeyCode;
        }
        export const World47: World47;
        /**
         * Generally not used.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/KeyCode#World48)
         */
        export interface World48 extends globalThis.EnumItem {
            Name: "World48";
            Value: 208;
            EnumType: typeof globalThis.Enum.KeyCode;
        }
        export const World48: World48;
        /**
         * Generally not used.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/KeyCode#World49)
         */
        export interface World49 extends globalThis.EnumItem {
            Name: "World49";
            Value: 209;
            EnumType: typeof globalThis.Enum.KeyCode;
        }
        export const World49: World49;
        /**
         * Generally not used.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/KeyCode#World50)
         */
        export interface World50 extends globalThis.EnumItem {
            Name: "World50";
            Value: 210;
            EnumType: typeof globalThis.Enum.KeyCode;
        }
        export const World50: World50;
        /**
         * Generally not used.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/KeyCode#World51)
         */
        export interface World51 extends globalThis.EnumItem {
            Name: "World51";
            Value: 211;
            EnumType: typeof globalThis.Enum.KeyCode;
        }
        export const World51: World51;
        /**
         * Generally not used.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/KeyCode#World52)
         */
        export interface World52 extends globalThis.EnumItem {
            Name: "World52";
            Value: 212;
            EnumType: typeof globalThis.Enum.KeyCode;
        }
        export const World52: World52;
        /**
         * Generally not used.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/KeyCode#World53)
         */
        export interface World53 extends globalThis.EnumItem {
            Name: "World53";
            Value: 213;
            EnumType: typeof globalThis.Enum.KeyCode;
        }
        export const World53: World53;
        /**
         * Generally not used.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/KeyCode#World54)
         */
        export interface World54 extends globalThis.EnumItem {
            Name: "World54";
            Value: 214;
            EnumType: typeof globalThis.Enum.KeyCode;
        }
        export const World54: World54;
        /**
         * Generally not used.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/KeyCode#World55)
         */
        export interface World55 extends globalThis.EnumItem {
            Name: "World55";
            Value: 215;
            EnumType: typeof globalThis.Enum.KeyCode;
        }
        export const World55: World55;
        /**
         * Generally not used.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/KeyCode#World56)
         */
        export interface World56 extends globalThis.EnumItem {
            Name: "World56";
            Value: 216;
            EnumType: typeof globalThis.Enum.KeyCode;
        }
        export const World56: World56;
        /**
         * Generally not used.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/KeyCode#World57)
         */
        export interface World57 extends globalThis.EnumItem {
            Name: "World57";
            Value: 217;
            EnumType: typeof globalThis.Enum.KeyCode;
        }
        export const World57: World57;
        /**
         * Generally not used.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/KeyCode#World58)
         */
        export interface World58 extends globalThis.EnumItem {
            Name: "World58";
            Value: 218;
            EnumType: typeof globalThis.Enum.KeyCode;
        }
        export const World58: World58;
        /**
         * Generally not used.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/KeyCode#World59)
         */
        export interface World59 extends globalThis.EnumItem {
            Name: "World59";
            Value: 219;
            EnumType: typeof globalThis.Enum.KeyCode;
        }
        export const World59: World59;
        /**
         * Generally not used.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/KeyCode#World60)
         */
        export interface World60 extends globalThis.EnumItem {
            Name: "World60";
            Value: 220;
            EnumType: typeof globalThis.Enum.KeyCode;
        }
        export const World60: World60;
        /**
         * Generally not used.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/KeyCode#World61)
         */
        export interface World61 extends globalThis.EnumItem {
            Name: "World61";
            Value: 221;
            EnumType: typeof globalThis.Enum.KeyCode;
        }
        export const World61: World61;
        /**
         * Generally not used.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/KeyCode#World62)
         */
        export interface World62 extends globalThis.EnumItem {
            Name: "World62";
            Value: 222;
            EnumType: typeof globalThis.Enum.KeyCode;
        }
        export const World62: World62;
        /**
         * Generally not used.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/KeyCode#World63)
         */
        export interface World63 extends globalThis.EnumItem {
            Name: "World63";
            Value: 223;
            EnumType: typeof globalThis.Enum.KeyCode;
        }
        export const World63: World63;
        /**
         * Generally not used.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/KeyCode#World64)
         */
        export interface World64 extends globalThis.EnumItem {
            Name: "World64";
            Value: 224;
            EnumType: typeof globalThis.Enum.KeyCode;
        }
        export const World64: World64;
        /**
         * Generally not used.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/KeyCode#World65)
         */
        export interface World65 extends globalThis.EnumItem {
            Name: "World65";
            Value: 225;
            EnumType: typeof globalThis.Enum.KeyCode;
        }
        export const World65: World65;
        /**
         * Generally not used.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/KeyCode#World66)
         */
        export interface World66 extends globalThis.EnumItem {
            Name: "World66";
            Value: 226;
            EnumType: typeof globalThis.Enum.KeyCode;
        }
        export const World66: World66;
        /**
         * Generally not used.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/KeyCode#World67)
         */
        export interface World67 extends globalThis.EnumItem {
            Name: "World67";
            Value: 227;
            EnumType: typeof globalThis.Enum.KeyCode;
        }
        export const World67: World67;
        /**
         * Generally not used.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/KeyCode#World68)
         */
        export interface World68 extends globalThis.EnumItem {
            Name: "World68";
            Value: 228;
            EnumType: typeof globalThis.Enum.KeyCode;
        }
        export const World68: World68;
        /**
         * Generally not used.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/KeyCode#World69)
         */
        export interface World69 extends globalThis.EnumItem {
            Name: "World69";
            Value: 229;
            EnumType: typeof globalThis.Enum.KeyCode;
        }
        export const World69: World69;
        /**
         * Generally not used.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/KeyCode#World70)
         */
        export interface World70 extends globalThis.EnumItem {
            Name: "World70";
            Value: 230;
            EnumType: typeof globalThis.Enum.KeyCode;
        }
        export const World70: World70;
        /**
         * Generally not used.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/KeyCode#World71)
         */
        export interface World71 extends globalThis.EnumItem {
            Name: "World71";
            Value: 231;
            EnumType: typeof globalThis.Enum.KeyCode;
        }
        export const World71: World71;
        /**
         * Generally not used.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/KeyCode#World72)
         */
        export interface World72 extends globalThis.EnumItem {
            Name: "World72";
            Value: 232;
            EnumType: typeof globalThis.Enum.KeyCode;
        }
        export const World72: World72;
        /**
         * Generally not used.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/KeyCode#World73)
         */
        export interface World73 extends globalThis.EnumItem {
            Name: "World73";
            Value: 233;
            EnumType: typeof globalThis.Enum.KeyCode;
        }
        export const World73: World73;
        /**
         * Generally not used.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/KeyCode#World74)
         */
        export interface World74 extends globalThis.EnumItem {
            Name: "World74";
            Value: 234;
            EnumType: typeof globalThis.Enum.KeyCode;
        }
        export const World74: World74;
        /**
         * Generally not used.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/KeyCode#World75)
         */
        export interface World75 extends globalThis.EnumItem {
            Name: "World75";
            Value: 235;
            EnumType: typeof globalThis.Enum.KeyCode;
        }
        export const World75: World75;
        /**
         * Generally not used.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/KeyCode#World76)
         */
        export interface World76 extends globalThis.EnumItem {
            Name: "World76";
            Value: 236;
            EnumType: typeof globalThis.Enum.KeyCode;
        }
        export const World76: World76;
        /**
         * Generally not used.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/KeyCode#World77)
         */
        export interface World77 extends globalThis.EnumItem {
            Name: "World77";
            Value: 237;
            EnumType: typeof globalThis.Enum.KeyCode;
        }
        export const World77: World77;
        /**
         * Generally not used.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/KeyCode#World78)
         */
        export interface World78 extends globalThis.EnumItem {
            Name: "World78";
            Value: 238;
            EnumType: typeof globalThis.Enum.KeyCode;
        }
        export const World78: World78;
        /**
         * Generally not used.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/KeyCode#World79)
         */
        export interface World79 extends globalThis.EnumItem {
            Name: "World79";
            Value: 239;
            EnumType: typeof globalThis.Enum.KeyCode;
        }
        export const World79: World79;
        /**
         * Generally not used.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/KeyCode#World80)
         */
        export interface World80 extends globalThis.EnumItem {
            Name: "World80";
            Value: 240;
            EnumType: typeof globalThis.Enum.KeyCode;
        }
        export const World80: World80;
        /**
         * Generally not used.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/KeyCode#World81)
         */
        export interface World81 extends globalThis.EnumItem {
            Name: "World81";
            Value: 241;
            EnumType: typeof globalThis.Enum.KeyCode;
        }
        export const World81: World81;
        /**
         * Generally not used.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/KeyCode#World82)
         */
        export interface World82 extends globalThis.EnumItem {
            Name: "World82";
            Value: 242;
            EnumType: typeof globalThis.Enum.KeyCode;
        }
        export const World82: World82;
        /**
         * Generally not used.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/KeyCode#World83)
         */
        export interface World83 extends globalThis.EnumItem {
            Name: "World83";
            Value: 243;
            EnumType: typeof globalThis.Enum.KeyCode;
        }
        export const World83: World83;
        /**
         * Generally not used.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/KeyCode#World84)
         */
        export interface World84 extends globalThis.EnumItem {
            Name: "World84";
            Value: 244;
            EnumType: typeof globalThis.Enum.KeyCode;
        }
        export const World84: World84;
        /**
         * Generally not used.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/KeyCode#World85)
         */
        export interface World85 extends globalThis.EnumItem {
            Name: "World85";
            Value: 245;
            EnumType: typeof globalThis.Enum.KeyCode;
        }
        export const World85: World85;
        /**
         * Generally not used.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/KeyCode#World86)
         */
        export interface World86 extends globalThis.EnumItem {
            Name: "World86";
            Value: 246;
            EnumType: typeof globalThis.Enum.KeyCode;
        }
        export const World86: World86;
        /**
         * Generally not used.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/KeyCode#World87)
         */
        export interface World87 extends globalThis.EnumItem {
            Name: "World87";
            Value: 247;
            EnumType: typeof globalThis.Enum.KeyCode;
        }
        export const World87: World87;
        /**
         * Generally not used.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/KeyCode#World88)
         */
        export interface World88 extends globalThis.EnumItem {
            Name: "World88";
            Value: 248;
            EnumType: typeof globalThis.Enum.KeyCode;
        }
        export const World88: World88;
        /**
         * Generally not used.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/KeyCode#World89)
         */
        export interface World89 extends globalThis.EnumItem {
            Name: "World89";
            Value: 249;
            EnumType: typeof globalThis.Enum.KeyCode;
        }
        export const World89: World89;
        /**
         * Generally not used.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/KeyCode#World90)
         */
        export interface World90 extends globalThis.EnumItem {
            Name: "World90";
            Value: 250;
            EnumType: typeof globalThis.Enum.KeyCode;
        }
        export const World90: World90;
        /**
         * Generally not used.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/KeyCode#World91)
         */
        export interface World91 extends globalThis.EnumItem {
            Name: "World91";
            Value: 251;
            EnumType: typeof globalThis.Enum.KeyCode;
        }
        export const World91: World91;
        /**
         * Generally not used.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/KeyCode#World92)
         */
        export interface World92 extends globalThis.EnumItem {
            Name: "World92";
            Value: 252;
            EnumType: typeof globalThis.Enum.KeyCode;
        }
        export const World92: World92;
        /**
         * Generally not used.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/KeyCode#World93)
         */
        export interface World93 extends globalThis.EnumItem {
            Name: "World93";
            Value: 253;
            EnumType: typeof globalThis.Enum.KeyCode;
        }
        export const World93: World93;
        /**
         * Generally not used.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/KeyCode#World94)
         */
        export interface World94 extends globalThis.EnumItem {
            Name: "World94";
            Value: 254;
            EnumType: typeof globalThis.Enum.KeyCode;
        }
        export const World94: World94;
        /**
         * Generally not used.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/KeyCode#World95)
         */
        export interface World95 extends globalThis.EnumItem {
            Name: "World95";
            Value: 255;
            EnumType: typeof globalThis.Enum.KeyCode;
        }
        export const World95: World95;
        /**
         * The `0` key on the keypad cluster.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/KeyCode#KeypadZero)
         */
        export interface KeypadZero extends globalThis.EnumItem {
            Name: "KeypadZero";
            Value: 256;
            EnumType: typeof globalThis.Enum.KeyCode;
        }
        export const KeypadZero: KeypadZero;
        /**
         * The `1` key on the keypad cluster.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/KeyCode#KeypadOne)
         */
        export interface KeypadOne extends globalThis.EnumItem {
            Name: "KeypadOne";
            Value: 257;
            EnumType: typeof globalThis.Enum.KeyCode;
        }
        export const KeypadOne: KeypadOne;
        /**
         * The `2` key on the keypad cluster.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/KeyCode#KeypadTwo)
         */
        export interface KeypadTwo extends globalThis.EnumItem {
            Name: "KeypadTwo";
            Value: 258;
            EnumType: typeof globalThis.Enum.KeyCode;
        }
        export const KeypadTwo: KeypadTwo;
        /**
         * The `3` key on the keypad cluster.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/KeyCode#KeypadThree)
         */
        export interface KeypadThree extends globalThis.EnumItem {
            Name: "KeypadThree";
            Value: 259;
            EnumType: typeof globalThis.Enum.KeyCode;
        }
        export const KeypadThree: KeypadThree;
        /**
         * The `4` key on the keypad cluster.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/KeyCode#KeypadFour)
         */
        export interface KeypadFour extends globalThis.EnumItem {
            Name: "KeypadFour";
            Value: 260;
            EnumType: typeof globalThis.Enum.KeyCode;
        }
        export const KeypadFour: KeypadFour;
        /**
         * The `5` key on the keypad cluster.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/KeyCode#KeypadFive)
         */
        export interface KeypadFive extends globalThis.EnumItem {
            Name: "KeypadFive";
            Value: 261;
            EnumType: typeof globalThis.Enum.KeyCode;
        }
        export const KeypadFive: KeypadFive;
        /**
         * The `6` key on the keypad cluster.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/KeyCode#KeypadSix)
         */
        export interface KeypadSix extends globalThis.EnumItem {
            Name: "KeypadSix";
            Value: 262;
            EnumType: typeof globalThis.Enum.KeyCode;
        }
        export const KeypadSix: KeypadSix;
        /**
         * The `7` key on the keypad cluster.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/KeyCode#KeypadSeven)
         */
        export interface KeypadSeven extends globalThis.EnumItem {
            Name: "KeypadSeven";
            Value: 263;
            EnumType: typeof globalThis.Enum.KeyCode;
        }
        export const KeypadSeven: KeypadSeven;
        /**
         * The `8` key on the keypad cluster.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/KeyCode#KeypadEight)
         */
        export interface KeypadEight extends globalThis.EnumItem {
            Name: "KeypadEight";
            Value: 264;
            EnumType: typeof globalThis.Enum.KeyCode;
        }
        export const KeypadEight: KeypadEight;
        /**
         * The `9` key on the keypad cluster.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/KeyCode#KeypadNine)
         */
        export interface KeypadNine extends globalThis.EnumItem {
            Name: "KeypadNine";
            Value: 265;
            EnumType: typeof globalThis.Enum.KeyCode;
        }
        export const KeypadNine: KeypadNine;
        /**
         * The `.` key on the keypad cluster.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/KeyCode#KeypadPeriod)
         */
        export interface KeypadPeriod extends globalThis.EnumItem {
            Name: "KeypadPeriod";
            Value: 266;
            EnumType: typeof globalThis.Enum.KeyCode;
        }
        export const KeypadPeriod: KeypadPeriod;
        /**
         * The `/` key on the keypad cluster.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/KeyCode#KeypadDivide)
         */
        export interface KeypadDivide extends globalThis.EnumItem {
            Name: "KeypadDivide";
            Value: 267;
            EnumType: typeof globalThis.Enum.KeyCode;
        }
        export const KeypadDivide: KeypadDivide;
        /**
         * The `*` key on the keypad cluster.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/KeyCode#KeypadMultiply)
         */
        export interface KeypadMultiply extends globalThis.EnumItem {
            Name: "KeypadMultiply";
            Value: 268;
            EnumType: typeof globalThis.Enum.KeyCode;
        }
        export const KeypadMultiply: KeypadMultiply;
        /**
         * The `-` key on the keypad cluster.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/KeyCode#KeypadMinus)
         */
        export interface KeypadMinus extends globalThis.EnumItem {
            Name: "KeypadMinus";
            Value: 269;
            EnumType: typeof globalThis.Enum.KeyCode;
        }
        export const KeypadMinus: KeypadMinus;
        /**
         * The `+` key on the keypad cluster.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/KeyCode#KeypadPlus)
         */
        export interface KeypadPlus extends globalThis.EnumItem {
            Name: "KeypadPlus";
            Value: 270;
            EnumType: typeof globalThis.Enum.KeyCode;
        }
        export const KeypadPlus: KeypadPlus;
        /**
         * The `Enter` key on the keypad cluster.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/KeyCode#KeypadEnter)
         */
        export interface KeypadEnter extends globalThis.EnumItem {
            Name: "KeypadEnter";
            Value: 271;
            EnumType: typeof globalThis.Enum.KeyCode;
        }
        export const KeypadEnter: KeypadEnter;
        /**
         * The `=` key on the keypad cluster.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/KeyCode#KeypadEquals)
         */
        export interface KeypadEquals extends globalThis.EnumItem {
            Name: "KeypadEquals";
            Value: 272;
            EnumType: typeof globalThis.Enum.KeyCode;
        }
        export const KeypadEquals: KeypadEquals;
        /**
         * The `↑` arrow key.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/KeyCode#Up)
         */
        export interface Up extends globalThis.EnumItem {
            Name: "Up";
            Value: 273;
            EnumType: typeof globalThis.Enum.KeyCode;
        }
        export const Up: Up;
        /**
         * The `↓` arrow key.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/KeyCode#Down)
         */
        export interface Down extends globalThis.EnumItem {
            Name: "Down";
            Value: 274;
            EnumType: typeof globalThis.Enum.KeyCode;
        }
        export const Down: Down;
        /**
         * The `→` arrow key.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/KeyCode#Right)
         */
        export interface Right extends globalThis.EnumItem {
            Name: "Right";
            Value: 275;
            EnumType: typeof globalThis.Enum.KeyCode;
        }
        export const Right: Right;
        /**
         * The `←` arrow key.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/KeyCode#Left)
         */
        export interface Left extends globalThis.EnumItem {
            Name: "Left";
            Value: 276;
            EnumType: typeof globalThis.Enum.KeyCode;
        }
        export const Left: Left;
        /**
         * The `Insert` key.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/KeyCode#Insert)
         */
        export interface Insert extends globalThis.EnumItem {
            Name: "Insert";
            Value: 277;
            EnumType: typeof globalThis.Enum.KeyCode;
        }
        export const Insert: Insert;
        /**
         * The `Home` key.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/KeyCode#Home)
         */
        export interface Home extends globalThis.EnumItem {
            Name: "Home";
            Value: 278;
            EnumType: typeof globalThis.Enum.KeyCode;
        }
        export const Home: Home;
        /**
         * The `End` key.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/KeyCode#End)
         */
        export interface End extends globalThis.EnumItem {
            Name: "End";
            Value: 279;
            EnumType: typeof globalThis.Enum.KeyCode;
        }
        export const End: End;
        /**
         * The `PgUp` key.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/KeyCode#PageUp)
         */
        export interface PageUp extends globalThis.EnumItem {
            Name: "PageUp";
            Value: 280;
            EnumType: typeof globalThis.Enum.KeyCode;
        }
        export const PageUp: PageUp;
        /**
         * The `PgDown` key.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/KeyCode#PageDown)
         */
        export interface PageDown extends globalThis.EnumItem {
            Name: "PageDown";
            Value: 281;
            EnumType: typeof globalThis.Enum.KeyCode;
        }
        export const PageDown: PageDown;
        /**
         * The `F1` key.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/KeyCode#F1)
         */
        export interface F1 extends globalThis.EnumItem {
            Name: "F1";
            Value: 282;
            EnumType: typeof globalThis.Enum.KeyCode;
        }
        export const F1: F1;
        /**
         * The `F2` key.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/KeyCode#F2)
         */
        export interface F2 extends globalThis.EnumItem {
            Name: "F2";
            Value: 283;
            EnumType: typeof globalThis.Enum.KeyCode;
        }
        export const F2: F2;
        /**
         * The `F3` key.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/KeyCode#F3)
         */
        export interface F3 extends globalThis.EnumItem {
            Name: "F3";
            Value: 284;
            EnumType: typeof globalThis.Enum.KeyCode;
        }
        export const F3: F3;
        /**
         * The `F4` key.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/KeyCode#F4)
         */
        export interface F4 extends globalThis.EnumItem {
            Name: "F4";
            Value: 285;
            EnumType: typeof globalThis.Enum.KeyCode;
        }
        export const F4: F4;
        /**
         * The `F5` key.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/KeyCode#F5)
         */
        export interface F5 extends globalThis.EnumItem {
            Name: "F5";
            Value: 286;
            EnumType: typeof globalThis.Enum.KeyCode;
        }
        export const F5: F5;
        /**
         * The `F6` key.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/KeyCode#F6)
         */
        export interface F6 extends globalThis.EnumItem {
            Name: "F6";
            Value: 287;
            EnumType: typeof globalThis.Enum.KeyCode;
        }
        export const F6: F6;
        /**
         * The `F7` key.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/KeyCode#F7)
         */
        export interface F7 extends globalThis.EnumItem {
            Name: "F7";
            Value: 288;
            EnumType: typeof globalThis.Enum.KeyCode;
        }
        export const F7: F7;
        /**
         * The `F8` key.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/KeyCode#F8)
         */
        export interface F8 extends globalThis.EnumItem {
            Name: "F8";
            Value: 289;
            EnumType: typeof globalThis.Enum.KeyCode;
        }
        export const F8: F8;
        /**
         * The `F9` key.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/KeyCode#F9)
         */
        export interface F9 extends globalThis.EnumItem {
            Name: "F9";
            Value: 290;
            EnumType: typeof globalThis.Enum.KeyCode;
        }
        export const F9: F9;
        /**
         * The `F10` key.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/KeyCode#F10)
         */
        export interface F10 extends globalThis.EnumItem {
            Name: "F10";
            Value: 291;
            EnumType: typeof globalThis.Enum.KeyCode;
        }
        export const F10: F10;
        /**
         * The `F11` key.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/KeyCode#F11)
         */
        export interface F11 extends globalThis.EnumItem {
            Name: "F11";
            Value: 292;
            EnumType: typeof globalThis.Enum.KeyCode;
        }
        export const F11: F11;
        /**
         * The `F12` key.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/KeyCode#F12)
         */
        export interface F12 extends globalThis.EnumItem {
            Name: "F12";
            Value: 293;
            EnumType: typeof globalThis.Enum.KeyCode;
        }
        export const F12: F12;
        /**
         * The `F13` key. Only present on certain keyboards.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/KeyCode#F13)
         */
        export interface F13 extends globalThis.EnumItem {
            Name: "F13";
            Value: 294;
            EnumType: typeof globalThis.Enum.KeyCode;
        }
        export const F13: F13;
        /**
         * The `F14` key. Only present on certain keyboards.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/KeyCode#F14)
         */
        export interface F14 extends globalThis.EnumItem {
            Name: "F14";
            Value: 295;
            EnumType: typeof globalThis.Enum.KeyCode;
        }
        export const F14: F14;
        /**
         * The `F15` key. Only present on certain keyboards.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/KeyCode#F15)
         */
        export interface F15 extends globalThis.EnumItem {
            Name: "F15";
            Value: 296;
            EnumType: typeof globalThis.Enum.KeyCode;
        }
        export const F15: F15;
        /**
         * The `Num Lock` key on the keypad cluster.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/KeyCode#NumLock)
         */
        export interface NumLock extends globalThis.EnumItem {
            Name: "NumLock";
            Value: 300;
            EnumType: typeof globalThis.Enum.KeyCode;
        }
        export const NumLock: NumLock;
        /**
         * The `Caps Lock` key.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/KeyCode#CapsLock)
         */
        export interface CapsLock extends globalThis.EnumItem {
            Name: "CapsLock";
            Value: 301;
            EnumType: typeof globalThis.Enum.KeyCode;
        }
        export const CapsLock: CapsLock;
        /**
         * The `Scr Lock` key.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/KeyCode#ScrollLock)
         */
        export interface ScrollLock extends globalThis.EnumItem {
            Name: "ScrollLock";
            Value: 302;
            EnumType: typeof globalThis.Enum.KeyCode;
        }
        export const ScrollLock: ScrollLock;
        /**
         * The right side `Shift` key.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/KeyCode#RightShift)
         */
        export interface RightShift extends globalThis.EnumItem {
            Name: "RightShift";
            Value: 303;
            EnumType: typeof globalThis.Enum.KeyCode;
        }
        export const RightShift: RightShift;
        /**
         * The left side `Shift` key.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/KeyCode#LeftShift)
         */
        export interface LeftShift extends globalThis.EnumItem {
            Name: "LeftShift";
            Value: 304;
            EnumType: typeof globalThis.Enum.KeyCode;
        }
        export const LeftShift: LeftShift;
        /**
         * The right side `Ctrl` key.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/KeyCode#RightControl)
         */
        export interface RightControl extends globalThis.EnumItem {
            Name: "RightControl";
            Value: 305;
            EnumType: typeof globalThis.Enum.KeyCode;
        }
        export const RightControl: RightControl;
        /**
         * The left side `Ctrl` key.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/KeyCode#LeftControl)
         */
        export interface LeftControl extends globalThis.EnumItem {
            Name: "LeftControl";
            Value: 306;
            EnumType: typeof globalThis.Enum.KeyCode;
        }
        export const LeftControl: LeftControl;
        /**
         * The right side `Alt` key.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/KeyCode#RightAlt)
         */
        export interface RightAlt extends globalThis.EnumItem {
            Name: "RightAlt";
            Value: 307;
            EnumType: typeof globalThis.Enum.KeyCode;
        }
        export const RightAlt: RightAlt;
        /**
         * The left side `Alt` key.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/KeyCode#LeftAlt)
         */
        export interface LeftAlt extends globalThis.EnumItem {
            Name: "LeftAlt";
            Value: 308;
            EnumType: typeof globalThis.Enum.KeyCode;
        }
        export const LeftAlt: LeftAlt;
        /**
         * The right side `Meta` key.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/KeyCode#RightMeta)
         */
        export interface RightMeta extends globalThis.EnumItem {
            Name: "RightMeta";
            Value: 309;
            EnumType: typeof globalThis.Enum.KeyCode;
        }
        export const RightMeta: RightMeta;
        /**
         * The left side `Meta` key.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/KeyCode#LeftMeta)
         */
        export interface LeftMeta extends globalThis.EnumItem {
            Name: "LeftMeta";
            Value: 310;
            EnumType: typeof globalThis.Enum.KeyCode;
        }
        export const LeftMeta: LeftMeta;
        /**
         * The left side `Super` key. Better known as the Windows key or Cmd key.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/KeyCode#LeftSuper)
         */
        export interface LeftSuper extends globalThis.EnumItem {
            Name: "LeftSuper";
            Value: 311;
            EnumType: typeof globalThis.Enum.KeyCode;
        }
        export const LeftSuper: LeftSuper;
        /**
         * The right side `Super` key. Better known as the Windows key or Cmd key.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/KeyCode#RightSuper)
         */
        export interface RightSuper extends globalThis.EnumItem {
            Name: "RightSuper";
            Value: 312;
            EnumType: typeof globalThis.Enum.KeyCode;
        }
        export const RightSuper: RightSuper;
        /**
         * Only present on certain keyboards.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/KeyCode#Mode)
         */
        export interface Mode extends globalThis.EnumItem {
            Name: "Mode";
            Value: 313;
            EnumType: typeof globalThis.Enum.KeyCode;
        }
        export const Mode: Mode;
        /**
         * Only present on certain keyboards.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/KeyCode#Compose)
         */
        export interface Compose extends globalThis.EnumItem {
            Name: "Compose";
            Value: 314;
            EnumType: typeof globalThis.Enum.KeyCode;
        }
        export const Compose: Compose;
        /**
         * Only present on certain keyboards.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/KeyCode#Help)
         */
        export interface Help extends globalThis.EnumItem {
            Name: "Help";
            Value: 315;
            EnumType: typeof globalThis.Enum.KeyCode;
        }
        export const Help: Help;
        /**
         * Only present on certain keyboards.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/KeyCode#Print)
         */
        export interface Print extends globalThis.EnumItem {
            Name: "Print";
            Value: 316;
            EnumType: typeof globalThis.Enum.KeyCode;
        }
        export const Print: Print;
        /**
         * Only present on certain keyboards.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/KeyCode#SysReq)
         */
        export interface SysReq extends globalThis.EnumItem {
            Name: "SysReq";
            Value: 317;
            EnumType: typeof globalThis.Enum.KeyCode;
        }
        export const SysReq: SysReq;
        /**
         * Only present on certain keyboards.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/KeyCode#Break)
         */
        export interface Break extends globalThis.EnumItem {
            Name: "Break";
            Value: 318;
            EnumType: typeof globalThis.Enum.KeyCode;
        }
        export const Break: Break;
        /**
         * The `Menu` key.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/KeyCode#Menu)
         */
        export interface Menu extends globalThis.EnumItem {
            Name: "Menu";
            Value: 319;
            EnumType: typeof globalThis.Enum.KeyCode;
        }
        export const Menu: Menu;
        /**
         * Only present on certain keyboards.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/KeyCode#Power)
         */
        export interface Power extends globalThis.EnumItem {
            Name: "Power";
            Value: 320;
            EnumType: typeof globalThis.Enum.KeyCode;
        }
        export const Power: Power;
        /**
         * The `€` key. Only present on certain keyboards.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/KeyCode#Euro)
         */
        export interface Euro extends globalThis.EnumItem {
            Name: "Euro";
            Value: 321;
            EnumType: typeof globalThis.Enum.KeyCode;
        }
        export const Euro: Euro;
        /**
         * Only present on certain keyboards.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/KeyCode#Undo)
         */
        export interface Undo extends globalThis.EnumItem {
            Name: "Undo";
            Value: 322;
            EnumType: typeof globalThis.Enum.KeyCode;
        }
        export const Undo: Undo;
        /**
         * Gamepad X button.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/KeyCode#ButtonX)
         */
        export interface ButtonX extends globalThis.EnumItem {
            Name: "ButtonX";
            Value: 1000;
            EnumType: typeof globalThis.Enum.KeyCode;
        }
        export const ButtonX: ButtonX;
        /**
         * Gamepad Y button.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/KeyCode#ButtonY)
         */
        export interface ButtonY extends globalThis.EnumItem {
            Name: "ButtonY";
            Value: 1001;
            EnumType: typeof globalThis.Enum.KeyCode;
        }
        export const ButtonY: ButtonY;
        /**
         * Gamepad A button.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/KeyCode#ButtonA)
         */
        export interface ButtonA extends globalThis.EnumItem {
            Name: "ButtonA";
            Value: 1002;
            EnumType: typeof globalThis.Enum.KeyCode;
        }
        export const ButtonA: ButtonA;
        /**
         * Gamepad B button.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/KeyCode#ButtonB)
         */
        export interface ButtonB extends globalThis.EnumItem {
            Name: "ButtonB";
            Value: 1003;
            EnumType: typeof globalThis.Enum.KeyCode;
        }
        export const ButtonB: ButtonB;
        /**
         * Gamepad R1 button.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/KeyCode#ButtonR1)
         */
        export interface ButtonR1 extends globalThis.EnumItem {
            Name: "ButtonR1";
            Value: 1004;
            EnumType: typeof globalThis.Enum.KeyCode;
        }
        export const ButtonR1: ButtonR1;
        /**
         * Gamepad L1 button.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/KeyCode#ButtonL1)
         */
        export interface ButtonL1 extends globalThis.EnumItem {
            Name: "ButtonL1";
            Value: 1005;
            EnumType: typeof globalThis.Enum.KeyCode;
        }
        export const ButtonL1: ButtonL1;
        /**
         * Gamepad R2 button.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/KeyCode#ButtonR2)
         */
        export interface ButtonR2 extends globalThis.EnumItem {
            Name: "ButtonR2";
            Value: 1006;
            EnumType: typeof globalThis.Enum.KeyCode;
        }
        export const ButtonR2: ButtonR2;
        /**
         * Gamepad L2 button.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/KeyCode#ButtonL2)
         */
        export interface ButtonL2 extends globalThis.EnumItem {
            Name: "ButtonL2";
            Value: 1007;
            EnumType: typeof globalThis.Enum.KeyCode;
        }
        export const ButtonL2: ButtonL2;
        /**
         * Gamepad R3 button.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/KeyCode#ButtonR3)
         */
        export interface ButtonR3 extends globalThis.EnumItem {
            Name: "ButtonR3";
            Value: 1008;
            EnumType: typeof globalThis.Enum.KeyCode;
        }
        export const ButtonR3: ButtonR3;
        /**
         * Gamepad L3 button.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/KeyCode#ButtonL3)
         */
        export interface ButtonL3 extends globalThis.EnumItem {
            Name: "ButtonL3";
            Value: 1009;
            EnumType: typeof globalThis.Enum.KeyCode;
        }
        export const ButtonL3: ButtonL3;
        /**
         * Gamepad Start button.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/KeyCode#ButtonStart)
         */
        export interface ButtonStart extends globalThis.EnumItem {
            Name: "ButtonStart";
            Value: 1010;
            EnumType: typeof globalThis.Enum.KeyCode;
        }
        export const ButtonStart: ButtonStart;
        /**
         * Gamepad Select button.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/KeyCode#ButtonSelect)
         */
        export interface ButtonSelect extends globalThis.EnumItem {
            Name: "ButtonSelect";
            Value: 1011;
            EnumType: typeof globalThis.Enum.KeyCode;
        }
        export const ButtonSelect: ButtonSelect;
        /**
         * Left arrow on a gamepad D-pad.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/KeyCode#DPadLeft)
         */
        export interface DPadLeft extends globalThis.EnumItem {
            Name: "DPadLeft";
            Value: 1012;
            EnumType: typeof globalThis.Enum.KeyCode;
        }
        export const DPadLeft: DPadLeft;
        /**
         * Right arrow on a gamepad D-pad.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/KeyCode#DPadRight)
         */
        export interface DPadRight extends globalThis.EnumItem {
            Name: "DPadRight";
            Value: 1013;
            EnumType: typeof globalThis.Enum.KeyCode;
        }
        export const DPadRight: DPadRight;
        /**
         * Up arrow on a gamepad D-pad.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/KeyCode#DPadUp)
         */
        export interface DPadUp extends globalThis.EnumItem {
            Name: "DPadUp";
            Value: 1014;
            EnumType: typeof globalThis.Enum.KeyCode;
        }
        export const DPadUp: DPadUp;
        /**
         * Down arrow on a gamepad D-pad.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/KeyCode#DPadDown)
         */
        export interface DPadDown extends globalThis.EnumItem {
            Name: "DPadDown";
            Value: 1015;
            EnumType: typeof globalThis.Enum.KeyCode;
        }
        export const DPadDown: DPadDown;
        /**
         * Gamepad primary thumbstick.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/KeyCode#Thumbstick1)
         */
        export interface Thumbstick1 extends globalThis.EnumItem {
            Name: "Thumbstick1";
            Value: 1016;
            EnumType: typeof globalThis.Enum.KeyCode;
        }
        export const Thumbstick1: Thumbstick1;
        /**
         * Gamepad secondary thumbstick.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/KeyCode#Thumbstick2)
         */
        export interface Thumbstick2 extends globalThis.EnumItem {
            Name: "Thumbstick2";
            Value: 1017;
            EnumType: typeof globalThis.Enum.KeyCode;
        }
        export const Thumbstick2: Thumbstick2;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/KeyCode#MouseLeftButton)
         */
        export interface MouseLeftButton extends globalThis.EnumItem {
            Name: "MouseLeftButton";
            Value: 1018;
            EnumType: typeof globalThis.Enum.KeyCode;
        }
        export const MouseLeftButton: MouseLeftButton;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/KeyCode#MouseRightButton)
         */
        export interface MouseRightButton extends globalThis.EnumItem {
            Name: "MouseRightButton";
            Value: 1019;
            EnumType: typeof globalThis.Enum.KeyCode;
        }
        export const MouseRightButton: MouseRightButton;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/KeyCode#MouseMiddleButton)
         */
        export interface MouseMiddleButton extends globalThis.EnumItem {
            Name: "MouseMiddleButton";
            Value: 1020;
            EnumType: typeof globalThis.Enum.KeyCode;
        }
        export const MouseMiddleButton: MouseMiddleButton;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/KeyCode#MouseBackButton)
         */
        export interface MouseBackButton extends globalThis.EnumItem {
            Name: "MouseBackButton";
            Value: 1021;
            EnumType: typeof globalThis.Enum.KeyCode;
        }
        export const MouseBackButton: MouseBackButton;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/KeyCode#MouseNoButton)
         */
        export interface MouseNoButton extends globalThis.EnumItem {
            Name: "MouseNoButton";
            Value: 1022;
            EnumType: typeof globalThis.Enum.KeyCode;
        }
        export const MouseNoButton: MouseNoButton;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/KeyCode#MouseX)
         */
        export interface MouseX extends globalThis.EnumItem {
            Name: "MouseX";
            Value: 1023;
            EnumType: typeof globalThis.Enum.KeyCode;
        }
        export const MouseX: MouseX;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/KeyCode#MouseY)
         */
        export interface MouseY extends globalThis.EnumItem {
            Name: "MouseY";
            Value: 1024;
            EnumType: typeof globalThis.Enum.KeyCode;
        }
        export const MouseY: MouseY;
        export function GetEnumItems(this: globalThis.Enum): Array<globalThis.Enum.KeyCode>;
        export function FromName(this: globalThis.Enum, name: string): globalThis.Enum.KeyCode | undefined;
        export function FromValue(this: globalThis.Enum, value: number): globalThis.Enum.KeyCode | undefined;
    }
    export type KeyCode = KeyCode.Unknown | KeyCode.Backspace | KeyCode.Tab | KeyCode.Clear | KeyCode.Return | KeyCode.Pause | KeyCode.Escape | KeyCode.Space | KeyCode.QuotedDouble | KeyCode.Hash | KeyCode.Dollar | KeyCode.Percent | KeyCode.Ampersand | KeyCode.Quote | KeyCode.LeftParenthesis | KeyCode.RightParenthesis | KeyCode.Asterisk | KeyCode.Plus | KeyCode.Comma | KeyCode.Minus | KeyCode.Period | KeyCode.Slash | KeyCode.Zero | KeyCode.One | KeyCode.Two | KeyCode.Three | KeyCode.Four | KeyCode.Five | KeyCode.Six | KeyCode.Seven | KeyCode.Eight | KeyCode.Nine | KeyCode.Colon | KeyCode.Semicolon | KeyCode.LessThan | KeyCode.Equals | KeyCode.GreaterThan | KeyCode.Question | KeyCode.At | KeyCode.LeftBracket | KeyCode.BackSlash | KeyCode.RightBracket | KeyCode.Caret | KeyCode.Underscore | KeyCode.Backquote | KeyCode.A | KeyCode.B | KeyCode.C | KeyCode.D | KeyCode.E | KeyCode.F | KeyCode.G | KeyCode.H | KeyCode.I | KeyCode.J | KeyCode.K | KeyCode.L | KeyCode.M | KeyCode.N | KeyCode.O | KeyCode.P | KeyCode.Q | KeyCode.R | KeyCode.S | KeyCode.T | KeyCode.U | KeyCode.V | KeyCode.W | KeyCode.X | KeyCode.Y | KeyCode.Z | KeyCode.LeftCurly | KeyCode.Pipe | KeyCode.RightCurly | KeyCode.Tilde | KeyCode.Delete | KeyCode.World0 | KeyCode.World1 | KeyCode.World2 | KeyCode.World3 | KeyCode.World4 | KeyCode.World5 | KeyCode.World6 | KeyCode.World7 | KeyCode.World8 | KeyCode.World9 | KeyCode.World10 | KeyCode.World11 | KeyCode.World12 | KeyCode.World13 | KeyCode.World14 | KeyCode.World15 | KeyCode.World16 | KeyCode.World17 | KeyCode.World18 | KeyCode.World19 | KeyCode.World20 | KeyCode.World21 | KeyCode.World22 | KeyCode.World23 | KeyCode.World24 | KeyCode.World25 | KeyCode.World26 | KeyCode.World27 | KeyCode.World28 | KeyCode.World29 | KeyCode.World30 | KeyCode.World31 | KeyCode.World32 | KeyCode.World33 | KeyCode.World34 | KeyCode.World35 | KeyCode.World36 | KeyCode.World37 | KeyCode.World38 | KeyCode.World39 | KeyCode.World40 | KeyCode.World41 | KeyCode.World42 | KeyCode.World43 | KeyCode.World44 | KeyCode.World45 | KeyCode.World46 | KeyCode.World47 | KeyCode.World48 | KeyCode.World49 | KeyCode.World50 | KeyCode.World51 | KeyCode.World52 | KeyCode.World53 | KeyCode.World54 | KeyCode.World55 | KeyCode.World56 | KeyCode.World57 | KeyCode.World58 | KeyCode.World59 | KeyCode.World60 | KeyCode.World61 | KeyCode.World62 | KeyCode.World63 | KeyCode.World64 | KeyCode.World65 | KeyCode.World66 | KeyCode.World67 | KeyCode.World68 | KeyCode.World69 | KeyCode.World70 | KeyCode.World71 | KeyCode.World72 | KeyCode.World73 | KeyCode.World74 | KeyCode.World75 | KeyCode.World76 | KeyCode.World77 | KeyCode.World78 | KeyCode.World79 | KeyCode.World80 | KeyCode.World81 | KeyCode.World82 | KeyCode.World83 | KeyCode.World84 | KeyCode.World85 | KeyCode.World86 | KeyCode.World87 | KeyCode.World88 | KeyCode.World89 | KeyCode.World90 | KeyCode.World91 | KeyCode.World92 | KeyCode.World93 | KeyCode.World94 | KeyCode.World95 | KeyCode.KeypadZero | KeyCode.KeypadOne | KeyCode.KeypadTwo | KeyCode.KeypadThree | KeyCode.KeypadFour | KeyCode.KeypadFive | KeyCode.KeypadSix | KeyCode.KeypadSeven | KeyCode.KeypadEight | KeyCode.KeypadNine | KeyCode.KeypadPeriod | KeyCode.KeypadDivide | KeyCode.KeypadMultiply | KeyCode.KeypadMinus | KeyCode.KeypadPlus | KeyCode.KeypadEnter | KeyCode.KeypadEquals | KeyCode.Up | KeyCode.Down | KeyCode.Right | KeyCode.Left | KeyCode.Insert | KeyCode.Home | KeyCode.End | KeyCode.PageUp | KeyCode.PageDown | KeyCode.F1 | KeyCode.F2 | KeyCode.F3 | KeyCode.F4 | KeyCode.F5 | KeyCode.F6 | KeyCode.F7 | KeyCode.F8 | KeyCode.F9 | KeyCode.F10 | KeyCode.F11 | KeyCode.F12 | KeyCode.F13 | KeyCode.F14 | KeyCode.F15 | KeyCode.NumLock | KeyCode.CapsLock | KeyCode.ScrollLock | KeyCode.RightShift | KeyCode.LeftShift | KeyCode.RightControl | KeyCode.LeftControl | KeyCode.RightAlt | KeyCode.LeftAlt | KeyCode.RightMeta | KeyCode.LeftMeta | KeyCode.LeftSuper | KeyCode.RightSuper | KeyCode.Mode | KeyCode.Compose | KeyCode.Help | KeyCode.Print | KeyCode.SysReq | KeyCode.Break | KeyCode.Menu | KeyCode.Power | KeyCode.Euro | KeyCode.Undo | KeyCode.ButtonX | KeyCode.ButtonY | KeyCode.ButtonA | KeyCode.ButtonB | KeyCode.ButtonR1 | KeyCode.ButtonL1 | KeyCode.ButtonR2 | KeyCode.ButtonL2 | KeyCode.ButtonR3 | KeyCode.ButtonL3 | KeyCode.ButtonStart | KeyCode.ButtonSelect | KeyCode.DPadLeft | KeyCode.DPadRight | KeyCode.DPadUp | KeyCode.DPadDown | KeyCode.Thumbstick1 | KeyCode.Thumbstick2 | KeyCode.MouseLeftButton | KeyCode.MouseRightButton | KeyCode.MouseMiddleButton | KeyCode.MouseBackButton | KeyCode.MouseNoButton | KeyCode.MouseX | KeyCode.MouseY;
    /**
     * Describes the interpolation method between two keys.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/KeyInterpolationMode)
     */
    export namespace KeyInterpolationMode {
        /**
         * The segment starting at this key will constantly evaluate to the value set at this key.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/KeyInterpolationMode#Constant)
         */
        export interface Constant extends globalThis.EnumItem {
            Name: "Constant";
            Value: 0;
            EnumType: typeof globalThis.Enum.KeyInterpolationMode;
        }
        export const Constant: Constant;
        /**
         * The segment starting at this key will evaluate using a linear interpolation at this key and the value at the next key.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/KeyInterpolationMode#Linear)
         */
        export interface Linear extends globalThis.EnumItem {
            Name: "Linear";
            Value: 1;
            EnumType: typeof globalThis.Enum.KeyInterpolationMode;
        }
        export const Linear: Linear;
        /**
         * The segment starting at this key will evaluate using cubic interpolation of this key value using its right tangent and the next key value and its left tangent.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/KeyInterpolationMode#Cubic)
         */
        export interface Cubic extends globalThis.EnumItem {
            Name: "Cubic";
            Value: 2;
            EnumType: typeof globalThis.Enum.KeyInterpolationMode;
        }
        export const Cubic: Cubic;
        export function GetEnumItems(this: globalThis.Enum): Array<globalThis.Enum.KeyInterpolationMode>;
        export function FromName(this: globalThis.Enum, name: string): globalThis.Enum.KeyInterpolationMode | undefined;
        export function FromValue(this: globalThis.Enum, value: number): globalThis.Enum.KeyInterpolationMode | undefined;
    }
    export type KeyInterpolationMode = KeyInterpolationMode.Constant | KeyInterpolationMode.Linear | KeyInterpolationMode.Cubic;
    /**
     * Determines if a filter is 'inclusive' or 'exclusive'.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/KeywordFilterType)
     */
    export namespace KeywordFilterType {
        /**
         * Include the matched content.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/KeywordFilterType#Include)
         */
        export interface Include extends globalThis.EnumItem {
            Name: "Include";
            Value: 0;
            EnumType: typeof globalThis.Enum.KeywordFilterType;
        }
        export const Include: Include;
        /**
         * Exclude the matched content.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/KeywordFilterType#Exclude)
         */
        export interface Exclude extends globalThis.EnumItem {
            Name: "Exclude";
            Value: 1;
            EnumType: typeof globalThis.Enum.KeywordFilterType;
        }
        export const Exclude: Exclude;
        export function GetEnumItems(this: globalThis.Enum): Array<globalThis.Enum.KeywordFilterType>;
        export function FromName(this: globalThis.Enum, name: string): globalThis.Enum.KeywordFilterType | undefined;
        export function FromValue(this: globalThis.Enum, value: number): globalThis.Enum.KeywordFilterType | undefined;
    }
    export type KeywordFilterType = KeywordFilterType.Include | KeywordFilterType.Exclude;
    /**
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/Language)
     */
    export namespace Language {
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/Language#Default)
         */
        export interface Default extends globalThis.EnumItem {
            Name: "Default";
            Value: 0;
            EnumType: typeof globalThis.Enum.Language;
        }
        export const Default: Default;
        export function GetEnumItems(this: globalThis.Enum): Array<globalThis.Enum.Language>;
        export function FromName(this: globalThis.Enum, name: string): globalThis.Enum.Language | undefined;
        export function FromValue(this: globalThis.Enum, value: number): globalThis.Enum.Language | undefined;
    }
    export type Language = Language.Default;
    /**
     * The LeftRight Enum is used to set where the object is on the side of its parent.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/LeftRight)
     */
    export namespace LeftRight {
        /**
         * The object is on the left side of its parent (**X** axis).
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/LeftRight#Left)
         */
        export interface Left extends globalThis.EnumItem {
            Name: "Left";
            Value: 0;
            EnumType: typeof globalThis.Enum.LeftRight;
        }
        export const Left: Left;
        /**
         * The object is centered on the center of its parent (**X** axis), expanding equally to the left and right of the parent's center.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/LeftRight#Center)
         */
        export interface Center extends globalThis.EnumItem {
            Name: "Center";
            Value: 1;
            EnumType: typeof globalThis.Enum.LeftRight;
        }
        export const Center: Center;
        /**
         * The object is on the right side of its parent (**X** axis).
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/LeftRight#Right)
         */
        export interface Right extends globalThis.EnumItem {
            Name: "Right";
            Value: 2;
            EnumType: typeof globalThis.Enum.LeftRight;
        }
        export const Right: Right;
        export function GetEnumItems(this: globalThis.Enum): Array<globalThis.Enum.LeftRight>;
        export function FromName(this: globalThis.Enum, name: string): globalThis.Enum.LeftRight | undefined;
        export function FromValue(this: globalThis.Enum, value: number): globalThis.Enum.LeftRight | undefined;
    }
    export type LeftRight = LeftRight.Left | LeftRight.Center | LeftRight.Right;
    /**
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/LexemeType)
     */
    export namespace LexemeType {
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/LexemeType#Eof)
         */
        export interface Eof extends globalThis.EnumItem {
            Name: "Eof";
            Value: 0;
            EnumType: typeof globalThis.Enum.LexemeType;
        }
        export const Eof: Eof;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/LexemeType#Name)
         */
        export interface Name extends globalThis.EnumItem {
            Name: "Name";
            Value: 1;
            EnumType: typeof globalThis.Enum.LexemeType;
        }
        export const Name: Name;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/LexemeType#QuotedString)
         */
        export interface QuotedString extends globalThis.EnumItem {
            Name: "QuotedString";
            Value: 2;
            EnumType: typeof globalThis.Enum.LexemeType;
        }
        export const QuotedString: QuotedString;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/LexemeType#Number)
         */
        export interface Number extends globalThis.EnumItem {
            Name: "Number";
            Value: 3;
            EnumType: typeof globalThis.Enum.LexemeType;
        }
        export const Number: Number;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/LexemeType#And)
         */
        export interface And extends globalThis.EnumItem {
            Name: "And";
            Value: 4;
            EnumType: typeof globalThis.Enum.LexemeType;
        }
        export const And: And;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/LexemeType#Or)
         */
        export interface Or extends globalThis.EnumItem {
            Name: "Or";
            Value: 5;
            EnumType: typeof globalThis.Enum.LexemeType;
        }
        export const Or: Or;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/LexemeType#Equal)
         */
        export interface Equal extends globalThis.EnumItem {
            Name: "Equal";
            Value: 6;
            EnumType: typeof globalThis.Enum.LexemeType;
        }
        export const Equal: Equal;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/LexemeType#TildeEqual)
         */
        export interface TildeEqual extends globalThis.EnumItem {
            Name: "TildeEqual";
            Value: 7;
            EnumType: typeof globalThis.Enum.LexemeType;
        }
        export const TildeEqual: TildeEqual;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/LexemeType#GreaterThan)
         */
        export interface GreaterThan extends globalThis.EnumItem {
            Name: "GreaterThan";
            Value: 8;
            EnumType: typeof globalThis.Enum.LexemeType;
        }
        export const GreaterThan: GreaterThan;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/LexemeType#GreaterThanEqual)
         */
        export interface GreaterThanEqual extends globalThis.EnumItem {
            Name: "GreaterThanEqual";
            Value: 9;
            EnumType: typeof globalThis.Enum.LexemeType;
        }
        export const GreaterThanEqual: GreaterThanEqual;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/LexemeType#LessThan)
         */
        export interface LessThan extends globalThis.EnumItem {
            Name: "LessThan";
            Value: 10;
            EnumType: typeof globalThis.Enum.LexemeType;
        }
        export const LessThan: LessThan;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/LexemeType#LessThanEqual)
         */
        export interface LessThanEqual extends globalThis.EnumItem {
            Name: "LessThanEqual";
            Value: 11;
            EnumType: typeof globalThis.Enum.LexemeType;
        }
        export const LessThanEqual: LessThanEqual;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/LexemeType#Colon)
         */
        export interface Colon extends globalThis.EnumItem {
            Name: "Colon";
            Value: 12;
            EnumType: typeof globalThis.Enum.LexemeType;
        }
        export const Colon: Colon;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/LexemeType#Dot)
         */
        export interface Dot extends globalThis.EnumItem {
            Name: "Dot";
            Value: 13;
            EnumType: typeof globalThis.Enum.LexemeType;
        }
        export const Dot: Dot;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/LexemeType#LeftParenthesis)
         */
        export interface LeftParenthesis extends globalThis.EnumItem {
            Name: "LeftParenthesis";
            Value: 14;
            EnumType: typeof globalThis.Enum.LexemeType;
        }
        export const LeftParenthesis: LeftParenthesis;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/LexemeType#RightParenthesis)
         */
        export interface RightParenthesis extends globalThis.EnumItem {
            Name: "RightParenthesis";
            Value: 15;
            EnumType: typeof globalThis.Enum.LexemeType;
        }
        export const RightParenthesis: RightParenthesis;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/LexemeType#Star)
         */
        export interface Star extends globalThis.EnumItem {
            Name: "Star";
            Value: 16;
            EnumType: typeof globalThis.Enum.LexemeType;
        }
        export const Star: Star;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/LexemeType#DoubleStar)
         */
        export interface DoubleStar extends globalThis.EnumItem {
            Name: "DoubleStar";
            Value: 17;
            EnumType: typeof globalThis.Enum.LexemeType;
        }
        export const DoubleStar: DoubleStar;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/LexemeType#ReservedSpecial)
         */
        export interface ReservedSpecial extends globalThis.EnumItem {
            Name: "ReservedSpecial";
            Value: 18;
            EnumType: typeof globalThis.Enum.LexemeType;
        }
        export const ReservedSpecial: ReservedSpecial;
        export function GetEnumItems(this: globalThis.Enum): Array<globalThis.Enum.LexemeType>;
        export function FromName(this: globalThis.Enum, name: string): globalThis.Enum.LexemeType | undefined;
        export function FromValue(this: globalThis.Enum, value: number): globalThis.Enum.LexemeType | undefined;
    }
    export type LexemeType = LexemeType.Eof | LexemeType.Name | LexemeType.QuotedString | LexemeType.Number | LexemeType.And | LexemeType.Or | LexemeType.Equal | LexemeType.TildeEqual | LexemeType.GreaterThan | LexemeType.GreaterThanEqual | LexemeType.LessThan | LexemeType.LessThanEqual | LexemeType.Colon | LexemeType.Dot | LexemeType.LeftParenthesis | LexemeType.RightParenthesis | LexemeType.Star | LexemeType.DoubleStar | LexemeType.ReservedSpecial;
    /**
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/LightingStyle)
     */
    export namespace LightingStyle {
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/LightingStyle#Realistic)
         */
        export interface Realistic extends globalThis.EnumItem {
            Name: "Realistic";
            Value: 0;
            EnumType: typeof globalThis.Enum.LightingStyle;
        }
        export const Realistic: Realistic;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/LightingStyle#Soft)
         */
        export interface Soft extends globalThis.EnumItem {
            Name: "Soft";
            Value: 1;
            EnumType: typeof globalThis.Enum.LightingStyle;
        }
        export const Soft: Soft;
        export function GetEnumItems(this: globalThis.Enum): Array<globalThis.Enum.LightingStyle>;
        export function FromName(this: globalThis.Enum, name: string): globalThis.Enum.LightingStyle | undefined;
        export function FromValue(this: globalThis.Enum, value: number): globalThis.Enum.LightingStyle | undefined;
    }
    export type LightingStyle = LightingStyle.Realistic | LightingStyle.Soft;
    /**
     * Describes which limb a particular Instance belongs to (assuming the Instance is part of a Humanoid).
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/Limb)
     */
    export namespace Limb {
        /**
         * If the limb is a part of the Humanoid's Head.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/Limb#Head)
         */
        export interface Head extends globalThis.EnumItem {
            Name: "Head";
            Value: 0;
            EnumType: typeof globalThis.Enum.Limb;
        }
        export const Head: Head;
        /**
         * If the limb is a part of the Humanoid's Torso. This includes UpperTorso and LowerTorso for R15 rigs.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/Limb#Torso)
         */
        export interface Torso extends globalThis.EnumItem {
            Name: "Torso";
            Value: 1;
            EnumType: typeof globalThis.Enum.Limb;
        }
        export const Torso: Torso;
        /**
         * If the limb is a part of the Humanoid's Left Arm. This includes UpperLeftArm, LowerLeftArm, and LeftHand for R15 rigs.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/Limb#LeftArm)
         */
        export interface LeftArm extends globalThis.EnumItem {
            Name: "LeftArm";
            Value: 2;
            EnumType: typeof globalThis.Enum.Limb;
        }
        export const LeftArm: LeftArm;
        /**
         * If the limb is a part of the Humanoid's Right Arm. This includes UpperRightArm, LowerRightArm and RightHand for R15 rigs.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/Limb#RightArm)
         */
        export interface RightArm extends globalThis.EnumItem {
            Name: "RightArm";
            Value: 3;
            EnumType: typeof globalThis.Enum.Limb;
        }
        export const RightArm: RightArm;
        /**
         * If the limb is a part of the Humanoid's Left Leg. This includes UpperLeftLeg, LowerLeftLeg and LeftFoot for R15 rigs.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/Limb#LeftLeg)
         */
        export interface LeftLeg extends globalThis.EnumItem {
            Name: "LeftLeg";
            Value: 4;
            EnumType: typeof globalThis.Enum.Limb;
        }
        export const LeftLeg: LeftLeg;
        /**
         * If the limb is a part of the Humanoid's Right Leg. This includes UpperRightLeg, LowerRightLeg, and RightFoot for R15 rigs.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/Limb#RightLeg)
         */
        export interface RightLeg extends globalThis.EnumItem {
            Name: "RightLeg";
            Value: 5;
            EnumType: typeof globalThis.Enum.Limb;
        }
        export const RightLeg: RightLeg;
        /**
         * If a part is not a limb (e.g. running the `Humanoid:GetLimb()` function and passing it an accessory which is a sibling of the Humanoid will return this value).
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/Limb#Unknown)
         */
        export interface Unknown extends globalThis.EnumItem {
            Name: "Unknown";
            Value: 6;
            EnumType: typeof globalThis.Enum.Limb;
        }
        export const Unknown: Unknown;
        export function GetEnumItems(this: globalThis.Enum): Array<globalThis.Enum.Limb>;
        export function FromName(this: globalThis.Enum, name: string): globalThis.Enum.Limb | undefined;
        export function FromValue(this: globalThis.Enum, value: number): globalThis.Enum.Limb | undefined;
    }
    export type Limb = Limb.Head | Limb.Torso | Limb.LeftArm | Limb.RightArm | Limb.LeftLeg | Limb.RightLeg | Limb.Unknown;
    /**
     * This enum is used by `UIStroke.LineJoinMode` to determine how corners are interpreted.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/LineJoinMode)
     */
    export namespace LineJoinMode {
        /**
         * The corners are rounded (see image above).
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/LineJoinMode#Round)
         */
        export interface Round extends globalThis.EnumItem {
            Name: "Round";
            Value: 0;
            EnumType: typeof globalThis.Enum.LineJoinMode;
        }
        export const Round: Round;
        /**
         * The corners are beveled (see image above).
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/LineJoinMode#Bevel)
         */
        export interface Bevel extends globalThis.EnumItem {
            Name: "Bevel";
            Value: 1;
            EnumType: typeof globalThis.Enum.LineJoinMode;
        }
        export const Bevel: Bevel;
        /**
         * The corners are mitered (see image above).
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/LineJoinMode#Miter)
         */
        export interface Miter extends globalThis.EnumItem {
            Name: "Miter";
            Value: 2;
            EnumType: typeof globalThis.Enum.LineJoinMode;
        }
        export const Miter: Miter;
        export function GetEnumItems(this: globalThis.Enum): Array<globalThis.Enum.LineJoinMode>;
        export function FromName(this: globalThis.Enum, name: string): globalThis.Enum.LineJoinMode | undefined;
        export function FromValue(this: globalThis.Enum, value: number): globalThis.Enum.LineJoinMode | undefined;
    }
    export type LineJoinMode = LineJoinMode.Round | LineJoinMode.Bevel | LineJoinMode.Miter;
    /**
     * Used to set the scrolling mode of the Advanced Objects tab.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/ListDisplayMode)
     */
    export namespace ListDisplayMode {
        /**
         * Scrolling along the X-axis (fixed Y-Axis).
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/ListDisplayMode#Horizontal)
         */
        export interface Horizontal extends globalThis.EnumItem {
            Name: "Horizontal";
            Value: 0;
            EnumType: typeof globalThis.Enum.ListDisplayMode;
        }
        export const Horizontal: Horizontal;
        /**
         * Scrolling along the Y-axis (fixed X-Axis).
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/ListDisplayMode#Vertical)
         */
        export interface Vertical extends globalThis.EnumItem {
            Name: "Vertical";
            Value: 1;
            EnumType: typeof globalThis.Enum.ListDisplayMode;
        }
        export const Vertical: Vertical;
        export function GetEnumItems(this: globalThis.Enum): Array<globalThis.Enum.ListDisplayMode>;
        export function FromName(this: globalThis.Enum, name: string): globalThis.Enum.ListDisplayMode | undefined;
        export function FromValue(this: globalThis.Enum, value: number): globalThis.Enum.ListDisplayMode | undefined;
    }
    export type ListDisplayMode = ListDisplayMode.Horizontal | ListDisplayMode.Vertical;
    /**
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/ListenerLocation)
     */
    export namespace ListenerLocation {
        /**
         * An `AudioListener` will be created and parented to `Workspace.CurrentCamera` in experiences that enable voice chat.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/ListenerLocation#Default)
         */
        export interface Default extends globalThis.EnumItem {
            Name: "Default";
            Value: 0;
            EnumType: typeof globalThis.Enum.ListenerLocation;
        }
        export const Default: Default;
        /**
         * No `AudioListeners` will be spawned by default.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/ListenerLocation#None)
         */
        export interface None extends globalThis.EnumItem {
            Name: "None";
            Value: 1;
            EnumType: typeof globalThis.Enum.ListenerLocation;
        }
        export const None: None;
        /**
         * An `AudioListener` will be created and attached to the local player's `Player.Character`.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/ListenerLocation#Character)
         */
        export interface Character extends globalThis.EnumItem {
            Name: "Character";
            Value: 2;
            EnumType: typeof globalThis.Enum.ListenerLocation;
        }
        export const Character: Character;
        /**
         * An `AudioListener` will be created and parented to `Workspace.CurrentCamera`.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/ListenerLocation#Camera)
         */
        export interface Camera extends globalThis.EnumItem {
            Name: "Camera";
            Value: 3;
            EnumType: typeof globalThis.Enum.ListenerLocation;
        }
        export const Camera: Camera;
        export function GetEnumItems(this: globalThis.Enum): Array<globalThis.Enum.ListenerLocation>;
        export function FromName(this: globalThis.Enum, name: string): globalThis.Enum.ListenerLocation | undefined;
        export function FromValue(this: globalThis.Enum, value: number): globalThis.Enum.ListenerLocation | undefined;
    }
    export type ListenerLocation = ListenerLocation.Default | ListenerLocation.None | ListenerLocation.Character | ListenerLocation.Camera;
    /**
     * Defines where and how the listener is positioned when picking up spatial audio.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/ListenerType)
     */
    export namespace ListenerType {
        /**
         * Uses the world CFrame of `CurrentCamera`.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/ListenerType#Camera)
         */
        export interface Camera extends globalThis.EnumItem {
            Name: "Camera";
            Value: 0;
            EnumType: typeof globalThis.Enum.ListenerType;
        }
        export const Camera: Camera;
        /**
         * Uses a specified world CFrame.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/ListenerType#CFrame)
         */
        export interface CFrame extends globalThis.EnumItem {
            Name: "CFrame";
            Value: 1;
            EnumType: typeof globalThis.Enum.ListenerType;
        }
        export const CFrame: CFrame;
        /**
         * Uses the world position of an instance and the rotation of `CurrentCamera`.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/ListenerType#ObjectPosition)
         */
        export interface ObjectPosition extends globalThis.EnumItem {
            Name: "ObjectPosition";
            Value: 2;
            EnumType: typeof globalThis.Enum.ListenerType;
        }
        export const ObjectPosition: ObjectPosition;
        /**
         * Uses the world CFrame from an instance.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/ListenerType#ObjectCFrame)
         */
        export interface ObjectCFrame extends globalThis.EnumItem {
            Name: "ObjectCFrame";
            Value: 3;
            EnumType: typeof globalThis.Enum.ListenerType;
        }
        export const ObjectCFrame: ObjectCFrame;
        export function GetEnumItems(this: globalThis.Enum): Array<globalThis.Enum.ListenerType>;
        export function FromName(this: globalThis.Enum, name: string): globalThis.Enum.ListenerType | undefined;
        export function FromValue(this: globalThis.Enum, value: number): globalThis.Enum.ListenerType | undefined;
    }
    export type ListenerType = ListenerType.Camera | ListenerType.CFrame | ListenerType.ObjectPosition | ListenerType.ObjectCFrame;
    /**
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/LiveEditingAtomicUpdateResponse)
     */
    export namespace LiveEditingAtomicUpdateResponse {
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/LiveEditingAtomicUpdateResponse#Success)
         */
        export interface Success extends globalThis.EnumItem {
            Name: "Success";
            Value: 0;
            EnumType: typeof globalThis.Enum.LiveEditingAtomicUpdateResponse;
        }
        export const Success: Success;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/LiveEditingAtomicUpdateResponse#FailureGuidNotFound)
         */
        export interface FailureGuidNotFound extends globalThis.EnumItem {
            Name: "FailureGuidNotFound";
            Value: 1;
            EnumType: typeof globalThis.Enum.LiveEditingAtomicUpdateResponse;
        }
        export const FailureGuidNotFound: FailureGuidNotFound;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/LiveEditingAtomicUpdateResponse#FailureHashMismatch)
         */
        export interface FailureHashMismatch extends globalThis.EnumItem {
            Name: "FailureHashMismatch";
            Value: 2;
            EnumType: typeof globalThis.Enum.LiveEditingAtomicUpdateResponse;
        }
        export const FailureHashMismatch: FailureHashMismatch;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/LiveEditingAtomicUpdateResponse#FailureOperationIllegal)
         */
        export interface FailureOperationIllegal extends globalThis.EnumItem {
            Name: "FailureOperationIllegal";
            Value: 3;
            EnumType: typeof globalThis.Enum.LiveEditingAtomicUpdateResponse;
        }
        export const FailureOperationIllegal: FailureOperationIllegal;
        export function GetEnumItems(this: globalThis.Enum): Array<globalThis.Enum.LiveEditingAtomicUpdateResponse>;
        export function FromName(this: globalThis.Enum, name: string): globalThis.Enum.LiveEditingAtomicUpdateResponse | undefined;
        export function FromValue(this: globalThis.Enum, value: number): globalThis.Enum.LiveEditingAtomicUpdateResponse | undefined;
    }
    export type LiveEditingAtomicUpdateResponse = LiveEditingAtomicUpdateResponse.Success | LiveEditingAtomicUpdateResponse.FailureGuidNotFound | LiveEditingAtomicUpdateResponse.FailureHashMismatch | LiveEditingAtomicUpdateResponse.FailureOperationIllegal;
    /**
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/LiveEditingBroadcastMessageType)
     */
    export namespace LiveEditingBroadcastMessageType {
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/LiveEditingBroadcastMessageType#Normal)
         */
        export interface Normal extends globalThis.EnumItem {
            Name: "Normal";
            Value: 0;
            EnumType: typeof globalThis.Enum.LiveEditingBroadcastMessageType;
        }
        export const Normal: Normal;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/LiveEditingBroadcastMessageType#Warning)
         */
        export interface Warning extends globalThis.EnumItem {
            Name: "Warning";
            Value: 1;
            EnumType: typeof globalThis.Enum.LiveEditingBroadcastMessageType;
        }
        export const Warning: Warning;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/LiveEditingBroadcastMessageType#Error)
         */
        export interface Error extends globalThis.EnumItem {
            Name: "Error";
            Value: 2;
            EnumType: typeof globalThis.Enum.LiveEditingBroadcastMessageType;
        }
        export const Error: Error;
        export function GetEnumItems(this: globalThis.Enum): Array<globalThis.Enum.LiveEditingBroadcastMessageType>;
        export function FromName(this: globalThis.Enum, name: string): globalThis.Enum.LiveEditingBroadcastMessageType | undefined;
        export function FromValue(this: globalThis.Enum, value: number): globalThis.Enum.LiveEditingBroadcastMessageType | undefined;
    }
    export type LiveEditingBroadcastMessageType = LiveEditingBroadcastMessageType.Normal | LiveEditingBroadcastMessageType.Warning | LiveEditingBroadcastMessageType.Error;
    /**
     * Indicates whether characters spawning into an experience will have layered clothing accessories equipped on them.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/LoadCharacterLayeredClothing)
     */
    export namespace LoadCharacterLayeredClothing {
        /**
         * The behavior of the default setting is not constant. It can mean Disabled or Enabled depending on what the global back-end flag settings are currently.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/LoadCharacterLayeredClothing#Default)
         */
        export interface Default extends globalThis.EnumItem {
            Name: "Default";
            Value: 0;
            EnumType: typeof globalThis.Enum.LoadCharacterLayeredClothing;
        }
        export const Default: Default;
        /**
         * This means layered clothing will not be equipped on characters in the experience.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/LoadCharacterLayeredClothing#Disabled)
         */
        export interface Disabled extends globalThis.EnumItem {
            Name: "Disabled";
            Value: 1;
            EnumType: typeof globalThis.Enum.LoadCharacterLayeredClothing;
        }
        export const Disabled: Disabled;
        /**
         * This means layered clothing will be equipped on characters in the experience (Although `MeshPartHeadsAndAccessories` also need to be enabled for the experience).
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/LoadCharacterLayeredClothing#Enabled)
         */
        export interface Enabled extends globalThis.EnumItem {
            Name: "Enabled";
            Value: 2;
            EnumType: typeof globalThis.Enum.LoadCharacterLayeredClothing;
        }
        export const Enabled: Enabled;
        export function GetEnumItems(this: globalThis.Enum): Array<globalThis.Enum.LoadCharacterLayeredClothing>;
        export function FromName(this: globalThis.Enum, name: string): globalThis.Enum.LoadCharacterLayeredClothing | undefined;
        export function FromValue(this: globalThis.Enum, value: number): globalThis.Enum.LoadCharacterLayeredClothing | undefined;
    }
    export type LoadCharacterLayeredClothing = LoadCharacterLayeredClothing.Default | LoadCharacterLayeredClothing.Disabled | LoadCharacterLayeredClothing.Enabled;
    /**
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/LoadDynamicHeads)
     */
    export namespace LoadDynamicHeads {
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/LoadDynamicHeads#Default)
         */
        export interface Default extends globalThis.EnumItem {
            Name: "Default";
            Value: 0;
            EnumType: typeof globalThis.Enum.LoadDynamicHeads;
        }
        export const Default: Default;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/LoadDynamicHeads#Disabled)
         */
        export interface Disabled extends globalThis.EnumItem {
            Name: "Disabled";
            Value: 1;
            EnumType: typeof globalThis.Enum.LoadDynamicHeads;
        }
        export const Disabled: Disabled;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/LoadDynamicHeads#Enabled)
         */
        export interface Enabled extends globalThis.EnumItem {
            Name: "Enabled";
            Value: 2;
            EnumType: typeof globalThis.Enum.LoadDynamicHeads;
        }
        export const Enabled: Enabled;
        export function GetEnumItems(this: globalThis.Enum): Array<globalThis.Enum.LoadDynamicHeads>;
        export function FromName(this: globalThis.Enum, name: string): globalThis.Enum.LoadDynamicHeads | undefined;
        export function FromValue(this: globalThis.Enum, value: number): globalThis.Enum.LoadDynamicHeads | undefined;
    }
    export type LoadDynamicHeads = LoadDynamicHeads.Default | LoadDynamicHeads.Disabled | LoadDynamicHeads.Enabled;
    /**
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/LocationType)
     */
    export namespace LocationType {
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/LocationType#Character)
         */
        export interface Character extends globalThis.EnumItem {
            Name: "Character";
            Value: 0;
            EnumType: typeof globalThis.Enum.LocationType;
        }
        export const Character: Character;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/LocationType#Camera)
         */
        export interface Camera extends globalThis.EnumItem {
            Name: "Camera";
            Value: 1;
            EnumType: typeof globalThis.Enum.LocationType;
        }
        export const Camera: Camera;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/LocationType#ObjectPosition)
         */
        export interface ObjectPosition extends globalThis.EnumItem {
            Name: "ObjectPosition";
            Value: 2;
            EnumType: typeof globalThis.Enum.LocationType;
        }
        export const ObjectPosition: ObjectPosition;
        export function GetEnumItems(this: globalThis.Enum): Array<globalThis.Enum.LocationType>;
        export function FromName(this: globalThis.Enum, name: string): globalThis.Enum.LocationType | undefined;
        export function FromValue(this: globalThis.Enum, value: number): globalThis.Enum.LocationType | undefined;
    }
    export type LocationType = LocationType.Character | LocationType.Camera | LocationType.ObjectPosition;
    /**
     * The status of the BulkPurchasePrompt after player interaction.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/MarketplaceBulkPurchasePromptStatus)
     */
    export namespace MarketplaceBulkPurchasePromptStatus {
        /**
         * User confirmed the purchase and the transaction has been processed.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/MarketplaceBulkPurchasePromptStatus#Completed)
         */
        export interface Completed extends globalThis.EnumItem {
            Name: "Completed";
            Value: 1;
            EnumType: typeof globalThis.Enum.MarketplaceBulkPurchasePromptStatus;
        }
        export const Completed: Completed;
        /**
         * User closed the prompt.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/MarketplaceBulkPurchasePromptStatus#Aborted)
         */
        export interface Aborted extends globalThis.EnumItem {
            Name: "Aborted";
            Value: 2;
            EnumType: typeof globalThis.Enum.MarketplaceBulkPurchasePromptStatus;
        }
        export const Aborted: Aborted;
        /**
         * User confirmed the purchase, but the transaction cannot be sent to the backend for processing.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/MarketplaceBulkPurchasePromptStatus#Error)
         */
        export interface Error extends globalThis.EnumItem {
            Name: "Error";
            Value: 3;
            EnumType: typeof globalThis.Enum.MarketplaceBulkPurchasePromptStatus;
        }
        export const Error: Error;
        export function GetEnumItems(this: globalThis.Enum): Array<globalThis.Enum.MarketplaceBulkPurchasePromptStatus>;
        export function FromName(this: globalThis.Enum, name: string): globalThis.Enum.MarketplaceBulkPurchasePromptStatus | undefined;
        export function FromValue(this: globalThis.Enum, value: number): globalThis.Enum.MarketplaceBulkPurchasePromptStatus | undefined;
    }
    export type MarketplaceBulkPurchasePromptStatus = MarketplaceBulkPurchasePromptStatus.Completed | MarketplaceBulkPurchasePromptStatus.Aborted | MarketplaceBulkPurchasePromptStatus.Error;
    /**
     * The status of the item purchase through MarketplaceService.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/MarketplaceItemPurchaseStatus)
     */
    export namespace MarketplaceItemPurchaseStatus {
        /**
         * The item is purchased successfully.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/MarketplaceItemPurchaseStatus#Success)
         */
        export interface Success extends globalThis.EnumItem {
            Name: "Success";
            Value: 1;
            EnumType: typeof globalThis.Enum.MarketplaceItemPurchaseStatus;
        }
        export const Success: Success;
        /**
         * Unable to purchase item due to Roblox system error.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/MarketplaceItemPurchaseStatus#SystemError)
         */
        export interface SystemError extends globalThis.EnumItem {
            Name: "SystemError";
            Value: 2;
            EnumType: typeof globalThis.Enum.MarketplaceItemPurchaseStatus;
        }
        export const SystemError: SystemError;
        /**
         * Unable to purchase item because user already owns the item. Users can only own one copy of non-limited item.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/MarketplaceItemPurchaseStatus#AlreadyOwned)
         */
        export interface AlreadyOwned extends globalThis.EnumItem {
            Name: "AlreadyOwned";
            Value: 3;
            EnumType: typeof globalThis.Enum.MarketplaceItemPurchaseStatus;
        }
        export const AlreadyOwned: AlreadyOwned;
        /**
         * Unable to purchase item because of insufficient Robux.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/MarketplaceItemPurchaseStatus#InsufficientRobux)
         */
        export interface InsufficientRobux extends globalThis.EnumItem {
            Name: "InsufficientRobux";
            Value: 4;
            EnumType: typeof globalThis.Enum.MarketplaceItemPurchaseStatus;
        }
        export const InsufficientRobux: InsufficientRobux;
        /**
         * User has reached the max quantity allowed per user set by the creator for limited items.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/MarketplaceItemPurchaseStatus#QuantityLimitExceeded)
         */
        export interface QuantityLimitExceeded extends globalThis.EnumItem {
            Name: "QuantityLimitExceeded";
            Value: 5;
            EnumType: typeof globalThis.Enum.MarketplaceItemPurchaseStatus;
        }
        export const QuantityLimitExceeded: QuantityLimitExceeded;
        /**
         * The user has exceeded our [purchase request limit](../../../marketplace/marketplace-fees-and-commissions.md#rate-limits).
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/MarketplaceItemPurchaseStatus#QuotaExceeded)
         */
        export interface QuotaExceeded extends globalThis.EnumItem {
            Name: "QuotaExceeded";
            Value: 6;
            EnumType: typeof globalThis.Enum.MarketplaceItemPurchaseStatus;
        }
        export const QuotaExceeded: QuotaExceeded;
        /**
         * Item is not for sale.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/MarketplaceItemPurchaseStatus#NotForSale)
         */
        export interface NotForSale extends globalThis.EnumItem {
            Name: "NotForSale";
            Value: 7;
            EnumType: typeof globalThis.Enum.MarketplaceItemPurchaseStatus;
        }
        export const NotForSale: NotForSale;
        /**
         * This item is restricted to a group of users and the purchaser is not in this group.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/MarketplaceItemPurchaseStatus#NotAvailableForPurchaser)
         */
        export interface NotAvailableForPurchaser extends globalThis.EnumItem {
            Name: "NotAvailableForPurchaser";
            Value: 8;
            EnumType: typeof globalThis.Enum.MarketplaceItemPurchaseStatus;
        }
        export const NotAvailableForPurchaser: NotAvailableForPurchaser;
        /**
         * The provided price does not match the item price. Most likely the price changed since displayed to the user.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/MarketplaceItemPurchaseStatus#PriceMismatch)
         */
        export interface PriceMismatch extends globalThis.EnumItem {
            Name: "PriceMismatch";
            Value: 9;
            EnumType: typeof globalThis.Enum.MarketplaceItemPurchaseStatus;
        }
        export const PriceMismatch: PriceMismatch;
        /**
         * The item is sold out.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/MarketplaceItemPurchaseStatus#SoldOut)
         */
        export interface SoldOut extends globalThis.EnumItem {
            Name: "SoldOut";
            Value: 10;
            EnumType: typeof globalThis.Enum.MarketplaceItemPurchaseStatus;
        }
        export const SoldOut: SoldOut;
        /**
         * The purchaser is the same user as the seller, for a resale purchase.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/MarketplaceItemPurchaseStatus#PurchaserIsSeller)
         */
        export interface PurchaserIsSeller extends globalThis.EnumItem {
            Name: "PurchaserIsSeller";
            Value: 11;
            EnumType: typeof globalThis.Enum.MarketplaceItemPurchaseStatus;
        }
        export const PurchaserIsSeller: PurchaserIsSeller;
        /**
         * The user does not have sufficient premium membership to purchase this item.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/MarketplaceItemPurchaseStatus#InsufficientMembership)
         */
        export interface InsufficientMembership extends globalThis.EnumItem {
            Name: "InsufficientMembership";
            Value: 12;
            EnumType: typeof globalThis.Enum.MarketplaceItemPurchaseStatus;
        }
        export const InsufficientMembership: InsufficientMembership;
        /**
         * The item is not allowed to be sold in the place.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/MarketplaceItemPurchaseStatus#PlaceInvalid)
         */
        export interface PlaceInvalid extends globalThis.EnumItem {
            Name: "PlaceInvalid";
            Value: 13;
            EnumType: typeof globalThis.Enum.MarketplaceItemPurchaseStatus;
        }
        export const PlaceInvalid: PlaceInvalid;
        export function GetEnumItems(this: globalThis.Enum): Array<globalThis.Enum.MarketplaceItemPurchaseStatus>;
        export function FromName(this: globalThis.Enum, name: string): globalThis.Enum.MarketplaceItemPurchaseStatus | undefined;
        export function FromValue(this: globalThis.Enum, value: number): globalThis.Enum.MarketplaceItemPurchaseStatus | undefined;
    }
    export type MarketplaceItemPurchaseStatus = MarketplaceItemPurchaseStatus.Success | MarketplaceItemPurchaseStatus.SystemError | MarketplaceItemPurchaseStatus.AlreadyOwned | MarketplaceItemPurchaseStatus.InsufficientRobux | MarketplaceItemPurchaseStatus.QuantityLimitExceeded | MarketplaceItemPurchaseStatus.QuotaExceeded | MarketplaceItemPurchaseStatus.NotForSale | MarketplaceItemPurchaseStatus.NotAvailableForPurchaser | MarketplaceItemPurchaseStatus.PriceMismatch | MarketplaceItemPurchaseStatus.SoldOut | MarketplaceItemPurchaseStatus.PurchaserIsSeller | MarketplaceItemPurchaseStatus.InsufficientMembership | MarketplaceItemPurchaseStatus.PlaceInvalid;
    /**
     * Indicates if an avatar item is an asset or bundle. Used with MarketplaceService and similar services.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/MarketplaceProductType)
     */
    export namespace MarketplaceProductType {
        /**
         * Avatar asset
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/MarketplaceProductType#AvatarAsset)
         */
        export interface AvatarAsset extends globalThis.EnumItem {
            Name: "AvatarAsset";
            Value: 1;
            EnumType: typeof globalThis.Enum.MarketplaceProductType;
        }
        export const AvatarAsset: AvatarAsset;
        /**
         * Avatar bundle
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/MarketplaceProductType#AvatarBundle)
         */
        export interface AvatarBundle extends globalThis.EnumItem {
            Name: "AvatarBundle";
            Value: 2;
            EnumType: typeof globalThis.Enum.MarketplaceProductType;
        }
        export const AvatarBundle: AvatarBundle;
        export function GetEnumItems(this: globalThis.Enum): Array<globalThis.Enum.MarketplaceProductType>;
        export function FromName(this: globalThis.Enum, name: string): globalThis.Enum.MarketplaceProductType | undefined;
        export function FromValue(this: globalThis.Enum, value: number): globalThis.Enum.MarketplaceProductType | undefined;
    }
    export type MarketplaceProductType = MarketplaceProductType.AvatarAsset | MarketplaceProductType.AvatarBundle;
    /**
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/MarkupKind)
     */
    export namespace MarkupKind {
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/MarkupKind#PlainText)
         */
        export interface PlainText extends globalThis.EnumItem {
            Name: "PlainText";
            Value: 0;
            EnumType: typeof globalThis.Enum.MarkupKind;
        }
        export const PlainText: PlainText;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/MarkupKind#Markdown)
         */
        export interface Markdown extends globalThis.EnumItem {
            Name: "Markdown";
            Value: 1;
            EnumType: typeof globalThis.Enum.MarkupKind;
        }
        export const Markdown: Markdown;
        export function GetEnumItems(this: globalThis.Enum): Array<globalThis.Enum.MarkupKind>;
        export function FromName(this: globalThis.Enum, name: string): globalThis.Enum.MarkupKind | undefined;
        export function FromValue(this: globalThis.Enum, value: number): globalThis.Enum.MarkupKind | undefined;
    }
    export type MarkupKind = MarkupKind.PlainText | MarkupKind.Markdown;
    /**
     * Materials used for parts and/or terrain.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/Material)
     */
    export namespace Material {
        /**
         * Applies to `BasePart` only.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/Material#Plastic)
         */
        export interface Plastic extends globalThis.EnumItem {
            Name: "Plastic";
            Value: 256;
            EnumType: typeof globalThis.Enum.Material;
        }
        export const Plastic: Plastic;
        /**
         * Applies to `BasePart` only.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/Material#SmoothPlastic)
         */
        export interface SmoothPlastic extends globalThis.EnumItem {
            Name: "SmoothPlastic";
            Value: 272;
            EnumType: typeof globalThis.Enum.Material;
        }
        export const SmoothPlastic: SmoothPlastic;
        /**
         * Applies to `BasePart` only.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/Material#Neon)
         */
        export interface Neon extends globalThis.EnumItem {
            Name: "Neon";
            Value: 288;
            EnumType: typeof globalThis.Enum.Material;
        }
        export const Neon: Neon;
        /**
         * Applies to `BasePart` only.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/Material#Wood)
         */
        export interface Wood extends globalThis.EnumItem {
            Name: "Wood";
            Value: 512;
            EnumType: typeof globalThis.Enum.Material;
        }
        export const Wood: Wood;
        /**
         * Applies to `BasePart` and `Terrain`.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/Material#WoodPlanks)
         */
        export interface WoodPlanks extends globalThis.EnumItem {
            Name: "WoodPlanks";
            Value: 528;
            EnumType: typeof globalThis.Enum.Material;
        }
        export const WoodPlanks: WoodPlanks;
        /**
         * Applies to `BasePart` only.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/Material#Marble)
         */
        export interface Marble extends globalThis.EnumItem {
            Name: "Marble";
            Value: 784;
            EnumType: typeof globalThis.Enum.Material;
        }
        export const Marble: Marble;
        /**
         * Applies to `BasePart` and `Terrain`.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/Material#Slate)
         */
        export interface Slate extends globalThis.EnumItem {
            Name: "Slate";
            Value: 800;
            EnumType: typeof globalThis.Enum.Material;
        }
        export const Slate: Slate;
        /**
         * Applies to `BasePart` and `Terrain`.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/Material#Concrete)
         */
        export interface Concrete extends globalThis.EnumItem {
            Name: "Concrete";
            Value: 816;
            EnumType: typeof globalThis.Enum.Material;
        }
        export const Concrete: Concrete;
        /**
         * Applies to `BasePart` only.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/Material#Granite)
         */
        export interface Granite extends globalThis.EnumItem {
            Name: "Granite";
            Value: 832;
            EnumType: typeof globalThis.Enum.Material;
        }
        export const Granite: Granite;
        /**
         * Applies to `BasePart` and `Terrain`.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/Material#Brick)
         */
        export interface Brick extends globalThis.EnumItem {
            Name: "Brick";
            Value: 848;
            EnumType: typeof globalThis.Enum.Material;
        }
        export const Brick: Brick;
        /**
         * Applies to `BasePart` only.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/Material#Pebble)
         */
        export interface Pebble extends globalThis.EnumItem {
            Name: "Pebble";
            Value: 864;
            EnumType: typeof globalThis.Enum.Material;
        }
        export const Pebble: Pebble;
        /**
         * Applies to `BasePart` and `Terrain`.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/Material#Cobblestone)
         */
        export interface Cobblestone extends globalThis.EnumItem {
            Name: "Cobblestone";
            Value: 880;
            EnumType: typeof globalThis.Enum.Material;
        }
        export const Cobblestone: Cobblestone;
        /**
         * Applies to `BasePart` and `Terrain`.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/Material#Rock)
         */
        export interface Rock extends globalThis.EnumItem {
            Name: "Rock";
            Value: 896;
            EnumType: typeof globalThis.Enum.Material;
        }
        export const Rock: Rock;
        /**
         * Applies to `BasePart` and `Terrain`.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/Material#Sandstone)
         */
        export interface Sandstone extends globalThis.EnumItem {
            Name: "Sandstone";
            Value: 912;
            EnumType: typeof globalThis.Enum.Material;
        }
        export const Sandstone: Sandstone;
        /**
         * Applies to `BasePart` and `Terrain`.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/Material#Basalt)
         */
        export interface Basalt extends globalThis.EnumItem {
            Name: "Basalt";
            Value: 788;
            EnumType: typeof globalThis.Enum.Material;
        }
        export const Basalt: Basalt;
        /**
         * Applies to `BasePart` and `Terrain`.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/Material#CrackedLava)
         */
        export interface CrackedLava extends globalThis.EnumItem {
            Name: "CrackedLava";
            Value: 804;
            EnumType: typeof globalThis.Enum.Material;
        }
        export const CrackedLava: CrackedLava;
        /**
         * Applies to `BasePart` and `Terrain`.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/Material#Limestone)
         */
        export interface Limestone extends globalThis.EnumItem {
            Name: "Limestone";
            Value: 820;
            EnumType: typeof globalThis.Enum.Material;
        }
        export const Limestone: Limestone;
        /**
         * Applies to `BasePart` and `Terrain`.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/Material#Pavement)
         */
        export interface Pavement extends globalThis.EnumItem {
            Name: "Pavement";
            Value: 836;
            EnumType: typeof globalThis.Enum.Material;
        }
        export const Pavement: Pavement;
        /**
         * Applies to `BasePart` and `Terrain`.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/Material#CorrodedMetal)
         */
        export interface CorrodedMetal extends globalThis.EnumItem {
            Name: "CorrodedMetal";
            Value: 1040;
            EnumType: typeof globalThis.Enum.Material;
        }
        export const CorrodedMetal: CorrodedMetal;
        /**
         * Applies to `BasePart` only.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/Material#DiamondPlate)
         */
        export interface DiamondPlate extends globalThis.EnumItem {
            Name: "DiamondPlate";
            Value: 1056;
            EnumType: typeof globalThis.Enum.Material;
        }
        export const DiamondPlate: DiamondPlate;
        /**
         * Applies to `BasePart` only.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/Material#Foil)
         */
        export interface Foil extends globalThis.EnumItem {
            Name: "Foil";
            Value: 1072;
            EnumType: typeof globalThis.Enum.Material;
        }
        export const Foil: Foil;
        /**
         * @deprecated renamed to Foil
         */
        export const Aluminum: Foil;
        /**
         * Applies to `BasePart` only.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/Material#Metal)
         */
        export interface Metal extends globalThis.EnumItem {
            Name: "Metal";
            Value: 1088;
            EnumType: typeof globalThis.Enum.Material;
        }
        export const Metal: Metal;
        /**
         * Applies to `BasePart` and `Terrain`.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/Material#Grass)
         */
        export interface Grass extends globalThis.EnumItem {
            Name: "Grass";
            Value: 1280;
            EnumType: typeof globalThis.Enum.Material;
        }
        export const Grass: Grass;
        /**
         * Applies to `BasePart` and `Terrain`.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/Material#LeafyGrass)
         */
        export interface LeafyGrass extends globalThis.EnumItem {
            Name: "LeafyGrass";
            Value: 1284;
            EnumType: typeof globalThis.Enum.Material;
        }
        export const LeafyGrass: LeafyGrass;
        /**
         * Applies to `BasePart` and `Terrain`.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/Material#Sand)
         */
        export interface Sand extends globalThis.EnumItem {
            Name: "Sand";
            Value: 1296;
            EnumType: typeof globalThis.Enum.Material;
        }
        export const Sand: Sand;
        /**
         * Applies to `BasePart` only.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/Material#Fabric)
         */
        export interface Fabric extends globalThis.EnumItem {
            Name: "Fabric";
            Value: 1312;
            EnumType: typeof globalThis.Enum.Material;
        }
        export const Fabric: Fabric;
        /**
         * Applies to `BasePart` and `Terrain`.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/Material#Snow)
         */
        export interface Snow extends globalThis.EnumItem {
            Name: "Snow";
            Value: 1328;
            EnumType: typeof globalThis.Enum.Material;
        }
        export const Snow: Snow;
        /**
         * Applies to `BasePart` and `Terrain`.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/Material#Mud)
         */
        export interface Mud extends globalThis.EnumItem {
            Name: "Mud";
            Value: 1344;
            EnumType: typeof globalThis.Enum.Material;
        }
        export const Mud: Mud;
        /**
         * Applies to `BasePart` and `Terrain`.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/Material#Ground)
         */
        export interface Ground extends globalThis.EnumItem {
            Name: "Ground";
            Value: 1360;
            EnumType: typeof globalThis.Enum.Material;
        }
        export const Ground: Ground;
        /**
         * Applies to `BasePart` and `Terrain`.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/Material#Asphalt)
         */
        export interface Asphalt extends globalThis.EnumItem {
            Name: "Asphalt";
            Value: 1376;
            EnumType: typeof globalThis.Enum.Material;
        }
        export const Asphalt: Asphalt;
        /**
         * Applies to `BasePart` and `Terrain`.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/Material#Salt)
         */
        export interface Salt extends globalThis.EnumItem {
            Name: "Salt";
            Value: 1392;
            EnumType: typeof globalThis.Enum.Material;
        }
        export const Salt: Salt;
        /**
         * Applies to `BasePart` and `Terrain`.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/Material#Ice)
         */
        export interface Ice extends globalThis.EnumItem {
            Name: "Ice";
            Value: 1536;
            EnumType: typeof globalThis.Enum.Material;
        }
        export const Ice: Ice;
        /**
         * Applies to `BasePart` and `Terrain`.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/Material#Glacier)
         */
        export interface Glacier extends globalThis.EnumItem {
            Name: "Glacier";
            Value: 1552;
            EnumType: typeof globalThis.Enum.Material;
        }
        export const Glacier: Glacier;
        /**
         * Applies to `BasePart` only.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/Material#Glass)
         */
        export interface Glass extends globalThis.EnumItem {
            Name: "Glass";
            Value: 1568;
            EnumType: typeof globalThis.Enum.Material;
        }
        export const Glass: Glass;
        /**
         * Must be used on a `MeshPart` with UVs laid out to cover much of the 0:1 UV space or more (larger is better). The `MeshPart` must also have a texture applied to its `TextureID`, and that texture image must have a wide value range since the material displays the range from dark/black to light/white values. Obtain [this model](https://create.roblox.com/store/asset/15507769146/ForceFieldMesh) for a functional example of the **ForceField** material.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/Material#ForceField)
         */
        export interface ForceField extends globalThis.EnumItem {
            Name: "ForceField";
            Value: 1584;
            EnumType: typeof globalThis.Enum.Material;
        }
        export const ForceField: ForceField;
        /**
         * Applies to `Terrain` only.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/Material#Air)
         */
        export interface Air extends globalThis.EnumItem {
            Name: "Air";
            Value: 1792;
            EnumType: typeof globalThis.Enum.Material;
        }
        export const Air: Air;
        /**
         * Applies to `Terrain` only.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/Material#Water)
         */
        export interface Water extends globalThis.EnumItem {
            Name: "Water";
            Value: 2048;
            EnumType: typeof globalThis.Enum.Material;
        }
        export const Water: Water;
        /**
         * Applies to `BasePart` only.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/Material#Cardboard)
         */
        export interface Cardboard extends globalThis.EnumItem {
            Name: "Cardboard";
            Value: 2304;
            EnumType: typeof globalThis.Enum.Material;
        }
        export const Cardboard: Cardboard;
        /**
         * Applies to `BasePart` only.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/Material#Carpet)
         */
        export interface Carpet extends globalThis.EnumItem {
            Name: "Carpet";
            Value: 2305;
            EnumType: typeof globalThis.Enum.Material;
        }
        export const Carpet: Carpet;
        /**
         * Applies to `BasePart` only.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/Material#CeramicTiles)
         */
        export interface CeramicTiles extends globalThis.EnumItem {
            Name: "CeramicTiles";
            Value: 2306;
            EnumType: typeof globalThis.Enum.Material;
        }
        export const CeramicTiles: CeramicTiles;
        /**
         * Applies to `BasePart` only.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/Material#ClayRoofTiles)
         */
        export interface ClayRoofTiles extends globalThis.EnumItem {
            Name: "ClayRoofTiles";
            Value: 2307;
            EnumType: typeof globalThis.Enum.Material;
        }
        export const ClayRoofTiles: ClayRoofTiles;
        /**
         * Applies to `BasePart` only.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/Material#RoofShingles)
         */
        export interface RoofShingles extends globalThis.EnumItem {
            Name: "RoofShingles";
            Value: 2308;
            EnumType: typeof globalThis.Enum.Material;
        }
        export const RoofShingles: RoofShingles;
        /**
         * Applies to `BasePart` only.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/Material#Leather)
         */
        export interface Leather extends globalThis.EnumItem {
            Name: "Leather";
            Value: 2309;
            EnumType: typeof globalThis.Enum.Material;
        }
        export const Leather: Leather;
        /**
         * Applies to `BasePart` only.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/Material#Plaster)
         */
        export interface Plaster extends globalThis.EnumItem {
            Name: "Plaster";
            Value: 2310;
            EnumType: typeof globalThis.Enum.Material;
        }
        export const Plaster: Plaster;
        /**
         * Applies to `BasePart` only.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/Material#Rubber)
         */
        export interface Rubber extends globalThis.EnumItem {
            Name: "Rubber";
            Value: 2311;
            EnumType: typeof globalThis.Enum.Material;
        }
        export const Rubber: Rubber;
        export function GetEnumItems(this: globalThis.Enum): Array<globalThis.Enum.Material>;
        export function FromName(this: globalThis.Enum, name: string): globalThis.Enum.Material | undefined;
        export function FromValue(this: globalThis.Enum, value: number): globalThis.Enum.Material | undefined;
    }
    export type Material = Material.Plastic | Material.SmoothPlastic | Material.Neon | Material.Wood | Material.WoodPlanks | Material.Marble | Material.Slate | Material.Concrete | Material.Granite | Material.Brick | Material.Pebble | Material.Cobblestone | Material.Rock | Material.Sandstone | Material.Basalt | Material.CrackedLava | Material.Limestone | Material.Pavement | Material.CorrodedMetal | Material.DiamondPlate | Material.Foil | Material.Metal | Material.Grass | Material.LeafyGrass | Material.Sand | Material.Fabric | Material.Snow | Material.Mud | Material.Ground | Material.Asphalt | Material.Salt | Material.Ice | Material.Glacier | Material.Glass | Material.ForceField | Material.Air | Material.Water | Material.Cardboard | Material.Carpet | Material.CeramicTiles | Material.ClayRoofTiles | Material.RoofShingles | Material.Leather | Material.Plaster | Material.Rubber;
    /**
     * Describes the pattern of material. Affects texture tiling method.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/MaterialPattern)
     */
    export namespace MaterialPattern {
        /**
         * Material has ordered pattern, usually man-made, like brick or wood planks.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/MaterialPattern#Regular)
         */
        export interface Regular extends globalThis.EnumItem {
            Name: "Regular";
            Value: 0;
            EnumType: typeof globalThis.Enum.MaterialPattern;
        }
        export const Regular: Regular;
        /**
         * Material pattern has less repetition, like stone or dirt.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/MaterialPattern#Organic)
         */
        export interface Organic extends globalThis.EnumItem {
            Name: "Organic";
            Value: 1;
            EnumType: typeof globalThis.Enum.MaterialPattern;
        }
        export const Organic: Organic;
        export function GetEnumItems(this: globalThis.Enum): Array<globalThis.Enum.MaterialPattern>;
        export function FromName(this: globalThis.Enum, name: string): globalThis.Enum.MaterialPattern | undefined;
        export function FromValue(this: globalThis.Enum, value: number): globalThis.Enum.MaterialPattern | undefined;
    }
    export type MaterialPattern = MaterialPattern.Regular | MaterialPattern.Organic;
    /**
     * The membership type of a Player.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/MembershipType)
     */
    export namespace MembershipType {
        /**
         * The player does not have an active paid membership.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/MembershipType#None)
         */
        export interface None extends globalThis.EnumItem {
            Name: "None";
            Value: 0;
            EnumType: typeof globalThis.Enum.MembershipType;
        }
        export const None: None;
        /**
         * (no longer available).
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/MembershipType#BuildersClub)
         */
        export interface BuildersClub extends globalThis.EnumItem {
            Name: "BuildersClub";
            Value: 1;
            EnumType: typeof globalThis.Enum.MembershipType;
        }
        export const BuildersClub: BuildersClub;
        /**
         * (no longer available).
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/MembershipType#TurboBuildersClub)
         */
        export interface TurboBuildersClub extends globalThis.EnumItem {
            Name: "TurboBuildersClub";
            Value: 2;
            EnumType: typeof globalThis.Enum.MembershipType;
        }
        export const TurboBuildersClub: TurboBuildersClub;
        /**
         * (no longer available).
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/MembershipType#OutrageousBuildersClub)
         */
        export interface OutrageousBuildersClub extends globalThis.EnumItem {
            Name: "OutrageousBuildersClub";
            Value: 3;
            EnumType: typeof globalThis.Enum.MembershipType;
        }
        export const OutrageousBuildersClub: OutrageousBuildersClub;
        /**
         * The player has an active Premium membership.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/MembershipType#Premium)
         */
        export interface Premium extends globalThis.EnumItem {
            Name: "Premium";
            Value: 4;
            EnumType: typeof globalThis.Enum.MembershipType;
        }
        export const Premium: Premium;
        export function GetEnumItems(this: globalThis.Enum): Array<globalThis.Enum.MembershipType>;
        export function FromName(this: globalThis.Enum, name: string): globalThis.Enum.MembershipType | undefined;
        export function FromValue(this: globalThis.Enum, value: number): globalThis.Enum.MembershipType | undefined;
    }
    export type MembershipType = MembershipType.None | MembershipType.BuildersClub | MembershipType.TurboBuildersClub | MembershipType.OutrageousBuildersClub | MembershipType.Premium;
    /**
     * The level of detail of `MeshParts` displayed in Studio.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/MeshPartDetailLevel)
     */
    export namespace MeshPartDetailLevel {
        /**
         * Select level of detail based on distance (default behavior as in game).
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/MeshPartDetailLevel#DistanceBased)
         */
        export interface DistanceBased extends globalThis.EnumItem {
            Name: "DistanceBased";
            Value: 0;
            EnumType: typeof globalThis.Enum.MeshPartDetailLevel;
        }
        export const DistanceBased: DistanceBased;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/MeshPartDetailLevel#Level00)
         */
        export interface Level00 extends globalThis.EnumItem {
            Name: "Level00";
            Value: 1;
            EnumType: typeof globalThis.Enum.MeshPartDetailLevel;
        }
        export const Level00: Level00;
        /**
         * Highest level of detail.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/MeshPartDetailLevel#Level01)
         */
        export interface Level01 extends globalThis.EnumItem {
            Name: "Level01";
            Value: 2;
            EnumType: typeof globalThis.Enum.MeshPartDetailLevel;
        }
        export const Level01: Level01;
        /**
         * Second highest level of detail.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/MeshPartDetailLevel#Level02)
         */
        export interface Level02 extends globalThis.EnumItem {
            Name: "Level02";
            Value: 3;
            EnumType: typeof globalThis.Enum.MeshPartDetailLevel;
        }
        export const Level02: Level02;
        /**
         * Third highest level of detail.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/MeshPartDetailLevel#Level03)
         */
        export interface Level03 extends globalThis.EnumItem {
            Name: "Level03";
            Value: 4;
            EnumType: typeof globalThis.Enum.MeshPartDetailLevel;
        }
        export const Level03: Level03;
        /**
         * Lowest level of detail.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/MeshPartDetailLevel#Level04)
         */
        export interface Level04 extends globalThis.EnumItem {
            Name: "Level04";
            Value: 5;
            EnumType: typeof globalThis.Enum.MeshPartDetailLevel;
        }
        export const Level04: Level04;
        export function GetEnumItems(this: globalThis.Enum): Array<globalThis.Enum.MeshPartDetailLevel>;
        export function FromName(this: globalThis.Enum, name: string): globalThis.Enum.MeshPartDetailLevel | undefined;
        export function FromValue(this: globalThis.Enum, value: number): globalThis.Enum.MeshPartDetailLevel | undefined;
    }
    export type MeshPartDetailLevel = MeshPartDetailLevel.DistanceBased | MeshPartDetailLevel.Level00 | MeshPartDetailLevel.Level01 | MeshPartDetailLevel.Level02 | MeshPartDetailLevel.Level03 | MeshPartDetailLevel.Level04;
    /**
     * Controls the `Workspace.MeshPartHeadsAndAccessories` feature.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/MeshPartHeadsAndAccessories)
     */
    export namespace MeshPartHeadsAndAccessories {
        /**
         * The default option to control the `Workspace.MeshPartHeadsAndAccessories` feature. This currently has the same meaning as "Enabled".
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/MeshPartHeadsAndAccessories#Default)
         */
        export interface Default extends globalThis.EnumItem {
            Name: "Default";
            Value: 0;
            EnumType: typeof globalThis.Enum.MeshPartHeadsAndAccessories;
        }
        export const Default: Default;
        /**
         * Disables the `Workspace.MeshPartHeadsAndAccessories` feature.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/MeshPartHeadsAndAccessories#Disabled)
         */
        export interface Disabled extends globalThis.EnumItem {
            Name: "Disabled";
            Value: 1;
            EnumType: typeof globalThis.Enum.MeshPartHeadsAndAccessories;
        }
        export const Disabled: Disabled;
        /**
         * Enables the `Workspace.MeshPartHeadsAndAccessories` feature.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/MeshPartHeadsAndAccessories#Enabled)
         */
        export interface Enabled extends globalThis.EnumItem {
            Name: "Enabled";
            Value: 2;
            EnumType: typeof globalThis.Enum.MeshPartHeadsAndAccessories;
        }
        export const Enabled: Enabled;
        export function GetEnumItems(this: globalThis.Enum): Array<globalThis.Enum.MeshPartHeadsAndAccessories>;
        export function FromName(this: globalThis.Enum, name: string): globalThis.Enum.MeshPartHeadsAndAccessories | undefined;
        export function FromValue(this: globalThis.Enum, value: number): globalThis.Enum.MeshPartHeadsAndAccessories | undefined;
    }
    export type MeshPartHeadsAndAccessories = MeshPartHeadsAndAccessories.Default | MeshPartHeadsAndAccessories.Disabled | MeshPartHeadsAndAccessories.Enabled;
    /**
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/MeshScaleUnit)
     */
    export namespace MeshScaleUnit {
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/MeshScaleUnit#Stud)
         */
        export interface Stud extends globalThis.EnumItem {
            Name: "Stud";
            Value: 0;
            EnumType: typeof globalThis.Enum.MeshScaleUnit;
        }
        export const Stud: Stud;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/MeshScaleUnit#Meter)
         */
        export interface Meter extends globalThis.EnumItem {
            Name: "Meter";
            Value: 1;
            EnumType: typeof globalThis.Enum.MeshScaleUnit;
        }
        export const Meter: Meter;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/MeshScaleUnit#CM)
         */
        export interface CM extends globalThis.EnumItem {
            Name: "CM";
            Value: 2;
            EnumType: typeof globalThis.Enum.MeshScaleUnit;
        }
        export const CM: CM;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/MeshScaleUnit#MM)
         */
        export interface MM extends globalThis.EnumItem {
            Name: "MM";
            Value: 3;
            EnumType: typeof globalThis.Enum.MeshScaleUnit;
        }
        export const MM: MM;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/MeshScaleUnit#Foot)
         */
        export interface Foot extends globalThis.EnumItem {
            Name: "Foot";
            Value: 4;
            EnumType: typeof globalThis.Enum.MeshScaleUnit;
        }
        export const Foot: Foot;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/MeshScaleUnit#Inch)
         */
        export interface Inch extends globalThis.EnumItem {
            Name: "Inch";
            Value: 5;
            EnumType: typeof globalThis.Enum.MeshScaleUnit;
        }
        export const Inch: Inch;
        export function GetEnumItems(this: globalThis.Enum): Array<globalThis.Enum.MeshScaleUnit>;
        export function FromName(this: globalThis.Enum, name: string): globalThis.Enum.MeshScaleUnit | undefined;
        export function FromValue(this: globalThis.Enum, value: number): globalThis.Enum.MeshScaleUnit | undefined;
    }
    export type MeshScaleUnit = MeshScaleUnit.Stud | MeshScaleUnit.Meter | MeshScaleUnit.CM | MeshScaleUnit.MM | MeshScaleUnit.Foot | MeshScaleUnit.Inch;
    /**
     * The MeshType Enum is used to set what type of mesh the `SpecialMesh` is.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/MeshType)
     */
    export namespace MeshType {
        /**
         * The mesh is the default `Humanoid` head mesh.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/MeshType#Head)
         */
        export interface Head extends globalThis.EnumItem {
            Name: "Head";
            Value: 0;
            EnumType: typeof globalThis.Enum.MeshType;
        }
        export const Head: Head;
        /**
         * The mesh is the default Humanoid torso mesh.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/MeshType#Torso)
         */
        export interface Torso extends globalThis.EnumItem {
            Name: "Torso";
            Value: 1;
            EnumType: typeof globalThis.Enum.MeshType;
        }
        export const Torso: Torso;
        /**
         * The mesh is a wedge.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/MeshType#Wedge)
         */
        export interface Wedge extends globalThis.EnumItem {
            Name: "Wedge";
            Value: 2;
            EnumType: typeof globalThis.Enum.MeshType;
        }
        export const Wedge: Wedge;
        /**
         * The mesh is a sphere.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/MeshType#Sphere)
         */
        export interface Sphere extends globalThis.EnumItem {
            Name: "Sphere";
            Value: 3;
            EnumType: typeof globalThis.Enum.MeshType;
        }
        export const Sphere: Sphere;
        /**
         * The mesh is a cylinder.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/MeshType#Cylinder)
         */
        export interface Cylinder extends globalThis.EnumItem {
            Name: "Cylinder";
            Value: 4;
            EnumType: typeof globalThis.Enum.MeshType;
        }
        export const Cylinder: Cylinder;
        /**
         * The mesh is determined by the Roblox mesh asset id provided.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/MeshType#FileMesh)
         */
        export interface FileMesh extends globalThis.EnumItem {
            Name: "FileMesh";
            Value: 5;
            EnumType: typeof globalThis.Enum.MeshType;
        }
        export const FileMesh: FileMesh;
        /**
         * The mesh is a brick (just like the shape of a default `BasePart`).
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/MeshType#Brick)
         */
        export interface Brick extends globalThis.EnumItem {
            Name: "Brick";
            Value: 6;
            EnumType: typeof globalThis.Enum.MeshType;
        }
        export const Brick: Brick;
        /**
         * **Deprecated:**
         *
         * The mesh is a prism.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/MeshType#Prism)
         */
        export interface Prism extends globalThis.EnumItem {
            Name: "Prism";
            Value: 7;
            EnumType: typeof globalThis.Enum.MeshType;
        }
        export const Prism: Prism;
        /**
         * **Deprecated:**
         *
         * The mesh is a pyramid.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/MeshType#Pyramid)
         */
        export interface Pyramid extends globalThis.EnumItem {
            Name: "Pyramid";
            Value: 8;
            EnumType: typeof globalThis.Enum.MeshType;
        }
        export const Pyramid: Pyramid;
        /**
         * **Deprecated:**
         *
         * The mesh is a parallel ramp.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/MeshType#ParallelRamp)
         */
        export interface ParallelRamp extends globalThis.EnumItem {
            Name: "ParallelRamp";
            Value: 9;
            EnumType: typeof globalThis.Enum.MeshType;
        }
        export const ParallelRamp: ParallelRamp;
        /**
         * **Deprecated:**
         *
         * The mesh is a right angle ramp.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/MeshType#RightAngleRamp)
         */
        export interface RightAngleRamp extends globalThis.EnumItem {
            Name: "RightAngleRamp";
            Value: 10;
            EnumType: typeof globalThis.Enum.MeshType;
        }
        export const RightAngleRamp: RightAngleRamp;
        /**
         * **Deprecated:**
         *
         * The mesh is a corner wedge.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/MeshType#CornerWedge)
         */
        export interface CornerWedge extends globalThis.EnumItem {
            Name: "CornerWedge";
            Value: 11;
            EnumType: typeof globalThis.Enum.MeshType;
        }
        export const CornerWedge: CornerWedge;
        export function GetEnumItems(this: globalThis.Enum): Array<globalThis.Enum.MeshType>;
        export function FromName(this: globalThis.Enum, name: string): globalThis.Enum.MeshType | undefined;
        export function FromValue(this: globalThis.Enum, value: number): globalThis.Enum.MeshType | undefined;
    }
    export type MeshType = MeshType.Head | MeshType.Torso | MeshType.Wedge | MeshType.Sphere | MeshType.Cylinder | MeshType.FileMesh | MeshType.Brick | MeshType.Prism | MeshType.Pyramid | MeshType.ParallelRamp | MeshType.RightAngleRamp | MeshType.CornerWedge;
    /**
     * Message category and severity level.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/MessageType)
     */
    export namespace MessageType {
        /**
         * The message is from the standard output channel.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/MessageType#MessageOutput)
         */
        export interface MessageOutput extends globalThis.EnumItem {
            Name: "MessageOutput";
            Value: 0;
            EnumType: typeof globalThis.Enum.MessageType;
        }
        export const MessageOutput: MessageOutput;
        /**
         * The message is from the information channel.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/MessageType#MessageInfo)
         */
        export interface MessageInfo extends globalThis.EnumItem {
            Name: "MessageInfo";
            Value: 1;
            EnumType: typeof globalThis.Enum.MessageType;
        }
        export const MessageInfo: MessageInfo;
        /**
         * The message is from the warning channel.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/MessageType#MessageWarning)
         */
        export interface MessageWarning extends globalThis.EnumItem {
            Name: "MessageWarning";
            Value: 2;
            EnumType: typeof globalThis.Enum.MessageType;
        }
        export const MessageWarning: MessageWarning;
        /**
         * The message is from the error channel.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/MessageType#MessageError)
         */
        export interface MessageError extends globalThis.EnumItem {
            Name: "MessageError";
            Value: 3;
            EnumType: typeof globalThis.Enum.MessageType;
        }
        export const MessageError: MessageError;
        export function GetEnumItems(this: globalThis.Enum): Array<globalThis.Enum.MessageType>;
        export function FromName(this: globalThis.Enum, name: string): globalThis.Enum.MessageType | undefined;
        export function FromValue(this: globalThis.Enum, value: number): globalThis.Enum.MessageType | undefined;
    }
    export type MessageType = MessageType.MessageOutput | MessageType.MessageInfo | MessageType.MessageWarning | MessageType.MessageError;
    /**
     * Controls the level of detail for `Models` in experiences with instance streaming enabled.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/ModelLevelOfDetail)
     */
    export namespace ModelLevelOfDetail {
        /**
         * Default behavior, currently equivalent to **Disabled**.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/ModelLevelOfDetail#Automatic)
         */
        export interface Automatic extends globalThis.EnumItem {
            Name: "Automatic";
            Value: 0;
            EnumType: typeof globalThis.Enum.ModelLevelOfDetail;
        }
        export const Automatic: Automatic;
        /**
         * A lower resolution "imposter" mesh (colored, coarse mesh that wraps around all child parts of the model) renders outside the streaming radius.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/ModelLevelOfDetail#StreamingMesh)
         */
        export interface StreamingMesh extends globalThis.EnumItem {
            Name: "StreamingMesh";
            Value: 1;
            EnumType: typeof globalThis.Enum.ModelLevelOfDetail;
        }
        export const StreamingMesh: StreamingMesh;
        /**
         * A lower resolution mesh will not be displayed.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/ModelLevelOfDetail#Disabled)
         */
        export interface Disabled extends globalThis.EnumItem {
            Name: "Disabled";
            Value: 2;
            EnumType: typeof globalThis.Enum.ModelLevelOfDetail;
        }
        export const Disabled: Disabled;
        export function GetEnumItems(this: globalThis.Enum): Array<globalThis.Enum.ModelLevelOfDetail>;
        export function FromName(this: globalThis.Enum, name: string): globalThis.Enum.ModelLevelOfDetail | undefined;
        export function FromValue(this: globalThis.Enum, value: number): globalThis.Enum.ModelLevelOfDetail | undefined;
    }
    export type ModelLevelOfDetail = ModelLevelOfDetail.Automatic | ModelLevelOfDetail.StreamingMesh | ModelLevelOfDetail.Disabled;
    /**
     * Controls how `Models` are sent to clients in experiences with instance streaming enabled.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/ModelStreamingBehavior)
     */
    export namespace ModelStreamingBehavior {
        /**
         * Engine determines best behavior. Currently equivalent to **Legacy**.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/ModelStreamingBehavior#Default)
         */
        export interface Default extends globalThis.EnumItem {
            Name: "Default";
            Value: 0;
            EnumType: typeof globalThis.Enum.ModelStreamingBehavior;
        }
        export const Default: Default;
        /**
         * Models are sent when their parent is sent, typically during player join. Models are never streamed out unless an ancestor of the model is streamed out.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/ModelStreamingBehavior#Legacy)
         */
        export interface Legacy extends globalThis.EnumItem {
            Name: "Legacy";
            Value: 1;
            EnumType: typeof globalThis.Enum.ModelStreamingBehavior;
        }
        export const Legacy: Legacy;
        /**
         * Models are never sent during player join. Models that are "non-spatial" (containing no `BasePart` descendants) are sent soon after join, but before the `Workspace.PersistentLoaded` event fires. Models that are "spatial" (containing `BasePart` descendants) are sent when any `BasePart` descendant needs to be streamed to a client, and may stream out when all `BasePart` descendants are eligible to stream out.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/ModelStreamingBehavior#Improved)
         */
        export interface Improved extends globalThis.EnumItem {
            Name: "Improved";
            Value: 2;
            EnumType: typeof globalThis.Enum.ModelStreamingBehavior;
        }
        export const Improved: Improved;
        export function GetEnumItems(this: globalThis.Enum): Array<globalThis.Enum.ModelStreamingBehavior>;
        export function FromName(this: globalThis.Enum, name: string): globalThis.Enum.ModelStreamingBehavior | undefined;
        export function FromValue(this: globalThis.Enum, value: number): globalThis.Enum.ModelStreamingBehavior | undefined;
    }
    export type ModelStreamingBehavior = ModelStreamingBehavior.Default | ModelStreamingBehavior.Legacy | ModelStreamingBehavior.Improved;
    /**
     * Controls stream in and out behavior of a model.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/ModelStreamingMode)
     */
    export namespace ModelStreamingMode {
        /**
         * Engine determines best behavior. Currently equivalent to **Nonatomic**.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/ModelStreamingMode#Default)
         */
        export interface Default extends globalThis.EnumItem {
            Name: "Default";
            Value: 0;
            EnumType: typeof globalThis.Enum.ModelStreamingMode;
        }
        export const Default: Default;
        /**
         * The `Model` and all of its descendants are streamed in/out together. For streaming in, this applies when **any** descendant `BasePart` is eligible for streaming in. For streaming out, this applies when **all** descendant `BaseParts` are eligible for streaming out.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/ModelStreamingMode#Atomic)
         */
        export interface Atomic extends globalThis.EnumItem {
            Name: "Atomic";
            Value: 1;
            EnumType: typeof globalThis.Enum.ModelStreamingMode;
        }
        export const Atomic: Atomic;
        /**
         * Persistent models are sent as a complete atomic unit soon after the player joins and before the `Workspace.PersistentLoaded` event fires. Persistent models and their descendants are never streamed out.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/ModelStreamingMode#Persistent)
         */
        export interface Persistent extends globalThis.EnumItem {
            Name: "Persistent";
            Value: 2;
            EnumType: typeof globalThis.Enum.ModelStreamingMode;
        }
        export const Persistent: Persistent;
        /**
         * Behaves as a persistent model for players that have been added using `Model:AddPersistentPlayer()`. For other players, behavior is the same as **Atomic**. You can revert a model from player persistence via `Model:RemovePersistentPlayer()`.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/ModelStreamingMode#PersistentPerPlayer)
         */
        export interface PersistentPerPlayer extends globalThis.EnumItem {
            Name: "PersistentPerPlayer";
            Value: 3;
            EnumType: typeof globalThis.Enum.ModelStreamingMode;
        }
        export const PersistentPerPlayer: PersistentPerPlayer;
        /**
         * When a nonatomic model is streamed, descendants are also sent, except for part descendants. Nonatomic models that are not descendants of parts are sent during experience loading.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/ModelStreamingMode#Nonatomic)
         */
        export interface Nonatomic extends globalThis.EnumItem {
            Name: "Nonatomic";
            Value: 4;
            EnumType: typeof globalThis.Enum.ModelStreamingMode;
        }
        export const Nonatomic: Nonatomic;
        export function GetEnumItems(this: globalThis.Enum): Array<globalThis.Enum.ModelStreamingMode>;
        export function FromName(this: globalThis.Enum, name: string): globalThis.Enum.ModelStreamingMode | undefined;
        export function FromValue(this: globalThis.Enum, value: number): globalThis.Enum.ModelStreamingMode | undefined;
    }
    export type ModelStreamingMode = ModelStreamingMode.Default | ModelStreamingMode.Atomic | ModelStreamingMode.Persistent | ModelStreamingMode.PersistentPerPlayer | ModelStreamingMode.Nonatomic;
    /**
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/ModerationStatus)
     */
    export namespace ModerationStatus {
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/ModerationStatus#ReviewedApproved)
         */
        export interface ReviewedApproved extends globalThis.EnumItem {
            Name: "ReviewedApproved";
            Value: 1;
            EnumType: typeof globalThis.Enum.ModerationStatus;
        }
        export const ReviewedApproved: ReviewedApproved;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/ModerationStatus#ReviewedRejected)
         */
        export interface ReviewedRejected extends globalThis.EnumItem {
            Name: "ReviewedRejected";
            Value: 2;
            EnumType: typeof globalThis.Enum.ModerationStatus;
        }
        export const ReviewedRejected: ReviewedRejected;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/ModerationStatus#NotReviewed)
         */
        export interface NotReviewed extends globalThis.EnumItem {
            Name: "NotReviewed";
            Value: 3;
            EnumType: typeof globalThis.Enum.ModerationStatus;
        }
        export const NotReviewed: NotReviewed;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/ModerationStatus#NotApplicable)
         */
        export interface NotApplicable extends globalThis.EnumItem {
            Name: "NotApplicable";
            Value: 4;
            EnumType: typeof globalThis.Enum.ModerationStatus;
        }
        export const NotApplicable: NotApplicable;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/ModerationStatus#Invalid)
         */
        export interface Invalid extends globalThis.EnumItem {
            Name: "Invalid";
            Value: 5;
            EnumType: typeof globalThis.Enum.ModerationStatus;
        }
        export const Invalid: Invalid;
        export function GetEnumItems(this: globalThis.Enum): Array<globalThis.Enum.ModerationStatus>;
        export function FromName(this: globalThis.Enum, name: string): globalThis.Enum.ModerationStatus | undefined;
        export function FromValue(this: globalThis.Enum, value: number): globalThis.Enum.ModerationStatus | undefined;
    }
    export type ModerationStatus = ModerationStatus.ReviewedApproved | ModerationStatus.ReviewedRejected | ModerationStatus.NotReviewed | ModerationStatus.NotApplicable | ModerationStatus.Invalid;
    /**
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/ModifierKey)
     */
    export namespace ModifierKey {
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/ModifierKey#Shift)
         */
        export interface Shift extends globalThis.EnumItem {
            Name: "Shift";
            Value: 0;
            EnumType: typeof globalThis.Enum.ModifierKey;
        }
        export const Shift: Shift;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/ModifierKey#Ctrl)
         */
        export interface Ctrl extends globalThis.EnumItem {
            Name: "Ctrl";
            Value: 1;
            EnumType: typeof globalThis.Enum.ModifierKey;
        }
        export const Ctrl: Ctrl;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/ModifierKey#Alt)
         */
        export interface Alt extends globalThis.EnumItem {
            Name: "Alt";
            Value: 2;
            EnumType: typeof globalThis.Enum.ModifierKey;
        }
        export const Alt: Alt;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/ModifierKey#Meta)
         */
        export interface Meta extends globalThis.EnumItem {
            Name: "Meta";
            Value: 3;
            EnumType: typeof globalThis.Enum.ModifierKey;
        }
        export const Meta: Meta;
        export function GetEnumItems(this: globalThis.Enum): Array<globalThis.Enum.ModifierKey>;
        export function FromName(this: globalThis.Enum, name: string): globalThis.Enum.ModifierKey | undefined;
        export function FromValue(this: globalThis.Enum, value: number): globalThis.Enum.ModifierKey | undefined;
    }
    export type ModifierKey = ModifierKey.Shift | ModifierKey.Ctrl | ModifierKey.Alt | ModifierKey.Meta;
    /**
     * Sets the user's mouse behavior.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/MouseBehavior)
     */
    export namespace MouseBehavior {
        /**
         * The mouse moves freely around the user's screen.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/MouseBehavior#Default)
         */
        export interface Default extends globalThis.EnumItem {
            Name: "Default";
            Value: 0;
            EnumType: typeof globalThis.Enum.MouseBehavior;
        }
        export const Default: Default;
        /**
         * The mouse is locked, and cannot move from, the center of the user's screen.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/MouseBehavior#LockCenter)
         */
        export interface LockCenter extends globalThis.EnumItem {
            Name: "LockCenter";
            Value: 1;
            EnumType: typeof globalThis.Enum.MouseBehavior;
        }
        export const LockCenter: LockCenter;
        /**
         * The mouse is locked, and cannot move from, it's current position on the user's screen at the time of locking.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/MouseBehavior#LockCurrentPosition)
         */
        export interface LockCurrentPosition extends globalThis.EnumItem {
            Name: "LockCurrentPosition";
            Value: 2;
            EnumType: typeof globalThis.Enum.MouseBehavior;
        }
        export const LockCurrentPosition: LockCurrentPosition;
        export function GetEnumItems(this: globalThis.Enum): Array<globalThis.Enum.MouseBehavior>;
        export function FromName(this: globalThis.Enum, name: string): globalThis.Enum.MouseBehavior | undefined;
        export function FromValue(this: globalThis.Enum, value: number): globalThis.Enum.MouseBehavior | undefined;
    }
    export type MouseBehavior = MouseBehavior.Default | MouseBehavior.LockCenter | MouseBehavior.LockCurrentPosition;
    /**
     * Represents the state of a `SkateboardPlatform`.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/MoveState)
     */
    export namespace MoveState {
        /**
         * Skateboard is stopped (not moving).
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/MoveState#Stopped)
         */
        export interface Stopped extends globalThis.EnumItem {
            Name: "Stopped";
            Value: 0;
            EnumType: typeof globalThis.Enum.MoveState;
        }
        export const Stopped: Stopped;
        /**
         * Skateboard is coasting (not actively speeding up / being pushed).
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/MoveState#Coasting)
         */
        export interface Coasting extends globalThis.EnumItem {
            Name: "Coasting";
            Value: 1;
            EnumType: typeof globalThis.Enum.MoveState;
        }
        export const Coasting: Coasting;
        /**
         * Skateboard is being pushed (speeding up).
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/MoveState#Pushing)
         */
        export interface Pushing extends globalThis.EnumItem {
            Name: "Pushing";
            Value: 2;
            EnumType: typeof globalThis.Enum.MoveState;
        }
        export const Pushing: Pushing;
        /**
         * Skateboard is stopping, but still moving.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/MoveState#Stopping)
         */
        export interface Stopping extends globalThis.EnumItem {
            Name: "Stopping";
            Value: 3;
            EnumType: typeof globalThis.Enum.MoveState;
        }
        export const Stopping: Stopping;
        /**
         * Skateboard is in the air.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/MoveState#AirFree)
         */
        export interface AirFree extends globalThis.EnumItem {
            Name: "AirFree";
            Value: 4;
            EnumType: typeof globalThis.Enum.MoveState;
        }
        export const AirFree: AirFree;
        export function GetEnumItems(this: globalThis.Enum): Array<globalThis.Enum.MoveState>;
        export function FromName(this: globalThis.Enum, name: string): globalThis.Enum.MoveState | undefined;
        export function FromValue(this: globalThis.Enum, value: number): globalThis.Enum.MoveState | undefined;
    }
    export type MoveState = MoveState.Stopped | MoveState.Coasting | MoveState.Pushing | MoveState.Stopping | MoveState.AirFree;
    /**
     * Values for `Workspace.MoverConstraintRootBehavior`. Controls the logic for selecting the assembly root part when using various mover constraints.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/MoverConstraintRootBehaviorMode)
     */
    export namespace MoverConstraintRootBehaviorMode {
        /**
         * The default option for `Workspace.MoverConstraintRootBehavior`. Currently set to **Disabled**.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/MoverConstraintRootBehaviorMode#Default)
         */
        export interface Default extends globalThis.EnumItem {
            Name: "Default";
            Value: 0;
            EnumType: typeof globalThis.Enum.MoverConstraintRootBehaviorMode;
        }
        export const Default: Default;
        /**
         * The legacy logic will be used for assembly root part selection when a mechanism contains a mover constraint.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/MoverConstraintRootBehaviorMode#Disabled)
         */
        export interface Disabled extends globalThis.EnumItem {
            Name: "Disabled";
            Value: 1;
            EnumType: typeof globalThis.Enum.MoverConstraintRootBehaviorMode;
        }
        export const Disabled: Disabled;
        /**
         * Improved logic will be used for assembly root part selection when a mechanism contains a mover constraint. This improved logic gives more consistent behavior when compared with other constraints or the deprecated `BodyMover` classes.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/MoverConstraintRootBehaviorMode#Enabled)
         */
        export interface Enabled extends globalThis.EnumItem {
            Name: "Enabled";
            Value: 2;
            EnumType: typeof globalThis.Enum.MoverConstraintRootBehaviorMode;
        }
        export const Enabled: Enabled;
        export function GetEnumItems(this: globalThis.Enum): Array<globalThis.Enum.MoverConstraintRootBehaviorMode>;
        export function FromName(this: globalThis.Enum, name: string): globalThis.Enum.MoverConstraintRootBehaviorMode | undefined;
        export function FromValue(this: globalThis.Enum, value: number): globalThis.Enum.MoverConstraintRootBehaviorMode | undefined;
    }
    export type MoverConstraintRootBehaviorMode = MoverConstraintRootBehaviorMode.Default | MoverConstraintRootBehaviorMode.Disabled | MoverConstraintRootBehaviorMode.Enabled;
    /**
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/MuteState)
     */
    export namespace MuteState {
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/MuteState#Unmuted)
         */
        export interface Unmuted extends globalThis.EnumItem {
            Name: "Unmuted";
            Value: 0;
            EnumType: typeof globalThis.Enum.MuteState;
        }
        export const Unmuted: Unmuted;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/MuteState#Muted)
         */
        export interface Muted extends globalThis.EnumItem {
            Name: "Muted";
            Value: 1;
            EnumType: typeof globalThis.Enum.MuteState;
        }
        export const Muted: Muted;
        export function GetEnumItems(this: globalThis.Enum): Array<globalThis.Enum.MuteState>;
        export function FromName(this: globalThis.Enum, name: string): globalThis.Enum.MuteState | undefined;
        export function FromValue(this: globalThis.Enum, value: number): globalThis.Enum.MuteState | undefined;
    }
    export type MuteState = MuteState.Unmuted | MuteState.Muted;
    /**
     * The NameOcclusion Enum is used to set the `Humanoid.NameOcclusion` property.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/NameOcclusion)
     */
    export namespace NameOcclusion {
        /**
         * Do not occlude (hide) any humanoid names.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/NameOcclusion#NoOcclusion)
         */
        export interface NoOcclusion extends globalThis.EnumItem {
            Name: "NoOcclusion";
            Value: 0;
            EnumType: typeof globalThis.Enum.NameOcclusion;
        }
        export const NoOcclusion: NoOcclusion;
        /**
         * Occlude (hide) all enemy humanoid names.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/NameOcclusion#EnemyOcclusion)
         */
        export interface EnemyOcclusion extends globalThis.EnumItem {
            Name: "EnemyOcclusion";
            Value: 1;
            EnumType: typeof globalThis.Enum.NameOcclusion;
        }
        export const EnemyOcclusion: EnemyOcclusion;
        /**
         * Occlude (hide) all humanoid names.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/NameOcclusion#OccludeAll)
         */
        export interface OccludeAll extends globalThis.EnumItem {
            Name: "OccludeAll";
            Value: 2;
            EnumType: typeof globalThis.Enum.NameOcclusion;
        }
        export const OccludeAll: OccludeAll;
        export function GetEnumItems(this: globalThis.Enum): Array<globalThis.Enum.NameOcclusion>;
        export function FromName(this: globalThis.Enum, name: string): globalThis.Enum.NameOcclusion | undefined;
        export function FromValue(this: globalThis.Enum, value: number): globalThis.Enum.NameOcclusion | undefined;
    }
    export type NameOcclusion = NameOcclusion.NoOcclusion | NameOcclusion.EnemyOcclusion | NameOcclusion.OccludeAll;
    /**
     * Defines how simulation authority is determined for the Network Ownership Unit/Mechanism this part is attached to.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/NetworkOwnership)
     */
    export namespace NetworkOwnership {
        /**
         * Network ownership is determined automatically by the server.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/NetworkOwnership#Automatic)
         */
        export interface Automatic extends globalThis.EnumItem {
            Name: "Automatic";
            Value: 0;
            EnumType: typeof globalThis.Enum.NetworkOwnership;
        }
        export const Automatic: Automatic;
        /**
         * Network ownership is set manually by the developer.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/NetworkOwnership#Manual)
         */
        export interface Manual extends globalThis.EnumItem {
            Name: "Manual";
            Value: 1;
            EnumType: typeof globalThis.Enum.NetworkOwnership;
        }
        export const Manual: Manual;
        /**
         * The first player to touch a part is given ownership of that part for the server (network). Ownership will not change if another player touches that part unless network ownership has been released by the owner.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/NetworkOwnership#OnContact)
         */
        export interface OnContact extends globalThis.EnumItem {
            Name: "OnContact";
            Value: 2;
            EnumType: typeof globalThis.Enum.NetworkOwnership;
        }
        export const OnContact: OnContact;
        export function GetEnumItems(this: globalThis.Enum): Array<globalThis.Enum.NetworkOwnership>;
        export function FromName(this: globalThis.Enum, name: string): globalThis.Enum.NetworkOwnership | undefined;
        export function FromValue(this: globalThis.Enum, value: number): globalThis.Enum.NetworkOwnership | undefined;
    }
    export type NetworkOwnership = NetworkOwnership.Automatic | NetworkOwnership.Manual | NetworkOwnership.OnContact;
    /**
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/NetworkStatus)
     */
    export namespace NetworkStatus {
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/NetworkStatus#Unknown)
         */
        export interface Unknown extends globalThis.EnumItem {
            Name: "Unknown";
            Value: 0;
            EnumType: typeof globalThis.Enum.NetworkStatus;
        }
        export const Unknown: Unknown;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/NetworkStatus#Connected)
         */
        export interface Connected extends globalThis.EnumItem {
            Name: "Connected";
            Value: 1;
            EnumType: typeof globalThis.Enum.NetworkStatus;
        }
        export const Connected: Connected;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/NetworkStatus#Disconnected)
         */
        export interface Disconnected extends globalThis.EnumItem {
            Name: "Disconnected";
            Value: 2;
            EnumType: typeof globalThis.Enum.NetworkStatus;
        }
        export const Disconnected: Disconnected;
        export function GetEnumItems(this: globalThis.Enum): Array<globalThis.Enum.NetworkStatus>;
        export function FromName(this: globalThis.Enum, name: string): globalThis.Enum.NetworkStatus | undefined;
        export function FromValue(this: globalThis.Enum, value: number): globalThis.Enum.NetworkStatus | undefined;
    }
    export type NetworkStatus = NetworkStatus.Unknown | NetworkStatus.Connected | NetworkStatus.Disconnected;
    /**
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/NoiseType)
     */
    export namespace NoiseType {
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/NoiseType#SimplexGabor)
         */
        export interface SimplexGabor extends globalThis.EnumItem {
            Name: "SimplexGabor";
            Value: 0;
            EnumType: typeof globalThis.Enum.NoiseType;
        }
        export const SimplexGabor: SimplexGabor;
        export function GetEnumItems(this: globalThis.Enum): Array<globalThis.Enum.NoiseType>;
        export function FromName(this: globalThis.Enum, name: string): globalThis.Enum.NoiseType | undefined;
        export function FromValue(this: globalThis.Enum, value: number): globalThis.Enum.NoiseType | undefined;
    }
    export type NoiseType = NoiseType.SimplexGabor;
    /**
     * The NormalId Enum sets which side/face of a Part is used.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/NormalId)
     */
    export namespace NormalId {
        /**
         * The right face of a Part.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/NormalId#Right)
         */
        export interface Right extends globalThis.EnumItem {
            Name: "Right";
            Value: 0;
            EnumType: typeof globalThis.Enum.NormalId;
        }
        export const Right: Right;
        /**
         * The top face of a Part.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/NormalId#Top)
         */
        export interface Top extends globalThis.EnumItem {
            Name: "Top";
            Value: 1;
            EnumType: typeof globalThis.Enum.NormalId;
        }
        export const Top: Top;
        /**
         * The back face of a Part.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/NormalId#Back)
         */
        export interface Back extends globalThis.EnumItem {
            Name: "Back";
            Value: 2;
            EnumType: typeof globalThis.Enum.NormalId;
        }
        export const Back: Back;
        /**
         * The left face of a Part.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/NormalId#Left)
         */
        export interface Left extends globalThis.EnumItem {
            Name: "Left";
            Value: 3;
            EnumType: typeof globalThis.Enum.NormalId;
        }
        export const Left: Left;
        /**
         * The bottom face of a Part.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/NormalId#Bottom)
         */
        export interface Bottom extends globalThis.EnumItem {
            Name: "Bottom";
            Value: 4;
            EnumType: typeof globalThis.Enum.NormalId;
        }
        export const Bottom: Bottom;
        /**
         * The front face of a Part.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/NormalId#Front)
         */
        export interface Front extends globalThis.EnumItem {
            Name: "Front";
            Value: 5;
            EnumType: typeof globalThis.Enum.NormalId;
        }
        export const Front: Front;
        export function GetEnumItems(this: globalThis.Enum): Array<globalThis.Enum.NormalId>;
        export function FromName(this: globalThis.Enum, name: string): globalThis.Enum.NormalId | undefined;
        export function FromValue(this: globalThis.Enum, value: number): globalThis.Enum.NormalId | undefined;
    }
    export type NormalId = NormalId.Right | NormalId.Top | NormalId.Back | NormalId.Left | NormalId.Bottom | NormalId.Front;
    /**
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/NotificationButtonType)
     */
    export namespace NotificationButtonType {
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/NotificationButtonType#Primary)
         */
        export interface Primary extends globalThis.EnumItem {
            Name: "Primary";
            Value: 0;
            EnumType: typeof globalThis.Enum.NotificationButtonType;
        }
        export const Primary: Primary;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/NotificationButtonType#Secondary)
         */
        export interface Secondary extends globalThis.EnumItem {
            Name: "Secondary";
            Value: 1;
            EnumType: typeof globalThis.Enum.NotificationButtonType;
        }
        export const Secondary: Secondary;
        export function GetEnumItems(this: globalThis.Enum): Array<globalThis.Enum.NotificationButtonType>;
        export function FromName(this: globalThis.Enum, name: string): globalThis.Enum.NotificationButtonType | undefined;
        export function FromValue(this: globalThis.Enum, value: number): globalThis.Enum.NotificationButtonType | undefined;
    }
    export type NotificationButtonType = NotificationButtonType.Primary | NotificationButtonType.Secondary;
    /**
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/OperationType)
     */
    export namespace OperationType {
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/OperationType#Null)
         */
        export interface Null extends globalThis.EnumItem {
            Name: "Null";
            Value: 0;
            EnumType: typeof globalThis.Enum.OperationType;
        }
        export const Null: Null;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/OperationType#Union)
         */
        export interface Union extends globalThis.EnumItem {
            Name: "Union";
            Value: 1;
            EnumType: typeof globalThis.Enum.OperationType;
        }
        export const Union: Union;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/OperationType#Subtraction)
         */
        export interface Subtraction extends globalThis.EnumItem {
            Name: "Subtraction";
            Value: 2;
            EnumType: typeof globalThis.Enum.OperationType;
        }
        export const Subtraction: Subtraction;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/OperationType#Intersection)
         */
        export interface Intersection extends globalThis.EnumItem {
            Name: "Intersection";
            Value: 3;
            EnumType: typeof globalThis.Enum.OperationType;
        }
        export const Intersection: Intersection;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/OperationType#Primitive)
         */
        export interface Primitive extends globalThis.EnumItem {
            Name: "Primitive";
            Value: 4;
            EnumType: typeof globalThis.Enum.OperationType;
        }
        export const Primitive: Primitive;
        export function GetEnumItems(this: globalThis.Enum): Array<globalThis.Enum.OperationType>;
        export function FromName(this: globalThis.Enum, name: string): globalThis.Enum.OperationType | undefined;
        export function FromValue(this: globalThis.Enum, value: number): globalThis.Enum.OperationType | undefined;
    }
    export type OperationType = OperationType.Null | OperationType.Union | OperationType.Subtraction | OperationType.Intersection | OperationType.Primitive;
    /**
     * The OrientationAlignmentMode Enum is used to select the number of `Attachments` used in an alignment.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/OrientationAlignmentMode)
     */
    export namespace OrientationAlignmentMode {
        /**
         * Use one attachment.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/OrientationAlignmentMode#OneAttachment)
         */
        export interface OneAttachment extends globalThis.EnumItem {
            Name: "OneAttachment";
            Value: 0;
            EnumType: typeof globalThis.Enum.OrientationAlignmentMode;
        }
        export const OneAttachment: OneAttachment;
        /**
         * Use two attachments.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/OrientationAlignmentMode#TwoAttachment)
         */
        export interface TwoAttachment extends globalThis.EnumItem {
            Name: "TwoAttachment";
            Value: 1;
            EnumType: typeof globalThis.Enum.OrientationAlignmentMode;
        }
        export const TwoAttachment: TwoAttachment;
        export function GetEnumItems(this: globalThis.Enum): Array<globalThis.Enum.OrientationAlignmentMode>;
        export function FromName(this: globalThis.Enum, name: string): globalThis.Enum.OrientationAlignmentMode | undefined;
        export function FromValue(this: globalThis.Enum, value: number): globalThis.Enum.OrientationAlignmentMode | undefined;
    }
    export type OrientationAlignmentMode = OrientationAlignmentMode.OneAttachment | OrientationAlignmentMode.TwoAttachment;
    /**
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/OutfitSource)
     */
    export namespace OutfitSource {
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/OutfitSource#All)
         */
        export interface All extends globalThis.EnumItem {
            Name: "All";
            Value: 1;
            EnumType: typeof globalThis.Enum.OutfitSource;
        }
        export const All: All;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/OutfitSource#Created)
         */
        export interface Created extends globalThis.EnumItem {
            Name: "Created";
            Value: 2;
            EnumType: typeof globalThis.Enum.OutfitSource;
        }
        export const Created: Created;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/OutfitSource#Purchased)
         */
        export interface Purchased extends globalThis.EnumItem {
            Name: "Purchased";
            Value: 3;
            EnumType: typeof globalThis.Enum.OutfitSource;
        }
        export const Purchased: Purchased;
        export function GetEnumItems(this: globalThis.Enum): Array<globalThis.Enum.OutfitSource>;
        export function FromName(this: globalThis.Enum, name: string): globalThis.Enum.OutfitSource | undefined;
        export function FromValue(this: globalThis.Enum, value: number): globalThis.Enum.OutfitSource | undefined;
    }
    export type OutfitSource = OutfitSource.All | OutfitSource.Created | OutfitSource.Purchased;
    /**
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/OutfitType)
     */
    export namespace OutfitType {
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/OutfitType#All)
         */
        export interface All extends globalThis.EnumItem {
            Name: "All";
            Value: 1;
            EnumType: typeof globalThis.Enum.OutfitType;
        }
        export const All: All;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/OutfitType#Avatar)
         */
        export interface Avatar extends globalThis.EnumItem {
            Name: "Avatar";
            Value: 2;
            EnumType: typeof globalThis.Enum.OutfitType;
        }
        export const Avatar: Avatar;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/OutfitType#DynamicHead)
         */
        export interface DynamicHead extends globalThis.EnumItem {
            Name: "DynamicHead";
            Value: 3;
            EnumType: typeof globalThis.Enum.OutfitType;
        }
        export const DynamicHead: DynamicHead;
        export function GetEnumItems(this: globalThis.Enum): Array<globalThis.Enum.OutfitType>;
        export function FromName(this: globalThis.Enum, name: string): globalThis.Enum.OutfitType | undefined;
        export function FromValue(this: globalThis.Enum, value: number): globalThis.Enum.OutfitType | undefined;
    }
    export type OutfitType = OutfitType.All | OutfitType.Avatar | OutfitType.DynamicHead;
    /**
     * Sets the layout mode of the output.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/OutputLayoutMode)
     */
    export namespace OutputLayoutMode {
        /**
         * The output layout is horizontal (x-axis).
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/OutputLayoutMode#Horizontal)
         */
        export interface Horizontal extends globalThis.EnumItem {
            Name: "Horizontal";
            Value: 0;
            EnumType: typeof globalThis.Enum.OutputLayoutMode;
        }
        export const Horizontal: Horizontal;
        /**
         * The output layout is vertical (y-axis).
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/OutputLayoutMode#Vertical)
         */
        export interface Vertical extends globalThis.EnumItem {
            Name: "Vertical";
            Value: 1;
            EnumType: typeof globalThis.Enum.OutputLayoutMode;
        }
        export const Vertical: Vertical;
        export function GetEnumItems(this: globalThis.Enum): Array<globalThis.Enum.OutputLayoutMode>;
        export function FromName(this: globalThis.Enum, name: string): globalThis.Enum.OutputLayoutMode | undefined;
        export function FromValue(this: globalThis.Enum, value: number): globalThis.Enum.OutputLayoutMode | undefined;
    }
    export type OutputLayoutMode = OutputLayoutMode.Horizontal | OutputLayoutMode.Vertical;
    /**
     * Overrides the behavior of the mouse icon to either force that it is always shown or force that it is always hidden.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/OverrideMouseIconBehavior)
     */
    export namespace OverrideMouseIconBehavior {
        /**
         * The mouse icon behavior is not overridden - default behavior is used.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/OverrideMouseIconBehavior#None)
         */
        export interface None extends globalThis.EnumItem {
            Name: "None";
            Value: 0;
            EnumType: typeof globalThis.Enum.OverrideMouseIconBehavior;
        }
        export const None: None;
        /**
         * The mouse icon is forced to always remain shown/visible.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/OverrideMouseIconBehavior#ForceShow)
         */
        export interface ForceShow extends globalThis.EnumItem {
            Name: "ForceShow";
            Value: 1;
            EnumType: typeof globalThis.Enum.OverrideMouseIconBehavior;
        }
        export const ForceShow: ForceShow;
        /**
         * The mouse icon is forced to always remain hidden/invisible.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/OverrideMouseIconBehavior#ForceHide)
         */
        export interface ForceHide extends globalThis.EnumItem {
            Name: "ForceHide";
            Value: 2;
            EnumType: typeof globalThis.Enum.OverrideMouseIconBehavior;
        }
        export const ForceHide: ForceHide;
        export function GetEnumItems(this: globalThis.Enum): Array<globalThis.Enum.OverrideMouseIconBehavior>;
        export function FromName(this: globalThis.Enum, name: string): globalThis.Enum.OverrideMouseIconBehavior | undefined;
        export function FromValue(this: globalThis.Enum, value: number): globalThis.Enum.OverrideMouseIconBehavior | undefined;
    }
    export type OverrideMouseIconBehavior = OverrideMouseIconBehavior.None | OverrideMouseIconBehavior.ForceShow | OverrideMouseIconBehavior.ForceHide;
    /**
     * Indicates the current user's or group roleset's permission to the package.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/PackagePermission)
     */
    export namespace PackagePermission {
        /**
         * Permission data is not available for the current user or group roleset.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/PackagePermission#None)
         */
        export interface None extends globalThis.EnumItem {
            Name: "None";
            Value: 0;
            EnumType: typeof globalThis.Enum.PackagePermission;
        }
        export const None: None;
        /**
         * The current user or group roleset doesn't have access.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/PackagePermission#NoAccess)
         */
        export interface NoAccess extends globalThis.EnumItem {
            Name: "NoAccess";
            Value: 1;
            EnumType: typeof globalThis.Enum.PackagePermission;
        }
        export const NoAccess: NoAccess;
        /**
         * The current user's or group roleset's permission is revoked.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/PackagePermission#Revoked)
         */
        export interface Revoked extends globalThis.EnumItem {
            Name: "Revoked";
            Value: 2;
            EnumType: typeof globalThis.Enum.PackagePermission;
        }
        export const Revoked: Revoked;
        /**
         * The current user or group roleset can download a copy of the package from Roblox.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/PackagePermission#UseView)
         */
        export interface UseView extends globalThis.EnumItem {
            Name: "UseView";
            Value: 3;
            EnumType: typeof globalThis.Enum.PackagePermission;
        }
        export const UseView: UseView;
        /**
         * The current user or group roleset can download a copy of the package from Roblox and publish package changes to Roblox.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/PackagePermission#Edit)
         */
        export interface Edit extends globalThis.EnumItem {
            Name: "Edit";
            Value: 4;
            EnumType: typeof globalThis.Enum.PackagePermission;
        }
        export const Edit: Edit;
        /**
         * The current user or group roleset can download a copy of the page from Roblox, publish package changes to Roblox, and manage who has access to the package.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/PackagePermission#Own)
         */
        export interface Own extends globalThis.EnumItem {
            Name: "Own";
            Value: 5;
            EnumType: typeof globalThis.Enum.PackagePermission;
        }
        export const Own: Own;
        export function GetEnumItems(this: globalThis.Enum): Array<globalThis.Enum.PackagePermission>;
        export function FromName(this: globalThis.Enum, name: string): globalThis.Enum.PackagePermission | undefined;
        export function FromValue(this: globalThis.Enum, value: number): globalThis.Enum.PackagePermission | undefined;
    }
    export type PackagePermission = PackagePermission.None | PackagePermission.NoAccess | PackagePermission.Revoked | PackagePermission.UseView | PackagePermission.Edit | PackagePermission.Own;
    /**
     * Controls the `Part.Shape` of an object.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/PartType)
     */
    export namespace PartType {
        /**
         * A spherical shape.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/PartType#Ball)
         */
        export interface Ball extends globalThis.EnumItem {
            Name: "Ball";
            Value: 0;
            EnumType: typeof globalThis.Enum.PartType;
        }
        export const Ball: Ball;
        /**
         * A block shape.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/PartType#Block)
         */
        export interface Block extends globalThis.EnumItem {
            Name: "Block";
            Value: 1;
            EnumType: typeof globalThis.Enum.PartType;
        }
        export const Block: Block;
        /**
         * A cylinder shape oriented along the **X** axis.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/PartType#Cylinder)
         */
        export interface Cylinder extends globalThis.EnumItem {
            Name: "Cylinder";
            Value: 2;
            EnumType: typeof globalThis.Enum.PartType;
        }
        export const Cylinder: Cylinder;
        /**
         * A wedge shape with a slope on one side.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/PartType#Wedge)
         */
        export interface Wedge extends globalThis.EnumItem {
            Name: "Wedge";
            Value: 3;
            EnumType: typeof globalThis.Enum.PartType;
        }
        export const Wedge: Wedge;
        /**
         * A wedge shape with slopes on two sides.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/PartType#CornerWedge)
         */
        export interface CornerWedge extends globalThis.EnumItem {
            Name: "CornerWedge";
            Value: 4;
            EnumType: typeof globalThis.Enum.PartType;
        }
        export const CornerWedge: CornerWedge;
        export function GetEnumItems(this: globalThis.Enum): Array<globalThis.Enum.PartType>;
        export function FromName(this: globalThis.Enum, name: string): globalThis.Enum.PartType | undefined;
        export function FromValue(this: globalThis.Enum, value: number): globalThis.Enum.PartType | undefined;
    }
    export type PartType = PartType.Ball | PartType.Block | PartType.Cylinder | PartType.Wedge | PartType.CornerWedge;
    /**
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/ParticleEmitterShape)
     */
    export namespace ParticleEmitterShape {
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/ParticleEmitterShape#Box)
         */
        export interface Box extends globalThis.EnumItem {
            Name: "Box";
            Value: 0;
            EnumType: typeof globalThis.Enum.ParticleEmitterShape;
        }
        export const Box: Box;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/ParticleEmitterShape#Sphere)
         */
        export interface Sphere extends globalThis.EnumItem {
            Name: "Sphere";
            Value: 1;
            EnumType: typeof globalThis.Enum.ParticleEmitterShape;
        }
        export const Sphere: Sphere;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/ParticleEmitterShape#Cylinder)
         */
        export interface Cylinder extends globalThis.EnumItem {
            Name: "Cylinder";
            Value: 2;
            EnumType: typeof globalThis.Enum.ParticleEmitterShape;
        }
        export const Cylinder: Cylinder;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/ParticleEmitterShape#Disc)
         */
        export interface Disc extends globalThis.EnumItem {
            Name: "Disc";
            Value: 3;
            EnumType: typeof globalThis.Enum.ParticleEmitterShape;
        }
        export const Disc: Disc;
        export function GetEnumItems(this: globalThis.Enum): Array<globalThis.Enum.ParticleEmitterShape>;
        export function FromName(this: globalThis.Enum, name: string): globalThis.Enum.ParticleEmitterShape | undefined;
        export function FromValue(this: globalThis.Enum, value: number): globalThis.Enum.ParticleEmitterShape | undefined;
    }
    export type ParticleEmitterShape = ParticleEmitterShape.Box | ParticleEmitterShape.Sphere | ParticleEmitterShape.Cylinder | ParticleEmitterShape.Disc;
    /**
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/ParticleEmitterShapeInOut)
     */
    export namespace ParticleEmitterShapeInOut {
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/ParticleEmitterShapeInOut#Outward)
         */
        export interface Outward extends globalThis.EnumItem {
            Name: "Outward";
            Value: 0;
            EnumType: typeof globalThis.Enum.ParticleEmitterShapeInOut;
        }
        export const Outward: Outward;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/ParticleEmitterShapeInOut#Inward)
         */
        export interface Inward extends globalThis.EnumItem {
            Name: "Inward";
            Value: 1;
            EnumType: typeof globalThis.Enum.ParticleEmitterShapeInOut;
        }
        export const Inward: Inward;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/ParticleEmitterShapeInOut#InAndOut)
         */
        export interface InAndOut extends globalThis.EnumItem {
            Name: "InAndOut";
            Value: 2;
            EnumType: typeof globalThis.Enum.ParticleEmitterShapeInOut;
        }
        export const InAndOut: InAndOut;
        export function GetEnumItems(this: globalThis.Enum): Array<globalThis.Enum.ParticleEmitterShapeInOut>;
        export function FromName(this: globalThis.Enum, name: string): globalThis.Enum.ParticleEmitterShapeInOut | undefined;
        export function FromValue(this: globalThis.Enum, value: number): globalThis.Enum.ParticleEmitterShapeInOut | undefined;
    }
    export type ParticleEmitterShapeInOut = ParticleEmitterShapeInOut.Outward | ParticleEmitterShapeInOut.Inward | ParticleEmitterShapeInOut.InAndOut;
    /**
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/ParticleEmitterShapeStyle)
     */
    export namespace ParticleEmitterShapeStyle {
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/ParticleEmitterShapeStyle#Volume)
         */
        export interface Volume extends globalThis.EnumItem {
            Name: "Volume";
            Value: 0;
            EnumType: typeof globalThis.Enum.ParticleEmitterShapeStyle;
        }
        export const Volume: Volume;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/ParticleEmitterShapeStyle#Surface)
         */
        export interface Surface extends globalThis.EnumItem {
            Name: "Surface";
            Value: 1;
            EnumType: typeof globalThis.Enum.ParticleEmitterShapeStyle;
        }
        export const Surface: Surface;
        export function GetEnumItems(this: globalThis.Enum): Array<globalThis.Enum.ParticleEmitterShapeStyle>;
        export function FromName(this: globalThis.Enum, name: string): globalThis.Enum.ParticleEmitterShapeStyle | undefined;
        export function FromValue(this: globalThis.Enum, value: number): globalThis.Enum.ParticleEmitterShapeStyle | undefined;
    }
    export type ParticleEmitterShapeStyle = ParticleEmitterShapeStyle.Volume | ParticleEmitterShapeStyle.Surface;
    /**
     * Determines the layout of the flipbook texture.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/ParticleFlipbookLayout)
     */
    export namespace ParticleFlipbookLayout {
        /**
         * Disable flipbook features and use the texture as a single static texture over the particle's lifetime.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/ParticleFlipbookLayout#None)
         */
        export interface None extends globalThis.EnumItem {
            Name: "None";
            Value: 0;
            EnumType: typeof globalThis.Enum.ParticleFlipbookLayout;
        }
        export const None: None;
        /**
         * 2×2 frames for a 4-frame animation.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/ParticleFlipbookLayout#Grid2x2)
         */
        export interface Grid2x2 extends globalThis.EnumItem {
            Name: "Grid2x2";
            Value: 1;
            EnumType: typeof globalThis.Enum.ParticleFlipbookLayout;
        }
        export const Grid2x2: Grid2x2;
        /**
         * 4×4 frames for a 16-frame animation.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/ParticleFlipbookLayout#Grid4x4)
         */
        export interface Grid4x4 extends globalThis.EnumItem {
            Name: "Grid4x4";
            Value: 2;
            EnumType: typeof globalThis.Enum.ParticleFlipbookLayout;
        }
        export const Grid4x4: Grid4x4;
        /**
         * 8×8 frames for a 64-frame animation.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/ParticleFlipbookLayout#Grid8x8)
         */
        export interface Grid8x8 extends globalThis.EnumItem {
            Name: "Grid8x8";
            Value: 3;
            EnumType: typeof globalThis.Enum.ParticleFlipbookLayout;
        }
        export const Grid8x8: Grid8x8;
        export function GetEnumItems(this: globalThis.Enum): Array<globalThis.Enum.ParticleFlipbookLayout>;
        export function FromName(this: globalThis.Enum, name: string): globalThis.Enum.ParticleFlipbookLayout | undefined;
        export function FromValue(this: globalThis.Enum, value: number): globalThis.Enum.ParticleFlipbookLayout | undefined;
    }
    export type ParticleFlipbookLayout = ParticleFlipbookLayout.None | ParticleFlipbookLayout.Grid2x2 | ParticleFlipbookLayout.Grid4x4 | ParticleFlipbookLayout.Grid8x8;
    /**
     * Determines the type of the flipbook animation.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/ParticleFlipbookMode)
     */
    export namespace ParticleFlipbookMode {
        /**
         * Continuously play through all frames, starting back at the first frame after playing the last.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/ParticleFlipbookMode#Loop)
         */
        export interface Loop extends globalThis.EnumItem {
            Name: "Loop";
            Value: 0;
            EnumType: typeof globalThis.Enum.ParticleFlipbookMode;
        }
        export const Loop: Loop;
        /**
         * Play through the animation only once across the particle's lifetime. With this setting, the `ParticleEmitter.FlipbookFramerate` property doesn't apply; instead, the framerate is determined by the particle's `ParticleEmitter.Lifetime` divided evenly by the number of frames in the animation. **OneShot** animations are useful for clear non-repeating animations, such as an explosion that creates a puff of smoke and then fades out.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/ParticleFlipbookMode#OneShot)
         */
        export interface OneShot extends globalThis.EnumItem {
            Name: "OneShot";
            Value: 1;
            EnumType: typeof globalThis.Enum.ParticleFlipbookMode;
        }
        export const OneShot: OneShot;
        /**
         * Play from the first to the last frame, then in reverse from the last to the first, repeating throughout the `ParticleEmitter.Lifetime` of the particle.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/ParticleFlipbookMode#PingPong)
         */
        export interface PingPong extends globalThis.EnumItem {
            Name: "PingPong";
            Value: 2;
            EnumType: typeof globalThis.Enum.ParticleFlipbookMode;
        }
        export const PingPong: PingPong;
        /**
         * Play the frames in a random order, blending/crossfading from one frame to the next. This can be useful for organic particle textures at low framerates, such as stars slowly twinkling between subtly different shapes.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/ParticleFlipbookMode#Random)
         */
        export interface Random extends globalThis.EnumItem {
            Name: "Random";
            Value: 3;
            EnumType: typeof globalThis.Enum.ParticleFlipbookMode;
        }
        export const Random: Random;
        export function GetEnumItems(this: globalThis.Enum): Array<globalThis.Enum.ParticleFlipbookMode>;
        export function FromName(this: globalThis.Enum, name: string): globalThis.Enum.ParticleFlipbookMode | undefined;
        export function FromValue(this: globalThis.Enum, value: number): globalThis.Enum.ParticleFlipbookMode | undefined;
    }
    export type ParticleFlipbookMode = ParticleFlipbookMode.Loop | ParticleFlipbookMode.OneShot | ParticleFlipbookMode.PingPong | ParticleFlipbookMode.Random;
    /**
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/ParticleFlipbookTextureCompatible)
     */
    export namespace ParticleFlipbookTextureCompatible {
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/ParticleFlipbookTextureCompatible#NotCompatible)
         */
        export interface NotCompatible extends globalThis.EnumItem {
            Name: "NotCompatible";
            Value: 0;
            EnumType: typeof globalThis.Enum.ParticleFlipbookTextureCompatible;
        }
        export const NotCompatible: NotCompatible;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/ParticleFlipbookTextureCompatible#Compatible)
         */
        export interface Compatible extends globalThis.EnumItem {
            Name: "Compatible";
            Value: 1;
            EnumType: typeof globalThis.Enum.ParticleFlipbookTextureCompatible;
        }
        export const Compatible: Compatible;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/ParticleFlipbookTextureCompatible#Unknown)
         */
        export interface Unknown extends globalThis.EnumItem {
            Name: "Unknown";
            Value: 2;
            EnumType: typeof globalThis.Enum.ParticleFlipbookTextureCompatible;
        }
        export const Unknown: Unknown;
        export function GetEnumItems(this: globalThis.Enum): Array<globalThis.Enum.ParticleFlipbookTextureCompatible>;
        export function FromName(this: globalThis.Enum, name: string): globalThis.Enum.ParticleFlipbookTextureCompatible | undefined;
        export function FromValue(this: globalThis.Enum, value: number): globalThis.Enum.ParticleFlipbookTextureCompatible | undefined;
    }
    export type ParticleFlipbookTextureCompatible = ParticleFlipbookTextureCompatible.NotCompatible | ParticleFlipbookTextureCompatible.Compatible | ParticleFlipbookTextureCompatible.Unknown;
    /**
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/ParticleOrientation)
     */
    export namespace ParticleOrientation {
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/ParticleOrientation#FacingCamera)
         */
        export interface FacingCamera extends globalThis.EnumItem {
            Name: "FacingCamera";
            Value: 0;
            EnumType: typeof globalThis.Enum.ParticleOrientation;
        }
        export const FacingCamera: FacingCamera;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/ParticleOrientation#FacingCameraWorldUp)
         */
        export interface FacingCameraWorldUp extends globalThis.EnumItem {
            Name: "FacingCameraWorldUp";
            Value: 1;
            EnumType: typeof globalThis.Enum.ParticleOrientation;
        }
        export const FacingCameraWorldUp: FacingCameraWorldUp;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/ParticleOrientation#VelocityParallel)
         */
        export interface VelocityParallel extends globalThis.EnumItem {
            Name: "VelocityParallel";
            Value: 2;
            EnumType: typeof globalThis.Enum.ParticleOrientation;
        }
        export const VelocityParallel: VelocityParallel;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/ParticleOrientation#VelocityPerpendicular)
         */
        export interface VelocityPerpendicular extends globalThis.EnumItem {
            Name: "VelocityPerpendicular";
            Value: 3;
            EnumType: typeof globalThis.Enum.ParticleOrientation;
        }
        export const VelocityPerpendicular: VelocityPerpendicular;
        export function GetEnumItems(this: globalThis.Enum): Array<globalThis.Enum.ParticleOrientation>;
        export function FromName(this: globalThis.Enum, name: string): globalThis.Enum.ParticleOrientation | undefined;
        export function FromValue(this: globalThis.Enum, value: number): globalThis.Enum.ParticleOrientation | undefined;
    }
    export type ParticleOrientation = ParticleOrientation.FacingCamera | ParticleOrientation.FacingCameraWorldUp | ParticleOrientation.VelocityParallel | ParticleOrientation.VelocityPerpendicular;
    /**
     * The success of a `Path` generated by `PathfindingService`.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/PathStatus)
     */
    export namespace PathStatus {
        /**
         * Path found successfully.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/PathStatus#Success)
         */
        export interface Success extends globalThis.EnumItem {
            Name: "Success";
            Value: 0;
            EnumType: typeof globalThis.Enum.PathStatus;
        }
        export const Success: Success;
        /**
         * Path doesn't exist.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/PathStatus#NoPath)
         */
        export interface NoPath extends globalThis.EnumItem {
            Name: "NoPath";
            Value: 5;
            EnumType: typeof globalThis.Enum.PathStatus;
        }
        export const NoPath: NoPath;
        /**
         * **Deprecated:**
         *
         * Path doesn't exist, returns path to closest point.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/PathStatus#ClosestNoPath)
         */
        export interface ClosestNoPath extends globalThis.EnumItem {
            Name: "ClosestNoPath";
            Value: 1;
            EnumType: typeof globalThis.Enum.PathStatus;
        }
        export const ClosestNoPath: ClosestNoPath;
        /**
         * **Deprecated:**
         *
         * Goal is out of MaxDistance range, returns path to closest point you can reach within MaxDistance.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/PathStatus#ClosestOutOfRange)
         */
        export interface ClosestOutOfRange extends globalThis.EnumItem {
            Name: "ClosestOutOfRange";
            Value: 2;
            EnumType: typeof globalThis.Enum.PathStatus;
        }
        export const ClosestOutOfRange: ClosestOutOfRange;
        /**
         * **Deprecated:**
         *
         * Failed to compute path; the starting point is not empty.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/PathStatus#FailStartNotEmpty)
         */
        export interface FailStartNotEmpty extends globalThis.EnumItem {
            Name: "FailStartNotEmpty";
            Value: 3;
            EnumType: typeof globalThis.Enum.PathStatus;
        }
        export const FailStartNotEmpty: FailStartNotEmpty;
        /**
         * **Deprecated:**
         *
         * Failed to compute path; the finish point is not empty.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/PathStatus#FailFinishNotEmpty)
         */
        export interface FailFinishNotEmpty extends globalThis.EnumItem {
            Name: "FailFinishNotEmpty";
            Value: 4;
            EnumType: typeof globalThis.Enum.PathStatus;
        }
        export const FailFinishNotEmpty: FailFinishNotEmpty;
        export function GetEnumItems(this: globalThis.Enum): Array<globalThis.Enum.PathStatus>;
        export function FromName(this: globalThis.Enum, name: string): globalThis.Enum.PathStatus | undefined;
        export function FromValue(this: globalThis.Enum, value: number): globalThis.Enum.PathStatus | undefined;
    }
    export type PathStatus = PathStatus.Success | PathStatus.NoPath | PathStatus.ClosestNoPath | PathStatus.ClosestOutOfRange | PathStatus.FailStartNotEmpty | PathStatus.FailFinishNotEmpty;
    /**
     * Describes the action to take when a `PathWaypoint` is reached.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/PathWaypointAction)
     */
    export namespace PathWaypointAction {
        /**
         * Walk action needed to reach the next waypoint.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/PathWaypointAction#Walk)
         */
        export interface Walk extends globalThis.EnumItem {
            Name: "Walk";
            Value: 0;
            EnumType: typeof globalThis.Enum.PathWaypointAction;
        }
        export const Walk: Walk;
        /**
         * Jump action needed to reach the next waypoint.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/PathWaypointAction#Jump)
         */
        export interface Jump extends globalThis.EnumItem {
            Name: "Jump";
            Value: 1;
            EnumType: typeof globalThis.Enum.PathWaypointAction;
        }
        export const Jump: Jump;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/PathWaypointAction#Custom)
         */
        export interface Custom extends globalThis.EnumItem {
            Name: "Custom";
            Value: 2;
            EnumType: typeof globalThis.Enum.PathWaypointAction;
        }
        export const Custom: Custom;
        export function GetEnumItems(this: globalThis.Enum): Array<globalThis.Enum.PathWaypointAction>;
        export function FromName(this: globalThis.Enum, name: string): globalThis.Enum.PathWaypointAction | undefined;
        export function FromValue(this: globalThis.Enum, value: number): globalThis.Enum.PathWaypointAction | undefined;
    }
    export type PathWaypointAction = PathWaypointAction.Walk | PathWaypointAction.Jump | PathWaypointAction.Custom;
    /**
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/PathfindingUseImprovedSearch)
     */
    export namespace PathfindingUseImprovedSearch {
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/PathfindingUseImprovedSearch#Default)
         */
        export interface Default extends globalThis.EnumItem {
            Name: "Default";
            Value: 0;
            EnumType: typeof globalThis.Enum.PathfindingUseImprovedSearch;
        }
        export const Default: Default;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/PathfindingUseImprovedSearch#Disabled)
         */
        export interface Disabled extends globalThis.EnumItem {
            Name: "Disabled";
            Value: 1;
            EnumType: typeof globalThis.Enum.PathfindingUseImprovedSearch;
        }
        export const Disabled: Disabled;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/PathfindingUseImprovedSearch#Enabled)
         */
        export interface Enabled extends globalThis.EnumItem {
            Name: "Enabled";
            Value: 2;
            EnumType: typeof globalThis.Enum.PathfindingUseImprovedSearch;
        }
        export const Enabled: Enabled;
        export function GetEnumItems(this: globalThis.Enum): Array<globalThis.Enum.PathfindingUseImprovedSearch>;
        export function FromName(this: globalThis.Enum, name: string): globalThis.Enum.PathfindingUseImprovedSearch | undefined;
        export function FromValue(this: globalThis.Enum, value: number): globalThis.Enum.PathfindingUseImprovedSearch | undefined;
    }
    export type PathfindingUseImprovedSearch = PathfindingUseImprovedSearch.Default | PathfindingUseImprovedSearch.Disabled | PathfindingUseImprovedSearch.Enabled;
    /**
     * Used to set the highest permission level that APIs have to have in order to be shown in the Object Browser.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/PermissionLevelShown)
     */
    export namespace PermissionLevelShown {
        /**
         * Member must have no security permissions in order to be shown.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/PermissionLevelShown#Game)
         */
        export interface Game extends globalThis.EnumItem {
            Name: "Game";
            Value: 0;
            EnumType: typeof globalThis.Enum.PermissionLevelShown;
        }
        export const Game: Game;
        /**
         * Member must have security permissions less than or equal to **RobloxPlaceSecurity** to be shown.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/PermissionLevelShown#RobloxGame)
         */
        export interface RobloxGame extends globalThis.EnumItem {
            Name: "RobloxGame";
            Value: 1;
            EnumType: typeof globalThis.Enum.PermissionLevelShown;
        }
        export const RobloxGame: RobloxGame;
        /**
         * Member must have security permissions less than or equal to **RobloxScriptSecurity** to be shown.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/PermissionLevelShown#RobloxScript)
         */
        export interface RobloxScript extends globalThis.EnumItem {
            Name: "RobloxScript";
            Value: 2;
            EnumType: typeof globalThis.Enum.PermissionLevelShown;
        }
        export const RobloxScript: RobloxScript;
        /**
         * Member must have security permissions less than or equal to **LocalUserSecurity** to be shown.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/PermissionLevelShown#Studio)
         */
        export interface Studio extends globalThis.EnumItem {
            Name: "Studio";
            Value: 3;
            EnumType: typeof globalThis.Enum.PermissionLevelShown;
        }
        export const Studio: Studio;
        /**
         * Member is shown no matter what security it has.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/PermissionLevelShown#Roblox)
         */
        export interface Roblox extends globalThis.EnumItem {
            Name: "Roblox";
            Value: 4;
            EnumType: typeof globalThis.Enum.PermissionLevelShown;
        }
        export const Roblox: Roblox;
        export function GetEnumItems(this: globalThis.Enum): Array<globalThis.Enum.PermissionLevelShown>;
        export function FromName(this: globalThis.Enum, name: string): globalThis.Enum.PermissionLevelShown | undefined;
        export function FromValue(this: globalThis.Enum, value: number): globalThis.Enum.PermissionLevelShown | undefined;
    }
    export type PermissionLevelShown = PermissionLevelShown.Game | PermissionLevelShown.RobloxGame | PermissionLevelShown.RobloxScript | PermissionLevelShown.Studio | PermissionLevelShown.Roblox;
    /**
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/PhysicsSimulationRate)
     */
    export namespace PhysicsSimulationRate {
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/PhysicsSimulationRate#Fixed240Hz)
         */
        export interface Fixed240Hz extends globalThis.EnumItem {
            Name: "Fixed240Hz";
            Value: 0;
            EnumType: typeof globalThis.Enum.PhysicsSimulationRate;
        }
        export const Fixed240Hz: Fixed240Hz;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/PhysicsSimulationRate#Fixed120Hz)
         */
        export interface Fixed120Hz extends globalThis.EnumItem {
            Name: "Fixed120Hz";
            Value: 1;
            EnumType: typeof globalThis.Enum.PhysicsSimulationRate;
        }
        export const Fixed120Hz: Fixed120Hz;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/PhysicsSimulationRate#Fixed60Hz)
         */
        export interface Fixed60Hz extends globalThis.EnumItem {
            Name: "Fixed60Hz";
            Value: 2;
            EnumType: typeof globalThis.Enum.PhysicsSimulationRate;
        }
        export const Fixed60Hz: Fixed60Hz;
        export function GetEnumItems(this: globalThis.Enum): Array<globalThis.Enum.PhysicsSimulationRate>;
        export function FromName(this: globalThis.Enum, name: string): globalThis.Enum.PhysicsSimulationRate | undefined;
        export function FromValue(this: globalThis.Enum, value: number): globalThis.Enum.PhysicsSimulationRate | undefined;
    }
    export type PhysicsSimulationRate = PhysicsSimulationRate.Fixed240Hz | PhysicsSimulationRate.Fixed120Hz | PhysicsSimulationRate.Fixed60Hz;
    /**
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/PhysicsSteppingMethod)
     */
    export namespace PhysicsSteppingMethod {
        /**
         * The current default is Fixed.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/PhysicsSteppingMethod#Default)
         */
        export interface Default extends globalThis.EnumItem {
            Name: "Default";
            Value: 0;
            EnumType: typeof globalThis.Enum.PhysicsSteppingMethod;
        }
        export const Default: Default;
        /**
         * All simulated assemblies inside the workspace will advance forward at 240 Hz. This option is best for optimal stability and simulation accuracy.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/PhysicsSteppingMethod#Fixed)
         */
        export interface Fixed extends globalThis.EnumItem {
            Name: "Fixed";
            Value: 1;
            EnumType: typeof globalThis.Enum.PhysicsSteppingMethod;
        }
        export const Fixed: Fixed;
        /**
         * The engine attempts to assign optimal simulation rates for individual assemblies of either 240 Hz, 120 Hz, or 60 Hz. This setting is optimized for performance.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/PhysicsSteppingMethod#Adaptive)
         */
        export interface Adaptive extends globalThis.EnumItem {
            Name: "Adaptive";
            Value: 2;
            EnumType: typeof globalThis.Enum.PhysicsSteppingMethod;
        }
        export const Adaptive: Adaptive;
        export function GetEnumItems(this: globalThis.Enum): Array<globalThis.Enum.PhysicsSteppingMethod>;
        export function FromName(this: globalThis.Enum, name: string): globalThis.Enum.PhysicsSteppingMethod | undefined;
        export function FromValue(this: globalThis.Enum, value: number): globalThis.Enum.PhysicsSteppingMethod | undefined;
    }
    export type PhysicsSteppingMethod = PhysicsSteppingMethod.Default | PhysicsSteppingMethod.Fixed | PhysicsSteppingMethod.Adaptive;
    /**
     * Host operating system of the client.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/Platform)
     */
    export namespace Platform {
        /**
         * The client is running on a Windows Operating System.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/Platform#Windows)
         */
        export interface Windows extends globalThis.EnumItem {
            Name: "Windows";
            Value: 0;
            EnumType: typeof globalThis.Enum.Platform;
        }
        export const Windows: Windows;
        /**
         * The client is running on OSX (Apple desktop).
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/Platform#OSX)
         */
        export interface OSX extends globalThis.EnumItem {
            Name: "OSX";
            Value: 1;
            EnumType: typeof globalThis.Enum.Platform;
        }
        export const OSX: OSX;
        /**
         * The client is running on IOS (Apple mobile).
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/Platform#IOS)
         */
        export interface IOS extends globalThis.EnumItem {
            Name: "IOS";
            Value: 2;
            EnumType: typeof globalThis.Enum.Platform;
        }
        export const IOS: IOS;
        /**
         * The client is running on Android (Google mobile).
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/Platform#Android)
         */
        export interface Android extends globalThis.EnumItem {
            Name: "Android";
            Value: 3;
            EnumType: typeof globalThis.Enum.Platform;
        }
        export const Android: Android;
        /**
         * The client is running on an XBox One (console).
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/Platform#XBoxOne)
         */
        export interface XBoxOne extends globalThis.EnumItem {
            Name: "XBoxOne";
            Value: 4;
            EnumType: typeof globalThis.Enum.Platform;
        }
        export const XBoxOne: XBoxOne;
        /**
         * The client is running on a PS4 (console).
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/Platform#PS4)
         */
        export interface PS4 extends globalThis.EnumItem {
            Name: "PS4";
            Value: 5;
            EnumType: typeof globalThis.Enum.Platform;
        }
        export const PS4: PS4;
        /**
         * The client is running on a PS3 (console).
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/Platform#PS3)
         */
        export interface PS3 extends globalThis.EnumItem {
            Name: "PS3";
            Value: 6;
            EnumType: typeof globalThis.Enum.Platform;
        }
        export const PS3: PS3;
        /**
         * The client is running on an XBox 360 (console).
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/Platform#XBox360)
         */
        export interface XBox360 extends globalThis.EnumItem {
            Name: "XBox360";
            Value: 7;
            EnumType: typeof globalThis.Enum.Platform;
        }
        export const XBox360: XBox360;
        /**
         * The client is running on a Wii U (console).
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/Platform#WiiU)
         */
        export interface WiiU extends globalThis.EnumItem {
            Name: "WiiU";
            Value: 8;
            EnumType: typeof globalThis.Enum.Platform;
        }
        export const WiiU: WiiU;
        /**
         * The client is running on an NX Operating System (Cisco Nexus).
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/Platform#NX)
         */
        export interface NX extends globalThis.EnumItem {
            Name: "NX";
            Value: 9;
            EnumType: typeof globalThis.Enum.Platform;
        }
        export const NX: NX;
        /**
         * The client is running on an Ouya Operating System (Android-Based).
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/Platform#Ouya)
         */
        export interface Ouya extends globalThis.EnumItem {
            Name: "Ouya";
            Value: 10;
            EnumType: typeof globalThis.Enum.Platform;
        }
        export const Ouya: Ouya;
        /**
         * The client is running on an Android TV.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/Platform#AndroidTV)
         */
        export interface AndroidTV extends globalThis.EnumItem {
            Name: "AndroidTV";
            Value: 11;
            EnumType: typeof globalThis.Enum.Platform;
        }
        export const AndroidTV: AndroidTV;
        /**
         * The client is running on Chromecast.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/Platform#Chromecast)
         */
        export interface Chromecast extends globalThis.EnumItem {
            Name: "Chromecast";
            Value: 12;
            EnumType: typeof globalThis.Enum.Platform;
        }
        export const Chromecast: Chromecast;
        /**
         * The client is running on a Linux Operating System (desktop).
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/Platform#Linux)
         */
        export interface Linux extends globalThis.EnumItem {
            Name: "Linux";
            Value: 13;
            EnumType: typeof globalThis.Enum.Platform;
        }
        export const Linux: Linux;
        /**
         * The client is running on Steam.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/Platform#SteamOS)
         */
        export interface SteamOS extends globalThis.EnumItem {
            Name: "SteamOS";
            Value: 14;
            EnumType: typeof globalThis.Enum.Platform;
        }
        export const SteamOS: SteamOS;
        /**
         * The client is running on WebOS.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/Platform#WebOS)
         */
        export interface WebOS extends globalThis.EnumItem {
            Name: "WebOS";
            Value: 15;
            EnumType: typeof globalThis.Enum.Platform;
        }
        export const WebOS: WebOS;
        /**
         * The client is running on DOS.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/Platform#DOS)
         */
        export interface DOS extends globalThis.EnumItem {
            Name: "DOS";
            Value: 16;
            EnumType: typeof globalThis.Enum.Platform;
        }
        export const DOS: DOS;
        /**
         * The client is running on BeOS.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/Platform#BeOS)
         */
        export interface BeOS extends globalThis.EnumItem {
            Name: "BeOS";
            Value: 17;
            EnumType: typeof globalThis.Enum.Platform;
        }
        export const BeOS: BeOS;
        /**
         * The client is running on UWP.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/Platform#UWP)
         */
        export interface UWP extends globalThis.EnumItem {
            Name: "UWP";
            Value: 18;
            EnumType: typeof globalThis.Enum.Platform;
        }
        export const UWP: UWP;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/Platform#PS5)
         */
        export interface PS5 extends globalThis.EnumItem {
            Name: "PS5";
            Value: 19;
            EnumType: typeof globalThis.Enum.Platform;
        }
        export const PS5: PS5;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/Platform#MetaOS)
         */
        export interface MetaOS extends globalThis.EnumItem {
            Name: "MetaOS";
            Value: 20;
            EnumType: typeof globalThis.Enum.Platform;
        }
        export const MetaOS: MetaOS;
        /**
         * The client's operating system is unknown.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/Platform#None)
         */
        export interface None extends globalThis.EnumItem {
            Name: "None";
            Value: 21;
            EnumType: typeof globalThis.Enum.Platform;
        }
        export const None: None;
        export function GetEnumItems(this: globalThis.Enum): Array<globalThis.Enum.Platform>;
        export function FromName(this: globalThis.Enum, name: string): globalThis.Enum.Platform | undefined;
        export function FromValue(this: globalThis.Enum, value: number): globalThis.Enum.Platform | undefined;
    }
    export type Platform = Platform.Windows | Platform.OSX | Platform.IOS | Platform.Android | Platform.XBoxOne | Platform.PS4 | Platform.PS3 | Platform.XBox360 | Platform.WiiU | Platform.NX | Platform.Ouya | Platform.AndroidTV | Platform.Chromecast | Platform.Linux | Platform.SteamOS | Platform.WebOS | Platform.DOS | Platform.BeOS | Platform.UWP | Platform.PS5 | Platform.MetaOS | Platform.None;
    /**
     * Describes the current state of a `Tween` in its `Tween.PlaybackState` property.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/PlaybackState)
     */
    export namespace PlaybackState {
        /**
         * The tween has been created, but has yet to be played. After exiting this state, the tween never enters it again.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/PlaybackState#Begin)
         */
        export interface Begin extends globalThis.EnumItem {
            Name: "Begin";
            Value: 0;
            EnumType: typeof globalThis.Enum.PlaybackState;
        }
        export const Begin: Begin;
        /**
         * The tween is waiting for the duration specified in its `TweenInfo.DelayTime`. After the delay elapses, the tween plays.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/PlaybackState#Delayed)
         */
        export interface Delayed extends globalThis.EnumItem {
            Name: "Delayed";
            Value: 1;
            EnumType: typeof globalThis.Enum.PlaybackState;
        }
        export const Delayed: Delayed;
        /**
         * The tween is currently in progress.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/PlaybackState#Playing)
         */
        export interface Playing extends globalThis.EnumItem {
            Name: "Playing";
            Value: 2;
            EnumType: typeof globalThis.Enum.PlaybackState;
        }
        export const Playing: Playing;
        /**
         * The tween is paused in the middle of playing.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/PlaybackState#Paused)
         */
        export interface Paused extends globalThis.EnumItem {
            Name: "Paused";
            Value: 3;
            EnumType: typeof globalThis.Enum.PlaybackState;
        }
        export const Paused: Paused;
        /**
         * The tween completed successfully.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/PlaybackState#Completed)
         */
        export interface Completed extends globalThis.EnumItem {
            Name: "Completed";
            Value: 4;
            EnumType: typeof globalThis.Enum.PlaybackState;
        }
        export const Completed: Completed;
        /**
         * The tween was cancelled before completion.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/PlaybackState#Cancelled)
         */
        export interface Cancelled extends globalThis.EnumItem {
            Name: "Cancelled";
            Value: 5;
            EnumType: typeof globalThis.Enum.PlaybackState;
        }
        export const Cancelled: Cancelled;
        export function GetEnumItems(this: globalThis.Enum): Array<globalThis.Enum.PlaybackState>;
        export function FromName(this: globalThis.Enum, name: string): globalThis.Enum.PlaybackState | undefined;
        export function FromValue(this: globalThis.Enum, value: number): globalThis.Enum.PlaybackState | undefined;
    }
    export type PlaybackState = PlaybackState.Begin | PlaybackState.Delayed | PlaybackState.Playing | PlaybackState.Paused | PlaybackState.Completed | PlaybackState.Cancelled;
    /**
     * References a movement action taken by a player.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/PlayerActions)
     */
    export namespace PlayerActions {
        /**
         * The player moved forward.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/PlayerActions#CharacterForward)
         */
        export interface CharacterForward extends globalThis.EnumItem {
            Name: "CharacterForward";
            Value: 0;
            EnumType: typeof globalThis.Enum.PlayerActions;
        }
        export const CharacterForward: CharacterForward;
        /**
         * The player moved backward.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/PlayerActions#CharacterBackward)
         */
        export interface CharacterBackward extends globalThis.EnumItem {
            Name: "CharacterBackward";
            Value: 1;
            EnumType: typeof globalThis.Enum.PlayerActions;
        }
        export const CharacterBackward: CharacterBackward;
        /**
         * The player moved left.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/PlayerActions#CharacterLeft)
         */
        export interface CharacterLeft extends globalThis.EnumItem {
            Name: "CharacterLeft";
            Value: 2;
            EnumType: typeof globalThis.Enum.PlayerActions;
        }
        export const CharacterLeft: CharacterLeft;
        /**
         * The player moved right.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/PlayerActions#CharacterRight)
         */
        export interface CharacterRight extends globalThis.EnumItem {
            Name: "CharacterRight";
            Value: 3;
            EnumType: typeof globalThis.Enum.PlayerActions;
        }
        export const CharacterRight: CharacterRight;
        /**
         * The player jumped.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/PlayerActions#CharacterJump)
         */
        export interface CharacterJump extends globalThis.EnumItem {
            Name: "CharacterJump";
            Value: 4;
            EnumType: typeof globalThis.Enum.PlayerActions;
        }
        export const CharacterJump: CharacterJump;
        export function GetEnumItems(this: globalThis.Enum): Array<globalThis.Enum.PlayerActions>;
        export function FromName(this: globalThis.Enum, name: string): globalThis.Enum.PlayerActions | undefined;
        export function FromValue(this: globalThis.Enum, value: number): globalThis.Enum.PlayerActions | undefined;
    }
    export type PlayerActions = PlayerActions.CharacterForward | PlayerActions.CharacterBackward | PlayerActions.CharacterLeft | PlayerActions.CharacterRight | PlayerActions.CharacterJump;
    /**
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/PlayerCharacterDestroyBehavior)
     */
    export namespace PlayerCharacterDestroyBehavior {
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/PlayerCharacterDestroyBehavior#Default)
         */
        export interface Default extends globalThis.EnumItem {
            Name: "Default";
            Value: 0;
            EnumType: typeof globalThis.Enum.PlayerCharacterDestroyBehavior;
        }
        export const Default: Default;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/PlayerCharacterDestroyBehavior#Disabled)
         */
        export interface Disabled extends globalThis.EnumItem {
            Name: "Disabled";
            Value: 1;
            EnumType: typeof globalThis.Enum.PlayerCharacterDestroyBehavior;
        }
        export const Disabled: Disabled;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/PlayerCharacterDestroyBehavior#Enabled)
         */
        export interface Enabled extends globalThis.EnumItem {
            Name: "Enabled";
            Value: 2;
            EnumType: typeof globalThis.Enum.PlayerCharacterDestroyBehavior;
        }
        export const Enabled: Enabled;
        export function GetEnumItems(this: globalThis.Enum): Array<globalThis.Enum.PlayerCharacterDestroyBehavior>;
        export function FromName(this: globalThis.Enum, name: string): globalThis.Enum.PlayerCharacterDestroyBehavior | undefined;
        export function FromValue(this: globalThis.Enum, value: number): globalThis.Enum.PlayerCharacterDestroyBehavior | undefined;
    }
    export type PlayerCharacterDestroyBehavior = PlayerCharacterDestroyBehavior.Default | PlayerCharacterDestroyBehavior.Disabled | PlayerCharacterDestroyBehavior.Enabled;
    /**
     * Determines the style of a chat message.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/PlayerChatType)
     */
    export namespace PlayerChatType {
        /**
         * A global message that everyone can receive.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/PlayerChatType#All)
         */
        export interface All extends globalThis.EnumItem {
            Name: "All";
            Value: 0;
            EnumType: typeof globalThis.Enum.PlayerChatType;
        }
        export const All: All;
        /**
         * A team message only players in the same team can receive.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/PlayerChatType#Team)
         */
        export interface Team extends globalThis.EnumItem {
            Name: "Team";
            Value: 1;
            EnumType: typeof globalThis.Enum.PlayerChatType;
        }
        export const Team: Team;
        /**
         * A whispered message only the person it's whispered to can receive.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/PlayerChatType#Whisper)
         */
        export interface Whisper extends globalThis.EnumItem {
            Name: "Whisper";
            Value: 2;
            EnumType: typeof globalThis.Enum.PlayerChatType;
        }
        export const Whisper: Whisper;
        export function GetEnumItems(this: globalThis.Enum): Array<globalThis.Enum.PlayerChatType>;
        export function FromName(this: globalThis.Enum, name: string): globalThis.Enum.PlayerChatType | undefined;
        export function FromValue(this: globalThis.Enum, value: number): globalThis.Enum.PlayerChatType | undefined;
    }
    export type PlayerChatType = PlayerChatType.All | PlayerChatType.Team | PlayerChatType.Whisper;
    /**
     * Used exclusively by Pose.EasingDirection to specify direction of the EasingStyle curve.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/PoseEasingDirection)
     */
    export namespace PoseEasingDirection {
        /**
         * The EasingStyle curve is reversed, with the easing becoming linear as it approaches the next keyframe.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/PoseEasingDirection#In)
         */
        export interface In extends globalThis.EnumItem {
            Name: "In";
            Value: 0;
            EnumType: typeof globalThis.Enum.PoseEasingDirection;
        }
        export const In: In;
        /**
         * EasingStyle curves are applied in the forward direction, from the current keyframe to the next.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/PoseEasingDirection#Out)
         */
        export interface Out extends globalThis.EnumItem {
            Name: "Out";
            Value: 1;
            EnumType: typeof globalThis.Enum.PoseEasingDirection;
        }
        export const Out: Out;
        /**
         * Two easing curves are applied back-to-back with the linear ends of the curves meeting in the middle.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/PoseEasingDirection#InOut)
         */
        export interface InOut extends globalThis.EnumItem {
            Name: "InOut";
            Value: 2;
            EnumType: typeof globalThis.Enum.PoseEasingDirection;
        }
        export const InOut: InOut;
        export function GetEnumItems(this: globalThis.Enum): Array<globalThis.Enum.PoseEasingDirection>;
        export function FromName(this: globalThis.Enum, name: string): globalThis.Enum.PoseEasingDirection | undefined;
        export function FromValue(this: globalThis.Enum, value: number): globalThis.Enum.PoseEasingDirection | undefined;
    }
    export type PoseEasingDirection = PoseEasingDirection.In | PoseEasingDirection.Out | PoseEasingDirection.InOut;
    /**
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/PoseEasingStyle)
     */
    export namespace PoseEasingStyle {
        /**
         * Poses interpolate linearly between key frames.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/PoseEasingStyle#Linear)
         */
        export interface Linear extends globalThis.EnumItem {
            Name: "Linear";
            Value: 0;
            EnumType: typeof globalThis.Enum.PoseEasingStyle;
        }
        export const Linear: Linear;
        /**
         * Poses do not interpolate but snap to the key frame indicated by the `PoseEasingDirection`.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/PoseEasingStyle#Constant)
         */
        export interface Constant extends globalThis.EnumItem {
            Name: "Constant";
            Value: 1;
            EnumType: typeof globalThis.Enum.PoseEasingStyle;
        }
        export const Constant: Constant;
        /**
         * Pose interpolation will overshoot like it is elastic.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/PoseEasingStyle#Elastic)
         */
        export interface Elastic extends globalThis.EnumItem {
            Name: "Elastic";
            Value: 2;
            EnumType: typeof globalThis.Enum.PoseEasingStyle;
        }
        export const Elastic: Elastic;
        /**
         * Deprecated - Use `PoseEasingStyle.CubicV2`. Pose interpolation is a cubic curve between keyframes based on the `PoseEasingDirection`.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/PoseEasingStyle#Cubic)
         */
        export interface Cubic extends globalThis.EnumItem {
            Name: "Cubic";
            Value: 3;
            EnumType: typeof globalThis.Enum.PoseEasingStyle;
        }
        export const Cubic: Cubic;
        /**
         * Pose interpolation produces a bounce like effect between key frames.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/PoseEasingStyle#Bounce)
         */
        export interface Bounce extends globalThis.EnumItem {
            Name: "Bounce";
            Value: 4;
            EnumType: typeof globalThis.Enum.PoseEasingStyle;
        }
        export const Bounce: Bounce;
        /**
         * Pose interpolation is a cubic curve between keyframes based on `PoseEasingDirection`.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/PoseEasingStyle#CubicV2)
         */
        export interface CubicV2 extends globalThis.EnumItem {
            Name: "CubicV2";
            Value: 5;
            EnumType: typeof globalThis.Enum.PoseEasingStyle;
        }
        export const CubicV2: CubicV2;
        export function GetEnumItems(this: globalThis.Enum): Array<globalThis.Enum.PoseEasingStyle>;
        export function FromName(this: globalThis.Enum, name: string): globalThis.Enum.PoseEasingStyle | undefined;
        export function FromValue(this: globalThis.Enum, value: number): globalThis.Enum.PoseEasingStyle | undefined;
    }
    export type PoseEasingStyle = PoseEasingStyle.Linear | PoseEasingStyle.Constant | PoseEasingStyle.Elastic | PoseEasingStyle.Cubic | PoseEasingStyle.Bounce | PoseEasingStyle.CubicV2;
    /**
     * The PositionAlignmentMode Enum is used to select the number of `Attachments` used in an alignment.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/PositionAlignmentMode)
     */
    export namespace PositionAlignmentMode {
        /**
         * Use one attachment.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/PositionAlignmentMode#OneAttachment)
         */
        export interface OneAttachment extends globalThis.EnumItem {
            Name: "OneAttachment";
            Value: 0;
            EnumType: typeof globalThis.Enum.PositionAlignmentMode;
        }
        export const OneAttachment: OneAttachment;
        /**
         * Use two attachments.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/PositionAlignmentMode#TwoAttachment)
         */
        export interface TwoAttachment extends globalThis.EnumItem {
            Name: "TwoAttachment";
            Value: 1;
            EnumType: typeof globalThis.Enum.PositionAlignmentMode;
        }
        export const TwoAttachment: TwoAttachment;
        export function GetEnumItems(this: globalThis.Enum): Array<globalThis.Enum.PositionAlignmentMode>;
        export function FromName(this: globalThis.Enum, name: string): globalThis.Enum.PositionAlignmentMode | undefined;
        export function FromValue(this: globalThis.Enum, value: number): globalThis.Enum.PositionAlignmentMode | undefined;
    }
    export type PositionAlignmentMode = PositionAlignmentMode.OneAttachment | PositionAlignmentMode.TwoAttachment;
    /**
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/PreferredTextSize)
     */
    export namespace PreferredTextSize {
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/PreferredTextSize#Medium)
         */
        export interface Medium extends globalThis.EnumItem {
            Name: "Medium";
            Value: 1;
            EnumType: typeof globalThis.Enum.PreferredTextSize;
        }
        export const Medium: Medium;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/PreferredTextSize#Large)
         */
        export interface Large extends globalThis.EnumItem {
            Name: "Large";
            Value: 2;
            EnumType: typeof globalThis.Enum.PreferredTextSize;
        }
        export const Large: Large;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/PreferredTextSize#Larger)
         */
        export interface Larger extends globalThis.EnumItem {
            Name: "Larger";
            Value: 3;
            EnumType: typeof globalThis.Enum.PreferredTextSize;
        }
        export const Larger: Larger;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/PreferredTextSize#Largest)
         */
        export interface Largest extends globalThis.EnumItem {
            Name: "Largest";
            Value: 4;
            EnumType: typeof globalThis.Enum.PreferredTextSize;
        }
        export const Largest: Largest;
        export function GetEnumItems(this: globalThis.Enum): Array<globalThis.Enum.PreferredTextSize>;
        export function FromName(this: globalThis.Enum, name: string): globalThis.Enum.PreferredTextSize | undefined;
        export function FromValue(this: globalThis.Enum, value: number): globalThis.Enum.PreferredTextSize | undefined;
    }
    export type PreferredTextSize = PreferredTextSize.Medium | PreferredTextSize.Large | PreferredTextSize.Larger | PreferredTextSize.Largest;
    /**
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/PrimalPhysicsSolver)
     */
    export namespace PrimalPhysicsSolver {
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/PrimalPhysicsSolver#Default)
         */
        export interface Default extends globalThis.EnumItem {
            Name: "Default";
            Value: 0;
            EnumType: typeof globalThis.Enum.PrimalPhysicsSolver;
        }
        export const Default: Default;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/PrimalPhysicsSolver#Experimental)
         */
        export interface Experimental extends globalThis.EnumItem {
            Name: "Experimental";
            Value: 1;
            EnumType: typeof globalThis.Enum.PrimalPhysicsSolver;
        }
        export const Experimental: Experimental;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/PrimalPhysicsSolver#Disabled)
         */
        export interface Disabled extends globalThis.EnumItem {
            Name: "Disabled";
            Value: 2;
            EnumType: typeof globalThis.Enum.PrimalPhysicsSolver;
        }
        export const Disabled: Disabled;
        export function GetEnumItems(this: globalThis.Enum): Array<globalThis.Enum.PrimalPhysicsSolver>;
        export function FromName(this: globalThis.Enum, name: string): globalThis.Enum.PrimalPhysicsSolver | undefined;
        export function FromValue(this: globalThis.Enum, value: number): globalThis.Enum.PrimalPhysicsSolver | undefined;
    }
    export type PrimalPhysicsSolver = PrimalPhysicsSolver.Default | PrimalPhysicsSolver.Experimental | PrimalPhysicsSolver.Disabled;
    /**
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/PrimitiveType)
     */
    export namespace PrimitiveType {
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/PrimitiveType#Null)
         */
        export interface Null extends globalThis.EnumItem {
            Name: "Null";
            Value: 0;
            EnumType: typeof globalThis.Enum.PrimitiveType;
        }
        export const Null: Null;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/PrimitiveType#Ball)
         */
        export interface Ball extends globalThis.EnumItem {
            Name: "Ball";
            Value: 1;
            EnumType: typeof globalThis.Enum.PrimitiveType;
        }
        export const Ball: Ball;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/PrimitiveType#Cylinder)
         */
        export interface Cylinder extends globalThis.EnumItem {
            Name: "Cylinder";
            Value: 2;
            EnumType: typeof globalThis.Enum.PrimitiveType;
        }
        export const Cylinder: Cylinder;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/PrimitiveType#Block)
         */
        export interface Block extends globalThis.EnumItem {
            Name: "Block";
            Value: 3;
            EnumType: typeof globalThis.Enum.PrimitiveType;
        }
        export const Block: Block;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/PrimitiveType#Wedge)
         */
        export interface Wedge extends globalThis.EnumItem {
            Name: "Wedge";
            Value: 4;
            EnumType: typeof globalThis.Enum.PrimitiveType;
        }
        export const Wedge: Wedge;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/PrimitiveType#CornerWedge)
         */
        export interface CornerWedge extends globalThis.EnumItem {
            Name: "CornerWedge";
            Value: 5;
            EnumType: typeof globalThis.Enum.PrimitiveType;
        }
        export const CornerWedge: CornerWedge;
        export function GetEnumItems(this: globalThis.Enum): Array<globalThis.Enum.PrimitiveType>;
        export function FromName(this: globalThis.Enum, name: string): globalThis.Enum.PrimitiveType | undefined;
        export function FromValue(this: globalThis.Enum, value: number): globalThis.Enum.PrimitiveType | undefined;
    }
    export type PrimitiveType = PrimitiveType.Null | PrimitiveType.Ball | PrimitiveType.Cylinder | PrimitiveType.Block | PrimitiveType.Wedge | PrimitiveType.CornerWedge;
    /**
     * **Deprecated:** This enum should not be used for new work.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/PrivilegeType)
     */
    export namespace PrivilegeType {
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/PrivilegeType#Owner)
         */
        export interface Owner extends globalThis.EnumItem {
            Name: "Owner";
            Value: 255;
            EnumType: typeof globalThis.Enum.PrivilegeType;
        }
        export const Owner: Owner;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/PrivilegeType#Admin)
         */
        export interface Admin extends globalThis.EnumItem {
            Name: "Admin";
            Value: 240;
            EnumType: typeof globalThis.Enum.PrivilegeType;
        }
        export const Admin: Admin;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/PrivilegeType#Member)
         */
        export interface Member extends globalThis.EnumItem {
            Name: "Member";
            Value: 128;
            EnumType: typeof globalThis.Enum.PrivilegeType;
        }
        export const Member: Member;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/PrivilegeType#Visitor)
         */
        export interface Visitor extends globalThis.EnumItem {
            Name: "Visitor";
            Value: 10;
            EnumType: typeof globalThis.Enum.PrivilegeType;
        }
        export const Visitor: Visitor;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/PrivilegeType#Banned)
         */
        export interface Banned extends globalThis.EnumItem {
            Name: "Banned";
            Value: 0;
            EnumType: typeof globalThis.Enum.PrivilegeType;
        }
        export const Banned: Banned;
        export function GetEnumItems(this: globalThis.Enum): Array<globalThis.Enum.PrivilegeType>;
        export function FromName(this: globalThis.Enum, name: string): globalThis.Enum.PrivilegeType | undefined;
        export function FromValue(this: globalThis.Enum, value: number): globalThis.Enum.PrivilegeType | undefined;
    }
    export type PrivilegeType = PrivilegeType.Owner | PrivilegeType.Admin | PrivilegeType.Member | PrivilegeType.Visitor | PrivilegeType.Banned;
    /**
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/ProductLocationRestriction)
     */
    export namespace ProductLocationRestriction {
        /**
         * Item is purchasable only in the Marketplace.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/ProductLocationRestriction#AvatarShop)
         */
        export interface AvatarShop extends globalThis.EnumItem {
            Name: "AvatarShop";
            Value: 0;
            EnumType: typeof globalThis.Enum.ProductLocationRestriction;
        }
        export const AvatarShop: AvatarShop;
        /**
         * Item is purchasable in the Marketplace and experiences owned by the item creator.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/ProductLocationRestriction#AllowedGames)
         */
        export interface AllowedGames extends globalThis.EnumItem {
            Name: "AllowedGames";
            Value: 1;
            EnumType: typeof globalThis.Enum.ProductLocationRestriction;
        }
        export const AllowedGames: AllowedGames;
        /**
         * (Default) Item is purchasable in the Marketplace and all experiences.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/ProductLocationRestriction#AllGames)
         */
        export interface AllGames extends globalThis.EnumItem {
            Name: "AllGames";
            Value: 2;
            EnumType: typeof globalThis.Enum.ProductLocationRestriction;
        }
        export const AllGames: AllGames;
        export function GetEnumItems(this: globalThis.Enum): Array<globalThis.Enum.ProductLocationRestriction>;
        export function FromName(this: globalThis.Enum, name: string): globalThis.Enum.ProductLocationRestriction | undefined;
        export function FromValue(this: globalThis.Enum, value: number): globalThis.Enum.ProductLocationRestriction | undefined;
    }
    export type ProductLocationRestriction = ProductLocationRestriction.AvatarShop | ProductLocationRestriction.AllowedGames | ProductLocationRestriction.AllGames;
    /**
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/ProductPurchaseChannel)
     */
    export namespace ProductPurchaseChannel {
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/ProductPurchaseChannel#InExperience)
         */
        export interface InExperience extends globalThis.EnumItem {
            Name: "InExperience";
            Value: 1;
            EnumType: typeof globalThis.Enum.ProductPurchaseChannel;
        }
        export const InExperience: InExperience;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/ProductPurchaseChannel#ExperienceDetailsPage)
         */
        export interface ExperienceDetailsPage extends globalThis.EnumItem {
            Name: "ExperienceDetailsPage";
            Value: 2;
            EnumType: typeof globalThis.Enum.ProductPurchaseChannel;
        }
        export const ExperienceDetailsPage: ExperienceDetailsPage;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/ProductPurchaseChannel#AdReward)
         */
        export interface AdReward extends globalThis.EnumItem {
            Name: "AdReward";
            Value: 3;
            EnumType: typeof globalThis.Enum.ProductPurchaseChannel;
        }
        export const AdReward: AdReward;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/ProductPurchaseChannel#CommerceProduct)
         */
        export interface CommerceProduct extends globalThis.EnumItem {
            Name: "CommerceProduct";
            Value: 4;
            EnumType: typeof globalThis.Enum.ProductPurchaseChannel;
        }
        export const CommerceProduct: CommerceProduct;
        export function GetEnumItems(this: globalThis.Enum): Array<globalThis.Enum.ProductPurchaseChannel>;
        export function FromName(this: globalThis.Enum, name: string): globalThis.Enum.ProductPurchaseChannel | undefined;
        export function FromValue(this: globalThis.Enum, value: number): globalThis.Enum.ProductPurchaseChannel | undefined;
    }
    export type ProductPurchaseChannel = ProductPurchaseChannel.InExperience | ProductPurchaseChannel.ExperienceDetailsPage | ProductPurchaseChannel.AdReward | ProductPurchaseChannel.CommerceProduct;
    /**
     * The `ProductPurchaseDecisionEnum` is used to work with `MarketplaceService`, and the sale of developer products.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/ProductPurchaseDecision)
     */
    export namespace ProductPurchaseDecision {
        /**
         * The purchase request has been sent but not yet processed.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/ProductPurchaseDecision#NotProcessedYet)
         */
        export interface NotProcessedYet extends globalThis.EnumItem {
            Name: "NotProcessedYet";
            Value: 0;
            EnumType: typeof globalThis.Enum.ProductPurchaseDecision;
        }
        export const NotProcessedYet: NotProcessedYet;
        /**
         * The purchase has been processed and granted to the user who initiated the purchase request.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/ProductPurchaseDecision#PurchaseGranted)
         */
        export interface PurchaseGranted extends globalThis.EnumItem {
            Name: "PurchaseGranted";
            Value: 1;
            EnumType: typeof globalThis.Enum.ProductPurchaseDecision;
        }
        export const PurchaseGranted: PurchaseGranted;
        export function GetEnumItems(this: globalThis.Enum): Array<globalThis.Enum.ProductPurchaseDecision>;
        export function FromName(this: globalThis.Enum, name: string): globalThis.Enum.ProductPurchaseDecision | undefined;
        export function FromValue(this: globalThis.Enum, value: number): globalThis.Enum.ProductPurchaseDecision | undefined;
    }
    export type ProductPurchaseDecision = ProductPurchaseDecision.NotProcessedYet | ProductPurchaseDecision.PurchaseGranted;
    /**
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/PromptCreateAssetResult)
     */
    export namespace PromptCreateAssetResult {
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/PromptCreateAssetResult#Success)
         */
        export interface Success extends globalThis.EnumItem {
            Name: "Success";
            Value: 1;
            EnumType: typeof globalThis.Enum.PromptCreateAssetResult;
        }
        export const Success: Success;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/PromptCreateAssetResult#PermissionDenied)
         */
        export interface PermissionDenied extends globalThis.EnumItem {
            Name: "PermissionDenied";
            Value: 2;
            EnumType: typeof globalThis.Enum.PromptCreateAssetResult;
        }
        export const PermissionDenied: PermissionDenied;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/PromptCreateAssetResult#Timeout)
         */
        export interface Timeout extends globalThis.EnumItem {
            Name: "Timeout";
            Value: 3;
            EnumType: typeof globalThis.Enum.PromptCreateAssetResult;
        }
        export const Timeout: Timeout;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/PromptCreateAssetResult#UploadFailed)
         */
        export interface UploadFailed extends globalThis.EnumItem {
            Name: "UploadFailed";
            Value: 4;
            EnumType: typeof globalThis.Enum.PromptCreateAssetResult;
        }
        export const UploadFailed: UploadFailed;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/PromptCreateAssetResult#NoUserInput)
         */
        export interface NoUserInput extends globalThis.EnumItem {
            Name: "NoUserInput";
            Value: 5;
            EnumType: typeof globalThis.Enum.PromptCreateAssetResult;
        }
        export const NoUserInput: NoUserInput;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/PromptCreateAssetResult#UnknownFailure)
         */
        export interface UnknownFailure extends globalThis.EnumItem {
            Name: "UnknownFailure";
            Value: 6;
            EnumType: typeof globalThis.Enum.PromptCreateAssetResult;
        }
        export const UnknownFailure: UnknownFailure;
        export function GetEnumItems(this: globalThis.Enum): Array<globalThis.Enum.PromptCreateAssetResult>;
        export function FromName(this: globalThis.Enum, name: string): globalThis.Enum.PromptCreateAssetResult | undefined;
        export function FromValue(this: globalThis.Enum, value: number): globalThis.Enum.PromptCreateAssetResult | undefined;
    }
    export type PromptCreateAssetResult = PromptCreateAssetResult.Success | PromptCreateAssetResult.PermissionDenied | PromptCreateAssetResult.Timeout | PromptCreateAssetResult.UploadFailed | PromptCreateAssetResult.NoUserInput | PromptCreateAssetResult.UnknownFailure;
    /**
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/PromptCreateAvatarResult)
     */
    export namespace PromptCreateAvatarResult {
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/PromptCreateAvatarResult#Success)
         */
        export interface Success extends globalThis.EnumItem {
            Name: "Success";
            Value: 1;
            EnumType: typeof globalThis.Enum.PromptCreateAvatarResult;
        }
        export const Success: Success;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/PromptCreateAvatarResult#PermissionDenied)
         */
        export interface PermissionDenied extends globalThis.EnumItem {
            Name: "PermissionDenied";
            Value: 2;
            EnumType: typeof globalThis.Enum.PromptCreateAvatarResult;
        }
        export const PermissionDenied: PermissionDenied;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/PromptCreateAvatarResult#Timeout)
         */
        export interface Timeout extends globalThis.EnumItem {
            Name: "Timeout";
            Value: 3;
            EnumType: typeof globalThis.Enum.PromptCreateAvatarResult;
        }
        export const Timeout: Timeout;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/PromptCreateAvatarResult#UploadFailed)
         */
        export interface UploadFailed extends globalThis.EnumItem {
            Name: "UploadFailed";
            Value: 4;
            EnumType: typeof globalThis.Enum.PromptCreateAvatarResult;
        }
        export const UploadFailed: UploadFailed;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/PromptCreateAvatarResult#NoUserInput)
         */
        export interface NoUserInput extends globalThis.EnumItem {
            Name: "NoUserInput";
            Value: 5;
            EnumType: typeof globalThis.Enum.PromptCreateAvatarResult;
        }
        export const NoUserInput: NoUserInput;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/PromptCreateAvatarResult#InvalidHumanoidDescription)
         */
        export interface InvalidHumanoidDescription extends globalThis.EnumItem {
            Name: "InvalidHumanoidDescription";
            Value: 6;
            EnumType: typeof globalThis.Enum.PromptCreateAvatarResult;
        }
        export const InvalidHumanoidDescription: InvalidHumanoidDescription;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/PromptCreateAvatarResult#UGCValidationFailed)
         */
        export interface UGCValidationFailed extends globalThis.EnumItem {
            Name: "UGCValidationFailed";
            Value: 7;
            EnumType: typeof globalThis.Enum.PromptCreateAvatarResult;
        }
        export const UGCValidationFailed: UGCValidationFailed;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/PromptCreateAvatarResult#ModeratedName)
         */
        export interface ModeratedName extends globalThis.EnumItem {
            Name: "ModeratedName";
            Value: 8;
            EnumType: typeof globalThis.Enum.PromptCreateAvatarResult;
        }
        export const ModeratedName: ModeratedName;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/PromptCreateAvatarResult#MaxOutfits)
         */
        export interface MaxOutfits extends globalThis.EnumItem {
            Name: "MaxOutfits";
            Value: 9;
            EnumType: typeof globalThis.Enum.PromptCreateAvatarResult;
        }
        export const MaxOutfits: MaxOutfits;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/PromptCreateAvatarResult#PurchaseFailure)
         */
        export interface PurchaseFailure extends globalThis.EnumItem {
            Name: "PurchaseFailure";
            Value: 10;
            EnumType: typeof globalThis.Enum.PromptCreateAvatarResult;
        }
        export const PurchaseFailure: PurchaseFailure;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/PromptCreateAvatarResult#UnknownFailure)
         */
        export interface UnknownFailure extends globalThis.EnumItem {
            Name: "UnknownFailure";
            Value: 11;
            EnumType: typeof globalThis.Enum.PromptCreateAvatarResult;
        }
        export const UnknownFailure: UnknownFailure;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/PromptCreateAvatarResult#TokenInvalid)
         */
        export interface TokenInvalid extends globalThis.EnumItem {
            Name: "TokenInvalid";
            Value: 12;
            EnumType: typeof globalThis.Enum.PromptCreateAvatarResult;
        }
        export const TokenInvalid: TokenInvalid;
        export function GetEnumItems(this: globalThis.Enum): Array<globalThis.Enum.PromptCreateAvatarResult>;
        export function FromName(this: globalThis.Enum, name: string): globalThis.Enum.PromptCreateAvatarResult | undefined;
        export function FromValue(this: globalThis.Enum, value: number): globalThis.Enum.PromptCreateAvatarResult | undefined;
    }
    export type PromptCreateAvatarResult = PromptCreateAvatarResult.Success | PromptCreateAvatarResult.PermissionDenied | PromptCreateAvatarResult.Timeout | PromptCreateAvatarResult.UploadFailed | PromptCreateAvatarResult.NoUserInput | PromptCreateAvatarResult.InvalidHumanoidDescription | PromptCreateAvatarResult.UGCValidationFailed | PromptCreateAvatarResult.ModeratedName | PromptCreateAvatarResult.MaxOutfits | PromptCreateAvatarResult.PurchaseFailure | PromptCreateAvatarResult.UnknownFailure | PromptCreateAvatarResult.TokenInvalid;
    /**
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/PromptPublishAssetResult)
     */
    export namespace PromptPublishAssetResult {
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/PromptPublishAssetResult#Success)
         */
        export interface Success extends globalThis.EnumItem {
            Name: "Success";
            Value: 1;
            EnumType: typeof globalThis.Enum.PromptPublishAssetResult;
        }
        export const Success: Success;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/PromptPublishAssetResult#PermissionDenied)
         */
        export interface PermissionDenied extends globalThis.EnumItem {
            Name: "PermissionDenied";
            Value: 2;
            EnumType: typeof globalThis.Enum.PromptPublishAssetResult;
        }
        export const PermissionDenied: PermissionDenied;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/PromptPublishAssetResult#Timeout)
         */
        export interface Timeout extends globalThis.EnumItem {
            Name: "Timeout";
            Value: 3;
            EnumType: typeof globalThis.Enum.PromptPublishAssetResult;
        }
        export const Timeout: Timeout;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/PromptPublishAssetResult#UploadFailed)
         */
        export interface UploadFailed extends globalThis.EnumItem {
            Name: "UploadFailed";
            Value: 4;
            EnumType: typeof globalThis.Enum.PromptPublishAssetResult;
        }
        export const UploadFailed: UploadFailed;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/PromptPublishAssetResult#NoUserInput)
         */
        export interface NoUserInput extends globalThis.EnumItem {
            Name: "NoUserInput";
            Value: 5;
            EnumType: typeof globalThis.Enum.PromptPublishAssetResult;
        }
        export const NoUserInput: NoUserInput;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/PromptPublishAssetResult#UnknownFailure)
         */
        export interface UnknownFailure extends globalThis.EnumItem {
            Name: "UnknownFailure";
            Value: 6;
            EnumType: typeof globalThis.Enum.PromptPublishAssetResult;
        }
        export const UnknownFailure: UnknownFailure;
        export function GetEnumItems(this: globalThis.Enum): Array<globalThis.Enum.PromptPublishAssetResult>;
        export function FromName(this: globalThis.Enum, name: string): globalThis.Enum.PromptPublishAssetResult | undefined;
        export function FromValue(this: globalThis.Enum, value: number): globalThis.Enum.PromptPublishAssetResult | undefined;
    }
    export type PromptPublishAssetResult = PromptPublishAssetResult.Success | PromptPublishAssetResult.PermissionDenied | PromptPublishAssetResult.Timeout | PromptPublishAssetResult.UploadFailed | PromptPublishAssetResult.NoUserInput | PromptPublishAssetResult.UnknownFailure;
    /**
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/PropertyStatus)
     */
    export namespace PropertyStatus {
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/PropertyStatus#Ok)
         */
        export interface Ok extends globalThis.EnumItem {
            Name: "Ok";
            Value: 0;
            EnumType: typeof globalThis.Enum.PropertyStatus;
        }
        export const Ok: Ok;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/PropertyStatus#Warning)
         */
        export interface Warning extends globalThis.EnumItem {
            Name: "Warning";
            Value: 1;
            EnumType: typeof globalThis.Enum.PropertyStatus;
        }
        export const Warning: Warning;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/PropertyStatus#Error)
         */
        export interface Error extends globalThis.EnumItem {
            Name: "Error";
            Value: 2;
            EnumType: typeof globalThis.Enum.PropertyStatus;
        }
        export const Error: Error;
        export function GetEnumItems(this: globalThis.Enum): Array<globalThis.Enum.PropertyStatus>;
        export function FromName(this: globalThis.Enum, name: string): globalThis.Enum.PropertyStatus | undefined;
        export function FromValue(this: globalThis.Enum, value: number): globalThis.Enum.PropertyStatus | undefined;
    }
    export type PropertyStatus = PropertyStatus.Ok | PropertyStatus.Warning | PropertyStatus.Error;
    /**
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/ProximityPromptExclusivity)
     */
    export namespace ProximityPromptExclusivity {
        /**
         * One prompt will be shown per input `KeyCode`.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/ProximityPromptExclusivity#OnePerButton)
         */
        export interface OnePerButton extends globalThis.EnumItem {
            Name: "OnePerButton";
            Value: 0;
            EnumType: typeof globalThis.Enum.ProximityPromptExclusivity;
        }
        export const OnePerButton: OnePerButton;
        /**
         * Only one prompt will be shown with this setting.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/ProximityPromptExclusivity#OneGlobally)
         */
        export interface OneGlobally extends globalThis.EnumItem {
            Name: "OneGlobally";
            Value: 1;
            EnumType: typeof globalThis.Enum.ProximityPromptExclusivity;
        }
        export const OneGlobally: OneGlobally;
        /**
         * This prompt will always show when in range and visible.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/ProximityPromptExclusivity#AlwaysShow)
         */
        export interface AlwaysShow extends globalThis.EnumItem {
            Name: "AlwaysShow";
            Value: 2;
            EnumType: typeof globalThis.Enum.ProximityPromptExclusivity;
        }
        export const AlwaysShow: AlwaysShow;
        export function GetEnumItems(this: globalThis.Enum): Array<globalThis.Enum.ProximityPromptExclusivity>;
        export function FromName(this: globalThis.Enum, name: string): globalThis.Enum.ProximityPromptExclusivity | undefined;
        export function FromValue(this: globalThis.Enum, value: number): globalThis.Enum.ProximityPromptExclusivity | undefined;
    }
    export type ProximityPromptExclusivity = ProximityPromptExclusivity.OnePerButton | ProximityPromptExclusivity.OneGlobally | ProximityPromptExclusivity.AlwaysShow;
    /**
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/ProximityPromptInputType)
     */
    export namespace ProximityPromptInputType {
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/ProximityPromptInputType#Keyboard)
         */
        export interface Keyboard extends globalThis.EnumItem {
            Name: "Keyboard";
            Value: 0;
            EnumType: typeof globalThis.Enum.ProximityPromptInputType;
        }
        export const Keyboard: Keyboard;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/ProximityPromptInputType#Gamepad)
         */
        export interface Gamepad extends globalThis.EnumItem {
            Name: "Gamepad";
            Value: 1;
            EnumType: typeof globalThis.Enum.ProximityPromptInputType;
        }
        export const Gamepad: Gamepad;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/ProximityPromptInputType#Touch)
         */
        export interface Touch extends globalThis.EnumItem {
            Name: "Touch";
            Value: 2;
            EnumType: typeof globalThis.Enum.ProximityPromptInputType;
        }
        export const Touch: Touch;
        export function GetEnumItems(this: globalThis.Enum): Array<globalThis.Enum.ProximityPromptInputType>;
        export function FromName(this: globalThis.Enum, name: string): globalThis.Enum.ProximityPromptInputType | undefined;
        export function FromValue(this: globalThis.Enum, value: number): globalThis.Enum.ProximityPromptInputType | undefined;
    }
    export type ProximityPromptInputType = ProximityPromptInputType.Keyboard | ProximityPromptInputType.Gamepad | ProximityPromptInputType.Touch;
    /**
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/ProximityPromptStyle)
     */
    export namespace ProximityPromptStyle {
        /**
         * The default prompt UI style.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/ProximityPromptStyle#Default)
         */
        export interface Default extends globalThis.EnumItem {
            Name: "Default";
            Value: 0;
            EnumType: typeof globalThis.Enum.ProximityPromptStyle;
        }
        export const Default: Default;
        /**
         * Custom prompt UI style as set by the developer. For more information, see `ProximityPrompt.Style`.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/ProximityPromptStyle#Custom)
         */
        export interface Custom extends globalThis.EnumItem {
            Name: "Custom";
            Value: 1;
            EnumType: typeof globalThis.Enum.ProximityPromptStyle;
        }
        export const Custom: Custom;
        export function GetEnumItems(this: globalThis.Enum): Array<globalThis.Enum.ProximityPromptStyle>;
        export function FromName(this: globalThis.Enum, name: string): globalThis.Enum.ProximityPromptStyle | undefined;
        export function FromValue(this: globalThis.Enum, value: number): globalThis.Enum.ProximityPromptStyle | undefined;
    }
    export type ProximityPromptStyle = ProximityPromptStyle.Default | ProximityPromptStyle.Custom;
    /**
     * Controls the rendering quality of the game.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/QualityLevel)
     */
    export namespace QualityLevel {
        /**
         * The quality level of graphics is determined automatically depending on the client's setting for either game performance or graphic quality.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/QualityLevel#Automatic)
         */
        export interface Automatic extends globalThis.EnumItem {
            Name: "Automatic";
            Value: 0;
            EnumType: typeof globalThis.Enum.QualityLevel;
        }
        export const Automatic: Automatic;
        /**
         * Graphic quality level 1 - the lowest quality level.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/QualityLevel#Level01)
         */
        export interface Level01 extends globalThis.EnumItem {
            Name: "Level01";
            Value: 1;
            EnumType: typeof globalThis.Enum.QualityLevel;
        }
        export const Level01: Level01;
        /**
         * Graphic quality level 2.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/QualityLevel#Level02)
         */
        export interface Level02 extends globalThis.EnumItem {
            Name: "Level02";
            Value: 2;
            EnumType: typeof globalThis.Enum.QualityLevel;
        }
        export const Level02: Level02;
        /**
         * Graphic quality level 3.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/QualityLevel#Level03)
         */
        export interface Level03 extends globalThis.EnumItem {
            Name: "Level03";
            Value: 3;
            EnumType: typeof globalThis.Enum.QualityLevel;
        }
        export const Level03: Level03;
        /**
         * Graphic quality level 4.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/QualityLevel#Level04)
         */
        export interface Level04 extends globalThis.EnumItem {
            Name: "Level04";
            Value: 4;
            EnumType: typeof globalThis.Enum.QualityLevel;
        }
        export const Level04: Level04;
        /**
         * Graphic quality level 5.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/QualityLevel#Level05)
         */
        export interface Level05 extends globalThis.EnumItem {
            Name: "Level05";
            Value: 5;
            EnumType: typeof globalThis.Enum.QualityLevel;
        }
        export const Level05: Level05;
        /**
         * Graphic quality level 6.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/QualityLevel#Level06)
         */
        export interface Level06 extends globalThis.EnumItem {
            Name: "Level06";
            Value: 6;
            EnumType: typeof globalThis.Enum.QualityLevel;
        }
        export const Level06: Level06;
        /**
         * Graphic quality level 7.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/QualityLevel#Level07)
         */
        export interface Level07 extends globalThis.EnumItem {
            Name: "Level07";
            Value: 7;
            EnumType: typeof globalThis.Enum.QualityLevel;
        }
        export const Level07: Level07;
        /**
         * Graphic quality level 8.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/QualityLevel#Level08)
         */
        export interface Level08 extends globalThis.EnumItem {
            Name: "Level08";
            Value: 8;
            EnumType: typeof globalThis.Enum.QualityLevel;
        }
        export const Level08: Level08;
        /**
         * Graphic quality level 9.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/QualityLevel#Level09)
         */
        export interface Level09 extends globalThis.EnumItem {
            Name: "Level09";
            Value: 9;
            EnumType: typeof globalThis.Enum.QualityLevel;
        }
        export const Level09: Level09;
        /**
         * Graphic quality level 10.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/QualityLevel#Level10)
         */
        export interface Level10 extends globalThis.EnumItem {
            Name: "Level10";
            Value: 10;
            EnumType: typeof globalThis.Enum.QualityLevel;
        }
        export const Level10: Level10;
        /**
         * Graphic quality level 11.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/QualityLevel#Level11)
         */
        export interface Level11 extends globalThis.EnumItem {
            Name: "Level11";
            Value: 11;
            EnumType: typeof globalThis.Enum.QualityLevel;
        }
        export const Level11: Level11;
        /**
         * Graphic quality level 12.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/QualityLevel#Level12)
         */
        export interface Level12 extends globalThis.EnumItem {
            Name: "Level12";
            Value: 12;
            EnumType: typeof globalThis.Enum.QualityLevel;
        }
        export const Level12: Level12;
        /**
         * Graphic quality level 13.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/QualityLevel#Level13)
         */
        export interface Level13 extends globalThis.EnumItem {
            Name: "Level13";
            Value: 13;
            EnumType: typeof globalThis.Enum.QualityLevel;
        }
        export const Level13: Level13;
        /**
         * Graphic quality level 14.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/QualityLevel#Level14)
         */
        export interface Level14 extends globalThis.EnumItem {
            Name: "Level14";
            Value: 14;
            EnumType: typeof globalThis.Enum.QualityLevel;
        }
        export const Level14: Level14;
        /**
         * Graphic quality level 15.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/QualityLevel#Level15)
         */
        export interface Level15 extends globalThis.EnumItem {
            Name: "Level15";
            Value: 15;
            EnumType: typeof globalThis.Enum.QualityLevel;
        }
        export const Level15: Level15;
        /**
         * Graphic quality level 16.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/QualityLevel#Level16)
         */
        export interface Level16 extends globalThis.EnumItem {
            Name: "Level16";
            Value: 16;
            EnumType: typeof globalThis.Enum.QualityLevel;
        }
        export const Level16: Level16;
        /**
         * Graphic quality level 17.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/QualityLevel#Level17)
         */
        export interface Level17 extends globalThis.EnumItem {
            Name: "Level17";
            Value: 17;
            EnumType: typeof globalThis.Enum.QualityLevel;
        }
        export const Level17: Level17;
        /**
         * Graphic quality level 18.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/QualityLevel#Level18)
         */
        export interface Level18 extends globalThis.EnumItem {
            Name: "Level18";
            Value: 18;
            EnumType: typeof globalThis.Enum.QualityLevel;
        }
        export const Level18: Level18;
        /**
         * Graphic quality level 19.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/QualityLevel#Level19)
         */
        export interface Level19 extends globalThis.EnumItem {
            Name: "Level19";
            Value: 19;
            EnumType: typeof globalThis.Enum.QualityLevel;
        }
        export const Level19: Level19;
        /**
         * Graphic quality level 20.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/QualityLevel#Level20)
         */
        export interface Level20 extends globalThis.EnumItem {
            Name: "Level20";
            Value: 20;
            EnumType: typeof globalThis.Enum.QualityLevel;
        }
        export const Level20: Level20;
        /**
         * Graphic quality level 21, the highest quality level.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/QualityLevel#Level21)
         */
        export interface Level21 extends globalThis.EnumItem {
            Name: "Level21";
            Value: 21;
            EnumType: typeof globalThis.Enum.QualityLevel;
        }
        export const Level21: Level21;
        export function GetEnumItems(this: globalThis.Enum): Array<globalThis.Enum.QualityLevel>;
        export function FromName(this: globalThis.Enum, name: string): globalThis.Enum.QualityLevel | undefined;
        export function FromValue(this: globalThis.Enum, value: number): globalThis.Enum.QualityLevel | undefined;
    }
    export type QualityLevel = QualityLevel.Automatic | QualityLevel.Level01 | QualityLevel.Level02 | QualityLevel.Level03 | QualityLevel.Level04 | QualityLevel.Level05 | QualityLevel.Level06 | QualityLevel.Level07 | QualityLevel.Level08 | QualityLevel.Level09 | QualityLevel.Level10 | QualityLevel.Level11 | QualityLevel.Level12 | QualityLevel.Level13 | QualityLevel.Level14 | QualityLevel.Level15 | QualityLevel.Level16 | QualityLevel.Level17 | QualityLevel.Level18 | QualityLevel.Level19 | QualityLevel.Level20 | QualityLevel.Level21;
    /**
     * Collision behavior type for a R15 character.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/R15CollisionType)
     */
    export namespace R15CollisionType {
        /**
         * Dynamically sized collision boxes based on mesh sizes.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/R15CollisionType#OuterBox)
         */
        export interface OuterBox extends globalThis.EnumItem {
            Name: "OuterBox";
            Value: 0;
            EnumType: typeof globalThis.Enum.R15CollisionType;
        }
        export const OuterBox: OuterBox;
        /**
         * Fixed size collision boxes, similar to the classic avatar collision.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/R15CollisionType#InnerBox)
         */
        export interface InnerBox extends globalThis.EnumItem {
            Name: "InnerBox";
            Value: 1;
            EnumType: typeof globalThis.Enum.R15CollisionType;
        }
        export const InnerBox: InnerBox;
        export function GetEnumItems(this: globalThis.Enum): Array<globalThis.Enum.R15CollisionType>;
        export function FromName(this: globalThis.Enum, name: string): globalThis.Enum.R15CollisionType | undefined;
        export function FromValue(this: globalThis.Enum, value: number): globalThis.Enum.R15CollisionType | undefined;
    }
    export type R15CollisionType = R15CollisionType.OuterBox | R15CollisionType.InnerBox;
    /**
     * Used in a `RaycastParams` object to determine how its `FilterDescendantsInstances` list will be used.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/RaycastFilterType)
     */
    export namespace RaycastFilterType {
        /**
         * Every `BasePart` in the raycast operation will be considered **except** those that are descendants of objects in the filter list.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/RaycastFilterType#Exclude)
         */
        export interface Exclude extends globalThis.EnumItem {
            Name: "Exclude";
            Value: 0;
            EnumType: typeof globalThis.Enum.RaycastFilterType;
        }
        export const Exclude: Exclude;
        /**
         * @deprecated renamed to Exclude
         */
        export const Blacklist: Exclude;
        /**
         * Only `BaseParts` which are descendants of objects in the filter list will be considered in the raycast operation.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/RaycastFilterType#Include)
         */
        export interface Include extends globalThis.EnumItem {
            Name: "Include";
            Value: 1;
            EnumType: typeof globalThis.Enum.RaycastFilterType;
        }
        export const Include: Include;
        /**
         * @deprecated renamed to Include
         */
        export const Whitelist: Include;
        export function GetEnumItems(this: globalThis.Enum): Array<globalThis.Enum.RaycastFilterType>;
        export function FromName(this: globalThis.Enum, name: string): globalThis.Enum.RaycastFilterType | undefined;
        export function FromValue(this: globalThis.Enum, value: number): globalThis.Enum.RaycastFilterType | undefined;
    }
    export type RaycastFilterType = RaycastFilterType.Exclude | RaycastFilterType.Include;
    /**
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/RejectCharacterDeletions)
     */
    export namespace RejectCharacterDeletions {
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/RejectCharacterDeletions#Default)
         */
        export interface Default extends globalThis.EnumItem {
            Name: "Default";
            Value: 0;
            EnumType: typeof globalThis.Enum.RejectCharacterDeletions;
        }
        export const Default: Default;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/RejectCharacterDeletions#Disabled)
         */
        export interface Disabled extends globalThis.EnumItem {
            Name: "Disabled";
            Value: 1;
            EnumType: typeof globalThis.Enum.RejectCharacterDeletions;
        }
        export const Disabled: Disabled;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/RejectCharacterDeletions#Enabled)
         */
        export interface Enabled extends globalThis.EnumItem {
            Name: "Enabled";
            Value: 2;
            EnumType: typeof globalThis.Enum.RejectCharacterDeletions;
        }
        export const Enabled: Enabled;
        export function GetEnumItems(this: globalThis.Enum): Array<globalThis.Enum.RejectCharacterDeletions>;
        export function FromName(this: globalThis.Enum, name: string): globalThis.Enum.RejectCharacterDeletions | undefined;
        export function FromValue(this: globalThis.Enum, value: number): globalThis.Enum.RejectCharacterDeletions | undefined;
    }
    export type RejectCharacterDeletions = RejectCharacterDeletions.Default | RejectCharacterDeletions.Disabled | RejectCharacterDeletions.Enabled;
    /**
     * Determines the level of detail that solid modeled and mesh parts will be shown in.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/RenderFidelity)
     */
    export namespace RenderFidelity {
        /**
         * Object's level of detail is dynamically controlled by its distance from the camera (see table above).
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/RenderFidelity#Automatic)
         */
        export interface Automatic extends globalThis.EnumItem {
            Name: "Automatic";
            Value: 0;
            EnumType: typeof globalThis.Enum.RenderFidelity;
        }
        export const Automatic: Automatic;
        /**
         * Object is rendered in the highest fidelity regardless of its distance from the camera.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/RenderFidelity#Precise)
         */
        export interface Precise extends globalThis.EnumItem {
            Name: "Precise";
            Value: 1;
            EnumType: typeof globalThis.Enum.RenderFidelity;
        }
        export const Precise: Precise;
        /**
         * Push performance as much as possible, trying to maintain quality if possible, and discarding appearance if that's necessary to reach performance. This means that the performance will always be excellent, but mesh visuals may be affected negatively.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/RenderFidelity#Performance)
         */
        export interface Performance extends globalThis.EnumItem {
            Name: "Performance";
            Value: 2;
            EnumType: typeof globalThis.Enum.RenderFidelity;
        }
        export const Performance: Performance;
        export function GetEnumItems(this: globalThis.Enum): Array<globalThis.Enum.RenderFidelity>;
        export function FromName(this: globalThis.Enum, name: string): globalThis.Enum.RenderFidelity | undefined;
        export function FromValue(this: globalThis.Enum, value: number): globalThis.Enum.RenderFidelity | undefined;
    }
    export type RenderFidelity = RenderFidelity.Automatic | RenderFidelity.Precise | RenderFidelity.Performance;
    /**
     * A list of standard reserved values in BindToRenderStep.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/RenderPriority)
     */
    export namespace RenderPriority {
        /**
         * This should run first.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/RenderPriority#First)
         */
        export interface First extends globalThis.EnumItem {
            Name: "First";
            Value: 0;
            EnumType: typeof globalThis.Enum.RenderPriority;
        }
        export const First: First;
        /**
         * This should run as second.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/RenderPriority#Input)
         */
        export interface Input extends globalThis.EnumItem {
            Name: "Input";
            Value: 100;
            EnumType: typeof globalThis.Enum.RenderPriority;
        }
        export const Input: Input;
        /**
         * This should run after Input.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/RenderPriority#Camera)
         */
        export interface Camera extends globalThis.EnumItem {
            Name: "Camera";
            Value: 200;
            EnumType: typeof globalThis.Enum.RenderPriority;
        }
        export const Camera: Camera;
        /**
         * This should run after Camera.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/RenderPriority#Character)
         */
        export interface Character extends globalThis.EnumItem {
            Name: "Character";
            Value: 300;
            EnumType: typeof globalThis.Enum.RenderPriority;
        }
        export const Character: Character;
        /**
         * This should run as last, after Character.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/RenderPriority#Last)
         */
        export interface Last extends globalThis.EnumItem {
            Name: "Last";
            Value: 2000;
            EnumType: typeof globalThis.Enum.RenderPriority;
        }
        export const Last: Last;
        export function GetEnumItems(this: globalThis.Enum): Array<globalThis.Enum.RenderPriority>;
        export function FromName(this: globalThis.Enum, name: string): globalThis.Enum.RenderPriority | undefined;
        export function FromValue(this: globalThis.Enum, value: number): globalThis.Enum.RenderPriority | undefined;
    }
    export type RenderPriority = RenderPriority.First | RenderPriority.Input | RenderPriority.Camera | RenderPriority.Character | RenderPriority.Last;
    /**
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/RenderingCacheOptimizationMode)
     */
    export namespace RenderingCacheOptimizationMode {
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/RenderingCacheOptimizationMode#Default)
         */
        export interface Default extends globalThis.EnumItem {
            Name: "Default";
            Value: 0;
            EnumType: typeof globalThis.Enum.RenderingCacheOptimizationMode;
        }
        export const Default: Default;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/RenderingCacheOptimizationMode#Disabled)
         */
        export interface Disabled extends globalThis.EnumItem {
            Name: "Disabled";
            Value: 1;
            EnumType: typeof globalThis.Enum.RenderingCacheOptimizationMode;
        }
        export const Disabled: Disabled;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/RenderingCacheOptimizationMode#Enabled)
         */
        export interface Enabled extends globalThis.EnumItem {
            Name: "Enabled";
            Value: 2;
            EnumType: typeof globalThis.Enum.RenderingCacheOptimizationMode;
        }
        export const Enabled: Enabled;
        export function GetEnumItems(this: globalThis.Enum): Array<globalThis.Enum.RenderingCacheOptimizationMode>;
        export function FromName(this: globalThis.Enum, name: string): globalThis.Enum.RenderingCacheOptimizationMode | undefined;
        export function FromValue(this: globalThis.Enum, value: number): globalThis.Enum.RenderingCacheOptimizationMode | undefined;
    }
    export type RenderingCacheOptimizationMode = RenderingCacheOptimizationMode.Default | RenderingCacheOptimizationMode.Disabled | RenderingCacheOptimizationMode.Enabled;
    /**
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/RenderingTestComparisonMethod)
     */
    export namespace RenderingTestComparisonMethod {
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/RenderingTestComparisonMethod#psnr)
         */
        export interface psnr extends globalThis.EnumItem {
            Name: "psnr";
            Value: 0;
            EnumType: typeof globalThis.Enum.RenderingTestComparisonMethod;
        }
        export const psnr: psnr;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/RenderingTestComparisonMethod#diff)
         */
        export interface diff extends globalThis.EnumItem {
            Name: "diff";
            Value: 1;
            EnumType: typeof globalThis.Enum.RenderingTestComparisonMethod;
        }
        export const diff: diff;
        export function GetEnumItems(this: globalThis.Enum): Array<globalThis.Enum.RenderingTestComparisonMethod>;
        export function FromName(this: globalThis.Enum, name: string): globalThis.Enum.RenderingTestComparisonMethod | undefined;
        export function FromValue(this: globalThis.Enum, value: number): globalThis.Enum.RenderingTestComparisonMethod | undefined;
    }
    export type RenderingTestComparisonMethod = RenderingTestComparisonMethod.psnr | RenderingTestComparisonMethod.diff;
    /**
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/ReplicateInstanceDestroySetting)
     */
    export namespace ReplicateInstanceDestroySetting {
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/ReplicateInstanceDestroySetting#Default)
         */
        export interface Default extends globalThis.EnumItem {
            Name: "Default";
            Value: 0;
            EnumType: typeof globalThis.Enum.ReplicateInstanceDestroySetting;
        }
        export const Default: Default;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/ReplicateInstanceDestroySetting#Disabled)
         */
        export interface Disabled extends globalThis.EnumItem {
            Name: "Disabled";
            Value: 1;
            EnumType: typeof globalThis.Enum.ReplicateInstanceDestroySetting;
        }
        export const Disabled: Disabled;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/ReplicateInstanceDestroySetting#Enabled)
         */
        export interface Enabled extends globalThis.EnumItem {
            Name: "Enabled";
            Value: 2;
            EnumType: typeof globalThis.Enum.ReplicateInstanceDestroySetting;
        }
        export const Enabled: Enabled;
        export function GetEnumItems(this: globalThis.Enum): Array<globalThis.Enum.ReplicateInstanceDestroySetting>;
        export function FromName(this: globalThis.Enum, name: string): globalThis.Enum.ReplicateInstanceDestroySetting | undefined;
        export function FromValue(this: globalThis.Enum, value: number): globalThis.Enum.ReplicateInstanceDestroySetting | undefined;
    }
    export type ReplicateInstanceDestroySetting = ReplicateInstanceDestroySetting.Default | ReplicateInstanceDestroySetting.Disabled | ReplicateInstanceDestroySetting.Enabled;
    /**
     * Determines the image filtering used.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/ResamplerMode)
     */
    export namespace ResamplerMode {
        /**
         * Bilinear filtering of the four near pixels in the image.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/ResamplerMode#Default)
         */
        export interface Default extends globalThis.EnumItem {
            Name: "Default";
            Value: 0;
            EnumType: typeof globalThis.Enum.ResamplerMode;
        }
        export const Default: Default;
        /**
         * Nearest neighbor filtering of the closest pixel in the image.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/ResamplerMode#Pixelated)
         */
        export interface Pixelated extends globalThis.EnumItem {
            Name: "Pixelated";
            Value: 1;
            EnumType: typeof globalThis.Enum.ResamplerMode;
        }
        export const Pixelated: Pixelated;
        export function GetEnumItems(this: globalThis.Enum): Array<globalThis.Enum.ResamplerMode>;
        export function FromName(this: globalThis.Enum, name: string): globalThis.Enum.ResamplerMode | undefined;
        export function FromValue(this: globalThis.Enum, value: number): globalThis.Enum.ResamplerMode | undefined;
    }
    export type ResamplerMode = ResamplerMode.Default | ResamplerMode.Pixelated;
    /**
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/ReservedHighlightId)
     */
    export namespace ReservedHighlightId {
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/ReservedHighlightId#Standard)
         */
        export interface Standard extends globalThis.EnumItem {
            Name: "Standard";
            Value: 0;
            EnumType: typeof globalThis.Enum.ReservedHighlightId;
        }
        export const Standard: Standard;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/ReservedHighlightId#Selection)
         */
        export interface Selection extends globalThis.EnumItem {
            Name: "Selection";
            Value: 524288;
            EnumType: typeof globalThis.Enum.ReservedHighlightId;
        }
        export const Selection: Selection;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/ReservedHighlightId#Hover)
         */
        export interface Hover extends globalThis.EnumItem {
            Name: "Hover";
            Value: 262144;
            EnumType: typeof globalThis.Enum.ReservedHighlightId;
        }
        export const Hover: Hover;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/ReservedHighlightId#Active)
         */
        export interface Active extends globalThis.EnumItem {
            Name: "Active";
            Value: 131072;
            EnumType: typeof globalThis.Enum.ReservedHighlightId;
        }
        export const Active: Active;
        export function GetEnumItems(this: globalThis.Enum): Array<globalThis.Enum.ReservedHighlightId>;
        export function FromName(this: globalThis.Enum, name: string): globalThis.Enum.ReservedHighlightId | undefined;
        export function FromValue(this: globalThis.Enum, value: number): globalThis.Enum.ReservedHighlightId | undefined;
    }
    export type ReservedHighlightId = ReservedHighlightId.Standard | ReservedHighlightId.Selection | ReservedHighlightId.Hover | ReservedHighlightId.Active;
    /**
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/RestPose)
     */
    export namespace RestPose {
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/RestPose#Default)
         */
        export interface Default extends globalThis.EnumItem {
            Name: "Default";
            Value: 0;
            EnumType: typeof globalThis.Enum.RestPose;
        }
        export const Default: Default;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/RestPose#RotationsReset)
         */
        export interface RotationsReset extends globalThis.EnumItem {
            Name: "RotationsReset";
            Value: 1;
            EnumType: typeof globalThis.Enum.RestPose;
        }
        export const RotationsReset: RotationsReset;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/RestPose#Custom)
         */
        export interface Custom extends globalThis.EnumItem {
            Name: "Custom";
            Value: 2;
            EnumType: typeof globalThis.Enum.RestPose;
        }
        export const Custom: Custom;
        export function GetEnumItems(this: globalThis.Enum): Array<globalThis.Enum.RestPose>;
        export function FromName(this: globalThis.Enum, name: string): globalThis.Enum.RestPose | undefined;
        export function FromValue(this: globalThis.Enum, value: number): globalThis.Enum.RestPose | undefined;
    }
    export type RestPose = RestPose.Default | RestPose.RotationsReset | RestPose.Custom;
    /**
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/ReturnKeyType)
     */
    export namespace ReturnKeyType {
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/ReturnKeyType#Default)
         */
        export interface Default extends globalThis.EnumItem {
            Name: "Default";
            Value: 0;
            EnumType: typeof globalThis.Enum.ReturnKeyType;
        }
        export const Default: Default;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/ReturnKeyType#Done)
         */
        export interface Done extends globalThis.EnumItem {
            Name: "Done";
            Value: 1;
            EnumType: typeof globalThis.Enum.ReturnKeyType;
        }
        export const Done: Done;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/ReturnKeyType#Go)
         */
        export interface Go extends globalThis.EnumItem {
            Name: "Go";
            Value: 2;
            EnumType: typeof globalThis.Enum.ReturnKeyType;
        }
        export const Go: Go;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/ReturnKeyType#Next)
         */
        export interface Next extends globalThis.EnumItem {
            Name: "Next";
            Value: 3;
            EnumType: typeof globalThis.Enum.ReturnKeyType;
        }
        export const Next: Next;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/ReturnKeyType#Search)
         */
        export interface Search extends globalThis.EnumItem {
            Name: "Search";
            Value: 4;
            EnumType: typeof globalThis.Enum.ReturnKeyType;
        }
        export const Search: Search;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/ReturnKeyType#Send)
         */
        export interface Send extends globalThis.EnumItem {
            Name: "Send";
            Value: 5;
            EnumType: typeof globalThis.Enum.ReturnKeyType;
        }
        export const Send: Send;
        export function GetEnumItems(this: globalThis.Enum): Array<globalThis.Enum.ReturnKeyType>;
        export function FromName(this: globalThis.Enum, name: string): globalThis.Enum.ReturnKeyType | undefined;
        export function FromValue(this: globalThis.Enum, value: number): globalThis.Enum.ReturnKeyType | undefined;
    }
    export type ReturnKeyType = ReturnKeyType.Default | ReturnKeyType.Done | ReturnKeyType.Go | ReturnKeyType.Next | ReturnKeyType.Search | ReturnKeyType.Send;
    /**
     * The ReverbType Enum allows you to make audio in your game sound different, depending on what "area" the sounds are in.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/ReverbType)
     */
    export namespace ReverbType {
        /**
         * No sound reverb. Audio is not changed from default.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/ReverbType#NoReverb)
         */
        export interface NoReverb extends globalThis.EnumItem {
            Name: "NoReverb";
            Value: 0;
            EnumType: typeof globalThis.Enum.ReverbType;
        }
        export const NoReverb: NoReverb;
        /**
         * Sound reverb is changed to a generic reverb effect.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/ReverbType#GenericReverb)
         */
        export interface GenericReverb extends globalThis.EnumItem {
            Name: "GenericReverb";
            Value: 1;
            EnumType: typeof globalThis.Enum.ReverbType;
        }
        export const GenericReverb: GenericReverb;
        /**
         * Sound reverb is changed to sound like the player is in a padded cell.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/ReverbType#PaddedCell)
         */
        export interface PaddedCell extends globalThis.EnumItem {
            Name: "PaddedCell";
            Value: 2;
            EnumType: typeof globalThis.Enum.ReverbType;
        }
        export const PaddedCell: PaddedCell;
        /**
         * Sound reverb is changed to sound like the player is in a room.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/ReverbType#Room)
         */
        export interface Room extends globalThis.EnumItem {
            Name: "Room";
            Value: 3;
            EnumType: typeof globalThis.Enum.ReverbType;
        }
        export const Room: Room;
        /**
         * Sound reverb is changed to sound like the player is in a bathroom.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/ReverbType#Bathroom)
         */
        export interface Bathroom extends globalThis.EnumItem {
            Name: "Bathroom";
            Value: 4;
            EnumType: typeof globalThis.Enum.ReverbType;
        }
        export const Bathroom: Bathroom;
        /**
         * Sound reverb is changed to sound like the player is in a living room.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/ReverbType#LivingRoom)
         */
        export interface LivingRoom extends globalThis.EnumItem {
            Name: "LivingRoom";
            Value: 5;
            EnumType: typeof globalThis.Enum.ReverbType;
        }
        export const LivingRoom: LivingRoom;
        /**
         * Sound reverb is changed to sound like the player is in a stone room.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/ReverbType#StoneRoom)
         */
        export interface StoneRoom extends globalThis.EnumItem {
            Name: "StoneRoom";
            Value: 6;
            EnumType: typeof globalThis.Enum.ReverbType;
        }
        export const StoneRoom: StoneRoom;
        /**
         * Sound reverb is changed to sound like the player is in an auditorium.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/ReverbType#Auditorium)
         */
        export interface Auditorium extends globalThis.EnumItem {
            Name: "Auditorium";
            Value: 7;
            EnumType: typeof globalThis.Enum.ReverbType;
        }
        export const Auditorium: Auditorium;
        /**
         * Sound reverb is changed to sound like the player is in a concert hall.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/ReverbType#ConcertHall)
         */
        export interface ConcertHall extends globalThis.EnumItem {
            Name: "ConcertHall";
            Value: 8;
            EnumType: typeof globalThis.Enum.ReverbType;
        }
        export const ConcertHall: ConcertHall;
        /**
         * Sound reverb is changed to sound like the player is in a cave.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/ReverbType#Cave)
         */
        export interface Cave extends globalThis.EnumItem {
            Name: "Cave";
            Value: 9;
            EnumType: typeof globalThis.Enum.ReverbType;
        }
        export const Cave: Cave;
        /**
         * Sound reverb is changed to sound like the player is in an arena.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/ReverbType#Arena)
         */
        export interface Arena extends globalThis.EnumItem {
            Name: "Arena";
            Value: 10;
            EnumType: typeof globalThis.Enum.ReverbType;
        }
        export const Arena: Arena;
        /**
         * Sound reverb is changed to sound like the player is in a hangar.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/ReverbType#Hangar)
         */
        export interface Hangar extends globalThis.EnumItem {
            Name: "Hangar";
            Value: 11;
            EnumType: typeof globalThis.Enum.ReverbType;
        }
        export const Hangar: Hangar;
        /**
         * Sound reverb is changed to sound like the player is in a carpeted hallway.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/ReverbType#CarpettedHallway)
         */
        export interface CarpettedHallway extends globalThis.EnumItem {
            Name: "CarpettedHallway";
            Value: 12;
            EnumType: typeof globalThis.Enum.ReverbType;
        }
        export const CarpettedHallway: CarpettedHallway;
        /**
         * Sound reverb is changed to sound like the player is in a hallway.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/ReverbType#Hallway)
         */
        export interface Hallway extends globalThis.EnumItem {
            Name: "Hallway";
            Value: 13;
            EnumType: typeof globalThis.Enum.ReverbType;
        }
        export const Hallway: Hallway;
        /**
         * Sound reverb is changed to sound like the player is in a stone corridor.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/ReverbType#StoneCorridor)
         */
        export interface StoneCorridor extends globalThis.EnumItem {
            Name: "StoneCorridor";
            Value: 14;
            EnumType: typeof globalThis.Enum.ReverbType;
        }
        export const StoneCorridor: StoneCorridor;
        /**
         * Sound reverb is changed to sound like the player is in an alley.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/ReverbType#Alley)
         */
        export interface Alley extends globalThis.EnumItem {
            Name: "Alley";
            Value: 15;
            EnumType: typeof globalThis.Enum.ReverbType;
        }
        export const Alley: Alley;
        /**
         * Sound reverb is changed to sound like the player is in a forest.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/ReverbType#Forest)
         */
        export interface Forest extends globalThis.EnumItem {
            Name: "Forest";
            Value: 16;
            EnumType: typeof globalThis.Enum.ReverbType;
        }
        export const Forest: Forest;
        /**
         * Sound reverb is changed to sound like the player is in a city.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/ReverbType#City)
         */
        export interface City extends globalThis.EnumItem {
            Name: "City";
            Value: 17;
            EnumType: typeof globalThis.Enum.ReverbType;
        }
        export const City: City;
        /**
         * Sound reverb is changed to sound like the player is in the mountains.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/ReverbType#Mountains)
         */
        export interface Mountains extends globalThis.EnumItem {
            Name: "Mountains";
            Value: 18;
            EnumType: typeof globalThis.Enum.ReverbType;
        }
        export const Mountains: Mountains;
        /**
         * Sound reverb is changed to sound like the player is in a quarry.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/ReverbType#Quarry)
         */
        export interface Quarry extends globalThis.EnumItem {
            Name: "Quarry";
            Value: 19;
            EnumType: typeof globalThis.Enum.ReverbType;
        }
        export const Quarry: Quarry;
        /**
         * Sound reverb is changed to sound like the player is an open plain.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/ReverbType#Plain)
         */
        export interface Plain extends globalThis.EnumItem {
            Name: "Plain";
            Value: 20;
            EnumType: typeof globalThis.Enum.ReverbType;
        }
        export const Plain: Plain;
        /**
         * Sound reverb is changed to sound like the player is in a parking lot.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/ReverbType#ParkingLot)
         */
        export interface ParkingLot extends globalThis.EnumItem {
            Name: "ParkingLot";
            Value: 21;
            EnumType: typeof globalThis.Enum.ReverbType;
        }
        export const ParkingLot: ParkingLot;
        /**
         * Sound reverb is changed to sound like the player is in a sewer pipe.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/ReverbType#SewerPipe)
         */
        export interface SewerPipe extends globalThis.EnumItem {
            Name: "SewerPipe";
            Value: 22;
            EnumType: typeof globalThis.Enum.ReverbType;
        }
        export const SewerPipe: SewerPipe;
        /**
         * Sound reverb is changed to sound like the player is underwater.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/ReverbType#UnderWater)
         */
        export interface UnderWater extends globalThis.EnumItem {
            Name: "UnderWater";
            Value: 23;
            EnumType: typeof globalThis.Enum.ReverbType;
        }
        export const UnderWater: UnderWater;
        export function GetEnumItems(this: globalThis.Enum): Array<globalThis.Enum.ReverbType>;
        export function FromName(this: globalThis.Enum, name: string): globalThis.Enum.ReverbType | undefined;
        export function FromValue(this: globalThis.Enum, value: number): globalThis.Enum.ReverbType | undefined;
    }
    export type ReverbType = ReverbType.NoReverb | ReverbType.GenericReverb | ReverbType.PaddedCell | ReverbType.Room | ReverbType.Bathroom | ReverbType.LivingRoom | ReverbType.StoneRoom | ReverbType.Auditorium | ReverbType.ConcertHall | ReverbType.Cave | ReverbType.Arena | ReverbType.Hangar | ReverbType.CarpettedHallway | ReverbType.Hallway | ReverbType.StoneCorridor | ReverbType.Alley | ReverbType.Forest | ReverbType.City | ReverbType.Mountains | ReverbType.Quarry | ReverbType.Plain | ReverbType.ParkingLot | ReverbType.SewerPipe | ReverbType.UnderWater;
    /**
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/RibbonTool)
     */
    export namespace RibbonTool {
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/RibbonTool#Select)
         */
        export interface Select extends globalThis.EnumItem {
            Name: "Select";
            Value: 0;
            EnumType: typeof globalThis.Enum.RibbonTool;
        }
        export const Select: Select;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/RibbonTool#Scale)
         */
        export interface Scale extends globalThis.EnumItem {
            Name: "Scale";
            Value: 1;
            EnumType: typeof globalThis.Enum.RibbonTool;
        }
        export const Scale: Scale;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/RibbonTool#Rotate)
         */
        export interface Rotate extends globalThis.EnumItem {
            Name: "Rotate";
            Value: 2;
            EnumType: typeof globalThis.Enum.RibbonTool;
        }
        export const Rotate: Rotate;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/RibbonTool#Move)
         */
        export interface Move extends globalThis.EnumItem {
            Name: "Move";
            Value: 3;
            EnumType: typeof globalThis.Enum.RibbonTool;
        }
        export const Move: Move;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/RibbonTool#Transform)
         */
        export interface Transform extends globalThis.EnumItem {
            Name: "Transform";
            Value: 4;
            EnumType: typeof globalThis.Enum.RibbonTool;
        }
        export const Transform: Transform;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/RibbonTool#ColorPicker)
         */
        export interface ColorPicker extends globalThis.EnumItem {
            Name: "ColorPicker";
            Value: 5;
            EnumType: typeof globalThis.Enum.RibbonTool;
        }
        export const ColorPicker: ColorPicker;
        /**
         * Deprecated in favor of Material Manager. Don't use.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/RibbonTool#MaterialPicker)
         */
        export interface MaterialPicker extends globalThis.EnumItem {
            Name: "MaterialPicker";
            Value: 6;
            EnumType: typeof globalThis.Enum.RibbonTool;
        }
        export const MaterialPicker: MaterialPicker;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/RibbonTool#Group)
         */
        export interface Group extends globalThis.EnumItem {
            Name: "Group";
            Value: 7;
            EnumType: typeof globalThis.Enum.RibbonTool;
        }
        export const Group: Group;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/RibbonTool#Ungroup)
         */
        export interface Ungroup extends globalThis.EnumItem {
            Name: "Ungroup";
            Value: 8;
            EnumType: typeof globalThis.Enum.RibbonTool;
        }
        export const Ungroup: Ungroup;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/RibbonTool#None)
         */
        export interface None extends globalThis.EnumItem {
            Name: "None";
            Value: 9;
            EnumType: typeof globalThis.Enum.RibbonTool;
        }
        export const None: None;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/RibbonTool#PivotEditor)
         */
        export interface PivotEditor extends globalThis.EnumItem {
            Name: "PivotEditor";
            Value: 10;
            EnumType: typeof globalThis.Enum.RibbonTool;
        }
        export const PivotEditor: PivotEditor;
        export function GetEnumItems(this: globalThis.Enum): Array<globalThis.Enum.RibbonTool>;
        export function FromName(this: globalThis.Enum, name: string): globalThis.Enum.RibbonTool | undefined;
        export function FromValue(this: globalThis.Enum, value: number): globalThis.Enum.RibbonTool | undefined;
    }
    export type RibbonTool = RibbonTool.Select | RibbonTool.Scale | RibbonTool.Rotate | RibbonTool.Move | RibbonTool.Transform | RibbonTool.ColorPicker | RibbonTool.MaterialPicker | RibbonTool.Group | RibbonTool.Ungroup | RibbonTool.None | RibbonTool.PivotEditor;
    /**
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/RigScale)
     */
    export namespace RigScale {
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/RigScale#Default)
         */
        export interface Default extends globalThis.EnumItem {
            Name: "Default";
            Value: 0;
            EnumType: typeof globalThis.Enum.RigScale;
        }
        export const Default: Default;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/RigScale#Rthro)
         */
        export interface Rthro extends globalThis.EnumItem {
            Name: "Rthro";
            Value: 1;
            EnumType: typeof globalThis.Enum.RigScale;
        }
        export const Rthro: Rthro;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/RigScale#RthroNarrow)
         */
        export interface RthroNarrow extends globalThis.EnumItem {
            Name: "RthroNarrow";
            Value: 2;
            EnumType: typeof globalThis.Enum.RigScale;
        }
        export const RthroNarrow: RthroNarrow;
        export function GetEnumItems(this: globalThis.Enum): Array<globalThis.Enum.RigScale>;
        export function FromName(this: globalThis.Enum, name: string): globalThis.Enum.RigScale | undefined;
        export function FromValue(this: globalThis.Enum, value: number): globalThis.Enum.RigScale | undefined;
    }
    export type RigScale = RigScale.Default | RigScale.Rthro | RigScale.RthroNarrow;
    /**
     * The type of rig being imported with the 3D Importer.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/RigType)
     */
    export namespace RigType {
        /**
         * A rig type of R15.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/RigType#R15)
         */
        export interface R15 extends globalThis.EnumItem {
            Name: "R15";
            Value: 0;
            EnumType: typeof globalThis.Enum.RigType;
        }
        export const R15: R15;
        /**
         * A rig type of Custom.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/RigType#Custom)
         */
        export interface Custom extends globalThis.EnumItem {
            Name: "Custom";
            Value: 1;
            EnumType: typeof globalThis.Enum.RigType;
        }
        export const Custom: Custom;
        /**
         * A rig type of None.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/RigType#None)
         */
        export interface None extends globalThis.EnumItem {
            Name: "None";
            Value: 2;
            EnumType: typeof globalThis.Enum.RigType;
        }
        export const None: None;
        export function GetEnumItems(this: globalThis.Enum): Array<globalThis.Enum.RigType>;
        export function FromName(this: globalThis.Enum, name: string): globalThis.Enum.RigType | undefined;
        export function FromValue(this: globalThis.Enum, value: number): globalThis.Enum.RigType | undefined;
    }
    export type RigType = RigType.R15 | RigType.Custom | RigType.None;
    /**
     * How `Sounds` parented to a `BasePart` or `Attachment` attenuate (fade out) as the distance between the listener and the parent increases.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/RollOffMode)
     */
    export namespace RollOffMode {
        /**
         * Volume attenuates from `Sound.RollOffMinDistance` in an inverse manner, mirroring how sounds attenuate in the real world. This is done through `Sound.RollOffMinDistance`/`distance`, where `distance` is the `Vector3.Magnitude` between the audio source and the audio listener.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/RollOffMode#Inverse)
         */
        export interface Inverse extends globalThis.EnumItem {
            Name: "Inverse";
            Value: 0;
            EnumType: typeof globalThis.Enum.RollOffMode;
        }
        export const Inverse: Inverse;
        /**
         * Volume attenuates between `Sound.RollOffMinDistance` and `Sound.RollOffMaxDistance` with a linear relationship. This is done through (`Sound.RollOffMaxDistance`/`distance`)/(`Sound.RollOffMaxDistance`-`Sound.RollOffMinDistance`), where `distance` is the `Vector3.Magnitude` between the audio source and the audio listener.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/RollOffMode#Linear)
         */
        export interface Linear extends globalThis.EnumItem {
            Name: "Linear";
            Value: 1;
            EnumType: typeof globalThis.Enum.RollOffMode;
        }
        export const Linear: Linear;
        /**
         * Volume attenuates between `Sound.RollOffMinDistance` and `Sound.RollOffMaxDistance` with a linear squared relationship. This is done through squaring `Linear`.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/RollOffMode#LinearSquare)
         */
        export interface LinearSquare extends globalThis.EnumItem {
            Name: "LinearSquare";
            Value: 2;
            EnumType: typeof globalThis.Enum.RollOffMode;
        }
        export const LinearSquare: LinearSquare;
        /**
         * A hybrid model which follows the `Inverse` model when close to `Sound.RollOffMinDistance` and the `LinearSquare` model when close to `Sound.RollOffMaxDistance`. This is done by taking the lesser of `Inverse` and `LinearSquare`.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/RollOffMode#InverseTapered)
         */
        export interface InverseTapered extends globalThis.EnumItem {
            Name: "InverseTapered";
            Value: 3;
            EnumType: typeof globalThis.Enum.RollOffMode;
        }
        export const InverseTapered: InverseTapered;
        export function GetEnumItems(this: globalThis.Enum): Array<globalThis.Enum.RollOffMode>;
        export function FromName(this: globalThis.Enum, name: string): globalThis.Enum.RollOffMode | undefined;
        export function FromValue(this: globalThis.Enum, value: number): globalThis.Enum.RollOffMode | undefined;
    }
    export type RollOffMode = RollOffMode.Inverse | RollOffMode.Linear | RollOffMode.LinearSquare | RollOffMode.InverseTapered;
    /**
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/RolloutState)
     */
    export namespace RolloutState {
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/RolloutState#Default)
         */
        export interface Default extends globalThis.EnumItem {
            Name: "Default";
            Value: 0;
            EnumType: typeof globalThis.Enum.RolloutState;
        }
        export const Default: Default;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/RolloutState#Disabled)
         */
        export interface Disabled extends globalThis.EnumItem {
            Name: "Disabled";
            Value: 1;
            EnumType: typeof globalThis.Enum.RolloutState;
        }
        export const Disabled: Disabled;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/RolloutState#Enabled)
         */
        export interface Enabled extends globalThis.EnumItem {
            Name: "Enabled";
            Value: 2;
            EnumType: typeof globalThis.Enum.RolloutState;
        }
        export const Enabled: Enabled;
        export function GetEnumItems(this: globalThis.Enum): Array<globalThis.Enum.RolloutState>;
        export function FromName(this: globalThis.Enum, name: string): globalThis.Enum.RolloutState | undefined;
        export function FromValue(this: globalThis.Enum, value: number): globalThis.Enum.RolloutState | undefined;
    }
    export type RolloutState = RolloutState.Default | RolloutState.Disabled | RolloutState.Enabled;
    /**
     * The order of rotation axes used for Euler angles encoding of rotations.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/RotationOrder)
     */
    export namespace RotationOrder {
        /**
         * X, Y, Z order.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/RotationOrder#XYZ)
         */
        export interface XYZ extends globalThis.EnumItem {
            Name: "XYZ";
            Value: 0;
            EnumType: typeof globalThis.Enum.RotationOrder;
        }
        export const XYZ: XYZ;
        /**
         * X, Z, Y order.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/RotationOrder#XZY)
         */
        export interface XZY extends globalThis.EnumItem {
            Name: "XZY";
            Value: 1;
            EnumType: typeof globalThis.Enum.RotationOrder;
        }
        export const XZY: XZY;
        /**
         * Y, Z, X order.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/RotationOrder#YZX)
         */
        export interface YZX extends globalThis.EnumItem {
            Name: "YZX";
            Value: 2;
            EnumType: typeof globalThis.Enum.RotationOrder;
        }
        export const YZX: YZX;
        /**
         * Y, X, Z order.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/RotationOrder#YXZ)
         */
        export interface YXZ extends globalThis.EnumItem {
            Name: "YXZ";
            Value: 3;
            EnumType: typeof globalThis.Enum.RotationOrder;
        }
        export const YXZ: YXZ;
        /**
         * Z, X, Y order.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/RotationOrder#ZXY)
         */
        export interface ZXY extends globalThis.EnumItem {
            Name: "ZXY";
            Value: 4;
            EnumType: typeof globalThis.Enum.RotationOrder;
        }
        export const ZXY: ZXY;
        /**
         * Z, Y, X order.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/RotationOrder#ZYX)
         */
        export interface ZYX extends globalThis.EnumItem {
            Name: "ZYX";
            Value: 5;
            EnumType: typeof globalThis.Enum.RotationOrder;
        }
        export const ZYX: ZYX;
        export function GetEnumItems(this: globalThis.Enum): Array<globalThis.Enum.RotationOrder>;
        export function FromName(this: globalThis.Enum, name: string): globalThis.Enum.RotationOrder | undefined;
        export function FromValue(this: globalThis.Enum, value: number): globalThis.Enum.RotationOrder | undefined;
    }
    export type RotationOrder = RotationOrder.XYZ | RotationOrder.XZY | RotationOrder.YZX | RotationOrder.YXZ | RotationOrder.ZXY | RotationOrder.ZYX;
    /**
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/RotationType)
     */
    export namespace RotationType {
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/RotationType#MovementRelative)
         */
        export interface MovementRelative extends globalThis.EnumItem {
            Name: "MovementRelative";
            Value: 0;
            EnumType: typeof globalThis.Enum.RotationType;
        }
        export const MovementRelative: MovementRelative;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/RotationType#CameraRelative)
         */
        export interface CameraRelative extends globalThis.EnumItem {
            Name: "CameraRelative";
            Value: 1;
            EnumType: typeof globalThis.Enum.RotationType;
        }
        export const CameraRelative: CameraRelative;
        export function GetEnumItems(this: globalThis.Enum): Array<globalThis.Enum.RotationType>;
        export function FromName(this: globalThis.Enum, name: string): globalThis.Enum.RotationType | undefined;
        export function FromValue(this: globalThis.Enum, value: number): globalThis.Enum.RotationType | undefined;
    }
    export type RotationType = RotationType.MovementRelative | RotationType.CameraRelative;
    /**
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/RtlTextSupport)
     */
    export namespace RtlTextSupport {
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/RtlTextSupport#Default)
         */
        export interface Default extends globalThis.EnumItem {
            Name: "Default";
            Value: 0;
            EnumType: typeof globalThis.Enum.RtlTextSupport;
        }
        export const Default: Default;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/RtlTextSupport#Disabled)
         */
        export interface Disabled extends globalThis.EnumItem {
            Name: "Disabled";
            Value: 1;
            EnumType: typeof globalThis.Enum.RtlTextSupport;
        }
        export const Disabled: Disabled;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/RtlTextSupport#Enabled)
         */
        export interface Enabled extends globalThis.EnumItem {
            Name: "Enabled";
            Value: 2;
            EnumType: typeof globalThis.Enum.RtlTextSupport;
        }
        export const Enabled: Enabled;
        export function GetEnumItems(this: globalThis.Enum): Array<globalThis.Enum.RtlTextSupport>;
        export function FromName(this: globalThis.Enum, name: string): globalThis.Enum.RtlTextSupport | undefined;
        export function FromValue(this: globalThis.Enum, value: number): globalThis.Enum.RtlTextSupport | undefined;
    }
    export type RtlTextSupport = RtlTextSupport.Default | RtlTextSupport.Disabled | RtlTextSupport.Enabled;
    /**
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/RunContext)
     */
    export namespace RunContext {
        /**
         * Runs in legacy script containers dependent on the type of script uses such as `LocalScript` or `Script`.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/RunContext#Legacy)
         */
        export interface Legacy extends globalThis.EnumItem {
            Name: "Legacy";
            Value: 0;
            EnumType: typeof globalThis.Enum.RunContext;
        }
        export const Legacy: Legacy;
        /**
         * Runs on the server.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/RunContext#Server)
         */
        export interface Server extends globalThis.EnumItem {
            Name: "Server";
            Value: 1;
            EnumType: typeof globalThis.Enum.RunContext;
        }
        export const Server: Server;
        /**
         * Runs on the client.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/RunContext#Client)
         */
        export interface Client extends globalThis.EnumItem {
            Name: "Client";
            Value: 2;
            EnumType: typeof globalThis.Enum.RunContext;
        }
        export const Client: Client;
        /**
         * Runs as a descendant of `Plugin` instances.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/RunContext#Plugin)
         */
        export interface Plugin extends globalThis.EnumItem {
            Name: "Plugin";
            Value: 3;
            EnumType: typeof globalThis.Enum.RunContext;
        }
        export const Plugin: Plugin;
        export function GetEnumItems(this: globalThis.Enum): Array<globalThis.Enum.RunContext>;
        export function FromName(this: globalThis.Enum, name: string): globalThis.Enum.RunContext | undefined;
        export function FromValue(this: globalThis.Enum, value: number): globalThis.Enum.RunContext | undefined;
    }
    export type RunContext = RunContext.Legacy | RunContext.Server | RunContext.Client | RunContext.Plugin;
    /**
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/RunState)
     */
    export namespace RunState {
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/RunState#Stopped)
         */
        export interface Stopped extends globalThis.EnumItem {
            Name: "Stopped";
            Value: 0;
            EnumType: typeof globalThis.Enum.RunState;
        }
        export const Stopped: Stopped;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/RunState#Running)
         */
        export interface Running extends globalThis.EnumItem {
            Name: "Running";
            Value: 1;
            EnumType: typeof globalThis.Enum.RunState;
        }
        export const Running: Running;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/RunState#Paused)
         */
        export interface Paused extends globalThis.EnumItem {
            Name: "Paused";
            Value: 2;
            EnumType: typeof globalThis.Enum.RunState;
        }
        export const Paused: Paused;
        export function GetEnumItems(this: globalThis.Enum): Array<globalThis.Enum.RunState>;
        export function FromName(this: globalThis.Enum, name: string): globalThis.Enum.RunState | undefined;
        export function FromValue(this: globalThis.Enum, value: number): globalThis.Enum.RunState | undefined;
    }
    export type RunState = RunState.Stopped | RunState.Running | RunState.Paused;
    /**
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/RuntimeUndoBehavior)
     */
    export namespace RuntimeUndoBehavior {
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/RuntimeUndoBehavior#Aggregate)
         */
        export interface Aggregate extends globalThis.EnumItem {
            Name: "Aggregate";
            Value: 0;
            EnumType: typeof globalThis.Enum.RuntimeUndoBehavior;
        }
        export const Aggregate: Aggregate;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/RuntimeUndoBehavior#Snapshot)
         */
        export interface Snapshot extends globalThis.EnumItem {
            Name: "Snapshot";
            Value: 1;
            EnumType: typeof globalThis.Enum.RuntimeUndoBehavior;
        }
        export const Snapshot: Snapshot;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/RuntimeUndoBehavior#Hybrid)
         */
        export interface Hybrid extends globalThis.EnumItem {
            Name: "Hybrid";
            Value: 2;
            EnumType: typeof globalThis.Enum.RuntimeUndoBehavior;
        }
        export const Hybrid: Hybrid;
        export function GetEnumItems(this: globalThis.Enum): Array<globalThis.Enum.RuntimeUndoBehavior>;
        export function FromName(this: globalThis.Enum, name: string): globalThis.Enum.RuntimeUndoBehavior | undefined;
        export function FromValue(this: globalThis.Enum, value: number): globalThis.Enum.RuntimeUndoBehavior | undefined;
    }
    export type RuntimeUndoBehavior = RuntimeUndoBehavior.Aggregate | RuntimeUndoBehavior.Snapshot | RuntimeUndoBehavior.Hybrid;
    /**
     * Describes how descendants of a `ScreenGui` adapt to screens with cutouts.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/SafeAreaCompatibility)
     */
    export namespace SafeAreaCompatibility {
        /**
         * Do not apply compatibility transformations to any descendants of the `ScreenGui`.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/SafeAreaCompatibility#None)
         */
        export interface None extends globalThis.EnumItem {
            Name: "None";
            Value: 0;
            EnumType: typeof globalThis.Enum.SafeAreaCompatibility;
        }
        export const None: None;
        /**
         * If the total area of any descendant `GuiObject` within the `ScreenGui` (including any applied border or `UIStroke`) covers the device's safe area both horizontally and vertically, its background area will be expanded to cover the fullscreen area. This expansion does **not** affect the size or position of the descendant's **content**, except in the case of `ImageLabel`, `ImageButton`, or `VideoFrame` where the image/video is considered part of the background and will be expanded to fullscreen. Note that this option is intended to automatically improve the appearance of UI that was authored for screens without any cutouts. However, it's recommended that you avoid fullscreen extensions for new work; instead, use the `ScreenInsets` property to specify which insets should be respected for different `ScreenGuis`.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/SafeAreaCompatibility#FullscreenExtension)
         */
        export interface FullscreenExtension extends globalThis.EnumItem {
            Name: "FullscreenExtension";
            Value: 1;
            EnumType: typeof globalThis.Enum.SafeAreaCompatibility;
        }
        export const FullscreenExtension: FullscreenExtension;
        export function GetEnumItems(this: globalThis.Enum): Array<globalThis.Enum.SafeAreaCompatibility>;
        export function FromName(this: globalThis.Enum, name: string): globalThis.Enum.SafeAreaCompatibility | undefined;
        export function FromValue(this: globalThis.Enum, value: number): globalThis.Enum.SafeAreaCompatibility | undefined;
    }
    export type SafeAreaCompatibility = SafeAreaCompatibility.None | SafeAreaCompatibility.FullscreenExtension;
    /**
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/SalesTypeFilter)
     */
    export namespace SalesTypeFilter {
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/SalesTypeFilter#All)
         */
        export interface All extends globalThis.EnumItem {
            Name: "All";
            Value: 1;
            EnumType: typeof globalThis.Enum.SalesTypeFilter;
        }
        export const All: All;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/SalesTypeFilter#Collectibles)
         */
        export interface Collectibles extends globalThis.EnumItem {
            Name: "Collectibles";
            Value: 2;
            EnumType: typeof globalThis.Enum.SalesTypeFilter;
        }
        export const Collectibles: Collectibles;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/SalesTypeFilter#Premium)
         */
        export interface Premium extends globalThis.EnumItem {
            Name: "Premium";
            Value: 3;
            EnumType: typeof globalThis.Enum.SalesTypeFilter;
        }
        export const Premium: Premium;
        export function GetEnumItems(this: globalThis.Enum): Array<globalThis.Enum.SalesTypeFilter>;
        export function FromName(this: globalThis.Enum, name: string): globalThis.Enum.SalesTypeFilter | undefined;
        export function FromValue(this: globalThis.Enum, value: number): globalThis.Enum.SalesTypeFilter | undefined;
    }
    export type SalesTypeFilter = SalesTypeFilter.All | SalesTypeFilter.Collectibles | SalesTypeFilter.Premium;
    /**
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/SandboxedInstanceMode)
     */
    export namespace SandboxedInstanceMode {
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/SandboxedInstanceMode#Default)
         */
        export interface Default extends globalThis.EnumItem {
            Name: "Default";
            Value: 0;
            EnumType: typeof globalThis.Enum.SandboxedInstanceMode;
        }
        export const Default: Default;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/SandboxedInstanceMode#Experimental)
         */
        export interface Experimental extends globalThis.EnumItem {
            Name: "Experimental";
            Value: 1;
            EnumType: typeof globalThis.Enum.SandboxedInstanceMode;
        }
        export const Experimental: Experimental;
        export function GetEnumItems(this: globalThis.Enum): Array<globalThis.Enum.SandboxedInstanceMode>;
        export function FromName(this: globalThis.Enum, name: string): globalThis.Enum.SandboxedInstanceMode | undefined;
        export function FromValue(this: globalThis.Enum, value: number): globalThis.Enum.SandboxedInstanceMode | undefined;
    }
    export type SandboxedInstanceMode = SandboxedInstanceMode.Default | SandboxedInstanceMode.Experimental;
    /**
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/SaveAvatarThumbnailCustomizationFailure)
     */
    export namespace SaveAvatarThumbnailCustomizationFailure {
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/SaveAvatarThumbnailCustomizationFailure#BadThumbnailType)
         */
        export interface BadThumbnailType extends globalThis.EnumItem {
            Name: "BadThumbnailType";
            Value: 1;
            EnumType: typeof globalThis.Enum.SaveAvatarThumbnailCustomizationFailure;
        }
        export const BadThumbnailType: BadThumbnailType;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/SaveAvatarThumbnailCustomizationFailure#BadYRotDeg)
         */
        export interface BadYRotDeg extends globalThis.EnumItem {
            Name: "BadYRotDeg";
            Value: 2;
            EnumType: typeof globalThis.Enum.SaveAvatarThumbnailCustomizationFailure;
        }
        export const BadYRotDeg: BadYRotDeg;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/SaveAvatarThumbnailCustomizationFailure#BadFieldOfViewDeg)
         */
        export interface BadFieldOfViewDeg extends globalThis.EnumItem {
            Name: "BadFieldOfViewDeg";
            Value: 3;
            EnumType: typeof globalThis.Enum.SaveAvatarThumbnailCustomizationFailure;
        }
        export const BadFieldOfViewDeg: BadFieldOfViewDeg;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/SaveAvatarThumbnailCustomizationFailure#BadDistanceScale)
         */
        export interface BadDistanceScale extends globalThis.EnumItem {
            Name: "BadDistanceScale";
            Value: 4;
            EnumType: typeof globalThis.Enum.SaveAvatarThumbnailCustomizationFailure;
        }
        export const BadDistanceScale: BadDistanceScale;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/SaveAvatarThumbnailCustomizationFailure#Other)
         */
        export interface Other extends globalThis.EnumItem {
            Name: "Other";
            Value: 5;
            EnumType: typeof globalThis.Enum.SaveAvatarThumbnailCustomizationFailure;
        }
        export const Other: Other;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/SaveAvatarThumbnailCustomizationFailure#Throttled)
         */
        export interface Throttled extends globalThis.EnumItem {
            Name: "Throttled";
            Value: 6;
            EnumType: typeof globalThis.Enum.SaveAvatarThumbnailCustomizationFailure;
        }
        export const Throttled: Throttled;
        export function GetEnumItems(this: globalThis.Enum): Array<globalThis.Enum.SaveAvatarThumbnailCustomizationFailure>;
        export function FromName(this: globalThis.Enum, name: string): globalThis.Enum.SaveAvatarThumbnailCustomizationFailure | undefined;
        export function FromValue(this: globalThis.Enum, value: number): globalThis.Enum.SaveAvatarThumbnailCustomizationFailure | undefined;
    }
    export type SaveAvatarThumbnailCustomizationFailure = SaveAvatarThumbnailCustomizationFailure.BadThumbnailType | SaveAvatarThumbnailCustomizationFailure.BadYRotDeg | SaveAvatarThumbnailCustomizationFailure.BadFieldOfViewDeg | SaveAvatarThumbnailCustomizationFailure.BadDistanceScale | SaveAvatarThumbnailCustomizationFailure.Other | SaveAvatarThumbnailCustomizationFailure.Throttled;
    /**
     * **Deprecated:** This deprecated enum is used by `DataModel.SavePlace` which has also been deprecated. Neither should be used in new work.
     *
     * Used by `DataModel.SavePlace` to determine the type of save operation This enum determines which aspects of the current place are saved, based on the following options.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/SaveFilter)
     */
    export namespace SaveFilter {
        /**
         * Saves only the world-related data.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/SaveFilter#SaveWorld)
         */
        export interface SaveWorld extends globalThis.EnumItem {
            Name: "SaveWorld";
            Value: 0;
            EnumType: typeof globalThis.Enum.SaveFilter;
        }
        export const SaveWorld: SaveWorld;
        /**
         * Saves only the game-related data.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/SaveFilter#SaveGame)
         */
        export interface SaveGame extends globalThis.EnumItem {
            Name: "SaveGame";
            Value: 1;
            EnumType: typeof globalThis.Enum.SaveFilter;
        }
        export const SaveGame: SaveGame;
        /**
         * Saves all data, including both world and game-related information.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/SaveFilter#SaveAll)
         */
        export interface SaveAll extends globalThis.EnumItem {
            Name: "SaveAll";
            Value: 2;
            EnumType: typeof globalThis.Enum.SaveFilter;
        }
        export const SaveAll: SaveAll;
        export function GetEnumItems(this: globalThis.Enum): Array<globalThis.Enum.SaveFilter>;
        export function FromName(this: globalThis.Enum, name: string): globalThis.Enum.SaveFilter | undefined;
        export function FromValue(this: globalThis.Enum, value: number): globalThis.Enum.SaveFilter | undefined;
    }
    export type SaveFilter = SaveFilter.SaveWorld | SaveFilter.SaveGame | SaveFilter.SaveAll;
    /**
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/SavedQualitySetting)
     */
    export namespace SavedQualitySetting {
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/SavedQualitySetting#Automatic)
         */
        export interface Automatic extends globalThis.EnumItem {
            Name: "Automatic";
            Value: 0;
            EnumType: typeof globalThis.Enum.SavedQualitySetting;
        }
        export const Automatic: Automatic;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/SavedQualitySetting#QualityLevel1)
         */
        export interface QualityLevel1 extends globalThis.EnumItem {
            Name: "QualityLevel1";
            Value: 1;
            EnumType: typeof globalThis.Enum.SavedQualitySetting;
        }
        export const QualityLevel1: QualityLevel1;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/SavedQualitySetting#QualityLevel2)
         */
        export interface QualityLevel2 extends globalThis.EnumItem {
            Name: "QualityLevel2";
            Value: 2;
            EnumType: typeof globalThis.Enum.SavedQualitySetting;
        }
        export const QualityLevel2: QualityLevel2;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/SavedQualitySetting#QualityLevel3)
         */
        export interface QualityLevel3 extends globalThis.EnumItem {
            Name: "QualityLevel3";
            Value: 3;
            EnumType: typeof globalThis.Enum.SavedQualitySetting;
        }
        export const QualityLevel3: QualityLevel3;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/SavedQualitySetting#QualityLevel4)
         */
        export interface QualityLevel4 extends globalThis.EnumItem {
            Name: "QualityLevel4";
            Value: 4;
            EnumType: typeof globalThis.Enum.SavedQualitySetting;
        }
        export const QualityLevel4: QualityLevel4;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/SavedQualitySetting#QualityLevel5)
         */
        export interface QualityLevel5 extends globalThis.EnumItem {
            Name: "QualityLevel5";
            Value: 5;
            EnumType: typeof globalThis.Enum.SavedQualitySetting;
        }
        export const QualityLevel5: QualityLevel5;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/SavedQualitySetting#QualityLevel6)
         */
        export interface QualityLevel6 extends globalThis.EnumItem {
            Name: "QualityLevel6";
            Value: 6;
            EnumType: typeof globalThis.Enum.SavedQualitySetting;
        }
        export const QualityLevel6: QualityLevel6;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/SavedQualitySetting#QualityLevel7)
         */
        export interface QualityLevel7 extends globalThis.EnumItem {
            Name: "QualityLevel7";
            Value: 7;
            EnumType: typeof globalThis.Enum.SavedQualitySetting;
        }
        export const QualityLevel7: QualityLevel7;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/SavedQualitySetting#QualityLevel8)
         */
        export interface QualityLevel8 extends globalThis.EnumItem {
            Name: "QualityLevel8";
            Value: 8;
            EnumType: typeof globalThis.Enum.SavedQualitySetting;
        }
        export const QualityLevel8: QualityLevel8;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/SavedQualitySetting#QualityLevel9)
         */
        export interface QualityLevel9 extends globalThis.EnumItem {
            Name: "QualityLevel9";
            Value: 9;
            EnumType: typeof globalThis.Enum.SavedQualitySetting;
        }
        export const QualityLevel9: QualityLevel9;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/SavedQualitySetting#QualityLevel10)
         */
        export interface QualityLevel10 extends globalThis.EnumItem {
            Name: "QualityLevel10";
            Value: 10;
            EnumType: typeof globalThis.Enum.SavedQualitySetting;
        }
        export const QualityLevel10: QualityLevel10;
        export function GetEnumItems(this: globalThis.Enum): Array<globalThis.Enum.SavedQualitySetting>;
        export function FromName(this: globalThis.Enum, name: string): globalThis.Enum.SavedQualitySetting | undefined;
        export function FromValue(this: globalThis.Enum, value: number): globalThis.Enum.SavedQualitySetting | undefined;
    }
    export type SavedQualitySetting = SavedQualitySetting.Automatic | SavedQualitySetting.QualityLevel1 | SavedQualitySetting.QualityLevel2 | SavedQualitySetting.QualityLevel3 | SavedQualitySetting.QualityLevel4 | SavedQualitySetting.QualityLevel5 | SavedQualitySetting.QualityLevel6 | SavedQualitySetting.QualityLevel7 | SavedQualitySetting.QualityLevel8 | SavedQualitySetting.QualityLevel9 | SavedQualitySetting.QualityLevel10;
    /**
     * Determines how an image (of a `ImageLabel` or `ImageButton`) is scaled.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/ScaleType)
     */
    export namespace ScaleType {
        /**
         * The image is stretched to fit within the element.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/ScaleType#Stretch)
         */
        export interface Stretch extends globalThis.EnumItem {
            Name: "Stretch";
            Value: 0;
            EnumType: typeof globalThis.Enum.ScaleType;
        }
        export const Stretch: Stretch;
        /**
         * 9-Slice scaling: slice the image into 9 regions and apply different scaling rules to each region. The slice boundaries are determined by `ImageLabel.SliceCenter` or `ImageButton.SliceCenter`. See [UI 9-Slice Design](../../../ui/9-slice.md) for more information. .
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/ScaleType#Slice)
         */
        export interface Slice extends globalThis.EnumItem {
            Name: "Slice";
            Value: 1;
            EnumType: typeof globalThis.Enum.ScaleType;
        }
        export const Slice: Slice;
        /**
         * The image is tiled to fit within the element. For example, if the element is twice the X dimension of the image, the image will appear twice (2 tiles).
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/ScaleType#Tile)
         */
        export interface Tile extends globalThis.EnumItem {
            Name: "Tile";
            Value: 2;
            EnumType: typeof globalThis.Enum.ScaleType;
        }
        export const Tile: Tile;
        /**
         * The image is scaled fit within the element X or Y dimension (whichever fits first).
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/ScaleType#Fit)
         */
        export interface Fit extends globalThis.EnumItem {
            Name: "Fit";
            Value: 3;
            EnumType: typeof globalThis.Enum.ScaleType;
        }
        export const Fit: Fit;
        /**
         * The image is cropped to fit within the element.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/ScaleType#Crop)
         */
        export interface Crop extends globalThis.EnumItem {
            Name: "Crop";
            Value: 4;
            EnumType: typeof globalThis.Enum.ScaleType;
        }
        export const Crop: Crop;
        export function GetEnumItems(this: globalThis.Enum): Array<globalThis.Enum.ScaleType>;
        export function FromName(this: globalThis.Enum, name: string): globalThis.Enum.ScaleType | undefined;
        export function FromValue(this: globalThis.Enum, value: number): globalThis.Enum.ScaleType | undefined;
    }
    export type ScaleType = ScaleType.Stretch | ScaleType.Slice | ScaleType.Tile | ScaleType.Fit | ScaleType.Crop;
    /**
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/ScopeCheckResult)
     */
    export namespace ScopeCheckResult {
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/ScopeCheckResult#ConsentAccepted)
         */
        export interface ConsentAccepted extends globalThis.EnumItem {
            Name: "ConsentAccepted";
            Value: 0;
            EnumType: typeof globalThis.Enum.ScopeCheckResult;
        }
        export const ConsentAccepted: ConsentAccepted;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/ScopeCheckResult#InvalidScopes)
         */
        export interface InvalidScopes extends globalThis.EnumItem {
            Name: "InvalidScopes";
            Value: 1;
            EnumType: typeof globalThis.Enum.ScopeCheckResult;
        }
        export const InvalidScopes: InvalidScopes;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/ScopeCheckResult#Timeout)
         */
        export interface Timeout extends globalThis.EnumItem {
            Name: "Timeout";
            Value: 2;
            EnumType: typeof globalThis.Enum.ScopeCheckResult;
        }
        export const Timeout: Timeout;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/ScopeCheckResult#NoUserInput)
         */
        export interface NoUserInput extends globalThis.EnumItem {
            Name: "NoUserInput";
            Value: 3;
            EnumType: typeof globalThis.Enum.ScopeCheckResult;
        }
        export const NoUserInput: NoUserInput;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/ScopeCheckResult#BackendError)
         */
        export interface BackendError extends globalThis.EnumItem {
            Name: "BackendError";
            Value: 4;
            EnumType: typeof globalThis.Enum.ScopeCheckResult;
        }
        export const BackendError: BackendError;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/ScopeCheckResult#UnexpectedError)
         */
        export interface UnexpectedError extends globalThis.EnumItem {
            Name: "UnexpectedError";
            Value: 5;
            EnumType: typeof globalThis.Enum.ScopeCheckResult;
        }
        export const UnexpectedError: UnexpectedError;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/ScopeCheckResult#InvalidArgument)
         */
        export interface InvalidArgument extends globalThis.EnumItem {
            Name: "InvalidArgument";
            Value: 6;
            EnumType: typeof globalThis.Enum.ScopeCheckResult;
        }
        export const InvalidArgument: InvalidArgument;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/ScopeCheckResult#ConsentDenied)
         */
        export interface ConsentDenied extends globalThis.EnumItem {
            Name: "ConsentDenied";
            Value: 7;
            EnumType: typeof globalThis.Enum.ScopeCheckResult;
        }
        export const ConsentDenied: ConsentDenied;
        export function GetEnumItems(this: globalThis.Enum): Array<globalThis.Enum.ScopeCheckResult>;
        export function FromName(this: globalThis.Enum, name: string): globalThis.Enum.ScopeCheckResult | undefined;
        export function FromValue(this: globalThis.Enum, value: number): globalThis.Enum.ScopeCheckResult | undefined;
    }
    export type ScopeCheckResult = ScopeCheckResult.ConsentAccepted | ScopeCheckResult.InvalidScopes | ScopeCheckResult.Timeout | ScopeCheckResult.NoUserInput | ScopeCheckResult.BackendError | ScopeCheckResult.UnexpectedError | ScopeCheckResult.InvalidArgument | ScopeCheckResult.ConsentDenied;
    /**
     * Insets associated with various screen safe areas.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/ScreenInsets)
     */
    export namespace ScreenInsets {
        /**
         * No insets are added to the fullscreen area. This mode may result in UI that is obscured or completely hidden by device notches and cutouts, so you should only use it for a `ScreenGui` that contains non‑interactive content like background images.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/ScreenInsets#None)
         */
        export interface None extends globalThis.EnumItem {
            Name: "None";
            Value: 0;
            EnumType: typeof globalThis.Enum.ScreenInsets;
        }
        export const None: None;
        /**
         * Device safe area insets are added to the fullscreen area. The resulting area is guaranteed to not be occluded by any **device** screen cutouts such as the camera notch, although no inset is added for Roblox core UI elements like the top bar buttons. As a result, it's recommended that you use `CoreUISafeInsets` for a `ScreenGui` whose contents should remain unobscured by both device cutouts **and** core screen elements.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/ScreenInsets#DeviceSafeInsets)
         */
        export interface DeviceSafeInsets extends globalThis.EnumItem {
            Name: "DeviceSafeInsets";
            Value: 1;
            EnumType: typeof globalThis.Enum.ScreenInsets;
        }
        export const DeviceSafeInsets: DeviceSafeInsets;
        /**
         * Core UI insets are added to the `DeviceSafeInsets` area, resulting in an area guaranteed to be unobscured by both device screen cutouts and Roblox core UI elements like the top bar buttons. This mode is recommended for any `ScreenGui` that contains interactive and/or important UI elements such as buttons and status messages.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/ScreenInsets#CoreUISafeInsets)
         */
        export interface CoreUISafeInsets extends globalThis.EnumItem {
            Name: "CoreUISafeInsets";
            Value: 2;
            EnumType: typeof globalThis.Enum.ScreenInsets;
        }
        export const CoreUISafeInsets: CoreUISafeInsets;
        /**
         * Top bar safe area insets are added to the `DeviceSafeInsets` area, resulting in an area guaranteed to be unobscured by both device screen cutouts and Roblox core UI elements like the experience controls. Unlike `CoreUISafeInsets`, this area's position and size is dynamic and is limited to the space available within the top bar area itself, outside of `CoreUISafeInsets`.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/ScreenInsets#TopbarSafeInsets)
         */
        export interface TopbarSafeInsets extends globalThis.EnumItem {
            Name: "TopbarSafeInsets";
            Value: 3;
            EnumType: typeof globalThis.Enum.ScreenInsets;
        }
        export const TopbarSafeInsets: TopbarSafeInsets;
        export function GetEnumItems(this: globalThis.Enum): Array<globalThis.Enum.ScreenInsets>;
        export function FromName(this: globalThis.Enum, name: string): globalThis.Enum.ScreenInsets | undefined;
        export function FromValue(this: globalThis.Enum, value: number): globalThis.Enum.ScreenInsets | undefined;
    }
    export type ScreenInsets = ScreenInsets.None | ScreenInsets.DeviceSafeInsets | ScreenInsets.CoreUISafeInsets | ScreenInsets.TopbarSafeInsets;
    /**
     * The preference of in-game screen orientation on hand-held devices.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/ScreenOrientation)
     */
    export namespace ScreenOrientation {
        /**
         * A preference where the game is displayed landscape (horizontally) with the bottom of the device on the left side of the screen.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/ScreenOrientation#LandscapeLeft)
         */
        export interface LandscapeLeft extends globalThis.EnumItem {
            Name: "LandscapeLeft";
            Value: 0;
            EnumType: typeof globalThis.Enum.ScreenOrientation;
        }
        export const LandscapeLeft: LandscapeLeft;
        /**
         * A preference where the game is displayed landscape (horizontally) with the bottom of the device on the right side of the screen.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/ScreenOrientation#LandscapeRight)
         */
        export interface LandscapeRight extends globalThis.EnumItem {
            Name: "LandscapeRight";
            Value: 1;
            EnumType: typeof globalThis.Enum.ScreenOrientation;
        }
        export const LandscapeRight: LandscapeRight;
        /**
         * A preference where the game is displayed landscape (horizontally) with the bottom of the device on the left of right side of the screen depending on the device's orientation (the sensor determines which side allows for the game to be displayed right-side-up).
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/ScreenOrientation#LandscapeSensor)
         */
        export interface LandscapeSensor extends globalThis.EnumItem {
            Name: "LandscapeSensor";
            Value: 2;
            EnumType: typeof globalThis.Enum.ScreenOrientation;
        }
        export const LandscapeSensor: LandscapeSensor;
        /**
         * A preference where the game is displayed portrait (vertically) with the bottom of the device on the bottom of the screen.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/ScreenOrientation#Portrait)
         */
        export interface Portrait extends globalThis.EnumItem {
            Name: "Portrait";
            Value: 3;
            EnumType: typeof globalThis.Enum.ScreenOrientation;
        }
        export const Portrait: Portrait;
        /**
         * A preference where the game is displayed depending on the best match to the device's current orientation - either landscape (left/right) or portrait.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/ScreenOrientation#Sensor)
         */
        export interface Sensor extends globalThis.EnumItem {
            Name: "Sensor";
            Value: 4;
            EnumType: typeof globalThis.Enum.ScreenOrientation;
        }
        export const Sensor: Sensor;
        export function GetEnumItems(this: globalThis.Enum): Array<globalThis.Enum.ScreenOrientation>;
        export function FromName(this: globalThis.Enum, name: string): globalThis.Enum.ScreenOrientation | undefined;
        export function FromValue(this: globalThis.Enum, value: number): globalThis.Enum.ScreenOrientation | undefined;
    }
    export type ScreenOrientation = ScreenOrientation.LandscapeLeft | ScreenOrientation.LandscapeRight | ScreenOrientation.LandscapeSensor | ScreenOrientation.Portrait | ScreenOrientation.Sensor;
    /**
     * Indicates when the `ScrollingFrame` should be insetted by the space needed to show the scroll bar.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/ScrollBarInset)
     */
    export namespace ScrollBarInset {
        /**
         * The ScrollingFrame will never be insetted for this scrolling bar.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/ScrollBarInset#None)
         */
        export interface None extends globalThis.EnumItem {
            Name: "None";
            Value: 0;
            EnumType: typeof globalThis.Enum.ScrollBarInset;
        }
        export const None: None;
        /**
         * The ScrollingFrame will only be insetted if this scrollbar is being shown.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/ScrollBarInset#ScrollBar)
         */
        export interface ScrollBar extends globalThis.EnumItem {
            Name: "ScrollBar";
            Value: 1;
            EnumType: typeof globalThis.Enum.ScrollBarInset;
        }
        export const ScrollBar: ScrollBar;
        /**
         * The ScrollingFrame will always be insetted regardless if the scrollbar is being shown or not.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/ScrollBarInset#Always)
         */
        export interface Always extends globalThis.EnumItem {
            Name: "Always";
            Value: 2;
            EnumType: typeof globalThis.Enum.ScrollBarInset;
        }
        export const Always: Always;
        export function GetEnumItems(this: globalThis.Enum): Array<globalThis.Enum.ScrollBarInset>;
        export function FromName(this: globalThis.Enum, name: string): globalThis.Enum.ScrollBarInset | undefined;
        export function FromValue(this: globalThis.Enum, value: number): globalThis.Enum.ScrollBarInset | undefined;
    }
    export type ScrollBarInset = ScrollBarInset.None | ScrollBarInset.ScrollBar | ScrollBarInset.Always;
    /**
     * This enum is used by `ScrollingFrame.ScrollingDirection` to specify the direction scrolling is allowed.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/ScrollingDirection)
     */
    export namespace ScrollingDirection {
        /**
         * Canvas can only be scrolled along the X axis.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/ScrollingDirection#X)
         */
        export interface X extends globalThis.EnumItem {
            Name: "X";
            Value: 1;
            EnumType: typeof globalThis.Enum.ScrollingDirection;
        }
        export const X: X;
        /**
         * Canvas can only be scrolled along the Y axis.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/ScrollingDirection#Y)
         */
        export interface Y extends globalThis.EnumItem {
            Name: "Y";
            Value: 2;
            EnumType: typeof globalThis.Enum.ScrollingDirection;
        }
        export const Y: Y;
        /**
         * Canvas can be scrolled along both X and Y axes.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/ScrollingDirection#XY)
         */
        export interface XY extends globalThis.EnumItem {
            Name: "XY";
            Value: 4;
            EnumType: typeof globalThis.Enum.ScrollingDirection;
        }
        export const XY: XY;
        export function GetEnumItems(this: globalThis.Enum): Array<globalThis.Enum.ScrollingDirection>;
        export function FromName(this: globalThis.Enum, name: string): globalThis.Enum.ScrollingDirection | undefined;
        export function FromValue(this: globalThis.Enum, value: number): globalThis.Enum.ScrollingDirection | undefined;
    }
    export type ScrollingDirection = ScrollingDirection.X | ScrollingDirection.Y | ScrollingDirection.XY;
    /**
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/SecurityCapability)
     */
    export namespace SecurityCapability {
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/SecurityCapability#RunClientScript)
         */
        export interface RunClientScript extends globalThis.EnumItem {
            Name: "RunClientScript";
            Value: 0;
            EnumType: typeof globalThis.Enum.SecurityCapability;
        }
        export const RunClientScript: RunClientScript;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/SecurityCapability#RunServerScript)
         */
        export interface RunServerScript extends globalThis.EnumItem {
            Name: "RunServerScript";
            Value: 1;
            EnumType: typeof globalThis.Enum.SecurityCapability;
        }
        export const RunServerScript: RunServerScript;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/SecurityCapability#AccessOutsideWrite)
         */
        export interface AccessOutsideWrite extends globalThis.EnumItem {
            Name: "AccessOutsideWrite";
            Value: 2;
            EnumType: typeof globalThis.Enum.SecurityCapability;
        }
        export const AccessOutsideWrite: AccessOutsideWrite;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/SecurityCapability#AssetRequire)
         */
        export interface AssetRequire extends globalThis.EnumItem {
            Name: "AssetRequire";
            Value: 3;
            EnumType: typeof globalThis.Enum.SecurityCapability;
        }
        export const AssetRequire: AssetRequire;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/SecurityCapability#LoadString)
         */
        export interface LoadString extends globalThis.EnumItem {
            Name: "LoadString";
            Value: 4;
            EnumType: typeof globalThis.Enum.SecurityCapability;
        }
        export const LoadString: LoadString;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/SecurityCapability#ScriptGlobals)
         */
        export interface ScriptGlobals extends globalThis.EnumItem {
            Name: "ScriptGlobals";
            Value: 5;
            EnumType: typeof globalThis.Enum.SecurityCapability;
        }
        export const ScriptGlobals: ScriptGlobals;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/SecurityCapability#CreateInstances)
         */
        export interface CreateInstances extends globalThis.EnumItem {
            Name: "CreateInstances";
            Value: 6;
            EnumType: typeof globalThis.Enum.SecurityCapability;
        }
        export const CreateInstances: CreateInstances;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/SecurityCapability#Basic)
         */
        export interface Basic extends globalThis.EnumItem {
            Name: "Basic";
            Value: 7;
            EnumType: typeof globalThis.Enum.SecurityCapability;
        }
        export const Basic: Basic;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/SecurityCapability#Audio)
         */
        export interface Audio extends globalThis.EnumItem {
            Name: "Audio";
            Value: 8;
            EnumType: typeof globalThis.Enum.SecurityCapability;
        }
        export const Audio: Audio;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/SecurityCapability#DataStore)
         */
        export interface DataStore extends globalThis.EnumItem {
            Name: "DataStore";
            Value: 9;
            EnumType: typeof globalThis.Enum.SecurityCapability;
        }
        export const DataStore: DataStore;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/SecurityCapability#Network)
         */
        export interface Network extends globalThis.EnumItem {
            Name: "Network";
            Value: 10;
            EnumType: typeof globalThis.Enum.SecurityCapability;
        }
        export const Network: Network;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/SecurityCapability#Physics)
         */
        export interface Physics extends globalThis.EnumItem {
            Name: "Physics";
            Value: 11;
            EnumType: typeof globalThis.Enum.SecurityCapability;
        }
        export const Physics: Physics;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/SecurityCapability#UI)
         */
        export interface UI extends globalThis.EnumItem {
            Name: "UI";
            Value: 12;
            EnumType: typeof globalThis.Enum.SecurityCapability;
        }
        export const UI: UI;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/SecurityCapability#CSG)
         */
        export interface CSG extends globalThis.EnumItem {
            Name: "CSG";
            Value: 13;
            EnumType: typeof globalThis.Enum.SecurityCapability;
        }
        export const CSG: CSG;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/SecurityCapability#Chat)
         */
        export interface Chat extends globalThis.EnumItem {
            Name: "Chat";
            Value: 14;
            EnumType: typeof globalThis.Enum.SecurityCapability;
        }
        export const Chat: Chat;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/SecurityCapability#Animation)
         */
        export interface Animation extends globalThis.EnumItem {
            Name: "Animation";
            Value: 15;
            EnumType: typeof globalThis.Enum.SecurityCapability;
        }
        export const Animation: Animation;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/SecurityCapability#Avatar)
         */
        export interface Avatar extends globalThis.EnumItem {
            Name: "Avatar";
            Value: 16;
            EnumType: typeof globalThis.Enum.SecurityCapability;
        }
        export const Avatar: Avatar;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/SecurityCapability#Input)
         */
        export interface Input extends globalThis.EnumItem {
            Name: "Input";
            Value: 17;
            EnumType: typeof globalThis.Enum.SecurityCapability;
        }
        export const Input: Input;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/SecurityCapability#Environment)
         */
        export interface Environment extends globalThis.EnumItem {
            Name: "Environment";
            Value: 18;
            EnumType: typeof globalThis.Enum.SecurityCapability;
        }
        export const Environment: Environment;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/SecurityCapability#RemoteEvent)
         */
        export interface RemoteEvent extends globalThis.EnumItem {
            Name: "RemoteEvent";
            Value: 19;
            EnumType: typeof globalThis.Enum.SecurityCapability;
        }
        export const RemoteEvent: RemoteEvent;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/SecurityCapability#LegacySound)
         */
        export interface LegacySound extends globalThis.EnumItem {
            Name: "LegacySound";
            Value: 20;
            EnumType: typeof globalThis.Enum.SecurityCapability;
        }
        export const LegacySound: LegacySound;
        export function GetEnumItems(this: globalThis.Enum): Array<globalThis.Enum.SecurityCapability>;
        export function FromName(this: globalThis.Enum, name: string): globalThis.Enum.SecurityCapability | undefined;
        export function FromValue(this: globalThis.Enum, value: number): globalThis.Enum.SecurityCapability | undefined;
    }
    export type SecurityCapability = SecurityCapability.RunClientScript | SecurityCapability.RunServerScript | SecurityCapability.AccessOutsideWrite | SecurityCapability.AssetRequire | SecurityCapability.LoadString | SecurityCapability.ScriptGlobals | SecurityCapability.CreateInstances | SecurityCapability.Basic | SecurityCapability.Audio | SecurityCapability.DataStore | SecurityCapability.Network | SecurityCapability.Physics | SecurityCapability.UI | SecurityCapability.CSG | SecurityCapability.Chat | SecurityCapability.Animation | SecurityCapability.Avatar | SecurityCapability.Input | SecurityCapability.Environment | SecurityCapability.RemoteEvent | SecurityCapability.LegacySound;
    /**
     * Customization options for gamepad selection when `GuiBase2d.SelectionGroup` is true.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/SelectionBehavior)
     */
    export namespace SelectionBehavior {
        /**
         * Prioritizes GuiObjects within the same SelectionGroup but allows the selection to move to other outside GuiObjects if no suitable button is found.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/SelectionBehavior#Escape)
         */
        export interface Escape extends globalThis.EnumItem {
            Name: "Escape";
            Value: 0;
            EnumType: typeof globalThis.Enum.SelectionBehavior;
        }
        export const Escape: Escape;
        /**
         * Constrains gamepad selection to the SelectionGroup.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/SelectionBehavior#Stop)
         */
        export interface Stop extends globalThis.EnumItem {
            Name: "Stop";
            Value: 1;
            EnumType: typeof globalThis.Enum.SelectionBehavior;
        }
        export const Stop: Stop;
        export function GetEnumItems(this: globalThis.Enum): Array<globalThis.Enum.SelectionBehavior>;
        export function FromName(this: globalThis.Enum, name: string): globalThis.Enum.SelectionBehavior | undefined;
        export function FromValue(this: globalThis.Enum, value: number): globalThis.Enum.SelectionBehavior | undefined;
    }
    export type SelectionBehavior = SelectionBehavior.Escape | SelectionBehavior.Stop;
    /**
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/SelectionRenderMode)
     */
    export namespace SelectionRenderMode {
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/SelectionRenderMode#Outlines)
         */
        export interface Outlines extends globalThis.EnumItem {
            Name: "Outlines";
            Value: 0;
            EnumType: typeof globalThis.Enum.SelectionRenderMode;
        }
        export const Outlines: Outlines;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/SelectionRenderMode#BoundingBoxes)
         */
        export interface BoundingBoxes extends globalThis.EnumItem {
            Name: "BoundingBoxes";
            Value: 1;
            EnumType: typeof globalThis.Enum.SelectionRenderMode;
        }
        export const BoundingBoxes: BoundingBoxes;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/SelectionRenderMode#Both)
         */
        export interface Both extends globalThis.EnumItem {
            Name: "Both";
            Value: 2;
            EnumType: typeof globalThis.Enum.SelectionRenderMode;
        }
        export const Both: Both;
        export function GetEnumItems(this: globalThis.Enum): Array<globalThis.Enum.SelectionRenderMode>;
        export function FromName(this: globalThis.Enum, name: string): globalThis.Enum.SelectionRenderMode | undefined;
        export function FromValue(this: globalThis.Enum, value: number): globalThis.Enum.SelectionRenderMode | undefined;
    }
    export type SelectionRenderMode = SelectionRenderMode.Outlines | SelectionRenderMode.BoundingBoxes | SelectionRenderMode.Both;
    /**
     * Defines the screen location of the current player's self view.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/SelfViewPosition)
     */
    export namespace SelfViewPosition {
        /**
         * The position of the self view when it was last closed.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/SelfViewPosition#LastPosition)
         */
        export interface LastPosition extends globalThis.EnumItem {
            Name: "LastPosition";
            Value: 0;
            EnumType: typeof globalThis.Enum.SelfViewPosition;
        }
        export const LastPosition: LastPosition;
        /**
         * Top-left corner of the screen, with slight padding from the top and left edges.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/SelfViewPosition#TopLeft)
         */
        export interface TopLeft extends globalThis.EnumItem {
            Name: "TopLeft";
            Value: 1;
            EnumType: typeof globalThis.Enum.SelfViewPosition;
        }
        export const TopLeft: TopLeft;
        /**
         * Top-right corner of the screen, with slight padding from the top and right edges.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/SelfViewPosition#TopRight)
         */
        export interface TopRight extends globalThis.EnumItem {
            Name: "TopRight";
            Value: 2;
            EnumType: typeof globalThis.Enum.SelfViewPosition;
        }
        export const TopRight: TopRight;
        /**
         * Bottom-left corner of the screen, with slight padding from the bottom and left edges.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/SelfViewPosition#BottomLeft)
         */
        export interface BottomLeft extends globalThis.EnumItem {
            Name: "BottomLeft";
            Value: 3;
            EnumType: typeof globalThis.Enum.SelfViewPosition;
        }
        export const BottomLeft: BottomLeft;
        /**
         * Bottom-right corner of the screen, with slight padding from the bottom and right edges.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/SelfViewPosition#BottomRight)
         */
        export interface BottomRight extends globalThis.EnumItem {
            Name: "BottomRight";
            Value: 4;
            EnumType: typeof globalThis.Enum.SelfViewPosition;
        }
        export const BottomRight: BottomRight;
        export function GetEnumItems(this: globalThis.Enum): Array<globalThis.Enum.SelfViewPosition>;
        export function FromName(this: globalThis.Enum, name: string): globalThis.Enum.SelfViewPosition | undefined;
        export function FromValue(this: globalThis.Enum, value: number): globalThis.Enum.SelfViewPosition | undefined;
    }
    export type SelfViewPosition = SelfViewPosition.LastPosition | SelfViewPosition.TopLeft | SelfViewPosition.TopRight | SelfViewPosition.BottomLeft | SelfViewPosition.BottomRight;
    /**
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/SensorMode)
     */
    export namespace SensorMode {
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/SensorMode#Floor)
         */
        export interface Floor extends globalThis.EnumItem {
            Name: "Floor";
            Value: 0;
            EnumType: typeof globalThis.Enum.SensorMode;
        }
        export const Floor: Floor;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/SensorMode#Ladder)
         */
        export interface Ladder extends globalThis.EnumItem {
            Name: "Ladder";
            Value: 1;
            EnumType: typeof globalThis.Enum.SensorMode;
        }
        export const Ladder: Ladder;
        export function GetEnumItems(this: globalThis.Enum): Array<globalThis.Enum.SensorMode>;
        export function FromName(this: globalThis.Enum, name: string): globalThis.Enum.SensorMode | undefined;
        export function FromValue(this: globalThis.Enum, value: number): globalThis.Enum.SensorMode | undefined;
    }
    export type SensorMode = SensorMode.Floor | SensorMode.Ladder;
    /**
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/SensorUpdateType)
     */
    export namespace SensorUpdateType {
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/SensorUpdateType#OnRead)
         */
        export interface OnRead extends globalThis.EnumItem {
            Name: "OnRead";
            Value: 0;
            EnumType: typeof globalThis.Enum.SensorUpdateType;
        }
        export const OnRead: OnRead;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/SensorUpdateType#Manual)
         */
        export interface Manual extends globalThis.EnumItem {
            Name: "Manual";
            Value: 1;
            EnumType: typeof globalThis.Enum.SensorUpdateType;
        }
        export const Manual: Manual;
        export function GetEnumItems(this: globalThis.Enum): Array<globalThis.Enum.SensorUpdateType>;
        export function FromName(this: globalThis.Enum, name: string): globalThis.Enum.SensorUpdateType | undefined;
        export function FromValue(this: globalThis.Enum, value: number): globalThis.Enum.SensorUpdateType | undefined;
    }
    export type SensorUpdateType = SensorUpdateType.OnRead | SensorUpdateType.Manual;
    /**
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/ServerLiveEditingMode)
     */
    export namespace ServerLiveEditingMode {
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/ServerLiveEditingMode#Uninitialized)
         */
        export interface Uninitialized extends globalThis.EnumItem {
            Name: "Uninitialized";
            Value: 0;
            EnumType: typeof globalThis.Enum.ServerLiveEditingMode;
        }
        export const Uninitialized: Uninitialized;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/ServerLiveEditingMode#Enabled)
         */
        export interface Enabled extends globalThis.EnumItem {
            Name: "Enabled";
            Value: 1;
            EnumType: typeof globalThis.Enum.ServerLiveEditingMode;
        }
        export const Enabled: Enabled;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/ServerLiveEditingMode#Disabled)
         */
        export interface Disabled extends globalThis.EnumItem {
            Name: "Disabled";
            Value: 2;
            EnumType: typeof globalThis.Enum.ServerLiveEditingMode;
        }
        export const Disabled: Disabled;
        export function GetEnumItems(this: globalThis.Enum): Array<globalThis.Enum.ServerLiveEditingMode>;
        export function FromName(this: globalThis.Enum, name: string): globalThis.Enum.ServerLiveEditingMode | undefined;
        export function FromValue(this: globalThis.Enum, value: number): globalThis.Enum.ServerLiveEditingMode | undefined;
    }
    export type ServerLiveEditingMode = ServerLiveEditingMode.Uninitialized | ServerLiveEditingMode.Enabled | ServerLiveEditingMode.Disabled;
    /**
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/ServiceVisibility)
     */
    export namespace ServiceVisibility {
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/ServiceVisibility#Always)
         */
        export interface Always extends globalThis.EnumItem {
            Name: "Always";
            Value: 0;
            EnumType: typeof globalThis.Enum.ServiceVisibility;
        }
        export const Always: Always;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/ServiceVisibility#Off)
         */
        export interface Off extends globalThis.EnumItem {
            Name: "Off";
            Value: 1;
            EnumType: typeof globalThis.Enum.ServiceVisibility;
        }
        export const Off: Off;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/ServiceVisibility#WithChildren)
         */
        export interface WithChildren extends globalThis.EnumItem {
            Name: "WithChildren";
            Value: 2;
            EnumType: typeof globalThis.Enum.ServiceVisibility;
        }
        export const WithChildren: WithChildren;
        export function GetEnumItems(this: globalThis.Enum): Array<globalThis.Enum.ServiceVisibility>;
        export function FromName(this: globalThis.Enum, name: string): globalThis.Enum.ServiceVisibility | undefined;
        export function FromValue(this: globalThis.Enum, value: number): globalThis.Enum.ServiceVisibility | undefined;
    }
    export type ServiceVisibility = ServiceVisibility.Always | ServiceVisibility.Off | ServiceVisibility.WithChildren;
    /**
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/Severity)
     */
    export namespace Severity {
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/Severity#Error)
         */
        export interface Error extends globalThis.EnumItem {
            Name: "Error";
            Value: 1;
            EnumType: typeof globalThis.Enum.Severity;
        }
        export const Error: Error;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/Severity#Warning)
         */
        export interface Warning extends globalThis.EnumItem {
            Name: "Warning";
            Value: 2;
            EnumType: typeof globalThis.Enum.Severity;
        }
        export const Warning: Warning;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/Severity#Information)
         */
        export interface Information extends globalThis.EnumItem {
            Name: "Information";
            Value: 3;
            EnumType: typeof globalThis.Enum.Severity;
        }
        export const Information: Information;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/Severity#Hint)
         */
        export interface Hint extends globalThis.EnumItem {
            Name: "Hint";
            Value: 4;
            EnumType: typeof globalThis.Enum.Severity;
        }
        export const Hint: Hint;
        export function GetEnumItems(this: globalThis.Enum): Array<globalThis.Enum.Severity>;
        export function FromName(this: globalThis.Enum, name: string): globalThis.Enum.Severity | undefined;
        export function FromValue(this: globalThis.Enum, value: number): globalThis.Enum.Severity | undefined;
    }
    export type Severity = Severity.Error | Severity.Warning | Severity.Information | Severity.Hint;
    /**
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/ShowAdResult)
     */
    export namespace ShowAdResult {
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/ShowAdResult#ShowCompleted)
         */
        export interface ShowCompleted extends globalThis.EnumItem {
            Name: "ShowCompleted";
            Value: 1;
            EnumType: typeof globalThis.Enum.ShowAdResult;
        }
        export const ShowCompleted: ShowCompleted;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/ShowAdResult#AdNotReady)
         */
        export interface AdNotReady extends globalThis.EnumItem {
            Name: "AdNotReady";
            Value: 2;
            EnumType: typeof globalThis.Enum.ShowAdResult;
        }
        export const AdNotReady: AdNotReady;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/ShowAdResult#AdAlreadyShowing)
         */
        export interface AdAlreadyShowing extends globalThis.EnumItem {
            Name: "AdAlreadyShowing";
            Value: 3;
            EnumType: typeof globalThis.Enum.ShowAdResult;
        }
        export const AdAlreadyShowing: AdAlreadyShowing;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/ShowAdResult#InternalError)
         */
        export interface InternalError extends globalThis.EnumItem {
            Name: "InternalError";
            Value: 4;
            EnumType: typeof globalThis.Enum.ShowAdResult;
        }
        export const InternalError: InternalError;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/ShowAdResult#ShowInterrupted)
         */
        export interface ShowInterrupted extends globalThis.EnumItem {
            Name: "ShowInterrupted";
            Value: 5;
            EnumType: typeof globalThis.Enum.ShowAdResult;
        }
        export const ShowInterrupted: ShowInterrupted;
        export function GetEnumItems(this: globalThis.Enum): Array<globalThis.Enum.ShowAdResult>;
        export function FromName(this: globalThis.Enum, name: string): globalThis.Enum.ShowAdResult | undefined;
        export function FromValue(this: globalThis.Enum, value: number): globalThis.Enum.ShowAdResult | undefined;
    }
    export type ShowAdResult = ShowAdResult.ShowCompleted | ShowAdResult.AdNotReady | ShowAdResult.AdAlreadyShowing | ShowAdResult.InternalError | ShowAdResult.ShowInterrupted;
    /**
     * Determines when the engine resumes event handlers.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/SignalBehavior)
     */
    export namespace SignalBehavior {
        /**
         * The default behavior; currently equivalent to `Immediate` but this will eventually change to `Deferred`.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/SignalBehavior#Default)
         */
        export interface Default extends globalThis.EnumItem {
            Name: "Default";
            Value: 0;
            EnumType: typeof globalThis.Enum.SignalBehavior;
        }
        export const Default: Default;
        /**
         * Event handlers are resumed immediately when the event occurs.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/SignalBehavior#Immediate)
         */
        export interface Immediate extends globalThis.EnumItem {
            Name: "Immediate";
            Value: 1;
            EnumType: typeof globalThis.Enum.SignalBehavior;
        }
        export const Immediate: Immediate;
        /**
         * All events are deferred and their handlers resumed at specific resumptions points each frame.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/SignalBehavior#Deferred)
         */
        export interface Deferred extends globalThis.EnumItem {
            Name: "Deferred";
            Value: 2;
            EnumType: typeof globalThis.Enum.SignalBehavior;
        }
        export const Deferred: Deferred;
        /**
         * Equivalent to `Deferred` but only for events triggered by changes in ancestry.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/SignalBehavior#AncestryDeferred)
         */
        export interface AncestryDeferred extends globalThis.EnumItem {
            Name: "AncestryDeferred";
            Value: 3;
            EnumType: typeof globalThis.Enum.SignalBehavior;
        }
        export const AncestryDeferred: AncestryDeferred;
        export function GetEnumItems(this: globalThis.Enum): Array<globalThis.Enum.SignalBehavior>;
        export function FromName(this: globalThis.Enum, name: string): globalThis.Enum.SignalBehavior | undefined;
        export function FromValue(this: globalThis.Enum, value: number): globalThis.Enum.SignalBehavior | undefined;
    }
    export type SignalBehavior = SignalBehavior.Default | SignalBehavior.Immediate | SignalBehavior.Deferred | SignalBehavior.AncestryDeferred;
    /**
     * Used to constrain the scale of a GUI object.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/SizeConstraint)
     */
    export namespace SizeConstraint {
        /**
         * The scale of X and Y are independent.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/SizeConstraint#RelativeXY)
         */
        export interface RelativeXY extends globalThis.EnumItem {
            Name: "RelativeXY";
            Value: 0;
            EnumType: typeof globalThis.Enum.SizeConstraint;
        }
        export const RelativeXY: RelativeXY;
        /**
         * The scale of X is shared with Y.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/SizeConstraint#RelativeXX)
         */
        export interface RelativeXX extends globalThis.EnumItem {
            Name: "RelativeXX";
            Value: 1;
            EnumType: typeof globalThis.Enum.SizeConstraint;
        }
        export const RelativeXX: RelativeXX;
        /**
         * The scale of Y is shared with X.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/SizeConstraint#RelativeYY)
         */
        export interface RelativeYY extends globalThis.EnumItem {
            Name: "RelativeYY";
            Value: 2;
            EnumType: typeof globalThis.Enum.SizeConstraint;
        }
        export const RelativeYY: RelativeYY;
        export function GetEnumItems(this: globalThis.Enum): Array<globalThis.Enum.SizeConstraint>;
        export function FromName(this: globalThis.Enum, name: string): globalThis.Enum.SizeConstraint | undefined;
        export function FromValue(this: globalThis.Enum, value: number): globalThis.Enum.SizeConstraint | undefined;
    }
    export type SizeConstraint = SizeConstraint.RelativeXY | SizeConstraint.RelativeXX | SizeConstraint.RelativeYY;
    /**
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/SolverConvergenceMetricType)
     */
    export namespace SolverConvergenceMetricType {
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/SolverConvergenceMetricType#IterationBased)
         */
        export interface IterationBased extends globalThis.EnumItem {
            Name: "IterationBased";
            Value: 0;
            EnumType: typeof globalThis.Enum.SolverConvergenceMetricType;
        }
        export const IterationBased: IterationBased;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/SolverConvergenceMetricType#AlgorithmAgnostic)
         */
        export interface AlgorithmAgnostic extends globalThis.EnumItem {
            Name: "AlgorithmAgnostic";
            Value: 1;
            EnumType: typeof globalThis.Enum.SolverConvergenceMetricType;
        }
        export const AlgorithmAgnostic: AlgorithmAgnostic;
        export function GetEnumItems(this: globalThis.Enum): Array<globalThis.Enum.SolverConvergenceMetricType>;
        export function FromName(this: globalThis.Enum, name: string): globalThis.Enum.SolverConvergenceMetricType | undefined;
        export function FromValue(this: globalThis.Enum, value: number): globalThis.Enum.SolverConvergenceMetricType | undefined;
    }
    export type SolverConvergenceMetricType = SolverConvergenceMetricType.IterationBased | SolverConvergenceMetricType.AlgorithmAgnostic;
    /**
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/SolverConvergenceVisualizationMode)
     */
    export namespace SolverConvergenceVisualizationMode {
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/SolverConvergenceVisualizationMode#Disabled)
         */
        export interface Disabled extends globalThis.EnumItem {
            Name: "Disabled";
            Value: 0;
            EnumType: typeof globalThis.Enum.SolverConvergenceVisualizationMode;
        }
        export const Disabled: Disabled;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/SolverConvergenceVisualizationMode#PerIsland)
         */
        export interface PerIsland extends globalThis.EnumItem {
            Name: "PerIsland";
            Value: 1;
            EnumType: typeof globalThis.Enum.SolverConvergenceVisualizationMode;
        }
        export const PerIsland: PerIsland;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/SolverConvergenceVisualizationMode#PerEdge)
         */
        export interface PerEdge extends globalThis.EnumItem {
            Name: "PerEdge";
            Value: 2;
            EnumType: typeof globalThis.Enum.SolverConvergenceVisualizationMode;
        }
        export const PerEdge: PerEdge;
        export function GetEnumItems(this: globalThis.Enum): Array<globalThis.Enum.SolverConvergenceVisualizationMode>;
        export function FromName(this: globalThis.Enum, name: string): globalThis.Enum.SolverConvergenceVisualizationMode | undefined;
        export function FromValue(this: globalThis.Enum, value: number): globalThis.Enum.SolverConvergenceVisualizationMode | undefined;
    }
    export type SolverConvergenceVisualizationMode = SolverConvergenceVisualizationMode.Disabled | SolverConvergenceVisualizationMode.PerIsland | SolverConvergenceVisualizationMode.PerEdge;
    /**
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/SortDirection)
     */
    export namespace SortDirection {
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/SortDirection#Ascending)
         */
        export interface Ascending extends globalThis.EnumItem {
            Name: "Ascending";
            Value: 0;
            EnumType: typeof globalThis.Enum.SortDirection;
        }
        export const Ascending: Ascending;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/SortDirection#Descending)
         */
        export interface Descending extends globalThis.EnumItem {
            Name: "Descending";
            Value: 1;
            EnumType: typeof globalThis.Enum.SortDirection;
        }
        export const Descending: Descending;
        export function GetEnumItems(this: globalThis.Enum): Array<globalThis.Enum.SortDirection>;
        export function FromName(this: globalThis.Enum, name: string): globalThis.Enum.SortDirection | undefined;
        export function FromValue(this: globalThis.Enum, value: number): globalThis.Enum.SortDirection | undefined;
    }
    export type SortDirection = SortDirection.Ascending | SortDirection.Descending;
    /**
     * Used by `UIGridStyleLayout.SortOrder` to order the elements in the layout.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/SortOrder)
     */
    export namespace SortOrder {
        /**
         * Elements are ordered by their `Instance.Name` in alphanumeric order.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/SortOrder#Name)
         */
        export interface Name extends globalThis.EnumItem {
            Name: "Name";
            Value: 0;
            EnumType: typeof globalThis.Enum.SortOrder;
        }
        export const Name: Name;
        /**
         * **Deprecated:**
         *
         * Elements are ordered by the function passed to `UIGridStyleLayout:SetCustomSortFunction()`.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/SortOrder#Custom)
         */
        export interface Custom extends globalThis.EnumItem {
            Name: "Custom";
            Value: 1;
            EnumType: typeof globalThis.Enum.SortOrder;
        }
        export const Custom: Custom;
        /**
         * Elements are ordered by `GuiObject.LayoutOrder` in ascending order; for example `0` will be placed before `1`.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/SortOrder#LayoutOrder)
         */
        export interface LayoutOrder extends globalThis.EnumItem {
            Name: "LayoutOrder";
            Value: 2;
            EnumType: typeof globalThis.Enum.SortOrder;
        }
        export const LayoutOrder: LayoutOrder;
        export function GetEnumItems(this: globalThis.Enum): Array<globalThis.Enum.SortOrder>;
        export function FromName(this: globalThis.Enum, name: string): globalThis.Enum.SortOrder | undefined;
        export function FromValue(this: globalThis.Enum, value: number): globalThis.Enum.SortOrder | undefined;
    }
    export type SortOrder = SortOrder.Name | SortOrder.Custom | SortOrder.LayoutOrder;
    /**
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/SpecialKey)
     */
    export namespace SpecialKey {
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/SpecialKey#Insert)
         */
        export interface Insert extends globalThis.EnumItem {
            Name: "Insert";
            Value: 0;
            EnumType: typeof globalThis.Enum.SpecialKey;
        }
        export const Insert: Insert;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/SpecialKey#Home)
         */
        export interface Home extends globalThis.EnumItem {
            Name: "Home";
            Value: 1;
            EnumType: typeof globalThis.Enum.SpecialKey;
        }
        export const Home: Home;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/SpecialKey#End)
         */
        export interface End extends globalThis.EnumItem {
            Name: "End";
            Value: 2;
            EnumType: typeof globalThis.Enum.SpecialKey;
        }
        export const End: End;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/SpecialKey#PageUp)
         */
        export interface PageUp extends globalThis.EnumItem {
            Name: "PageUp";
            Value: 3;
            EnumType: typeof globalThis.Enum.SpecialKey;
        }
        export const PageUp: PageUp;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/SpecialKey#PageDown)
         */
        export interface PageDown extends globalThis.EnumItem {
            Name: "PageDown";
            Value: 4;
            EnumType: typeof globalThis.Enum.SpecialKey;
        }
        export const PageDown: PageDown;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/SpecialKey#ChatHotkey)
         */
        export interface ChatHotkey extends globalThis.EnumItem {
            Name: "ChatHotkey";
            Value: 5;
            EnumType: typeof globalThis.Enum.SpecialKey;
        }
        export const ChatHotkey: ChatHotkey;
        export function GetEnumItems(this: globalThis.Enum): Array<globalThis.Enum.SpecialKey>;
        export function FromName(this: globalThis.Enum, name: string): globalThis.Enum.SpecialKey | undefined;
        export function FromValue(this: globalThis.Enum, value: number): globalThis.Enum.SpecialKey | undefined;
    }
    export type SpecialKey = SpecialKey.Insert | SpecialKey.Home | SpecialKey.End | SpecialKey.PageUp | SpecialKey.PageDown | SpecialKey.ChatHotkey;
    /**
     * Used by `UIGridLayout.StartCorner` to decide where the first element is placed.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/StartCorner)
     */
    export namespace StartCorner {
        /**
         * Grid starts in top left corner.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/StartCorner#TopLeft)
         */
        export interface TopLeft extends globalThis.EnumItem {
            Name: "TopLeft";
            Value: 0;
            EnumType: typeof globalThis.Enum.StartCorner;
        }
        export const TopLeft: TopLeft;
        /**
         * Grid starts in top right corner.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/StartCorner#TopRight)
         */
        export interface TopRight extends globalThis.EnumItem {
            Name: "TopRight";
            Value: 1;
            EnumType: typeof globalThis.Enum.StartCorner;
        }
        export const TopRight: TopRight;
        /**
         * Grid starts in bottom left corner.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/StartCorner#BottomLeft)
         */
        export interface BottomLeft extends globalThis.EnumItem {
            Name: "BottomLeft";
            Value: 2;
            EnumType: typeof globalThis.Enum.StartCorner;
        }
        export const BottomLeft: BottomLeft;
        /**
         * Grid starts in bottom right corner.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/StartCorner#BottomRight)
         */
        export interface BottomRight extends globalThis.EnumItem {
            Name: "BottomRight";
            Value: 3;
            EnumType: typeof globalThis.Enum.StartCorner;
        }
        export const BottomRight: BottomRight;
        export function GetEnumItems(this: globalThis.Enum): Array<globalThis.Enum.StartCorner>;
        export function FromName(this: globalThis.Enum, name: string): globalThis.Enum.StartCorner | undefined;
        export function FromValue(this: globalThis.Enum, value: number): globalThis.Enum.StartCorner | undefined;
    }
    export type StartCorner = StartCorner.TopLeft | StartCorner.TopRight | StartCorner.BottomLeft | StartCorner.BottomRight;
    /**
     * **Deprecated:** This enum is deprecated as it was only used by deprecated methods and events. It should not be used in new work.
     *
     * This enum was used with the unfinished `Status` library.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/Status)
     */
    export namespace Status {
        /**
         * **Deprecated:** This option is deprecated.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/Status#Poison)
         */
        export interface Poison extends globalThis.EnumItem {
            Name: "Poison";
            Value: 0;
            EnumType: typeof globalThis.Enum.Status;
        }
        export const Poison: Poison;
        /**
         * **Deprecated:** This option is deprecated.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/Status#Confusion)
         */
        export interface Confusion extends globalThis.EnumItem {
            Name: "Confusion";
            Value: 1;
            EnumType: typeof globalThis.Enum.Status;
        }
        export const Confusion: Confusion;
        export function GetEnumItems(this: globalThis.Enum): Array<globalThis.Enum.Status>;
        export function FromName(this: globalThis.Enum, name: string): globalThis.Enum.Status | undefined;
        export function FromValue(this: globalThis.Enum, value: number): globalThis.Enum.Status | undefined;
    }
    export type Status = Status.Poison | Status.Confusion;
    /**
     * Determines how content is streamed away from Players.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/StreamOutBehavior)
     */
    export namespace StreamOutBehavior {
        /**
         * Currently equivalent to LowMemory. This will eventually change to Opportunistic.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/StreamOutBehavior#Default)
         */
        export interface Default extends globalThis.EnumItem {
            Name: "Default";
            Value: 0;
            EnumType: typeof globalThis.Enum.StreamOutBehavior;
        }
        export const Default: Default;
        /**
         * Only stream out when memory is low.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/StreamOutBehavior#LowMemory)
         */
        export interface LowMemory extends globalThis.EnumItem {
            Name: "LowMemory";
            Value: 1;
            EnumType: typeof globalThis.Enum.StreamOutBehavior;
        }
        export const LowMemory: LowMemory;
        /**
         * Stream out content that is significantly outside of the current StreamingRadius.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/StreamOutBehavior#Opportunistic)
         */
        export interface Opportunistic extends globalThis.EnumItem {
            Name: "Opportunistic";
            Value: 2;
            EnumType: typeof globalThis.Enum.StreamOutBehavior;
        }
        export const Opportunistic: Opportunistic;
        export function GetEnumItems(this: globalThis.Enum): Array<globalThis.Enum.StreamOutBehavior>;
        export function FromName(this: globalThis.Enum, name: string): globalThis.Enum.StreamOutBehavior | undefined;
        export function FromValue(this: globalThis.Enum, value: number): globalThis.Enum.StreamOutBehavior | undefined;
    }
    export type StreamOutBehavior = StreamOutBehavior.Default | StreamOutBehavior.LowMemory | StreamOutBehavior.Opportunistic;
    /**
     * Determines how a user's client should handle not having enough content streamed in.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/StreamingIntegrityMode)
     */
    export namespace StreamingIntegrityMode {
        /**
         * Default behavior (currently equivalent to **Disabled**).
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/StreamingIntegrityMode#Default)
         */
        export interface Default extends globalThis.EnumItem {
            Name: "Default";
            Value: 0;
            EnumType: typeof globalThis.Enum.StreamingIntegrityMode;
        }
        export const Default: Default;
        /**
         * Simulation of the replication focus is never paused, regardless of the amount of content streamed in on the client.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/StreamingIntegrityMode#Disabled)
         */
        export interface Disabled extends globalThis.EnumItem {
            Name: "Disabled";
            Value: 1;
            EnumType: typeof globalThis.Enum.StreamingIntegrityMode;
        }
        export const Disabled: Disabled;
        /**
         * All client-side simulation is paused when content is not streamed in up to the minimum radius.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/StreamingIntegrityMode#MinimumRadiusPause)
         */
        export interface MinimumRadiusPause extends globalThis.EnumItem {
            Name: "MinimumRadiusPause";
            Value: 2;
            EnumType: typeof globalThis.Enum.StreamingIntegrityMode;
        }
        export const MinimumRadiusPause: MinimumRadiusPause;
        /**
         * Simulation of the replication focus is paused when any part of its bounding box is not in a streamed-in area.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/StreamingIntegrityMode#PauseOutsideLoadedArea)
         */
        export interface PauseOutsideLoadedArea extends globalThis.EnumItem {
            Name: "PauseOutsideLoadedArea";
            Value: 3;
            EnumType: typeof globalThis.Enum.StreamingIntegrityMode;
        }
        export const PauseOutsideLoadedArea: PauseOutsideLoadedArea;
        export function GetEnumItems(this: globalThis.Enum): Array<globalThis.Enum.StreamingIntegrityMode>;
        export function FromName(this: globalThis.Enum, name: string): globalThis.Enum.StreamingIntegrityMode | undefined;
        export function FromValue(this: globalThis.Enum, value: number): globalThis.Enum.StreamingIntegrityMode | undefined;
    }
    export type StreamingIntegrityMode = StreamingIntegrityMode.Default | StreamingIntegrityMode.Disabled | StreamingIntegrityMode.MinimumRadiusPause | StreamingIntegrityMode.PauseOutsideLoadedArea;
    /**
     * Determines how a Players client should handle not having enough content streamed in to continue playing properly.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/StreamingPauseMode)
     */
    export namespace StreamingPauseMode {
        /**
         * **Deprecated:**
         *
         * Default behavior (currently no change to gameplay).
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/StreamingPauseMode#Default)
         */
        export interface Default extends globalThis.EnumItem {
            Name: "Default";
            Value: 0;
            EnumType: typeof globalThis.Enum.StreamingPauseMode;
        }
        export const Default: Default;
        /**
         * **Deprecated:**
         *
         * No change to gameplay due to streaming region availability.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/StreamingPauseMode#Disabled)
         */
        export interface Disabled extends globalThis.EnumItem {
            Name: "Disabled";
            Value: 1;
            EnumType: typeof globalThis.Enum.StreamingPauseMode;
        }
        export const Disabled: Disabled;
        /**
         * **Deprecated:**
         *
         * Client owned physics is paused.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/StreamingPauseMode#ClientPhysicsPause)
         */
        export interface ClientPhysicsPause extends globalThis.EnumItem {
            Name: "ClientPhysicsPause";
            Value: 2;
            EnumType: typeof globalThis.Enum.StreamingPauseMode;
        }
        export const ClientPhysicsPause: ClientPhysicsPause;
        export function GetEnumItems(this: globalThis.Enum): Array<globalThis.Enum.StreamingPauseMode>;
        export function FromName(this: globalThis.Enum, name: string): globalThis.Enum.StreamingPauseMode | undefined;
        export function FromValue(this: globalThis.Enum, value: number): globalThis.Enum.StreamingPauseMode | undefined;
    }
    export type StreamingPauseMode = StreamingPauseMode.Default | StreamingPauseMode.Disabled | StreamingPauseMode.ClientPhysicsPause;
    /**
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/StudioCloseMode)
     */
    export namespace StudioCloseMode {
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/StudioCloseMode#None)
         */
        export interface None extends globalThis.EnumItem {
            Name: "None";
            Value: 0;
            EnumType: typeof globalThis.Enum.StudioCloseMode;
        }
        export const None: None;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/StudioCloseMode#CloseStudio)
         */
        export interface CloseStudio extends globalThis.EnumItem {
            Name: "CloseStudio";
            Value: 1;
            EnumType: typeof globalThis.Enum.StudioCloseMode;
        }
        export const CloseStudio: CloseStudio;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/StudioCloseMode#CloseDoc)
         */
        export interface CloseDoc extends globalThis.EnumItem {
            Name: "CloseDoc";
            Value: 2;
            EnumType: typeof globalThis.Enum.StudioCloseMode;
        }
        export const CloseDoc: CloseDoc;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/StudioCloseMode#LogOut)
         */
        export interface LogOut extends globalThis.EnumItem {
            Name: "LogOut";
            Value: 3;
            EnumType: typeof globalThis.Enum.StudioCloseMode;
        }
        export const LogOut: LogOut;
        export function GetEnumItems(this: globalThis.Enum): Array<globalThis.Enum.StudioCloseMode>;
        export function FromName(this: globalThis.Enum, name: string): globalThis.Enum.StudioCloseMode | undefined;
        export function FromValue(this: globalThis.Enum, value: number): globalThis.Enum.StudioCloseMode | undefined;
    }
    export type StudioCloseMode = StudioCloseMode.None | StudioCloseMode.CloseStudio | StudioCloseMode.CloseDoc | StudioCloseMode.LogOut;
    /**
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/StudioDataModelType)
     */
    export namespace StudioDataModelType {
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/StudioDataModelType#Edit)
         */
        export interface Edit extends globalThis.EnumItem {
            Name: "Edit";
            Value: 0;
            EnumType: typeof globalThis.Enum.StudioDataModelType;
        }
        export const Edit: Edit;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/StudioDataModelType#PlayClient)
         */
        export interface PlayClient extends globalThis.EnumItem {
            Name: "PlayClient";
            Value: 1;
            EnumType: typeof globalThis.Enum.StudioDataModelType;
        }
        export const PlayClient: PlayClient;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/StudioDataModelType#PlayServer)
         */
        export interface PlayServer extends globalThis.EnumItem {
            Name: "PlayServer";
            Value: 2;
            EnumType: typeof globalThis.Enum.StudioDataModelType;
        }
        export const PlayServer: PlayServer;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/StudioDataModelType#Standalone)
         */
        export interface Standalone extends globalThis.EnumItem {
            Name: "Standalone";
            Value: 3;
            EnumType: typeof globalThis.Enum.StudioDataModelType;
        }
        export const Standalone: Standalone;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/StudioDataModelType#None)
         */
        export interface None extends globalThis.EnumItem {
            Name: "None";
            Value: 4;
            EnumType: typeof globalThis.Enum.StudioDataModelType;
        }
        export const None: None;
        export function GetEnumItems(this: globalThis.Enum): Array<globalThis.Enum.StudioDataModelType>;
        export function FromName(this: globalThis.Enum, name: string): globalThis.Enum.StudioDataModelType | undefined;
        export function FromValue(this: globalThis.Enum, value: number): globalThis.Enum.StudioDataModelType | undefined;
    }
    export type StudioDataModelType = StudioDataModelType.Edit | StudioDataModelType.PlayClient | StudioDataModelType.PlayServer | StudioDataModelType.Standalone | StudioDataModelType.None;
    /**
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/StudioPlaceUpdateFailureReason)
     */
    export namespace StudioPlaceUpdateFailureReason {
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/StudioPlaceUpdateFailureReason#Other)
         */
        export interface Other extends globalThis.EnumItem {
            Name: "Other";
            Value: 0;
            EnumType: typeof globalThis.Enum.StudioPlaceUpdateFailureReason;
        }
        export const Other: Other;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/StudioPlaceUpdateFailureReason#TeamCreateConflict)
         */
        export interface TeamCreateConflict extends globalThis.EnumItem {
            Name: "TeamCreateConflict";
            Value: 1;
            EnumType: typeof globalThis.Enum.StudioPlaceUpdateFailureReason;
        }
        export const TeamCreateConflict: TeamCreateConflict;
        export function GetEnumItems(this: globalThis.Enum): Array<globalThis.Enum.StudioPlaceUpdateFailureReason>;
        export function FromName(this: globalThis.Enum, name: string): globalThis.Enum.StudioPlaceUpdateFailureReason | undefined;
        export function FromValue(this: globalThis.Enum, value: number): globalThis.Enum.StudioPlaceUpdateFailureReason | undefined;
    }
    export type StudioPlaceUpdateFailureReason = StudioPlaceUpdateFailureReason.Other | StudioPlaceUpdateFailureReason.TeamCreateConflict;
    /**
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/StudioScriptEditorColorCategories)
     */
    export namespace StudioScriptEditorColorCategories {
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/StudioScriptEditorColorCategories#Default)
         */
        export interface Default extends globalThis.EnumItem {
            Name: "Default";
            Value: 0;
            EnumType: typeof globalThis.Enum.StudioScriptEditorColorCategories;
        }
        export const Default: Default;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/StudioScriptEditorColorCategories#Operator)
         */
        export interface Operator extends globalThis.EnumItem {
            Name: "Operator";
            Value: 1;
            EnumType: typeof globalThis.Enum.StudioScriptEditorColorCategories;
        }
        export const Operator: Operator;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/StudioScriptEditorColorCategories#Number)
         */
        export interface Number extends globalThis.EnumItem {
            Name: "Number";
            Value: 2;
            EnumType: typeof globalThis.Enum.StudioScriptEditorColorCategories;
        }
        export const Number: Number;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/StudioScriptEditorColorCategories#String)
         */
        export interface String extends globalThis.EnumItem {
            Name: "String";
            Value: 3;
            EnumType: typeof globalThis.Enum.StudioScriptEditorColorCategories;
        }
        export const String: String;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/StudioScriptEditorColorCategories#Comment)
         */
        export interface Comment extends globalThis.EnumItem {
            Name: "Comment";
            Value: 4;
            EnumType: typeof globalThis.Enum.StudioScriptEditorColorCategories;
        }
        export const Comment: Comment;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/StudioScriptEditorColorCategories#Keyword)
         */
        export interface Keyword extends globalThis.EnumItem {
            Name: "Keyword";
            Value: 5;
            EnumType: typeof globalThis.Enum.StudioScriptEditorColorCategories;
        }
        export const Keyword: Keyword;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/StudioScriptEditorColorCategories#Builtin)
         */
        export interface Builtin extends globalThis.EnumItem {
            Name: "Builtin";
            Value: 6;
            EnumType: typeof globalThis.Enum.StudioScriptEditorColorCategories;
        }
        export const Builtin: Builtin;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/StudioScriptEditorColorCategories#Method)
         */
        export interface Method extends globalThis.EnumItem {
            Name: "Method";
            Value: 7;
            EnumType: typeof globalThis.Enum.StudioScriptEditorColorCategories;
        }
        export const Method: Method;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/StudioScriptEditorColorCategories#Property)
         */
        export interface Property extends globalThis.EnumItem {
            Name: "Property";
            Value: 8;
            EnumType: typeof globalThis.Enum.StudioScriptEditorColorCategories;
        }
        export const Property: Property;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/StudioScriptEditorColorCategories#Nil)
         */
        export interface Nil extends globalThis.EnumItem {
            Name: "Nil";
            Value: 9;
            EnumType: typeof globalThis.Enum.StudioScriptEditorColorCategories;
        }
        export const Nil: Nil;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/StudioScriptEditorColorCategories#Bool)
         */
        export interface Bool extends globalThis.EnumItem {
            Name: "Bool";
            Value: 10;
            EnumType: typeof globalThis.Enum.StudioScriptEditorColorCategories;
        }
        export const Bool: Bool;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/StudioScriptEditorColorCategories#Function)
         */
        export interface Function extends globalThis.EnumItem {
            Name: "Function";
            Value: 11;
            EnumType: typeof globalThis.Enum.StudioScriptEditorColorCategories;
        }
        export const Function: Function;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/StudioScriptEditorColorCategories#Local)
         */
        export interface Local extends globalThis.EnumItem {
            Name: "Local";
            Value: 12;
            EnumType: typeof globalThis.Enum.StudioScriptEditorColorCategories;
        }
        export const Local: Local;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/StudioScriptEditorColorCategories#Self)
         */
        export interface Self extends globalThis.EnumItem {
            Name: "Self";
            Value: 13;
            EnumType: typeof globalThis.Enum.StudioScriptEditorColorCategories;
        }
        export const Self: Self;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/StudioScriptEditorColorCategories#LuauKeyword)
         */
        export interface LuauKeyword extends globalThis.EnumItem {
            Name: "LuauKeyword";
            Value: 14;
            EnumType: typeof globalThis.Enum.StudioScriptEditorColorCategories;
        }
        export const LuauKeyword: LuauKeyword;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/StudioScriptEditorColorCategories#FunctionName)
         */
        export interface FunctionName extends globalThis.EnumItem {
            Name: "FunctionName";
            Value: 15;
            EnumType: typeof globalThis.Enum.StudioScriptEditorColorCategories;
        }
        export const FunctionName: FunctionName;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/StudioScriptEditorColorCategories#TODO)
         */
        export interface TODO extends globalThis.EnumItem {
            Name: "TODO";
            Value: 16;
            EnumType: typeof globalThis.Enum.StudioScriptEditorColorCategories;
        }
        export const TODO: TODO;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/StudioScriptEditorColorCategories#Background)
         */
        export interface Background extends globalThis.EnumItem {
            Name: "Background";
            Value: 17;
            EnumType: typeof globalThis.Enum.StudioScriptEditorColorCategories;
        }
        export const Background: Background;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/StudioScriptEditorColorCategories#SelectionText)
         */
        export interface SelectionText extends globalThis.EnumItem {
            Name: "SelectionText";
            Value: 18;
            EnumType: typeof globalThis.Enum.StudioScriptEditorColorCategories;
        }
        export const SelectionText: SelectionText;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/StudioScriptEditorColorCategories#SelectionBackground)
         */
        export interface SelectionBackground extends globalThis.EnumItem {
            Name: "SelectionBackground";
            Value: 19;
            EnumType: typeof globalThis.Enum.StudioScriptEditorColorCategories;
        }
        export const SelectionBackground: SelectionBackground;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/StudioScriptEditorColorCategories#FindSelectionBackground)
         */
        export interface FindSelectionBackground extends globalThis.EnumItem {
            Name: "FindSelectionBackground";
            Value: 20;
            EnumType: typeof globalThis.Enum.StudioScriptEditorColorCategories;
        }
        export const FindSelectionBackground: FindSelectionBackground;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/StudioScriptEditorColorCategories#MatchingWordBackground)
         */
        export interface MatchingWordBackground extends globalThis.EnumItem {
            Name: "MatchingWordBackground";
            Value: 21;
            EnumType: typeof globalThis.Enum.StudioScriptEditorColorCategories;
        }
        export const MatchingWordBackground: MatchingWordBackground;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/StudioScriptEditorColorCategories#Warning)
         */
        export interface Warning extends globalThis.EnumItem {
            Name: "Warning";
            Value: 22;
            EnumType: typeof globalThis.Enum.StudioScriptEditorColorCategories;
        }
        export const Warning: Warning;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/StudioScriptEditorColorCategories#Error)
         */
        export interface Error extends globalThis.EnumItem {
            Name: "Error";
            Value: 23;
            EnumType: typeof globalThis.Enum.StudioScriptEditorColorCategories;
        }
        export const Error: Error;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/StudioScriptEditorColorCategories#Info)
         */
        export interface Info extends globalThis.EnumItem {
            Name: "Info";
            Value: 24;
            EnumType: typeof globalThis.Enum.StudioScriptEditorColorCategories;
        }
        export const Info: Info;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/StudioScriptEditorColorCategories#Hint)
         */
        export interface Hint extends globalThis.EnumItem {
            Name: "Hint";
            Value: 25;
            EnumType: typeof globalThis.Enum.StudioScriptEditorColorCategories;
        }
        export const Hint: Hint;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/StudioScriptEditorColorCategories#Whitespace)
         */
        export interface Whitespace extends globalThis.EnumItem {
            Name: "Whitespace";
            Value: 26;
            EnumType: typeof globalThis.Enum.StudioScriptEditorColorCategories;
        }
        export const Whitespace: Whitespace;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/StudioScriptEditorColorCategories#ActiveLine)
         */
        export interface ActiveLine extends globalThis.EnumItem {
            Name: "ActiveLine";
            Value: 27;
            EnumType: typeof globalThis.Enum.StudioScriptEditorColorCategories;
        }
        export const ActiveLine: ActiveLine;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/StudioScriptEditorColorCategories#DebuggerCurrentLine)
         */
        export interface DebuggerCurrentLine extends globalThis.EnumItem {
            Name: "DebuggerCurrentLine";
            Value: 28;
            EnumType: typeof globalThis.Enum.StudioScriptEditorColorCategories;
        }
        export const DebuggerCurrentLine: DebuggerCurrentLine;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/StudioScriptEditorColorCategories#DebuggerErrorLine)
         */
        export interface DebuggerErrorLine extends globalThis.EnumItem {
            Name: "DebuggerErrorLine";
            Value: 29;
            EnumType: typeof globalThis.Enum.StudioScriptEditorColorCategories;
        }
        export const DebuggerErrorLine: DebuggerErrorLine;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/StudioScriptEditorColorCategories#Ruler)
         */
        export interface Ruler extends globalThis.EnumItem {
            Name: "Ruler";
            Value: 30;
            EnumType: typeof globalThis.Enum.StudioScriptEditorColorCategories;
        }
        export const Ruler: Ruler;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/StudioScriptEditorColorCategories#Bracket)
         */
        export interface Bracket extends globalThis.EnumItem {
            Name: "Bracket";
            Value: 31;
            EnumType: typeof globalThis.Enum.StudioScriptEditorColorCategories;
        }
        export const Bracket: Bracket;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/StudioScriptEditorColorCategories#Type)
         */
        export interface Type extends globalThis.EnumItem {
            Name: "Type";
            Value: 32;
            EnumType: typeof globalThis.Enum.StudioScriptEditorColorCategories;
        }
        export const Type: Type;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/StudioScriptEditorColorCategories#MenuPrimaryText)
         */
        export interface MenuPrimaryText extends globalThis.EnumItem {
            Name: "MenuPrimaryText";
            Value: 33;
            EnumType: typeof globalThis.Enum.StudioScriptEditorColorCategories;
        }
        export const MenuPrimaryText: MenuPrimaryText;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/StudioScriptEditorColorCategories#MenuSecondaryText)
         */
        export interface MenuSecondaryText extends globalThis.EnumItem {
            Name: "MenuSecondaryText";
            Value: 34;
            EnumType: typeof globalThis.Enum.StudioScriptEditorColorCategories;
        }
        export const MenuSecondaryText: MenuSecondaryText;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/StudioScriptEditorColorCategories#MenuSelectedText)
         */
        export interface MenuSelectedText extends globalThis.EnumItem {
            Name: "MenuSelectedText";
            Value: 35;
            EnumType: typeof globalThis.Enum.StudioScriptEditorColorCategories;
        }
        export const MenuSelectedText: MenuSelectedText;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/StudioScriptEditorColorCategories#MenuBackground)
         */
        export interface MenuBackground extends globalThis.EnumItem {
            Name: "MenuBackground";
            Value: 36;
            EnumType: typeof globalThis.Enum.StudioScriptEditorColorCategories;
        }
        export const MenuBackground: MenuBackground;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/StudioScriptEditorColorCategories#MenuSelectedBackground)
         */
        export interface MenuSelectedBackground extends globalThis.EnumItem {
            Name: "MenuSelectedBackground";
            Value: 37;
            EnumType: typeof globalThis.Enum.StudioScriptEditorColorCategories;
        }
        export const MenuSelectedBackground: MenuSelectedBackground;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/StudioScriptEditorColorCategories#MenuScrollbarBackground)
         */
        export interface MenuScrollbarBackground extends globalThis.EnumItem {
            Name: "MenuScrollbarBackground";
            Value: 38;
            EnumType: typeof globalThis.Enum.StudioScriptEditorColorCategories;
        }
        export const MenuScrollbarBackground: MenuScrollbarBackground;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/StudioScriptEditorColorCategories#MenuScrollbarHandle)
         */
        export interface MenuScrollbarHandle extends globalThis.EnumItem {
            Name: "MenuScrollbarHandle";
            Value: 39;
            EnumType: typeof globalThis.Enum.StudioScriptEditorColorCategories;
        }
        export const MenuScrollbarHandle: MenuScrollbarHandle;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/StudioScriptEditorColorCategories#MenuBorder)
         */
        export interface MenuBorder extends globalThis.EnumItem {
            Name: "MenuBorder";
            Value: 40;
            EnumType: typeof globalThis.Enum.StudioScriptEditorColorCategories;
        }
        export const MenuBorder: MenuBorder;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/StudioScriptEditorColorCategories#DocViewCodeBackground)
         */
        export interface DocViewCodeBackground extends globalThis.EnumItem {
            Name: "DocViewCodeBackground";
            Value: 41;
            EnumType: typeof globalThis.Enum.StudioScriptEditorColorCategories;
        }
        export const DocViewCodeBackground: DocViewCodeBackground;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/StudioScriptEditorColorCategories#AICOOverlayText)
         */
        export interface AICOOverlayText extends globalThis.EnumItem {
            Name: "AICOOverlayText";
            Value: 42;
            EnumType: typeof globalThis.Enum.StudioScriptEditorColorCategories;
        }
        export const AICOOverlayText: AICOOverlayText;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/StudioScriptEditorColorCategories#AICOOverlayButtonBackground)
         */
        export interface AICOOverlayButtonBackground extends globalThis.EnumItem {
            Name: "AICOOverlayButtonBackground";
            Value: 43;
            EnumType: typeof globalThis.Enum.StudioScriptEditorColorCategories;
        }
        export const AICOOverlayButtonBackground: AICOOverlayButtonBackground;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/StudioScriptEditorColorCategories#AICOOverlayButtonBackgroundHover)
         */
        export interface AICOOverlayButtonBackgroundHover extends globalThis.EnumItem {
            Name: "AICOOverlayButtonBackgroundHover";
            Value: 44;
            EnumType: typeof globalThis.Enum.StudioScriptEditorColorCategories;
        }
        export const AICOOverlayButtonBackgroundHover: AICOOverlayButtonBackgroundHover;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/StudioScriptEditorColorCategories#AICOOverlayButtonBackgroundPressed)
         */
        export interface AICOOverlayButtonBackgroundPressed extends globalThis.EnumItem {
            Name: "AICOOverlayButtonBackgroundPressed";
            Value: 45;
            EnumType: typeof globalThis.Enum.StudioScriptEditorColorCategories;
        }
        export const AICOOverlayButtonBackgroundPressed: AICOOverlayButtonBackgroundPressed;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/StudioScriptEditorColorCategories#IndentationRuler)
         */
        export interface IndentationRuler extends globalThis.EnumItem {
            Name: "IndentationRuler";
            Value: 46;
            EnumType: typeof globalThis.Enum.StudioScriptEditorColorCategories;
        }
        export const IndentationRuler: IndentationRuler;
        export function GetEnumItems(this: globalThis.Enum): Array<globalThis.Enum.StudioScriptEditorColorCategories>;
        export function FromName(this: globalThis.Enum, name: string): globalThis.Enum.StudioScriptEditorColorCategories | undefined;
        export function FromValue(this: globalThis.Enum, value: number): globalThis.Enum.StudioScriptEditorColorCategories | undefined;
    }
    export type StudioScriptEditorColorCategories = StudioScriptEditorColorCategories.Default | StudioScriptEditorColorCategories.Operator | StudioScriptEditorColorCategories.Number | StudioScriptEditorColorCategories.String | StudioScriptEditorColorCategories.Comment | StudioScriptEditorColorCategories.Keyword | StudioScriptEditorColorCategories.Builtin | StudioScriptEditorColorCategories.Method | StudioScriptEditorColorCategories.Property | StudioScriptEditorColorCategories.Nil | StudioScriptEditorColorCategories.Bool | StudioScriptEditorColorCategories.Function | StudioScriptEditorColorCategories.Local | StudioScriptEditorColorCategories.Self | StudioScriptEditorColorCategories.LuauKeyword | StudioScriptEditorColorCategories.FunctionName | StudioScriptEditorColorCategories.TODO | StudioScriptEditorColorCategories.Background | StudioScriptEditorColorCategories.SelectionText | StudioScriptEditorColorCategories.SelectionBackground | StudioScriptEditorColorCategories.FindSelectionBackground | StudioScriptEditorColorCategories.MatchingWordBackground | StudioScriptEditorColorCategories.Warning | StudioScriptEditorColorCategories.Error | StudioScriptEditorColorCategories.Info | StudioScriptEditorColorCategories.Hint | StudioScriptEditorColorCategories.Whitespace | StudioScriptEditorColorCategories.ActiveLine | StudioScriptEditorColorCategories.DebuggerCurrentLine | StudioScriptEditorColorCategories.DebuggerErrorLine | StudioScriptEditorColorCategories.Ruler | StudioScriptEditorColorCategories.Bracket | StudioScriptEditorColorCategories.Type | StudioScriptEditorColorCategories.MenuPrimaryText | StudioScriptEditorColorCategories.MenuSecondaryText | StudioScriptEditorColorCategories.MenuSelectedText | StudioScriptEditorColorCategories.MenuBackground | StudioScriptEditorColorCategories.MenuSelectedBackground | StudioScriptEditorColorCategories.MenuScrollbarBackground | StudioScriptEditorColorCategories.MenuScrollbarHandle | StudioScriptEditorColorCategories.MenuBorder | StudioScriptEditorColorCategories.DocViewCodeBackground | StudioScriptEditorColorCategories.AICOOverlayText | StudioScriptEditorColorCategories.AICOOverlayButtonBackground | StudioScriptEditorColorCategories.AICOOverlayButtonBackgroundHover | StudioScriptEditorColorCategories.AICOOverlayButtonBackgroundPressed | StudioScriptEditorColorCategories.IndentationRuler;
    /**
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/StudioScriptEditorColorPresets)
     */
    export namespace StudioScriptEditorColorPresets {
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/StudioScriptEditorColorPresets#RobloxDefault)
         */
        export interface RobloxDefault extends globalThis.EnumItem {
            Name: "RobloxDefault";
            Value: 0;
            EnumType: typeof globalThis.Enum.StudioScriptEditorColorPresets;
        }
        export const RobloxDefault: RobloxDefault;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/StudioScriptEditorColorPresets#Extra1)
         */
        export interface Extra1 extends globalThis.EnumItem {
            Name: "Extra1";
            Value: 1;
            EnumType: typeof globalThis.Enum.StudioScriptEditorColorPresets;
        }
        export const Extra1: Extra1;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/StudioScriptEditorColorPresets#Extra2)
         */
        export interface Extra2 extends globalThis.EnumItem {
            Name: "Extra2";
            Value: 2;
            EnumType: typeof globalThis.Enum.StudioScriptEditorColorPresets;
        }
        export const Extra2: Extra2;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/StudioScriptEditorColorPresets#Custom)
         */
        export interface Custom extends globalThis.EnumItem {
            Name: "Custom";
            Value: 3;
            EnumType: typeof globalThis.Enum.StudioScriptEditorColorPresets;
        }
        export const Custom: Custom;
        export function GetEnumItems(this: globalThis.Enum): Array<globalThis.Enum.StudioScriptEditorColorPresets>;
        export function FromName(this: globalThis.Enum, name: string): globalThis.Enum.StudioScriptEditorColorPresets | undefined;
        export function FromValue(this: globalThis.Enum, value: number): globalThis.Enum.StudioScriptEditorColorPresets | undefined;
    }
    export type StudioScriptEditorColorPresets = StudioScriptEditorColorPresets.RobloxDefault | StudioScriptEditorColorPresets.Extra1 | StudioScriptEditorColorPresets.Extra2 | StudioScriptEditorColorPresets.Custom;
    /**
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/StudioStyleGuideColor)
     */
    export namespace StudioStyleGuideColor {
        /**
         * The primary background color used by the ribbon bar and windows.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/StudioStyleGuideColor#MainBackground)
         */
        export interface MainBackground extends globalThis.EnumItem {
            Name: "MainBackground";
            Value: 0;
            EnumType: typeof globalThis.Enum.StudioStyleGuideColor;
        }
        export const MainBackground: MainBackground;
        /**
         * The color of windows' title bars.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/StudioStyleGuideColor#Titlebar)
         */
        export interface Titlebar extends globalThis.EnumItem {
            Name: "Titlebar";
            Value: 1;
            EnumType: typeof globalThis.Enum.StudioStyleGuideColor;
        }
        export const Titlebar: Titlebar;
        /**
         * The color of dropdown menus, like those found in the Properties window.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/StudioStyleGuideColor#Dropdown)
         */
        export interface Dropdown extends globalThis.EnumItem {
            Name: "Dropdown";
            Value: 2;
            EnumType: typeof globalThis.Enum.StudioStyleGuideColor;
        }
        export const Dropdown: Dropdown;
        /**
         * The background color of tooltips, like those seen when hovering over buttons on the ribbon bar or properties in the Properties window.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/StudioStyleGuideColor#Tooltip)
         */
        export interface Tooltip extends globalThis.EnumItem {
            Name: "Tooltip";
            Value: 3;
            EnumType: typeof globalThis.Enum.StudioStyleGuideColor;
        }
        export const Tooltip: Tooltip;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/StudioStyleGuideColor#Notification)
         */
        export interface Notification extends globalThis.EnumItem {
            Name: "Notification";
            Value: 4;
            EnumType: typeof globalThis.Enum.StudioStyleGuideColor;
        }
        export const Notification: Notification;
        /**
         * The color of scrollbar handles, like those seen in the Explorer window.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/StudioStyleGuideColor#ScrollBar)
         */
        export interface ScrollBar extends globalThis.EnumItem {
            Name: "ScrollBar";
            Value: 5;
            EnumType: typeof globalThis.Enum.StudioStyleGuideColor;
        }
        export const ScrollBar: ScrollBar;
        /**
         * The background color of scrollbars, like those seen in the Explorer window.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/StudioStyleGuideColor#ScrollBarBackground)
         */
        export interface ScrollBarBackground extends globalThis.EnumItem {
            Name: "ScrollBarBackground";
            Value: 6;
            EnumType: typeof globalThis.Enum.StudioStyleGuideColor;
        }
        export const ScrollBarBackground: ScrollBarBackground;
        /**
         * The background color of the tab bar, like the one where the script editor is opened.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/StudioStyleGuideColor#TabBar)
         */
        export interface TabBar extends globalThis.EnumItem {
            Name: "TabBar";
            Value: 7;
            EnumType: typeof globalThis.Enum.StudioStyleGuideColor;
        }
        export const TabBar: TabBar;
        /**
         * The color of tabs on the tab bar, like the ones opened when the script editor is opened.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/StudioStyleGuideColor#Tab)
         */
        export interface Tab extends globalThis.EnumItem {
            Name: "Tab";
            Value: 8;
            EnumType: typeof globalThis.Enum.StudioStyleGuideColor;
        }
        export const Tab: Tab;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/StudioStyleGuideColor#FilterButtonDefault)
         */
        export interface FilterButtonDefault extends globalThis.EnumItem {
            Name: "FilterButtonDefault";
            Value: 9;
            EnumType: typeof globalThis.Enum.StudioStyleGuideColor;
        }
        export const FilterButtonDefault: FilterButtonDefault;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/StudioStyleGuideColor#FilterButtonHover)
         */
        export interface FilterButtonHover extends globalThis.EnumItem {
            Name: "FilterButtonHover";
            Value: 10;
            EnumType: typeof globalThis.Enum.StudioStyleGuideColor;
        }
        export const FilterButtonHover: FilterButtonHover;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/StudioStyleGuideColor#FilterButtonChecked)
         */
        export interface FilterButtonChecked extends globalThis.EnumItem {
            Name: "FilterButtonChecked";
            Value: 11;
            EnumType: typeof globalThis.Enum.StudioStyleGuideColor;
        }
        export const FilterButtonChecked: FilterButtonChecked;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/StudioStyleGuideColor#FilterButtonAccent)
         */
        export interface FilterButtonAccent extends globalThis.EnumItem {
            Name: "FilterButtonAccent";
            Value: 12;
            EnumType: typeof globalThis.Enum.StudioStyleGuideColor;
        }
        export const FilterButtonAccent: FilterButtonAccent;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/StudioStyleGuideColor#FilterButtonBorder)
         */
        export interface FilterButtonBorder extends globalThis.EnumItem {
            Name: "FilterButtonBorder";
            Value: 13;
            EnumType: typeof globalThis.Enum.StudioStyleGuideColor;
        }
        export const FilterButtonBorder: FilterButtonBorder;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/StudioStyleGuideColor#FilterButtonBorderAlt)
         */
        export interface FilterButtonBorderAlt extends globalThis.EnumItem {
            Name: "FilterButtonBorderAlt";
            Value: 14;
            EnumType: typeof globalThis.Enum.StudioStyleGuideColor;
        }
        export const FilterButtonBorderAlt: FilterButtonBorderAlt;
        /**
         * The color of a tab on the ribbon menu (e.g. Home, Model, Test).
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/StudioStyleGuideColor#RibbonTab)
         */
        export interface RibbonTab extends globalThis.EnumItem {
            Name: "RibbonTab";
            Value: 15;
            EnumType: typeof globalThis.Enum.StudioStyleGuideColor;
        }
        export const RibbonTab: RibbonTab;
        /**
         * The background color of the ribbon menu.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/StudioStyleGuideColor#RibbonTabTopBar)
         */
        export interface RibbonTabTopBar extends globalThis.EnumItem {
            Name: "RibbonTabTopBar";
            Value: 16;
            EnumType: typeof globalThis.Enum.StudioStyleGuideColor;
        }
        export const RibbonTabTopBar: RibbonTabTopBar;
        /**
         * The background color of clickable buttons.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/StudioStyleGuideColor#Button)
         */
        export interface Button extends globalThis.EnumItem {
            Name: "Button";
            Value: 17;
            EnumType: typeof globalThis.Enum.StudioStyleGuideColor;
        }
        export const Button: Button;
        /**
         * The background color of clickable buttons that are the primary action.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/StudioStyleGuideColor#MainButton)
         */
        export interface MainButton extends globalThis.EnumItem {
            Name: "MainButton";
            Value: 18;
            EnumType: typeof globalThis.Enum.StudioStyleGuideColor;
        }
        export const MainButton: MainButton;
        /**
         * The background color of buttons on the ribbon menu.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/StudioStyleGuideColor#RibbonButton)
         */
        export interface RibbonButton extends globalThis.EnumItem {
            Name: "RibbonButton";
            Value: 19;
            EnumType: typeof globalThis.Enum.StudioStyleGuideColor;
        }
        export const RibbonButton: RibbonButton;
        /**
         * The background color of the game viewport.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/StudioStyleGuideColor#ViewPortBackground)
         */
        export interface ViewPortBackground extends globalThis.EnumItem {
            Name: "ViewPortBackground";
            Value: 20;
            EnumType: typeof globalThis.Enum.StudioStyleGuideColor;
        }
        export const ViewPortBackground: ViewPortBackground;
        /**
         * The background color of input fields, like those found in the Explorer window.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/StudioStyleGuideColor#InputFieldBackground)
         */
        export interface InputFieldBackground extends globalThis.EnumItem {
            Name: "InputFieldBackground";
            Value: 21;
            EnumType: typeof globalThis.Enum.StudioStyleGuideColor;
        }
        export const InputFieldBackground: InputFieldBackground;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/StudioStyleGuideColor#Item)
         */
        export interface Item extends globalThis.EnumItem {
            Name: "Item";
            Value: 22;
            EnumType: typeof globalThis.Enum.StudioStyleGuideColor;
        }
        export const Item: Item;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/StudioStyleGuideColor#TableItem)
         */
        export interface TableItem extends globalThis.EnumItem {
            Name: "TableItem";
            Value: 23;
            EnumType: typeof globalThis.Enum.StudioStyleGuideColor;
        }
        export const TableItem: TableItem;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/StudioStyleGuideColor#CategoryItem)
         */
        export interface CategoryItem extends globalThis.EnumItem {
            Name: "CategoryItem";
            Value: 24;
            EnumType: typeof globalThis.Enum.StudioStyleGuideColor;
        }
        export const CategoryItem: CategoryItem;
        /**
         * The color of items within tables in the game settings window.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/StudioStyleGuideColor#GameSettingsTableItem)
         */
        export interface GameSettingsTableItem extends globalThis.EnumItem {
            Name: "GameSettingsTableItem";
            Value: 25;
            EnumType: typeof globalThis.Enum.StudioStyleGuideColor;
        }
        export const GameSettingsTableItem: GameSettingsTableItem;
        /**
         * The color of tooltips in the game settings window.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/StudioStyleGuideColor#GameSettingsTooltip)
         */
        export interface GameSettingsTooltip extends globalThis.EnumItem {
            Name: "GameSettingsTooltip";
            Value: 26;
            EnumType: typeof globalThis.Enum.StudioStyleGuideColor;
        }
        export const GameSettingsTooltip: GameSettingsTooltip;
        /**
         * The color of the bar shown when the mobile emulator is active.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/StudioStyleGuideColor#EmulatorBar)
         */
        export interface EmulatorBar extends globalThis.EnumItem {
            Name: "EmulatorBar";
            Value: 27;
            EnumType: typeof globalThis.Enum.StudioStyleGuideColor;
        }
        export const EmulatorBar: EmulatorBar;
        /**
         * The color of the device and physical size dropdowns in the emulator bar.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/StudioStyleGuideColor#EmulatorDropDown)
         */
        export interface EmulatorDropDown extends globalThis.EnumItem {
            Name: "EmulatorDropDown";
            Value: 28;
            EnumType: typeof globalThis.Enum.StudioStyleGuideColor;
        }
        export const EmulatorDropDown: EmulatorDropDown;
        /**
         * The background color of the color picker.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/StudioStyleGuideColor#ColorPickerFrame)
         */
        export interface ColorPickerFrame extends globalThis.EnumItem {
            Name: "ColorPickerFrame";
            Value: 29;
            EnumType: typeof globalThis.Enum.StudioStyleGuideColor;
        }
        export const ColorPickerFrame: ColorPickerFrame;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/StudioStyleGuideColor#CurrentMarker)
         */
        export interface CurrentMarker extends globalThis.EnumItem {
            Name: "CurrentMarker";
            Value: 30;
            EnumType: typeof globalThis.Enum.StudioStyleGuideColor;
        }
        export const CurrentMarker: CurrentMarker;
        /**
         * The color of borders, like those found in the Properties window.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/StudioStyleGuideColor#Border)
         */
        export interface Border extends globalThis.EnumItem {
            Name: "Border";
            Value: 31;
            EnumType: typeof globalThis.Enum.StudioStyleGuideColor;
        }
        export const Border: Border;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/StudioStyleGuideColor#DropShadow)
         */
        export interface DropShadow extends globalThis.EnumItem {
            Name: "DropShadow";
            Value: 32;
            EnumType: typeof globalThis.Enum.StudioStyleGuideColor;
        }
        export const DropShadow: DropShadow;
        /**
         * The color of shadows rendered under floating items like dropdowns.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/StudioStyleGuideColor#Shadow)
         */
        export interface Shadow extends globalThis.EnumItem {
            Name: "Shadow";
            Value: 33;
            EnumType: typeof globalThis.Enum.StudioStyleGuideColor;
        }
        export const Shadow: Shadow;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/StudioStyleGuideColor#Light)
         */
        export interface Light extends globalThis.EnumItem {
            Name: "Light";
            Value: 34;
            EnumType: typeof globalThis.Enum.StudioStyleGuideColor;
        }
        export const Light: Light;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/StudioStyleGuideColor#Dark)
         */
        export interface Dark extends globalThis.EnumItem {
            Name: "Dark";
            Value: 35;
            EnumType: typeof globalThis.Enum.StudioStyleGuideColor;
        }
        export const Dark: Dark;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/StudioStyleGuideColor#Mid)
         */
        export interface Mid extends globalThis.EnumItem {
            Name: "Mid";
            Value: 36;
            EnumType: typeof globalThis.Enum.StudioStyleGuideColor;
        }
        export const Mid: Mid;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/StudioStyleGuideColor#MainText)
         */
        export interface MainText extends globalThis.EnumItem {
            Name: "MainText";
            Value: 37;
            EnumType: typeof globalThis.Enum.StudioStyleGuideColor;
        }
        export const MainText: MainText;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/StudioStyleGuideColor#SubText)
         */
        export interface SubText extends globalThis.EnumItem {
            Name: "SubText";
            Value: 38;
            EnumType: typeof globalThis.Enum.StudioStyleGuideColor;
        }
        export const SubText: SubText;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/StudioStyleGuideColor#TitlebarText)
         */
        export interface TitlebarText extends globalThis.EnumItem {
            Name: "TitlebarText";
            Value: 39;
            EnumType: typeof globalThis.Enum.StudioStyleGuideColor;
        }
        export const TitlebarText: TitlebarText;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/StudioStyleGuideColor#BrightText)
         */
        export interface BrightText extends globalThis.EnumItem {
            Name: "BrightText";
            Value: 40;
            EnumType: typeof globalThis.Enum.StudioStyleGuideColor;
        }
        export const BrightText: BrightText;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/StudioStyleGuideColor#DimmedText)
         */
        export interface DimmedText extends globalThis.EnumItem {
            Name: "DimmedText";
            Value: 41;
            EnumType: typeof globalThis.Enum.StudioStyleGuideColor;
        }
        export const DimmedText: DimmedText;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/StudioStyleGuideColor#LinkText)
         */
        export interface LinkText extends globalThis.EnumItem {
            Name: "LinkText";
            Value: 42;
            EnumType: typeof globalThis.Enum.StudioStyleGuideColor;
        }
        export const LinkText: LinkText;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/StudioStyleGuideColor#WarningText)
         */
        export interface WarningText extends globalThis.EnumItem {
            Name: "WarningText";
            Value: 43;
            EnumType: typeof globalThis.Enum.StudioStyleGuideColor;
        }
        export const WarningText: WarningText;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/StudioStyleGuideColor#ErrorText)
         */
        export interface ErrorText extends globalThis.EnumItem {
            Name: "ErrorText";
            Value: 44;
            EnumType: typeof globalThis.Enum.StudioStyleGuideColor;
        }
        export const ErrorText: ErrorText;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/StudioStyleGuideColor#InfoText)
         */
        export interface InfoText extends globalThis.EnumItem {
            Name: "InfoText";
            Value: 45;
            EnumType: typeof globalThis.Enum.StudioStyleGuideColor;
        }
        export const InfoText: InfoText;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/StudioStyleGuideColor#SensitiveText)
         */
        export interface SensitiveText extends globalThis.EnumItem {
            Name: "SensitiveText";
            Value: 46;
            EnumType: typeof globalThis.Enum.StudioStyleGuideColor;
        }
        export const SensitiveText: SensitiveText;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/StudioStyleGuideColor#ScriptSideWidget)
         */
        export interface ScriptSideWidget extends globalThis.EnumItem {
            Name: "ScriptSideWidget";
            Value: 47;
            EnumType: typeof globalThis.Enum.StudioStyleGuideColor;
        }
        export const ScriptSideWidget: ScriptSideWidget;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/StudioStyleGuideColor#ScriptBackground)
         */
        export interface ScriptBackground extends globalThis.EnumItem {
            Name: "ScriptBackground";
            Value: 48;
            EnumType: typeof globalThis.Enum.StudioStyleGuideColor;
        }
        export const ScriptBackground: ScriptBackground;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/StudioStyleGuideColor#ScriptText)
         */
        export interface ScriptText extends globalThis.EnumItem {
            Name: "ScriptText";
            Value: 49;
            EnumType: typeof globalThis.Enum.StudioStyleGuideColor;
        }
        export const ScriptText: ScriptText;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/StudioStyleGuideColor#ScriptSelectionText)
         */
        export interface ScriptSelectionText extends globalThis.EnumItem {
            Name: "ScriptSelectionText";
            Value: 50;
            EnumType: typeof globalThis.Enum.StudioStyleGuideColor;
        }
        export const ScriptSelectionText: ScriptSelectionText;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/StudioStyleGuideColor#ScriptSelectionBackground)
         */
        export interface ScriptSelectionBackground extends globalThis.EnumItem {
            Name: "ScriptSelectionBackground";
            Value: 51;
            EnumType: typeof globalThis.Enum.StudioStyleGuideColor;
        }
        export const ScriptSelectionBackground: ScriptSelectionBackground;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/StudioStyleGuideColor#ScriptFindSelectionBackground)
         */
        export interface ScriptFindSelectionBackground extends globalThis.EnumItem {
            Name: "ScriptFindSelectionBackground";
            Value: 52;
            EnumType: typeof globalThis.Enum.StudioStyleGuideColor;
        }
        export const ScriptFindSelectionBackground: ScriptFindSelectionBackground;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/StudioStyleGuideColor#ScriptMatchingWordSelectionBackground)
         */
        export interface ScriptMatchingWordSelectionBackground extends globalThis.EnumItem {
            Name: "ScriptMatchingWordSelectionBackground";
            Value: 53;
            EnumType: typeof globalThis.Enum.StudioStyleGuideColor;
        }
        export const ScriptMatchingWordSelectionBackground: ScriptMatchingWordSelectionBackground;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/StudioStyleGuideColor#ScriptOperator)
         */
        export interface ScriptOperator extends globalThis.EnumItem {
            Name: "ScriptOperator";
            Value: 54;
            EnumType: typeof globalThis.Enum.StudioStyleGuideColor;
        }
        export const ScriptOperator: ScriptOperator;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/StudioStyleGuideColor#ScriptNumber)
         */
        export interface ScriptNumber extends globalThis.EnumItem {
            Name: "ScriptNumber";
            Value: 55;
            EnumType: typeof globalThis.Enum.StudioStyleGuideColor;
        }
        export const ScriptNumber: ScriptNumber;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/StudioStyleGuideColor#ScriptString)
         */
        export interface ScriptString extends globalThis.EnumItem {
            Name: "ScriptString";
            Value: 56;
            EnumType: typeof globalThis.Enum.StudioStyleGuideColor;
        }
        export const ScriptString: ScriptString;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/StudioStyleGuideColor#ScriptComment)
         */
        export interface ScriptComment extends globalThis.EnumItem {
            Name: "ScriptComment";
            Value: 57;
            EnumType: typeof globalThis.Enum.StudioStyleGuideColor;
        }
        export const ScriptComment: ScriptComment;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/StudioStyleGuideColor#ScriptKeyword)
         */
        export interface ScriptKeyword extends globalThis.EnumItem {
            Name: "ScriptKeyword";
            Value: 58;
            EnumType: typeof globalThis.Enum.StudioStyleGuideColor;
        }
        export const ScriptKeyword: ScriptKeyword;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/StudioStyleGuideColor#ScriptBuiltInFunction)
         */
        export interface ScriptBuiltInFunction extends globalThis.EnumItem {
            Name: "ScriptBuiltInFunction";
            Value: 59;
            EnumType: typeof globalThis.Enum.StudioStyleGuideColor;
        }
        export const ScriptBuiltInFunction: ScriptBuiltInFunction;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/StudioStyleGuideColor#ScriptWarning)
         */
        export interface ScriptWarning extends globalThis.EnumItem {
            Name: "ScriptWarning";
            Value: 60;
            EnumType: typeof globalThis.Enum.StudioStyleGuideColor;
        }
        export const ScriptWarning: ScriptWarning;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/StudioStyleGuideColor#ScriptError)
         */
        export interface ScriptError extends globalThis.EnumItem {
            Name: "ScriptError";
            Value: 61;
            EnumType: typeof globalThis.Enum.StudioStyleGuideColor;
        }
        export const ScriptError: ScriptError;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/StudioStyleGuideColor#ScriptInformation)
         */
        export interface ScriptInformation extends globalThis.EnumItem {
            Name: "ScriptInformation";
            Value: 62;
            EnumType: typeof globalThis.Enum.StudioStyleGuideColor;
        }
        export const ScriptInformation: ScriptInformation;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/StudioStyleGuideColor#ScriptHint)
         */
        export interface ScriptHint extends globalThis.EnumItem {
            Name: "ScriptHint";
            Value: 63;
            EnumType: typeof globalThis.Enum.StudioStyleGuideColor;
        }
        export const ScriptHint: ScriptHint;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/StudioStyleGuideColor#ScriptWhitespace)
         */
        export interface ScriptWhitespace extends globalThis.EnumItem {
            Name: "ScriptWhitespace";
            Value: 64;
            EnumType: typeof globalThis.Enum.StudioStyleGuideColor;
        }
        export const ScriptWhitespace: ScriptWhitespace;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/StudioStyleGuideColor#ScriptRuler)
         */
        export interface ScriptRuler extends globalThis.EnumItem {
            Name: "ScriptRuler";
            Value: 65;
            EnumType: typeof globalThis.Enum.StudioStyleGuideColor;
        }
        export const ScriptRuler: ScriptRuler;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/StudioStyleGuideColor#DocViewCodeBackground)
         */
        export interface DocViewCodeBackground extends globalThis.EnumItem {
            Name: "DocViewCodeBackground";
            Value: 66;
            EnumType: typeof globalThis.Enum.StudioStyleGuideColor;
        }
        export const DocViewCodeBackground: DocViewCodeBackground;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/StudioStyleGuideColor#DebuggerCurrentLine)
         */
        export interface DebuggerCurrentLine extends globalThis.EnumItem {
            Name: "DebuggerCurrentLine";
            Value: 67;
            EnumType: typeof globalThis.Enum.StudioStyleGuideColor;
        }
        export const DebuggerCurrentLine: DebuggerCurrentLine;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/StudioStyleGuideColor#DebuggerErrorLine)
         */
        export interface DebuggerErrorLine extends globalThis.EnumItem {
            Name: "DebuggerErrorLine";
            Value: 68;
            EnumType: typeof globalThis.Enum.StudioStyleGuideColor;
        }
        export const DebuggerErrorLine: DebuggerErrorLine;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/StudioStyleGuideColor#DiffFilePathText)
         */
        export interface DiffFilePathText extends globalThis.EnumItem {
            Name: "DiffFilePathText";
            Value: 69;
            EnumType: typeof globalThis.Enum.StudioStyleGuideColor;
        }
        export const DiffFilePathText: DiffFilePathText;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/StudioStyleGuideColor#DiffTextHunkInfo)
         */
        export interface DiffTextHunkInfo extends globalThis.EnumItem {
            Name: "DiffTextHunkInfo";
            Value: 70;
            EnumType: typeof globalThis.Enum.StudioStyleGuideColor;
        }
        export const DiffTextHunkInfo: DiffTextHunkInfo;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/StudioStyleGuideColor#DiffTextNoChange)
         */
        export interface DiffTextNoChange extends globalThis.EnumItem {
            Name: "DiffTextNoChange";
            Value: 71;
            EnumType: typeof globalThis.Enum.StudioStyleGuideColor;
        }
        export const DiffTextNoChange: DiffTextNoChange;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/StudioStyleGuideColor#DiffTextAddition)
         */
        export interface DiffTextAddition extends globalThis.EnumItem {
            Name: "DiffTextAddition";
            Value: 72;
            EnumType: typeof globalThis.Enum.StudioStyleGuideColor;
        }
        export const DiffTextAddition: DiffTextAddition;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/StudioStyleGuideColor#DiffTextDeletion)
         */
        export interface DiffTextDeletion extends globalThis.EnumItem {
            Name: "DiffTextDeletion";
            Value: 73;
            EnumType: typeof globalThis.Enum.StudioStyleGuideColor;
        }
        export const DiffTextDeletion: DiffTextDeletion;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/StudioStyleGuideColor#DiffTextSeparatorBackground)
         */
        export interface DiffTextSeparatorBackground extends globalThis.EnumItem {
            Name: "DiffTextSeparatorBackground";
            Value: 74;
            EnumType: typeof globalThis.Enum.StudioStyleGuideColor;
        }
        export const DiffTextSeparatorBackground: DiffTextSeparatorBackground;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/StudioStyleGuideColor#DiffTextNoChangeBackground)
         */
        export interface DiffTextNoChangeBackground extends globalThis.EnumItem {
            Name: "DiffTextNoChangeBackground";
            Value: 75;
            EnumType: typeof globalThis.Enum.StudioStyleGuideColor;
        }
        export const DiffTextNoChangeBackground: DiffTextNoChangeBackground;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/StudioStyleGuideColor#DiffTextAdditionBackground)
         */
        export interface DiffTextAdditionBackground extends globalThis.EnumItem {
            Name: "DiffTextAdditionBackground";
            Value: 76;
            EnumType: typeof globalThis.Enum.StudioStyleGuideColor;
        }
        export const DiffTextAdditionBackground: DiffTextAdditionBackground;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/StudioStyleGuideColor#DiffTextDeletionBackground)
         */
        export interface DiffTextDeletionBackground extends globalThis.EnumItem {
            Name: "DiffTextDeletionBackground";
            Value: 77;
            EnumType: typeof globalThis.Enum.StudioStyleGuideColor;
        }
        export const DiffTextDeletionBackground: DiffTextDeletionBackground;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/StudioStyleGuideColor#DiffLineNum)
         */
        export interface DiffLineNum extends globalThis.EnumItem {
            Name: "DiffLineNum";
            Value: 78;
            EnumType: typeof globalThis.Enum.StudioStyleGuideColor;
        }
        export const DiffLineNum: DiffLineNum;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/StudioStyleGuideColor#DiffLineNumSeparatorBackground)
         */
        export interface DiffLineNumSeparatorBackground extends globalThis.EnumItem {
            Name: "DiffLineNumSeparatorBackground";
            Value: 79;
            EnumType: typeof globalThis.Enum.StudioStyleGuideColor;
        }
        export const DiffLineNumSeparatorBackground: DiffLineNumSeparatorBackground;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/StudioStyleGuideColor#DiffLineNumNoChangeBackground)
         */
        export interface DiffLineNumNoChangeBackground extends globalThis.EnumItem {
            Name: "DiffLineNumNoChangeBackground";
            Value: 80;
            EnumType: typeof globalThis.Enum.StudioStyleGuideColor;
        }
        export const DiffLineNumNoChangeBackground: DiffLineNumNoChangeBackground;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/StudioStyleGuideColor#DiffLineNumAdditionBackground)
         */
        export interface DiffLineNumAdditionBackground extends globalThis.EnumItem {
            Name: "DiffLineNumAdditionBackground";
            Value: 81;
            EnumType: typeof globalThis.Enum.StudioStyleGuideColor;
        }
        export const DiffLineNumAdditionBackground: DiffLineNumAdditionBackground;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/StudioStyleGuideColor#DiffLineNumDeletionBackground)
         */
        export interface DiffLineNumDeletionBackground extends globalThis.EnumItem {
            Name: "DiffLineNumDeletionBackground";
            Value: 82;
            EnumType: typeof globalThis.Enum.StudioStyleGuideColor;
        }
        export const DiffLineNumDeletionBackground: DiffLineNumDeletionBackground;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/StudioStyleGuideColor#DiffFilePathBackground)
         */
        export interface DiffFilePathBackground extends globalThis.EnumItem {
            Name: "DiffFilePathBackground";
            Value: 83;
            EnumType: typeof globalThis.Enum.StudioStyleGuideColor;
        }
        export const DiffFilePathBackground: DiffFilePathBackground;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/StudioStyleGuideColor#DiffFilePathBorder)
         */
        export interface DiffFilePathBorder extends globalThis.EnumItem {
            Name: "DiffFilePathBorder";
            Value: 84;
            EnumType: typeof globalThis.Enum.StudioStyleGuideColor;
        }
        export const DiffFilePathBorder: DiffFilePathBorder;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/StudioStyleGuideColor#ChatIncomingBgColor)
         */
        export interface ChatIncomingBgColor extends globalThis.EnumItem {
            Name: "ChatIncomingBgColor";
            Value: 85;
            EnumType: typeof globalThis.Enum.StudioStyleGuideColor;
        }
        export const ChatIncomingBgColor: ChatIncomingBgColor;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/StudioStyleGuideColor#ChatIncomingTextColor)
         */
        export interface ChatIncomingTextColor extends globalThis.EnumItem {
            Name: "ChatIncomingTextColor";
            Value: 86;
            EnumType: typeof globalThis.Enum.StudioStyleGuideColor;
        }
        export const ChatIncomingTextColor: ChatIncomingTextColor;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/StudioStyleGuideColor#ChatOutgoingBgColor)
         */
        export interface ChatOutgoingBgColor extends globalThis.EnumItem {
            Name: "ChatOutgoingBgColor";
            Value: 87;
            EnumType: typeof globalThis.Enum.StudioStyleGuideColor;
        }
        export const ChatOutgoingBgColor: ChatOutgoingBgColor;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/StudioStyleGuideColor#ChatOutgoingTextColor)
         */
        export interface ChatOutgoingTextColor extends globalThis.EnumItem {
            Name: "ChatOutgoingTextColor";
            Value: 88;
            EnumType: typeof globalThis.Enum.StudioStyleGuideColor;
        }
        export const ChatOutgoingTextColor: ChatOutgoingTextColor;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/StudioStyleGuideColor#ChatModeratedMessageColor)
         */
        export interface ChatModeratedMessageColor extends globalThis.EnumItem {
            Name: "ChatModeratedMessageColor";
            Value: 89;
            EnumType: typeof globalThis.Enum.StudioStyleGuideColor;
        }
        export const ChatModeratedMessageColor: ChatModeratedMessageColor;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/StudioStyleGuideColor#Separator)
         */
        export interface Separator extends globalThis.EnumItem {
            Name: "Separator";
            Value: 90;
            EnumType: typeof globalThis.Enum.StudioStyleGuideColor;
        }
        export const Separator: Separator;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/StudioStyleGuideColor#ButtonBorder)
         */
        export interface ButtonBorder extends globalThis.EnumItem {
            Name: "ButtonBorder";
            Value: 91;
            EnumType: typeof globalThis.Enum.StudioStyleGuideColor;
        }
        export const ButtonBorder: ButtonBorder;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/StudioStyleGuideColor#ButtonText)
         */
        export interface ButtonText extends globalThis.EnumItem {
            Name: "ButtonText";
            Value: 92;
            EnumType: typeof globalThis.Enum.StudioStyleGuideColor;
        }
        export const ButtonText: ButtonText;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/StudioStyleGuideColor#InputFieldBorder)
         */
        export interface InputFieldBorder extends globalThis.EnumItem {
            Name: "InputFieldBorder";
            Value: 93;
            EnumType: typeof globalThis.Enum.StudioStyleGuideColor;
        }
        export const InputFieldBorder: InputFieldBorder;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/StudioStyleGuideColor#CheckedFieldBackground)
         */
        export interface CheckedFieldBackground extends globalThis.EnumItem {
            Name: "CheckedFieldBackground";
            Value: 94;
            EnumType: typeof globalThis.Enum.StudioStyleGuideColor;
        }
        export const CheckedFieldBackground: CheckedFieldBackground;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/StudioStyleGuideColor#CheckedFieldBorder)
         */
        export interface CheckedFieldBorder extends globalThis.EnumItem {
            Name: "CheckedFieldBorder";
            Value: 95;
            EnumType: typeof globalThis.Enum.StudioStyleGuideColor;
        }
        export const CheckedFieldBorder: CheckedFieldBorder;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/StudioStyleGuideColor#CheckedFieldIndicator)
         */
        export interface CheckedFieldIndicator extends globalThis.EnumItem {
            Name: "CheckedFieldIndicator";
            Value: 96;
            EnumType: typeof globalThis.Enum.StudioStyleGuideColor;
        }
        export const CheckedFieldIndicator: CheckedFieldIndicator;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/StudioStyleGuideColor#HeaderSection)
         */
        export interface HeaderSection extends globalThis.EnumItem {
            Name: "HeaderSection";
            Value: 97;
            EnumType: typeof globalThis.Enum.StudioStyleGuideColor;
        }
        export const HeaderSection: HeaderSection;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/StudioStyleGuideColor#Midlight)
         */
        export interface Midlight extends globalThis.EnumItem {
            Name: "Midlight";
            Value: 98;
            EnumType: typeof globalThis.Enum.StudioStyleGuideColor;
        }
        export const Midlight: Midlight;
        /**
         * The color of the status bar shown at the bottom of Studio, if it is visible.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/StudioStyleGuideColor#StatusBar)
         */
        export interface StatusBar extends globalThis.EnumItem {
            Name: "StatusBar";
            Value: 99;
            EnumType: typeof globalThis.Enum.StudioStyleGuideColor;
        }
        export const StatusBar: StatusBar;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/StudioStyleGuideColor#DialogButton)
         */
        export interface DialogButton extends globalThis.EnumItem {
            Name: "DialogButton";
            Value: 100;
            EnumType: typeof globalThis.Enum.StudioStyleGuideColor;
        }
        export const DialogButton: DialogButton;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/StudioStyleGuideColor#DialogButtonText)
         */
        export interface DialogButtonText extends globalThis.EnumItem {
            Name: "DialogButtonText";
            Value: 101;
            EnumType: typeof globalThis.Enum.StudioStyleGuideColor;
        }
        export const DialogButtonText: DialogButtonText;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/StudioStyleGuideColor#DialogButtonBorder)
         */
        export interface DialogButtonBorder extends globalThis.EnumItem {
            Name: "DialogButtonBorder";
            Value: 102;
            EnumType: typeof globalThis.Enum.StudioStyleGuideColor;
        }
        export const DialogButtonBorder: DialogButtonBorder;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/StudioStyleGuideColor#DialogMainButton)
         */
        export interface DialogMainButton extends globalThis.EnumItem {
            Name: "DialogMainButton";
            Value: 103;
            EnumType: typeof globalThis.Enum.StudioStyleGuideColor;
        }
        export const DialogMainButton: DialogMainButton;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/StudioStyleGuideColor#DialogMainButtonText)
         */
        export interface DialogMainButtonText extends globalThis.EnumItem {
            Name: "DialogMainButtonText";
            Value: 104;
            EnumType: typeof globalThis.Enum.StudioStyleGuideColor;
        }
        export const DialogMainButtonText: DialogMainButtonText;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/StudioStyleGuideColor#InfoBarWarningBackground)
         */
        export interface InfoBarWarningBackground extends globalThis.EnumItem {
            Name: "InfoBarWarningBackground";
            Value: 105;
            EnumType: typeof globalThis.Enum.StudioStyleGuideColor;
        }
        export const InfoBarWarningBackground: InfoBarWarningBackground;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/StudioStyleGuideColor#InfoBarWarningText)
         */
        export interface InfoBarWarningText extends globalThis.EnumItem {
            Name: "InfoBarWarningText";
            Value: 106;
            EnumType: typeof globalThis.Enum.StudioStyleGuideColor;
        }
        export const InfoBarWarningText: InfoBarWarningText;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/StudioStyleGuideColor#ScriptEditorCurrentLine)
         */
        export interface ScriptEditorCurrentLine extends globalThis.EnumItem {
            Name: "ScriptEditorCurrentLine";
            Value: 107;
            EnumType: typeof globalThis.Enum.StudioStyleGuideColor;
        }
        export const ScriptEditorCurrentLine: ScriptEditorCurrentLine;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/StudioStyleGuideColor#ScriptMethod)
         */
        export interface ScriptMethod extends globalThis.EnumItem {
            Name: "ScriptMethod";
            Value: 108;
            EnumType: typeof globalThis.Enum.StudioStyleGuideColor;
        }
        export const ScriptMethod: ScriptMethod;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/StudioStyleGuideColor#ScriptProperty)
         */
        export interface ScriptProperty extends globalThis.EnumItem {
            Name: "ScriptProperty";
            Value: 109;
            EnumType: typeof globalThis.Enum.StudioStyleGuideColor;
        }
        export const ScriptProperty: ScriptProperty;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/StudioStyleGuideColor#ScriptNil)
         */
        export interface ScriptNil extends globalThis.EnumItem {
            Name: "ScriptNil";
            Value: 110;
            EnumType: typeof globalThis.Enum.StudioStyleGuideColor;
        }
        export const ScriptNil: ScriptNil;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/StudioStyleGuideColor#ScriptBool)
         */
        export interface ScriptBool extends globalThis.EnumItem {
            Name: "ScriptBool";
            Value: 111;
            EnumType: typeof globalThis.Enum.StudioStyleGuideColor;
        }
        export const ScriptBool: ScriptBool;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/StudioStyleGuideColor#ScriptFunction)
         */
        export interface ScriptFunction extends globalThis.EnumItem {
            Name: "ScriptFunction";
            Value: 112;
            EnumType: typeof globalThis.Enum.StudioStyleGuideColor;
        }
        export const ScriptFunction: ScriptFunction;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/StudioStyleGuideColor#ScriptLocal)
         */
        export interface ScriptLocal extends globalThis.EnumItem {
            Name: "ScriptLocal";
            Value: 113;
            EnumType: typeof globalThis.Enum.StudioStyleGuideColor;
        }
        export const ScriptLocal: ScriptLocal;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/StudioStyleGuideColor#ScriptSelf)
         */
        export interface ScriptSelf extends globalThis.EnumItem {
            Name: "ScriptSelf";
            Value: 114;
            EnumType: typeof globalThis.Enum.StudioStyleGuideColor;
        }
        export const ScriptSelf: ScriptSelf;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/StudioStyleGuideColor#ScriptLuauKeyword)
         */
        export interface ScriptLuauKeyword extends globalThis.EnumItem {
            Name: "ScriptLuauKeyword";
            Value: 115;
            EnumType: typeof globalThis.Enum.StudioStyleGuideColor;
        }
        export const ScriptLuauKeyword: ScriptLuauKeyword;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/StudioStyleGuideColor#ScriptFunctionName)
         */
        export interface ScriptFunctionName extends globalThis.EnumItem {
            Name: "ScriptFunctionName";
            Value: 116;
            EnumType: typeof globalThis.Enum.StudioStyleGuideColor;
        }
        export const ScriptFunctionName: ScriptFunctionName;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/StudioStyleGuideColor#ScriptTodo)
         */
        export interface ScriptTodo extends globalThis.EnumItem {
            Name: "ScriptTodo";
            Value: 117;
            EnumType: typeof globalThis.Enum.StudioStyleGuideColor;
        }
        export const ScriptTodo: ScriptTodo;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/StudioStyleGuideColor#ScriptBracket)
         */
        export interface ScriptBracket extends globalThis.EnumItem {
            Name: "ScriptBracket";
            Value: 118;
            EnumType: typeof globalThis.Enum.StudioStyleGuideColor;
        }
        export const ScriptBracket: ScriptBracket;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/StudioStyleGuideColor#AttributeCog)
         */
        export interface AttributeCog extends globalThis.EnumItem {
            Name: "AttributeCog";
            Value: 119;
            EnumType: typeof globalThis.Enum.StudioStyleGuideColor;
        }
        export const AttributeCog: AttributeCog;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/StudioStyleGuideColor#AICOOverlayText)
         */
        export interface AICOOverlayText extends globalThis.EnumItem {
            Name: "AICOOverlayText";
            Value: 128;
            EnumType: typeof globalThis.Enum.StudioStyleGuideColor;
        }
        export const AICOOverlayText: AICOOverlayText;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/StudioStyleGuideColor#AICOOverlayButtonBackground)
         */
        export interface AICOOverlayButtonBackground extends globalThis.EnumItem {
            Name: "AICOOverlayButtonBackground";
            Value: 129;
            EnumType: typeof globalThis.Enum.StudioStyleGuideColor;
        }
        export const AICOOverlayButtonBackground: AICOOverlayButtonBackground;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/StudioStyleGuideColor#AICOOverlayButtonBackgroundHover)
         */
        export interface AICOOverlayButtonBackgroundHover extends globalThis.EnumItem {
            Name: "AICOOverlayButtonBackgroundHover";
            Value: 130;
            EnumType: typeof globalThis.Enum.StudioStyleGuideColor;
        }
        export const AICOOverlayButtonBackgroundHover: AICOOverlayButtonBackgroundHover;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/StudioStyleGuideColor#AICOOverlayButtonBackgroundPressed)
         */
        export interface AICOOverlayButtonBackgroundPressed extends globalThis.EnumItem {
            Name: "AICOOverlayButtonBackgroundPressed";
            Value: 131;
            EnumType: typeof globalThis.Enum.StudioStyleGuideColor;
        }
        export const AICOOverlayButtonBackgroundPressed: AICOOverlayButtonBackgroundPressed;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/StudioStyleGuideColor#OnboardingCover)
         */
        export interface OnboardingCover extends globalThis.EnumItem {
            Name: "OnboardingCover";
            Value: 132;
            EnumType: typeof globalThis.Enum.StudioStyleGuideColor;
        }
        export const OnboardingCover: OnboardingCover;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/StudioStyleGuideColor#OnboardingHighlight)
         */
        export interface OnboardingHighlight extends globalThis.EnumItem {
            Name: "OnboardingHighlight";
            Value: 133;
            EnumType: typeof globalThis.Enum.StudioStyleGuideColor;
        }
        export const OnboardingHighlight: OnboardingHighlight;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/StudioStyleGuideColor#OnboardingShadow)
         */
        export interface OnboardingShadow extends globalThis.EnumItem {
            Name: "OnboardingShadow";
            Value: 134;
            EnumType: typeof globalThis.Enum.StudioStyleGuideColor;
        }
        export const OnboardingShadow: OnboardingShadow;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/StudioStyleGuideColor#BreakpointMarker)
         */
        export interface BreakpointMarker extends globalThis.EnumItem {
            Name: "BreakpointMarker";
            Value: 136;
            EnumType: typeof globalThis.Enum.StudioStyleGuideColor;
        }
        export const BreakpointMarker: BreakpointMarker;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/StudioStyleGuideColor#DiffLineNumHover)
         */
        export interface DiffLineNumHover extends globalThis.EnumItem {
            Name: "DiffLineNumHover";
            Value: 137;
            EnumType: typeof globalThis.Enum.StudioStyleGuideColor;
        }
        export const DiffLineNumHover: DiffLineNumHover;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/StudioStyleGuideColor#DiffLineNumSeparatorBackgroundHover)
         */
        export interface DiffLineNumSeparatorBackgroundHover extends globalThis.EnumItem {
            Name: "DiffLineNumSeparatorBackgroundHover";
            Value: 138;
            EnumType: typeof globalThis.Enum.StudioStyleGuideColor;
        }
        export const DiffLineNumSeparatorBackgroundHover: DiffLineNumSeparatorBackgroundHover;
        export function GetEnumItems(this: globalThis.Enum): Array<globalThis.Enum.StudioStyleGuideColor>;
        export function FromName(this: globalThis.Enum, name: string): globalThis.Enum.StudioStyleGuideColor | undefined;
        export function FromValue(this: globalThis.Enum, value: number): globalThis.Enum.StudioStyleGuideColor | undefined;
    }
    export type StudioStyleGuideColor = StudioStyleGuideColor.MainBackground | StudioStyleGuideColor.Titlebar | StudioStyleGuideColor.Dropdown | StudioStyleGuideColor.Tooltip | StudioStyleGuideColor.Notification | StudioStyleGuideColor.ScrollBar | StudioStyleGuideColor.ScrollBarBackground | StudioStyleGuideColor.TabBar | StudioStyleGuideColor.Tab | StudioStyleGuideColor.FilterButtonDefault | StudioStyleGuideColor.FilterButtonHover | StudioStyleGuideColor.FilterButtonChecked | StudioStyleGuideColor.FilterButtonAccent | StudioStyleGuideColor.FilterButtonBorder | StudioStyleGuideColor.FilterButtonBorderAlt | StudioStyleGuideColor.RibbonTab | StudioStyleGuideColor.RibbonTabTopBar | StudioStyleGuideColor.Button | StudioStyleGuideColor.MainButton | StudioStyleGuideColor.RibbonButton | StudioStyleGuideColor.ViewPortBackground | StudioStyleGuideColor.InputFieldBackground | StudioStyleGuideColor.Item | StudioStyleGuideColor.TableItem | StudioStyleGuideColor.CategoryItem | StudioStyleGuideColor.GameSettingsTableItem | StudioStyleGuideColor.GameSettingsTooltip | StudioStyleGuideColor.EmulatorBar | StudioStyleGuideColor.EmulatorDropDown | StudioStyleGuideColor.ColorPickerFrame | StudioStyleGuideColor.CurrentMarker | StudioStyleGuideColor.Border | StudioStyleGuideColor.DropShadow | StudioStyleGuideColor.Shadow | StudioStyleGuideColor.Light | StudioStyleGuideColor.Dark | StudioStyleGuideColor.Mid | StudioStyleGuideColor.MainText | StudioStyleGuideColor.SubText | StudioStyleGuideColor.TitlebarText | StudioStyleGuideColor.BrightText | StudioStyleGuideColor.DimmedText | StudioStyleGuideColor.LinkText | StudioStyleGuideColor.WarningText | StudioStyleGuideColor.ErrorText | StudioStyleGuideColor.InfoText | StudioStyleGuideColor.SensitiveText | StudioStyleGuideColor.ScriptSideWidget | StudioStyleGuideColor.ScriptBackground | StudioStyleGuideColor.ScriptText | StudioStyleGuideColor.ScriptSelectionText | StudioStyleGuideColor.ScriptSelectionBackground | StudioStyleGuideColor.ScriptFindSelectionBackground | StudioStyleGuideColor.ScriptMatchingWordSelectionBackground | StudioStyleGuideColor.ScriptOperator | StudioStyleGuideColor.ScriptNumber | StudioStyleGuideColor.ScriptString | StudioStyleGuideColor.ScriptComment | StudioStyleGuideColor.ScriptKeyword | StudioStyleGuideColor.ScriptBuiltInFunction | StudioStyleGuideColor.ScriptWarning | StudioStyleGuideColor.ScriptError | StudioStyleGuideColor.ScriptInformation | StudioStyleGuideColor.ScriptHint | StudioStyleGuideColor.ScriptWhitespace | StudioStyleGuideColor.ScriptRuler | StudioStyleGuideColor.DocViewCodeBackground | StudioStyleGuideColor.DebuggerCurrentLine | StudioStyleGuideColor.DebuggerErrorLine | StudioStyleGuideColor.DiffFilePathText | StudioStyleGuideColor.DiffTextHunkInfo | StudioStyleGuideColor.DiffTextNoChange | StudioStyleGuideColor.DiffTextAddition | StudioStyleGuideColor.DiffTextDeletion | StudioStyleGuideColor.DiffTextSeparatorBackground | StudioStyleGuideColor.DiffTextNoChangeBackground | StudioStyleGuideColor.DiffTextAdditionBackground | StudioStyleGuideColor.DiffTextDeletionBackground | StudioStyleGuideColor.DiffLineNum | StudioStyleGuideColor.DiffLineNumSeparatorBackground | StudioStyleGuideColor.DiffLineNumNoChangeBackground | StudioStyleGuideColor.DiffLineNumAdditionBackground | StudioStyleGuideColor.DiffLineNumDeletionBackground | StudioStyleGuideColor.DiffFilePathBackground | StudioStyleGuideColor.DiffFilePathBorder | StudioStyleGuideColor.ChatIncomingBgColor | StudioStyleGuideColor.ChatIncomingTextColor | StudioStyleGuideColor.ChatOutgoingBgColor | StudioStyleGuideColor.ChatOutgoingTextColor | StudioStyleGuideColor.ChatModeratedMessageColor | StudioStyleGuideColor.Separator | StudioStyleGuideColor.ButtonBorder | StudioStyleGuideColor.ButtonText | StudioStyleGuideColor.InputFieldBorder | StudioStyleGuideColor.CheckedFieldBackground | StudioStyleGuideColor.CheckedFieldBorder | StudioStyleGuideColor.CheckedFieldIndicator | StudioStyleGuideColor.HeaderSection | StudioStyleGuideColor.Midlight | StudioStyleGuideColor.StatusBar | StudioStyleGuideColor.DialogButton | StudioStyleGuideColor.DialogButtonText | StudioStyleGuideColor.DialogButtonBorder | StudioStyleGuideColor.DialogMainButton | StudioStyleGuideColor.DialogMainButtonText | StudioStyleGuideColor.InfoBarWarningBackground | StudioStyleGuideColor.InfoBarWarningText | StudioStyleGuideColor.ScriptEditorCurrentLine | StudioStyleGuideColor.ScriptMethod | StudioStyleGuideColor.ScriptProperty | StudioStyleGuideColor.ScriptNil | StudioStyleGuideColor.ScriptBool | StudioStyleGuideColor.ScriptFunction | StudioStyleGuideColor.ScriptLocal | StudioStyleGuideColor.ScriptSelf | StudioStyleGuideColor.ScriptLuauKeyword | StudioStyleGuideColor.ScriptFunctionName | StudioStyleGuideColor.ScriptTodo | StudioStyleGuideColor.ScriptBracket | StudioStyleGuideColor.AttributeCog | StudioStyleGuideColor.AICOOverlayText | StudioStyleGuideColor.AICOOverlayButtonBackground | StudioStyleGuideColor.AICOOverlayButtonBackgroundHover | StudioStyleGuideColor.AICOOverlayButtonBackgroundPressed | StudioStyleGuideColor.OnboardingCover | StudioStyleGuideColor.OnboardingHighlight | StudioStyleGuideColor.OnboardingShadow | StudioStyleGuideColor.BreakpointMarker | StudioStyleGuideColor.DiffLineNumHover | StudioStyleGuideColor.DiffLineNumSeparatorBackgroundHover;
    /**
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/StudioStyleGuideModifier)
     */
    export namespace StudioStyleGuideModifier {
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/StudioStyleGuideModifier#Default)
         */
        export interface Default extends globalThis.EnumItem {
            Name: "Default";
            Value: 0;
            EnumType: typeof globalThis.Enum.StudioStyleGuideModifier;
        }
        export const Default: Default;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/StudioStyleGuideModifier#Selected)
         */
        export interface Selected extends globalThis.EnumItem {
            Name: "Selected";
            Value: 1;
            EnumType: typeof globalThis.Enum.StudioStyleGuideModifier;
        }
        export const Selected: Selected;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/StudioStyleGuideModifier#Pressed)
         */
        export interface Pressed extends globalThis.EnumItem {
            Name: "Pressed";
            Value: 2;
            EnumType: typeof globalThis.Enum.StudioStyleGuideModifier;
        }
        export const Pressed: Pressed;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/StudioStyleGuideModifier#Disabled)
         */
        export interface Disabled extends globalThis.EnumItem {
            Name: "Disabled";
            Value: 3;
            EnumType: typeof globalThis.Enum.StudioStyleGuideModifier;
        }
        export const Disabled: Disabled;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/StudioStyleGuideModifier#Hover)
         */
        export interface Hover extends globalThis.EnumItem {
            Name: "Hover";
            Value: 4;
            EnumType: typeof globalThis.Enum.StudioStyleGuideModifier;
        }
        export const Hover: Hover;
        export function GetEnumItems(this: globalThis.Enum): Array<globalThis.Enum.StudioStyleGuideModifier>;
        export function FromName(this: globalThis.Enum, name: string): globalThis.Enum.StudioStyleGuideModifier | undefined;
        export function FromValue(this: globalThis.Enum, value: number): globalThis.Enum.StudioStyleGuideModifier | undefined;
    }
    export type StudioStyleGuideModifier = StudioStyleGuideModifier.Default | StudioStyleGuideModifier.Selected | StudioStyleGuideModifier.Pressed | StudioStyleGuideModifier.Disabled | StudioStyleGuideModifier.Hover;
    /**
     * The Style Enum is used to set what style of supports the `TrussPart` has.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/Style)
     */
    export namespace Style {
        /**
         * Truss beams contain alternating supports.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/Style#AlternatingSupports)
         */
        export interface AlternatingSupports extends globalThis.EnumItem {
            Name: "AlternatingSupports";
            Value: 0;
            EnumType: typeof globalThis.Enum.Style;
        }
        export const AlternatingSupports: AlternatingSupports;
        /**
         * Truss beams contain bridge style supports.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/Style#BridgeStyleSupports)
         */
        export interface BridgeStyleSupports extends globalThis.EnumItem {
            Name: "BridgeStyleSupports";
            Value: 1;
            EnumType: typeof globalThis.Enum.Style;
        }
        export const BridgeStyleSupports: BridgeStyleSupports;
        /**
         * Truss beams do not contain supports.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/Style#NoSupports)
         */
        export interface NoSupports extends globalThis.EnumItem {
            Name: "NoSupports";
            Value: 2;
            EnumType: typeof globalThis.Enum.Style;
        }
        export const NoSupports: NoSupports;
        export function GetEnumItems(this: globalThis.Enum): Array<globalThis.Enum.Style>;
        export function FromName(this: globalThis.Enum, name: string): globalThis.Enum.Style | undefined;
        export function FromValue(this: globalThis.Enum, value: number): globalThis.Enum.Style | undefined;
    }
    export type Style = Style.AlternatingSupports | Style.BridgeStyleSupports | Style.NoSupports;
    /**
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/SubscriptionExpirationReason)
     */
    export namespace SubscriptionExpirationReason {
        /**
         * Subscription product is inactive.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/SubscriptionExpirationReason#ProductInactive)
         */
        export interface ProductInactive extends globalThis.EnumItem {
            Name: "ProductInactive";
            Value: 0;
            EnumType: typeof globalThis.Enum.SubscriptionExpirationReason;
        }
        export const ProductInactive: ProductInactive;
        /**
         * Subscription product has been deleted.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/SubscriptionExpirationReason#ProductDeleted)
         */
        export interface ProductDeleted extends globalThis.EnumItem {
            Name: "ProductDeleted";
            Value: 1;
            EnumType: typeof globalThis.Enum.SubscriptionExpirationReason;
        }
        export const ProductDeleted: ProductDeleted;
        /**
         * Subscriber has cancelled the subscription.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/SubscriptionExpirationReason#SubscriberCancelled)
         */
        export interface SubscriberCancelled extends globalThis.EnumItem {
            Name: "SubscriberCancelled";
            Value: 2;
            EnumType: typeof globalThis.Enum.SubscriptionExpirationReason;
        }
        export const SubscriberCancelled: SubscriberCancelled;
        /**
         * Subscriber has been refunded.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/SubscriptionExpirationReason#SubscriberRefunded)
         */
        export interface SubscriberRefunded extends globalThis.EnumItem {
            Name: "SubscriberRefunded";
            Value: 3;
            EnumType: typeof globalThis.Enum.SubscriptionExpirationReason;
        }
        export const SubscriberRefunded: SubscriberRefunded;
        /**
         * Subscription has lapsed.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/SubscriptionExpirationReason#Lapsed)
         */
        export interface Lapsed extends globalThis.EnumItem {
            Name: "Lapsed";
            Value: 4;
            EnumType: typeof globalThis.Enum.SubscriptionExpirationReason;
        }
        export const Lapsed: Lapsed;
        export function GetEnumItems(this: globalThis.Enum): Array<globalThis.Enum.SubscriptionExpirationReason>;
        export function FromName(this: globalThis.Enum, name: string): globalThis.Enum.SubscriptionExpirationReason | undefined;
        export function FromValue(this: globalThis.Enum, value: number): globalThis.Enum.SubscriptionExpirationReason | undefined;
    }
    export type SubscriptionExpirationReason = SubscriptionExpirationReason.ProductInactive | SubscriptionExpirationReason.ProductDeleted | SubscriptionExpirationReason.SubscriberCancelled | SubscriptionExpirationReason.SubscriberRefunded | SubscriptionExpirationReason.Lapsed;
    /**
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/SubscriptionPaymentStatus)
     */
    export namespace SubscriptionPaymentStatus {
        /**
         * Payment for the subscription has been received.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/SubscriptionPaymentStatus#Paid)
         */
        export interface Paid extends globalThis.EnumItem {
            Name: "Paid";
            Value: 0;
            EnumType: typeof globalThis.Enum.SubscriptionPaymentStatus;
        }
        export const Paid: Paid;
        /**
         * Payment for the subscription has been refunded.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/SubscriptionPaymentStatus#Refunded)
         */
        export interface Refunded extends globalThis.EnumItem {
            Name: "Refunded";
            Value: 1;
            EnumType: typeof globalThis.Enum.SubscriptionPaymentStatus;
        }
        export const Refunded: Refunded;
        export function GetEnumItems(this: globalThis.Enum): Array<globalThis.Enum.SubscriptionPaymentStatus>;
        export function FromName(this: globalThis.Enum, name: string): globalThis.Enum.SubscriptionPaymentStatus | undefined;
        export function FromValue(this: globalThis.Enum, value: number): globalThis.Enum.SubscriptionPaymentStatus | undefined;
    }
    export type SubscriptionPaymentStatus = SubscriptionPaymentStatus.Paid | SubscriptionPaymentStatus.Refunded;
    /**
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/SubscriptionPeriod)
     */
    export namespace SubscriptionPeriod {
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/SubscriptionPeriod#Month)
         */
        export interface Month extends globalThis.EnumItem {
            Name: "Month";
            Value: 0;
            EnumType: typeof globalThis.Enum.SubscriptionPeriod;
        }
        export const Month: Month;
        export function GetEnumItems(this: globalThis.Enum): Array<globalThis.Enum.SubscriptionPeriod>;
        export function FromName(this: globalThis.Enum, name: string): globalThis.Enum.SubscriptionPeriod | undefined;
        export function FromValue(this: globalThis.Enum, value: number): globalThis.Enum.SubscriptionPeriod | undefined;
    }
    export type SubscriptionPeriod = SubscriptionPeriod.Month;
    /**
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/SubscriptionState)
     */
    export namespace SubscriptionState {
        /**
         * User has never subscribed to the product.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/SubscriptionState#NeverSubscribed)
         */
        export interface NeverSubscribed extends globalThis.EnumItem {
            Name: "NeverSubscribed";
            Value: 0;
            EnumType: typeof globalThis.Enum.SubscriptionState;
        }
        export const NeverSubscribed: NeverSubscribed;
        /**
         * Subscription is active and will renew.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/SubscriptionState#SubscribedWillRenew)
         */
        export interface SubscribedWillRenew extends globalThis.EnumItem {
            Name: "SubscribedWillRenew";
            Value: 1;
            EnumType: typeof globalThis.Enum.SubscriptionState;
        }
        export const SubscribedWillRenew: SubscribedWillRenew;
        /**
         * Subscription is active and will not renew.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/SubscriptionState#SubscribedWillNotRenew)
         */
        export interface SubscribedWillNotRenew extends globalThis.EnumItem {
            Name: "SubscribedWillNotRenew";
            Value: 2;
            EnumType: typeof globalThis.Enum.SubscriptionState;
        }
        export const SubscribedWillNotRenew: SubscribedWillNotRenew;
        /**
         * Subscription is active and renewal payment is pending.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/SubscriptionState#SubscribedRenewalPaymentPending)
         */
        export interface SubscribedRenewalPaymentPending extends globalThis.EnumItem {
            Name: "SubscribedRenewalPaymentPending";
            Value: 3;
            EnumType: typeof globalThis.Enum.SubscriptionState;
        }
        export const SubscribedRenewalPaymentPending: SubscribedRenewalPaymentPending;
        /**
         * Subscription has expired.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/SubscriptionState#Expired)
         */
        export interface Expired extends globalThis.EnumItem {
            Name: "Expired";
            Value: 4;
            EnumType: typeof globalThis.Enum.SubscriptionState;
        }
        export const Expired: Expired;
        export function GetEnumItems(this: globalThis.Enum): Array<globalThis.Enum.SubscriptionState>;
        export function FromName(this: globalThis.Enum, name: string): globalThis.Enum.SubscriptionState | undefined;
        export function FromValue(this: globalThis.Enum, value: number): globalThis.Enum.SubscriptionState | undefined;
    }
    export type SubscriptionState = SubscriptionState.NeverSubscribed | SubscriptionState.SubscribedWillRenew | SubscriptionState.SubscribedWillNotRenew | SubscriptionState.SubscribedRenewalPaymentPending | SubscriptionState.Expired;
    /**
     * This item is deprecated and is replaced by the `SurfaceType` enum.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/SurfaceConstraint)
     */
    export namespace SurfaceConstraint {
        /**
         * No surface constraint.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/SurfaceConstraint#None)
         */
        export interface None extends globalThis.EnumItem {
            Name: "None";
            Value: 0;
            EnumType: typeof globalThis.Enum.SurfaceConstraint;
        }
        export const None: None;
        /**
         * Makes the side appear with a yellow hinge. Any part connected to this hinge will stick to the side and rotate using physics.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/SurfaceConstraint#Hinge)
         */
        export interface Hinge extends globalThis.EnumItem {
            Name: "Hinge";
            Value: 1;
            EnumType: typeof globalThis.Enum.SurfaceConstraint;
        }
        export const Hinge: Hinge;
        /**
         * Functions identically to a motor. It may have functioned differently in the past, but that functionality no longer seems to exist.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/SurfaceConstraint#SteppingMotor)
         */
        export interface SteppingMotor extends globalThis.EnumItem {
            Name: "SteppingMotor";
            Value: 2;
            EnumType: typeof globalThis.Enum.SurfaceConstraint;
        }
        export const SteppingMotor: SteppingMotor;
        /**
         * Acts the same as a Hinge, but has a grey ring around it and automatically rotates any part connected to it.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/SurfaceConstraint#Motor)
         */
        export interface Motor extends globalThis.EnumItem {
            Name: "Motor";
            Value: 3;
            EnumType: typeof globalThis.Enum.SurfaceConstraint;
        }
        export const Motor: Motor;
        export function GetEnumItems(this: globalThis.Enum): Array<globalThis.Enum.SurfaceConstraint>;
        export function FromName(this: globalThis.Enum, name: string): globalThis.Enum.SurfaceConstraint | undefined;
        export function FromValue(this: globalThis.Enum, value: number): globalThis.Enum.SurfaceConstraint | undefined;
    }
    export type SurfaceConstraint = SurfaceConstraint.None | SurfaceConstraint.Hinge | SurfaceConstraint.SteppingMotor | SurfaceConstraint.Motor;
    /**
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/SurfaceGuiShape)
     */
    export namespace SurfaceGuiShape {
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/SurfaceGuiShape#Flat)
         */
        export interface Flat extends globalThis.EnumItem {
            Name: "Flat";
            Value: 0;
            EnumType: typeof globalThis.Enum.SurfaceGuiShape;
        }
        export const Flat: Flat;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/SurfaceGuiShape#CurvedHorizontally)
         */
        export interface CurvedHorizontally extends globalThis.EnumItem {
            Name: "CurvedHorizontally";
            Value: 1;
            EnumType: typeof globalThis.Enum.SurfaceGuiShape;
        }
        export const CurvedHorizontally: CurvedHorizontally;
        export function GetEnumItems(this: globalThis.Enum): Array<globalThis.Enum.SurfaceGuiShape>;
        export function FromName(this: globalThis.Enum, name: string): globalThis.Enum.SurfaceGuiShape | undefined;
        export function FromValue(this: globalThis.Enum, value: number): globalThis.Enum.SurfaceGuiShape | undefined;
    }
    export type SurfaceGuiShape = SurfaceGuiShape.Flat | SurfaceGuiShape.CurvedHorizontally;
    /**
     * Used by `SurfaceGui.SizingMode` to control the sizing behavior of a `SurfaceGui`.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/SurfaceGuiSizingMode)
     */
    export namespace SurfaceGuiSizingMode {
        /**
         * Renders with a fixed size set using `SurfaceGui.CanvasSize`.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/SurfaceGuiSizingMode#FixedSize)
         */
        export interface FixedSize extends globalThis.EnumItem {
            Name: "FixedSize";
            Value: 0;
            EnumType: typeof globalThis.Enum.SurfaceGuiSizingMode;
        }
        export const FixedSize: FixedSize;
        /**
         * Renders with a variable size based on `SurfaceGui.PixelsPerStud` and the SurfaceGui's size in studs.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/SurfaceGuiSizingMode#PixelsPerStud)
         */
        export interface PixelsPerStud extends globalThis.EnumItem {
            Name: "PixelsPerStud";
            Value: 1;
            EnumType: typeof globalThis.Enum.SurfaceGuiSizingMode;
        }
        export const PixelsPerStud: PixelsPerStud;
        export function GetEnumItems(this: globalThis.Enum): Array<globalThis.Enum.SurfaceGuiSizingMode>;
        export function FromName(this: globalThis.Enum, name: string): globalThis.Enum.SurfaceGuiSizingMode | undefined;
        export function FromValue(this: globalThis.Enum, value: number): globalThis.Enum.SurfaceGuiSizingMode | undefined;
    }
    export type SurfaceGuiSizingMode = SurfaceGuiSizingMode.FixedSize | SurfaceGuiSizingMode.PixelsPerStud;
    /**
     * Used to determine how a surface should be displayed on a part and how automatic surface joints should behave.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/SurfaceType)
     */
    export namespace SurfaceType {
        /**
         * Adds no details on the surface.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/SurfaceType#Smooth)
         */
        export interface Smooth extends globalThis.EnumItem {
            Name: "Smooth";
            Value: 0;
            EnumType: typeof globalThis.Enum.SurfaceType;
        }
        export const Smooth: Smooth;
        /**
         * @deprecated renamed to Smooth
         */
        export const Spawn: Smooth;
        /**
         * @deprecated renamed to Smooth
         */
        export const Unjoinable: Smooth;
        /**
         * Adds an "X" pattern across the surface.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/SurfaceType#Glue)
         */
        export interface Glue extends globalThis.EnumItem {
            Name: "Glue";
            Value: 1;
            EnumType: typeof globalThis.Enum.SurfaceType;
        }
        export const Glue: Glue;
        /**
         * @deprecated renamed to Glue
         */
        export const Bumps: Glue;
        /**
         * Adds an "X" pattern across the surface.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/SurfaceType#Weld)
         */
        export interface Weld extends globalThis.EnumItem {
            Name: "Weld";
            Value: 2;
            EnumType: typeof globalThis.Enum.SurfaceType;
        }
        export const Weld: Weld;
        /**
         * Adds square studs across the surface.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/SurfaceType#Studs)
         */
        export interface Studs extends globalThis.EnumItem {
            Name: "Studs";
            Value: 3;
            EnumType: typeof globalThis.Enum.SurfaceType;
        }
        export const Studs: Studs;
        /**
         * Adds square holes across the surface where studs would be.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/SurfaceType#Inlet)
         */
        export interface Inlet extends globalThis.EnumItem {
            Name: "Inlet";
            Value: 4;
            EnumType: typeof globalThis.Enum.SurfaceType;
        }
        export const Inlet: Inlet;
        /**
         * Adds a checker pattern to the surface using studs and inlets.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/SurfaceType#Universal)
         */
        export interface Universal extends globalThis.EnumItem {
            Name: "Universal";
            Value: 5;
            EnumType: typeof globalThis.Enum.SurfaceType;
        }
        export const Universal: Universal;
        /**
         * Adds a yellow hinge to the surface. Parts touching it stick to the surface, allowing for rotations using physics. This should not be used for future work and existing instances should be replaced with a `HingeConstraint`.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/SurfaceType#Hinge)
         */
        export interface Hinge extends globalThis.EnumItem {
            Name: "Hinge";
            Value: 6;
            EnumType: typeof globalThis.Enum.SurfaceType;
        }
        export const Hinge: Hinge;
        /**
         * Functioned identically to a hinge with the addition of a grey ring.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/SurfaceType#Motor)
         */
        export interface Motor extends globalThis.EnumItem {
            Name: "Motor";
            Value: 7;
            EnumType: typeof globalThis.Enum.SurfaceType;
        }
        export const Motor: Motor;
        /**
         * Functioned identically to a motor. It may have functioned differently in the past, but that functionality is non-existent.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/SurfaceType#SteppingMotor)
         */
        export interface SteppingMotor extends globalThis.EnumItem {
            Name: "SteppingMotor";
            Value: 8;
            EnumType: typeof globalThis.Enum.SurfaceType;
        }
        export const SteppingMotor: SteppingMotor;
        /**
         * Previously similar to **Smooth** with outlines but no longer relevant since outlines have been removed.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/SurfaceType#SmoothNoOutlines)
         */
        export interface SmoothNoOutlines extends globalThis.EnumItem {
            Name: "SmoothNoOutlines";
            Value: 10;
            EnumType: typeof globalThis.Enum.SurfaceType;
        }
        export const SmoothNoOutlines: SmoothNoOutlines;
        export function GetEnumItems(this: globalThis.Enum): Array<globalThis.Enum.SurfaceType>;
        export function FromName(this: globalThis.Enum, name: string): globalThis.Enum.SurfaceType | undefined;
        export function FromValue(this: globalThis.Enum, value: number): globalThis.Enum.SurfaceType | undefined;
    }
    export type SurfaceType = SurfaceType.Smooth | SurfaceType.Glue | SurfaceType.Weld | SurfaceType.Studs | SurfaceType.Inlet | SurfaceType.Universal | SurfaceType.Hinge | SurfaceType.Motor | SurfaceType.SteppingMotor | SurfaceType.SmoothNoOutlines;
    /**
     * The direction that a user is swiping on their touch screen.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/SwipeDirection)
     */
    export namespace SwipeDirection {
        /**
         * The user swiped right.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/SwipeDirection#Right)
         */
        export interface Right extends globalThis.EnumItem {
            Name: "Right";
            Value: 0;
            EnumType: typeof globalThis.Enum.SwipeDirection;
        }
        export const Right: Right;
        /**
         * The user swiped left.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/SwipeDirection#Left)
         */
        export interface Left extends globalThis.EnumItem {
            Name: "Left";
            Value: 1;
            EnumType: typeof globalThis.Enum.SwipeDirection;
        }
        export const Left: Left;
        /**
         * The user swiped up.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/SwipeDirection#Up)
         */
        export interface Up extends globalThis.EnumItem {
            Name: "Up";
            Value: 2;
            EnumType: typeof globalThis.Enum.SwipeDirection;
        }
        export const Up: Up;
        /**
         * The user swiped down.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/SwipeDirection#Down)
         */
        export interface Down extends globalThis.EnumItem {
            Name: "Down";
            Value: 3;
            EnumType: typeof globalThis.Enum.SwipeDirection;
        }
        export const Down: Down;
        /**
         * The user did not swipe in a certain direction.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/SwipeDirection#None)
         */
        export interface None extends globalThis.EnumItem {
            Name: "None";
            Value: 4;
            EnumType: typeof globalThis.Enum.SwipeDirection;
        }
        export const None: None;
        export function GetEnumItems(this: globalThis.Enum): Array<globalThis.Enum.SwipeDirection>;
        export function FromName(this: globalThis.Enum, name: string): globalThis.Enum.SwipeDirection | undefined;
        export function FromValue(this: globalThis.Enum, value: number): globalThis.Enum.SwipeDirection | undefined;
    }
    export type SwipeDirection = SwipeDirection.Right | SwipeDirection.Left | SwipeDirection.Up | SwipeDirection.Down | SwipeDirection.None;
    /**
     * Used by `UITableLayout.MajorAxis` to decide whether direct siblings are rows or columns.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/TableMajorAxis)
     */
    export namespace TableMajorAxis {
        /**
         * The direct siblings are considered rows.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/TableMajorAxis#RowMajor)
         */
        export interface RowMajor extends globalThis.EnumItem {
            Name: "RowMajor";
            Value: 0;
            EnumType: typeof globalThis.Enum.TableMajorAxis;
        }
        export const RowMajor: RowMajor;
        /**
         * The direct siblings are considered columns.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/TableMajorAxis#ColumnMajor)
         */
        export interface ColumnMajor extends globalThis.EnumItem {
            Name: "ColumnMajor";
            Value: 1;
            EnumType: typeof globalThis.Enum.TableMajorAxis;
        }
        export const ColumnMajor: ColumnMajor;
        export function GetEnumItems(this: globalThis.Enum): Array<globalThis.Enum.TableMajorAxis>;
        export function FromName(this: globalThis.Enum, name: string): globalThis.Enum.TableMajorAxis | undefined;
        export function FromValue(this: globalThis.Enum, value: number): globalThis.Enum.TableMajorAxis | undefined;
    }
    export type TableMajorAxis = TableMajorAxis.RowMajor | TableMajorAxis.ColumnMajor;
    /**
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/TeamCreateErrorState)
     */
    export namespace TeamCreateErrorState {
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/TeamCreateErrorState#PlaceSizeTooLarge)
         */
        export interface PlaceSizeTooLarge extends globalThis.EnumItem {
            Name: "PlaceSizeTooLarge";
            Value: 0;
            EnumType: typeof globalThis.Enum.TeamCreateErrorState;
        }
        export const PlaceSizeTooLarge: PlaceSizeTooLarge;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/TeamCreateErrorState#PlaceSizeApproachingLimit)
         */
        export interface PlaceSizeApproachingLimit extends globalThis.EnumItem {
            Name: "PlaceSizeApproachingLimit";
            Value: 1;
            EnumType: typeof globalThis.Enum.TeamCreateErrorState;
        }
        export const PlaceSizeApproachingLimit: PlaceSizeApproachingLimit;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/TeamCreateErrorState#NoError)
         */
        export interface NoError extends globalThis.EnumItem {
            Name: "NoError";
            Value: 2;
            EnumType: typeof globalThis.Enum.TeamCreateErrorState;
        }
        export const NoError: NoError;
        export function GetEnumItems(this: globalThis.Enum): Array<globalThis.Enum.TeamCreateErrorState>;
        export function FromName(this: globalThis.Enum, name: string): globalThis.Enum.TeamCreateErrorState | undefined;
        export function FromValue(this: globalThis.Enum, value: number): globalThis.Enum.TeamCreateErrorState | undefined;
    }
    export type TeamCreateErrorState = TeamCreateErrorState.PlaceSizeTooLarge | TeamCreateErrorState.PlaceSizeApproachingLimit | TeamCreateErrorState.NoError;
    /**
     * Represents the different lighting systems available for rendering the 3D world. It is used by the `Lighting.Technology` property.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/Technology)
     */
    export namespace Technology {
        /**
         * Uses a 4×4×4 voxel map for light and shadow calculation.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/Technology#Voxel)
         */
        export interface Voxel extends globalThis.EnumItem {
            Name: "Voxel";
            Value: 1;
            EnumType: typeof globalThis.Enum.Technology;
        }
        export const Voxel: Voxel;
        /**
         * Simulates the removed legacy technology and is now deprecated. To achieve a similar look, use `Voxel` Lighting and add a `ColorGradingEffect` post‑processing effect set to the `Retro` preset.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/Technology#Compatibility)
         */
        export interface Compatibility extends globalThis.EnumItem {
            Name: "Compatibility";
            Value: 2;
            EnumType: typeof globalThis.Enum.Technology;
        }
        export const Compatibility: Compatibility;
        /**
         * Features shadow mapping that produces more realistic and crisp shadows from sunlight or directional light sources.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/Technology#ShadowMap)
         */
        export interface ShadowMap extends globalThis.EnumItem {
            Name: "ShadowMap";
            Value: 3;
            EnumType: typeof globalThis.Enum.Technology;
        }
        export const ShadowMap: ShadowMap;
        /**
         * Features the most advanced technology for high-fidelity lighting and shadows.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/Technology#Future)
         */
        export interface Future extends globalThis.EnumItem {
            Name: "Future";
            Value: 4;
            EnumType: typeof globalThis.Enum.Technology;
        }
        export const Future: Future;
        /**
         * **Deprecated:** This option is deprecated and cannot be selected in Studio.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/Technology#Legacy)
         */
        export interface Legacy extends globalThis.EnumItem {
            Name: "Legacy";
            Value: 0;
            EnumType: typeof globalThis.Enum.Technology;
        }
        export const Legacy: Legacy;
        /**
         * **Deprecated:** This option is deprecated and cannot be selected in Studio.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/Technology#Unified)
         */
        export interface Unified extends globalThis.EnumItem {
            Name: "Unified";
            Value: 5;
            EnumType: typeof globalThis.Enum.Technology;
        }
        export const Unified: Unified;
        export function GetEnumItems(this: globalThis.Enum): Array<globalThis.Enum.Technology>;
        export function FromName(this: globalThis.Enum, name: string): globalThis.Enum.Technology | undefined;
        export function FromValue(this: globalThis.Enum, value: number): globalThis.Enum.Technology | undefined;
    }
    export type Technology = Technology.Voxel | Technology.Compatibility | Technology.ShadowMap | Technology.Future | Technology.Legacy | Technology.Unified;
    /**
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/TeleportMethod)
     */
    export namespace TeleportMethod {
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/TeleportMethod#TeleportToSpawnByName)
         */
        export interface TeleportToSpawnByName extends globalThis.EnumItem {
            Name: "TeleportToSpawnByName";
            Value: 0;
            EnumType: typeof globalThis.Enum.TeleportMethod;
        }
        export const TeleportToSpawnByName: TeleportToSpawnByName;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/TeleportMethod#TeleportToPlaceInstance)
         */
        export interface TeleportToPlaceInstance extends globalThis.EnumItem {
            Name: "TeleportToPlaceInstance";
            Value: 1;
            EnumType: typeof globalThis.Enum.TeleportMethod;
        }
        export const TeleportToPlaceInstance: TeleportToPlaceInstance;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/TeleportMethod#TeleportToPrivateServer)
         */
        export interface TeleportToPrivateServer extends globalThis.EnumItem {
            Name: "TeleportToPrivateServer";
            Value: 2;
            EnumType: typeof globalThis.Enum.TeleportMethod;
        }
        export const TeleportToPrivateServer: TeleportToPrivateServer;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/TeleportMethod#TeleportPartyAsync)
         */
        export interface TeleportPartyAsync extends globalThis.EnumItem {
            Name: "TeleportPartyAsync";
            Value: 3;
            EnumType: typeof globalThis.Enum.TeleportMethod;
        }
        export const TeleportPartyAsync: TeleportPartyAsync;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/TeleportMethod#TeleportToVIPServer)
         */
        export interface TeleportToVIPServer extends globalThis.EnumItem {
            Name: "TeleportToVIPServer";
            Value: 4;
            EnumType: typeof globalThis.Enum.TeleportMethod;
        }
        export const TeleportToVIPServer: TeleportToVIPServer;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/TeleportMethod#TeleportToInstanceBack)
         */
        export interface TeleportToInstanceBack extends globalThis.EnumItem {
            Name: "TeleportToInstanceBack";
            Value: 5;
            EnumType: typeof globalThis.Enum.TeleportMethod;
        }
        export const TeleportToInstanceBack: TeleportToInstanceBack;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/TeleportMethod#TeleportUnknown)
         */
        export interface TeleportUnknown extends globalThis.EnumItem {
            Name: "TeleportUnknown";
            Value: 6;
            EnumType: typeof globalThis.Enum.TeleportMethod;
        }
        export const TeleportUnknown: TeleportUnknown;
        export function GetEnumItems(this: globalThis.Enum): Array<globalThis.Enum.TeleportMethod>;
        export function FromName(this: globalThis.Enum, name: string): globalThis.Enum.TeleportMethod | undefined;
        export function FromValue(this: globalThis.Enum, value: number): globalThis.Enum.TeleportMethod | undefined;
    }
    export type TeleportMethod = TeleportMethod.TeleportToSpawnByName | TeleportMethod.TeleportToPlaceInstance | TeleportMethod.TeleportToPrivateServer | TeleportMethod.TeleportPartyAsync | TeleportMethod.TeleportToVIPServer | TeleportMethod.TeleportToInstanceBack | TeleportMethod.TeleportUnknown;
    /**
     * Describes the result of a teleport.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/TeleportResult)
     */
    export namespace TeleportResult {
        /**
         * The teleport was successful.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/TeleportResult#Success)
         */
        export interface Success extends globalThis.EnumItem {
            Name: "Success";
            Value: 0;
            EnumType: typeof globalThis.Enum.TeleportResult;
        }
        export const Success: Success;
        /**
         * The teleport failed for an unknown reason.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/TeleportResult#Failure)
         */
        export interface Failure extends globalThis.EnumItem {
            Name: "Failure";
            Value: 1;
            EnumType: typeof globalThis.Enum.TeleportResult;
        }
        export const Failure: Failure;
        /**
         * The game that this player attempted to teleport to could not be found.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/TeleportResult#GameNotFound)
         */
        export interface GameNotFound extends globalThis.EnumItem {
            Name: "GameNotFound";
            Value: 2;
            EnumType: typeof globalThis.Enum.TeleportResult;
        }
        export const GameNotFound: GameNotFound;
        /**
         * The game that this player attempted to teleport to has ended.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/TeleportResult#GameEnded)
         */
        export interface GameEnded extends globalThis.EnumItem {
            Name: "GameEnded";
            Value: 3;
            EnumType: typeof globalThis.Enum.TeleportResult;
        }
        export const GameEnded: GameEnded;
        /**
         * The game that this player attempted to teleport to is full.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/TeleportResult#GameFull)
         */
        export interface GameFull extends globalThis.EnumItem {
            Name: "GameFull";
            Value: 4;
            EnumType: typeof globalThis.Enum.TeleportResult;
        }
        export const GameFull: GameFull;
        /**
         * The player is not authorized to complete this teleport.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/TeleportResult#Unauthorized)
         */
        export interface Unauthorized extends globalThis.EnumItem {
            Name: "Unauthorized";
            Value: 5;
            EnumType: typeof globalThis.Enum.TeleportResult;
        }
        export const Unauthorized: Unauthorized;
        /**
         * Too many teleport requests have been made recently.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/TeleportResult#Flooded)
         */
        export interface Flooded extends globalThis.EnumItem {
            Name: "Flooded";
            Value: 6;
            EnumType: typeof globalThis.Enum.TeleportResult;
        }
        export const Flooded: Flooded;
        /**
         * The player is currently being teleported.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/TeleportResult#IsTeleporting)
         */
        export interface IsTeleporting extends globalThis.EnumItem {
            Name: "IsTeleporting";
            Value: 7;
            EnumType: typeof globalThis.Enum.TeleportResult;
        }
        export const IsTeleporting: IsTeleporting;
        export function GetEnumItems(this: globalThis.Enum): Array<globalThis.Enum.TeleportResult>;
        export function FromName(this: globalThis.Enum, name: string): globalThis.Enum.TeleportResult | undefined;
        export function FromValue(this: globalThis.Enum, value: number): globalThis.Enum.TeleportResult | undefined;
    }
    export type TeleportResult = TeleportResult.Success | TeleportResult.Failure | TeleportResult.GameNotFound | TeleportResult.GameEnded | TeleportResult.GameFull | TeleportResult.Unauthorized | TeleportResult.Flooded | TeleportResult.IsTeleporting;
    /**
     * Determines the current teleportation state of a player.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/TeleportState)
     */
    export namespace TeleportState {
        /**
         * The server has requested that the client teleport.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/TeleportState#RequestedFromServer)
         */
        export interface RequestedFromServer extends globalThis.EnumItem {
            Name: "RequestedFromServer";
            Value: 0;
            EnumType: typeof globalThis.Enum.TeleportState;
        }
        export const RequestedFromServer: RequestedFromServer;
        /**
         * The client has started attempting to teleport.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/TeleportState#Started)
         */
        export interface Started extends globalThis.EnumItem {
            Name: "Started";
            Value: 1;
            EnumType: typeof globalThis.Enum.TeleportState;
        }
        export const Started: Started;
        /**
         * The client is waiting for the server to respond to the teleport request.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/TeleportState#WaitingForServer)
         */
        export interface WaitingForServer extends globalThis.EnumItem {
            Name: "WaitingForServer";
            Value: 2;
            EnumType: typeof globalThis.Enum.TeleportState;
        }
        export const WaitingForServer: WaitingForServer;
        /**
         * The teleport failed.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/TeleportState#Failed)
         */
        export interface Failed extends globalThis.EnumItem {
            Name: "Failed";
            Value: 3;
            EnumType: typeof globalThis.Enum.TeleportState;
        }
        export const Failed: Failed;
        /**
         * The teleport is currently in progress. The player usually disconnects and teleports to the destination after this.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/TeleportState#InProgress)
         */
        export interface InProgress extends globalThis.EnumItem {
            Name: "InProgress";
            Value: 4;
            EnumType: typeof globalThis.Enum.TeleportState;
        }
        export const InProgress: InProgress;
        export function GetEnumItems(this: globalThis.Enum): Array<globalThis.Enum.TeleportState>;
        export function FromName(this: globalThis.Enum, name: string): globalThis.Enum.TeleportState | undefined;
        export function FromValue(this: globalThis.Enum, value: number): globalThis.Enum.TeleportState | undefined;
    }
    export type TeleportState = TeleportState.RequestedFromServer | TeleportState.Started | TeleportState.WaitingForServer | TeleportState.Failed | TeleportState.InProgress;
    /**
     * Determines the type of teleport destination for a `TeleportService` teleport call.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/TeleportType)
     */
    export namespace TeleportType {
        /**
         * The teleport destination is a place (no specific instance).
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/TeleportType#ToPlace)
         */
        export interface ToPlace extends globalThis.EnumItem {
            Name: "ToPlace";
            Value: 0;
            EnumType: typeof globalThis.Enum.TeleportType;
        }
        export const ToPlace: ToPlace;
        /**
         * The teleport destination is an instance of a place.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/TeleportType#ToInstance)
         */
        export interface ToInstance extends globalThis.EnumItem {
            Name: "ToInstance";
            Value: 1;
            EnumType: typeof globalThis.Enum.TeleportType;
        }
        export const ToInstance: ToInstance;
        /**
         * The destination of the teleport is a reserved server (a place instance that is reserved for a select group of players).
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/TeleportType#ToReservedServer)
         */
        export interface ToReservedServer extends globalThis.EnumItem {
            Name: "ToReservedServer";
            Value: 2;
            EnumType: typeof globalThis.Enum.TeleportType;
        }
        export const ToReservedServer: ToReservedServer;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/TeleportType#ToVIPServer)
         */
        export interface ToVIPServer extends globalThis.EnumItem {
            Name: "ToVIPServer";
            Value: 3;
            EnumType: typeof globalThis.Enum.TeleportType;
        }
        export const ToVIPServer: ToVIPServer;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/TeleportType#ToInstanceBack)
         */
        export interface ToInstanceBack extends globalThis.EnumItem {
            Name: "ToInstanceBack";
            Value: 4;
            EnumType: typeof globalThis.Enum.TeleportType;
        }
        export const ToInstanceBack: ToInstanceBack;
        export function GetEnumItems(this: globalThis.Enum): Array<globalThis.Enum.TeleportType>;
        export function FromName(this: globalThis.Enum, name: string): globalThis.Enum.TeleportType | undefined;
        export function FromValue(this: globalThis.Enum, value: number): globalThis.Enum.TeleportType | undefined;
    }
    export type TeleportType = TeleportType.ToPlace | TeleportType.ToInstance | TeleportType.ToReservedServer | TeleportType.ToVIPServer | TeleportType.ToInstanceBack;
    /**
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/TerrainAcquisitionMethod)
     */
    export namespace TerrainAcquisitionMethod {
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/TerrainAcquisitionMethod#None)
         */
        export interface None extends globalThis.EnumItem {
            Name: "None";
            Value: 0;
            EnumType: typeof globalThis.Enum.TerrainAcquisitionMethod;
        }
        export const None: None;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/TerrainAcquisitionMethod#Legacy)
         */
        export interface Legacy extends globalThis.EnumItem {
            Name: "Legacy";
            Value: 1;
            EnumType: typeof globalThis.Enum.TerrainAcquisitionMethod;
        }
        export const Legacy: Legacy;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/TerrainAcquisitionMethod#Template)
         */
        export interface Template extends globalThis.EnumItem {
            Name: "Template";
            Value: 2;
            EnumType: typeof globalThis.Enum.TerrainAcquisitionMethod;
        }
        export const Template: Template;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/TerrainAcquisitionMethod#Generate)
         */
        export interface Generate extends globalThis.EnumItem {
            Name: "Generate";
            Value: 3;
            EnumType: typeof globalThis.Enum.TerrainAcquisitionMethod;
        }
        export const Generate: Generate;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/TerrainAcquisitionMethod#Import)
         */
        export interface Import extends globalThis.EnumItem {
            Name: "Import";
            Value: 4;
            EnumType: typeof globalThis.Enum.TerrainAcquisitionMethod;
        }
        export const Import: Import;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/TerrainAcquisitionMethod#Convert)
         */
        export interface Convert extends globalThis.EnumItem {
            Name: "Convert";
            Value: 5;
            EnumType: typeof globalThis.Enum.TerrainAcquisitionMethod;
        }
        export const Convert: Convert;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/TerrainAcquisitionMethod#EditAddTool)
         */
        export interface EditAddTool extends globalThis.EnumItem {
            Name: "EditAddTool";
            Value: 6;
            EnumType: typeof globalThis.Enum.TerrainAcquisitionMethod;
        }
        export const EditAddTool: EditAddTool;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/TerrainAcquisitionMethod#EditSeaLevelTool)
         */
        export interface EditSeaLevelTool extends globalThis.EnumItem {
            Name: "EditSeaLevelTool";
            Value: 7;
            EnumType: typeof globalThis.Enum.TerrainAcquisitionMethod;
        }
        export const EditSeaLevelTool: EditSeaLevelTool;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/TerrainAcquisitionMethod#EditReplaceTool)
         */
        export interface EditReplaceTool extends globalThis.EnumItem {
            Name: "EditReplaceTool";
            Value: 8;
            EnumType: typeof globalThis.Enum.TerrainAcquisitionMethod;
        }
        export const EditReplaceTool: EditReplaceTool;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/TerrainAcquisitionMethod#RegionFillTool)
         */
        export interface RegionFillTool extends globalThis.EnumItem {
            Name: "RegionFillTool";
            Value: 9;
            EnumType: typeof globalThis.Enum.TerrainAcquisitionMethod;
        }
        export const RegionFillTool: RegionFillTool;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/TerrainAcquisitionMethod#RegionPasteTool)
         */
        export interface RegionPasteTool extends globalThis.EnumItem {
            Name: "RegionPasteTool";
            Value: 10;
            EnumType: typeof globalThis.Enum.TerrainAcquisitionMethod;
        }
        export const RegionPasteTool: RegionPasteTool;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/TerrainAcquisitionMethod#Other)
         */
        export interface Other extends globalThis.EnumItem {
            Name: "Other";
            Value: 11;
            EnumType: typeof globalThis.Enum.TerrainAcquisitionMethod;
        }
        export const Other: Other;
        export function GetEnumItems(this: globalThis.Enum): Array<globalThis.Enum.TerrainAcquisitionMethod>;
        export function FromName(this: globalThis.Enum, name: string): globalThis.Enum.TerrainAcquisitionMethod | undefined;
        export function FromValue(this: globalThis.Enum, value: number): globalThis.Enum.TerrainAcquisitionMethod | undefined;
    }
    export type TerrainAcquisitionMethod = TerrainAcquisitionMethod.None | TerrainAcquisitionMethod.Legacy | TerrainAcquisitionMethod.Template | TerrainAcquisitionMethod.Generate | TerrainAcquisitionMethod.Import | TerrainAcquisitionMethod.Convert | TerrainAcquisitionMethod.EditAddTool | TerrainAcquisitionMethod.EditSeaLevelTool | TerrainAcquisitionMethod.EditReplaceTool | TerrainAcquisitionMethod.RegionFillTool | TerrainAcquisitionMethod.RegionPasteTool | TerrainAcquisitionMethod.Other;
    /**
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/TerrainFace)
     */
    export namespace TerrainFace {
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/TerrainFace#Top)
         */
        export interface Top extends globalThis.EnumItem {
            Name: "Top";
            Value: 0;
            EnumType: typeof globalThis.Enum.TerrainFace;
        }
        export const Top: Top;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/TerrainFace#Side)
         */
        export interface Side extends globalThis.EnumItem {
            Name: "Side";
            Value: 1;
            EnumType: typeof globalThis.Enum.TerrainFace;
        }
        export const Side: Side;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/TerrainFace#Bottom)
         */
        export interface Bottom extends globalThis.EnumItem {
            Name: "Bottom";
            Value: 2;
            EnumType: typeof globalThis.Enum.TerrainFace;
        }
        export const Bottom: Bottom;
        export function GetEnumItems(this: globalThis.Enum): Array<globalThis.Enum.TerrainFace>;
        export function FromName(this: globalThis.Enum, name: string): globalThis.Enum.TerrainFace | undefined;
        export function FromValue(this: globalThis.Enum, value: number): globalThis.Enum.TerrainFace | undefined;
    }
    export type TerrainFace = TerrainFace.Top | TerrainFace.Side | TerrainFace.Bottom;
    /**
     * Indicates the status of a `TextChatMessage`.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/TextChatMessageStatus)
     */
    export namespace TextChatMessageStatus {
        /**
         * Generic failed status for any other `TextChannel:SendAsync()` failures.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/TextChatMessageStatus#Unknown)
         */
        export interface Unknown extends globalThis.EnumItem {
            Name: "Unknown";
            Value: 1;
            EnumType: typeof globalThis.Enum.TextChatMessageStatus;
        }
        export const Unknown: Unknown;
        /**
         * Message has no issues.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/TextChatMessageStatus#Success)
         */
        export interface Success extends globalThis.EnumItem {
            Name: "Success";
            Value: 2;
            EnumType: typeof globalThis.Enum.TextChatMessageStatus;
        }
        export const Success: Success;
        /**
         * Message is sending.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/TextChatMessageStatus#Sending)
         */
        export interface Sending extends globalThis.EnumItem {
            Name: "Sending";
            Value: 3;
            EnumType: typeof globalThis.Enum.TextChatMessageStatus;
        }
        export const Sending: Sending;
        /**
         * Text filter failed to process the message.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/TextChatMessageStatus#TextFilterFailed)
         */
        export interface TextFilterFailed extends globalThis.EnumItem {
            Name: "TextFilterFailed";
            Value: 4;
            EnumType: typeof globalThis.Enum.TextChatMessageStatus;
        }
        export const TextFilterFailed: TextFilterFailed;
        /**
         * Message is from a user sending messages too frequently.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/TextChatMessageStatus#Floodchecked)
         */
        export interface Floodchecked extends globalThis.EnumItem {
            Name: "Floodchecked";
            Value: 5;
            EnumType: typeof globalThis.Enum.TextChatMessageStatus;
        }
        export const Floodchecked: Floodchecked;
        /**
         * Message can't be sent because of the user's chat privacy settings.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/TextChatMessageStatus#InvalidPrivacySettings)
         */
        export interface InvalidPrivacySettings extends globalThis.EnumItem {
            Name: "InvalidPrivacySettings";
            Value: 6;
            EnumType: typeof globalThis.Enum.TextChatMessageStatus;
        }
        export const InvalidPrivacySettings: InvalidPrivacySettings;
        /**
         * Message's `TextSource` is either not in the intended `TextChannel` or `TextSource.CanSend` is `false`.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/TextChatMessageStatus#InvalidTextChannelPermissions)
         */
        export interface InvalidTextChannelPermissions extends globalThis.EnumItem {
            Name: "InvalidTextChannelPermissions";
            Value: 7;
            EnumType: typeof globalThis.Enum.TextChatMessageStatus;
        }
        export const InvalidTextChannelPermissions: InvalidTextChannelPermissions;
        /**
         * Message is too long.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/TextChatMessageStatus#MessageTooLong)
         */
        export interface MessageTooLong extends globalThis.EnumItem {
            Name: "MessageTooLong";
            Value: 8;
            EnumType: typeof globalThis.Enum.TextChatMessageStatus;
        }
        export const MessageTooLong: MessageTooLong;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/TextChatMessageStatus#ModerationTimeout)
         */
        export interface ModerationTimeout extends globalThis.EnumItem {
            Name: "ModerationTimeout";
            Value: 9;
            EnumType: typeof globalThis.Enum.TextChatMessageStatus;
        }
        export const ModerationTimeout: ModerationTimeout;
        export function GetEnumItems(this: globalThis.Enum): Array<globalThis.Enum.TextChatMessageStatus>;
        export function FromName(this: globalThis.Enum, name: string): globalThis.Enum.TextChatMessageStatus | undefined;
        export function FromValue(this: globalThis.Enum, value: number): globalThis.Enum.TextChatMessageStatus | undefined;
    }
    export type TextChatMessageStatus = TextChatMessageStatus.Unknown | TextChatMessageStatus.Success | TextChatMessageStatus.Sending | TextChatMessageStatus.TextFilterFailed | TextChatMessageStatus.Floodchecked | TextChatMessageStatus.InvalidPrivacySettings | TextChatMessageStatus.InvalidTextChannelPermissions | TextChatMessageStatus.MessageTooLong | TextChatMessageStatus.ModerationTimeout;
    /**
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/TextDirection)
     */
    export namespace TextDirection {
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/TextDirection#Auto)
         */
        export interface Auto extends globalThis.EnumItem {
            Name: "Auto";
            Value: 0;
            EnumType: typeof globalThis.Enum.TextDirection;
        }
        export const Auto: Auto;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/TextDirection#LeftToRight)
         */
        export interface LeftToRight extends globalThis.EnumItem {
            Name: "LeftToRight";
            Value: 1;
            EnumType: typeof globalThis.Enum.TextDirection;
        }
        export const LeftToRight: LeftToRight;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/TextDirection#RightToLeft)
         */
        export interface RightToLeft extends globalThis.EnumItem {
            Name: "RightToLeft";
            Value: 2;
            EnumType: typeof globalThis.Enum.TextDirection;
        }
        export const RightToLeft: RightToLeft;
        export function GetEnumItems(this: globalThis.Enum): Array<globalThis.Enum.TextDirection>;
        export function FromName(this: globalThis.Enum, name: string): globalThis.Enum.TextDirection | undefined;
        export function FromValue(this: globalThis.Enum, value: number): globalThis.Enum.TextDirection | undefined;
    }
    export type TextDirection = TextDirection.Auto | TextDirection.LeftToRight | TextDirection.RightToLeft;
    /**
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/TextFilterContext)
     */
    export namespace TextFilterContext {
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/TextFilterContext#PublicChat)
         */
        export interface PublicChat extends globalThis.EnumItem {
            Name: "PublicChat";
            Value: 1;
            EnumType: typeof globalThis.Enum.TextFilterContext;
        }
        export const PublicChat: PublicChat;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/TextFilterContext#PrivateChat)
         */
        export interface PrivateChat extends globalThis.EnumItem {
            Name: "PrivateChat";
            Value: 2;
            EnumType: typeof globalThis.Enum.TextFilterContext;
        }
        export const PrivateChat: PrivateChat;
        export function GetEnumItems(this: globalThis.Enum): Array<globalThis.Enum.TextFilterContext>;
        export function FromName(this: globalThis.Enum, name: string): globalThis.Enum.TextFilterContext | undefined;
        export function FromValue(this: globalThis.Enum, value: number): globalThis.Enum.TextFilterContext | undefined;
    }
    export type TextFilterContext = TextFilterContext.PublicChat | TextFilterContext.PrivateChat;
    /**
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/TextInputType)
     */
    export namespace TextInputType {
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/TextInputType#Default)
         */
        export interface Default extends globalThis.EnumItem {
            Name: "Default";
            Value: 0;
            EnumType: typeof globalThis.Enum.TextInputType;
        }
        export const Default: Default;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/TextInputType#NoSuggestions)
         */
        export interface NoSuggestions extends globalThis.EnumItem {
            Name: "NoSuggestions";
            Value: 1;
            EnumType: typeof globalThis.Enum.TextInputType;
        }
        export const NoSuggestions: NoSuggestions;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/TextInputType#Number)
         */
        export interface Number extends globalThis.EnumItem {
            Name: "Number";
            Value: 2;
            EnumType: typeof globalThis.Enum.TextInputType;
        }
        export const Number: Number;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/TextInputType#Email)
         */
        export interface Email extends globalThis.EnumItem {
            Name: "Email";
            Value: 3;
            EnumType: typeof globalThis.Enum.TextInputType;
        }
        export const Email: Email;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/TextInputType#Phone)
         */
        export interface Phone extends globalThis.EnumItem {
            Name: "Phone";
            Value: 4;
            EnumType: typeof globalThis.Enum.TextInputType;
        }
        export const Phone: Phone;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/TextInputType#Password)
         */
        export interface Password extends globalThis.EnumItem {
            Name: "Password";
            Value: 5;
            EnumType: typeof globalThis.Enum.TextInputType;
        }
        export const Password: Password;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/TextInputType#PasswordShown)
         */
        export interface PasswordShown extends globalThis.EnumItem {
            Name: "PasswordShown";
            Value: 6;
            EnumType: typeof globalThis.Enum.TextInputType;
        }
        export const PasswordShown: PasswordShown;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/TextInputType#Username)
         */
        export interface Username extends globalThis.EnumItem {
            Name: "Username";
            Value: 7;
            EnumType: typeof globalThis.Enum.TextInputType;
        }
        export const Username: Username;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/TextInputType#OneTimePassword)
         */
        export interface OneTimePassword extends globalThis.EnumItem {
            Name: "OneTimePassword";
            Value: 8;
            EnumType: typeof globalThis.Enum.TextInputType;
        }
        export const OneTimePassword: OneTimePassword;
        export function GetEnumItems(this: globalThis.Enum): Array<globalThis.Enum.TextInputType>;
        export function FromName(this: globalThis.Enum, name: string): globalThis.Enum.TextInputType | undefined;
        export function FromValue(this: globalThis.Enum, value: number): globalThis.Enum.TextInputType | undefined;
    }
    export type TextInputType = TextInputType.Default | TextInputType.NoSuggestions | TextInputType.Number | TextInputType.Email | TextInputType.Phone | TextInputType.Password | TextInputType.PasswordShown | TextInputType.Username | TextInputType.OneTimePassword;
    /**
     * Controls the truncation of text when using the `TextTruncate` property.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/TextTruncate)
     */
    export namespace TextTruncate {
        /**
         * Text is not truncated.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/TextTruncate#None)
         */
        export interface None extends globalThis.EnumItem {
            Name: "None";
            Value: 0;
            EnumType: typeof globalThis.Enum.TextTruncate;
        }
        export const None: None;
        /**
         * Text is truncated at the end of the text; extra graphemes that cannot fit into the space are replaced with `...`. Word boundaries are respected if possible. For example, if the control is between -> and <- like so: `->Long text is truncated at the en<-d of the last complete word` The text will be: `Long text is truncated at the...`
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/TextTruncate#AtEnd)
         */
        export interface AtEnd extends globalThis.EnumItem {
            Name: "AtEnd";
            Value: 1;
            EnumType: typeof globalThis.Enum.TextTruncate;
        }
        export const AtEnd: AtEnd;
        /**
         * If the end of the line occurs in the middle of a word, the text is truncated inside of that word. Extra graphemes that cannot fit into the space are replaced with `...`. For example, if the control is between -> and <- like so: `->Long text is truncated at the en<-d of the last complete word` The text will be: `Long text is truncated at the en...`
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/TextTruncate#SplitWord)
         */
        export interface SplitWord extends globalThis.EnumItem {
            Name: "SplitWord";
            Value: 2;
            EnumType: typeof globalThis.Enum.TextTruncate;
        }
        export const SplitWord: SplitWord;
        export function GetEnumItems(this: globalThis.Enum): Array<globalThis.Enum.TextTruncate>;
        export function FromName(this: globalThis.Enum, name: string): globalThis.Enum.TextTruncate | undefined;
        export function FromValue(this: globalThis.Enum, value: number): globalThis.Enum.TextTruncate | undefined;
    }
    export type TextTruncate = TextTruncate.None | TextTruncate.AtEnd | TextTruncate.SplitWord;
    /**
     * Determines horizontal alignment of text.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/TextXAlignment)
     */
    export namespace TextXAlignment {
        /**
         * Alignment starts at the left side of the GUI object.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/TextXAlignment#Left)
         */
        export interface Left extends globalThis.EnumItem {
            Name: "Left";
            Value: 0;
            EnumType: typeof globalThis.Enum.TextXAlignment;
        }
        export const Left: Left;
        /**
         * Alignment starts at the right side of the GUI object.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/TextXAlignment#Right)
         */
        export interface Right extends globalThis.EnumItem {
            Name: "Right";
            Value: 1;
            EnumType: typeof globalThis.Enum.TextXAlignment;
        }
        export const Right: Right;
        /**
         * Aligned starts at the center of the GUI object and spreads equally left and right.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/TextXAlignment#Center)
         */
        export interface Center extends globalThis.EnumItem {
            Name: "Center";
            Value: 2;
            EnumType: typeof globalThis.Enum.TextXAlignment;
        }
        export const Center: Center;
        export function GetEnumItems(this: globalThis.Enum): Array<globalThis.Enum.TextXAlignment>;
        export function FromName(this: globalThis.Enum, name: string): globalThis.Enum.TextXAlignment | undefined;
        export function FromValue(this: globalThis.Enum, value: number): globalThis.Enum.TextXAlignment | undefined;
    }
    export type TextXAlignment = TextXAlignment.Left | TextXAlignment.Right | TextXAlignment.Center;
    /**
     * Determines vertical alignment of text.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/TextYAlignment)
     */
    export namespace TextYAlignment {
        /**
         * Alignment starts at the top of the GUI object.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/TextYAlignment#Top)
         */
        export interface Top extends globalThis.EnumItem {
            Name: "Top";
            Value: 0;
            EnumType: typeof globalThis.Enum.TextYAlignment;
        }
        export const Top: Top;
        /**
         * Aligned starts at the center of the GUI object and spreads equally toward the top and bottom.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/TextYAlignment#Center)
         */
        export interface Center extends globalThis.EnumItem {
            Name: "Center";
            Value: 1;
            EnumType: typeof globalThis.Enum.TextYAlignment;
        }
        export const Center: Center;
        /**
         * Alignment starts at the bottom of the GUI object.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/TextYAlignment#Bottom)
         */
        export interface Bottom extends globalThis.EnumItem {
            Name: "Bottom";
            Value: 2;
            EnumType: typeof globalThis.Enum.TextYAlignment;
        }
        export const Bottom: Bottom;
        export function GetEnumItems(this: globalThis.Enum): Array<globalThis.Enum.TextYAlignment>;
        export function FromName(this: globalThis.Enum, name: string): globalThis.Enum.TextYAlignment | undefined;
        export function FromValue(this: globalThis.Enum, value: number): globalThis.Enum.TextYAlignment | undefined;
    }
    export type TextYAlignment = TextYAlignment.Top | TextYAlignment.Center | TextYAlignment.Bottom;
    /**
     * Describes how the texture of a `Trail` or `Beam` behaves.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/TextureMode)
     */
    export namespace TextureMode {
        /**
         * For a `Trail`, the texture will stretch out based on the lifetime of the trail, and shrink inwards if the trail's attachments stop moving. For a `Beam`, the texture will repeat `TextureLength` times across the beam's overall length. See [here](../../../effects/beams.md#texture-lengthmode) for details.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/TextureMode#Stretch)
         */
        export interface Stretch extends globalThis.EnumItem {
            Name: "Stretch";
            Value: 0;
            EnumType: typeof globalThis.Enum.TextureMode;
        }
        export const Stretch: Stretch;
        /**
         * For a `Trail`, the texture will be tiled as the length of the trail changes, but the textures will remain stationary relative to their attachments. For a `Beam`, the texture repetitions will equal the beam's overall length (in studs) divided by its `TextureLength`. See [here](../../../effects/beams.md#texture-lengthmode) for details.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/TextureMode#Wrap)
         */
        export interface Wrap extends globalThis.EnumItem {
            Name: "Wrap";
            Value: 1;
            EnumType: typeof globalThis.Enum.TextureMode;
        }
        export const Wrap: Wrap;
        /**
         * For a `Trail`, the texture will be rolled out as the attachments move, and they will remain in place until their lifetime is met. This setting is ideal for trail textures that should appear "stamped" where rendered, such as paw prints or tire tracks. This value is not supported for `Beam` and therefore behaves identically to **Wrap**.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/TextureMode#Static)
         */
        export interface Static extends globalThis.EnumItem {
            Name: "Static";
            Value: 2;
            EnumType: typeof globalThis.Enum.TextureMode;
        }
        export const Static: Static;
        export function GetEnumItems(this: globalThis.Enum): Array<globalThis.Enum.TextureMode>;
        export function FromName(this: globalThis.Enum, name: string): globalThis.Enum.TextureMode | undefined;
        export function FromValue(this: globalThis.Enum, value: number): globalThis.Enum.TextureMode | undefined;
    }
    export type TextureMode = TextureMode.Stretch | TextureMode.Wrap | TextureMode.Static;
    /**
     * Used to get memory information about textures.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/TextureQueryType)
     */
    export namespace TextureQueryType {
        /**
         * Texture memory for objects other than `Humanoid`.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/TextureQueryType#NonHumanoid)
         */
        export interface NonHumanoid extends globalThis.EnumItem {
            Name: "NonHumanoid";
            Value: 0;
            EnumType: typeof globalThis.Enum.TextureQueryType;
        }
        export const NonHumanoid: NonHumanoid;
        /**
         * Unreferenced texture memory for objects other than `Humanoid`.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/TextureQueryType#NonHumanoidOrphaned)
         */
        export interface NonHumanoidOrphaned extends globalThis.EnumItem {
            Name: "NonHumanoidOrphaned";
            Value: 1;
            EnumType: typeof globalThis.Enum.TextureQueryType;
        }
        export const NonHumanoidOrphaned: NonHumanoidOrphaned;
        /**
         * Texture memory for `Humanoid`.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/TextureQueryType#Humanoid)
         */
        export interface Humanoid extends globalThis.EnumItem {
            Name: "Humanoid";
            Value: 2;
            EnumType: typeof globalThis.Enum.TextureQueryType;
        }
        export const Humanoid: Humanoid;
        /**
         * Unreferenced texture memory for `Humanoid`.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/TextureQueryType#HumanoidOrphaned)
         */
        export interface HumanoidOrphaned extends globalThis.EnumItem {
            Name: "HumanoidOrphaned";
            Value: 3;
            EnumType: typeof globalThis.Enum.TextureQueryType;
        }
        export const HumanoidOrphaned: HumanoidOrphaned;
        export function GetEnumItems(this: globalThis.Enum): Array<globalThis.Enum.TextureQueryType>;
        export function FromName(this: globalThis.Enum, name: string): globalThis.Enum.TextureQueryType | undefined;
        export function FromValue(this: globalThis.Enum, value: number): globalThis.Enum.TextureQueryType | undefined;
    }
    export type TextureQueryType = TextureQueryType.NonHumanoid | TextureQueryType.NonHumanoidOrphaned | TextureQueryType.Humanoid | TextureQueryType.HumanoidOrphaned;
    /**
     * Thread pooling scheme for the task scheduler.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/ThreadPoolConfig)
     */
    export namespace ThreadPoolConfig {
        /**
         * Utilize 4 worker threads per available physical CPU core.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/ThreadPoolConfig#PerCore4)
         */
        export interface PerCore4 extends globalThis.EnumItem {
            Name: "PerCore4";
            Value: 104;
            EnumType: typeof globalThis.Enum.ThreadPoolConfig;
        }
        export const PerCore4: PerCore4;
        /**
         * Utilize 3 worker threads per available physical CPU core.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/ThreadPoolConfig#PerCore3)
         */
        export interface PerCore3 extends globalThis.EnumItem {
            Name: "PerCore3";
            Value: 103;
            EnumType: typeof globalThis.Enum.ThreadPoolConfig;
        }
        export const PerCore3: PerCore3;
        /**
         * Utilize 2 worker threads per available physical CPU core.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/ThreadPoolConfig#PerCore2)
         */
        export interface PerCore2 extends globalThis.EnumItem {
            Name: "PerCore2";
            Value: 102;
            EnumType: typeof globalThis.Enum.ThreadPoolConfig;
        }
        export const PerCore2: PerCore2;
        /**
         * Utilize 1 worker thread per available physical CPU core.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/ThreadPoolConfig#PerCore1)
         */
        export interface PerCore1 extends globalThis.EnumItem {
            Name: "PerCore1";
            Value: 101;
            EnumType: typeof globalThis.Enum.ThreadPoolConfig;
        }
        export const PerCore1: PerCore1;
        /**
         * Let task scheduler make a decision internally.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/ThreadPoolConfig#Auto)
         */
        export interface Auto extends globalThis.EnumItem {
            Name: "Auto";
            Value: 0;
            EnumType: typeof globalThis.Enum.ThreadPoolConfig;
        }
        export const Auto: Auto;
        /**
         * @deprecated renamed to Auto
         */
        export const PartialThread: Auto;
        /**
         * Utilize 1 worker thread, ignore the physical CPU core count.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/ThreadPoolConfig#Threads1)
         */
        export interface Threads1 extends globalThis.EnumItem {
            Name: "Threads1";
            Value: 1;
            EnumType: typeof globalThis.Enum.ThreadPoolConfig;
        }
        export const Threads1: Threads1;
        /**
         * Utilize 2 worker threads, ignore the physical CPU core count.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/ThreadPoolConfig#Threads2)
         */
        export interface Threads2 extends globalThis.EnumItem {
            Name: "Threads2";
            Value: 2;
            EnumType: typeof globalThis.Enum.ThreadPoolConfig;
        }
        export const Threads2: Threads2;
        /**
         * Utilize 3 worker threads, ignore the physical CPU core count.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/ThreadPoolConfig#Threads3)
         */
        export interface Threads3 extends globalThis.EnumItem {
            Name: "Threads3";
            Value: 3;
            EnumType: typeof globalThis.Enum.ThreadPoolConfig;
        }
        export const Threads3: Threads3;
        /**
         * Utilize 4 worker threads, ignore the physical CPU core count.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/ThreadPoolConfig#Threads4)
         */
        export interface Threads4 extends globalThis.EnumItem {
            Name: "Threads4";
            Value: 4;
            EnumType: typeof globalThis.Enum.ThreadPoolConfig;
        }
        export const Threads4: Threads4;
        /**
         * Utilize 8 worker threads, ignore the physical CPU core count.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/ThreadPoolConfig#Threads8)
         */
        export interface Threads8 extends globalThis.EnumItem {
            Name: "Threads8";
            Value: 8;
            EnumType: typeof globalThis.Enum.ThreadPoolConfig;
        }
        export const Threads8: Threads8;
        /**
         * Utilize 16 worker threads, ignore the physical CPU core count.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/ThreadPoolConfig#Threads16)
         */
        export interface Threads16 extends globalThis.EnumItem {
            Name: "Threads16";
            Value: 16;
            EnumType: typeof globalThis.Enum.ThreadPoolConfig;
        }
        export const Threads16: Threads16;
        export function GetEnumItems(this: globalThis.Enum): Array<globalThis.Enum.ThreadPoolConfig>;
        export function FromName(this: globalThis.Enum, name: string): globalThis.Enum.ThreadPoolConfig | undefined;
        export function FromValue(this: globalThis.Enum, value: number): globalThis.Enum.ThreadPoolConfig | undefined;
    }
    export type ThreadPoolConfig = ThreadPoolConfig.PerCore4 | ThreadPoolConfig.PerCore3 | ThreadPoolConfig.PerCore2 | ThreadPoolConfig.PerCore1 | ThreadPoolConfig.Auto | ThreadPoolConfig.Threads1 | ThreadPoolConfig.Threads2 | ThreadPoolConfig.Threads3 | ThreadPoolConfig.Threads4 | ThreadPoolConfig.Threads8 | ThreadPoolConfig.Threads16;
    /**
     * Amount of throttling to apply.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/ThrottlingPriority)
     */
    export namespace ThrottlingPriority {
        /**
         * No throttling, absolutely no exceptions.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/ThrottlingPriority#Extreme)
         */
        export interface Extreme extends globalThis.EnumItem {
            Name: "Extreme";
            Value: 2;
            EnumType: typeof globalThis.Enum.ThrottlingPriority;
        }
        export const Extreme: Extreme;
        /**
         * Less throttling if on the server.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/ThrottlingPriority#ElevatedOnServer)
         */
        export interface ElevatedOnServer extends globalThis.EnumItem {
            Name: "ElevatedOnServer";
            Value: 1;
            EnumType: typeof globalThis.Enum.ThrottlingPriority;
        }
        export const ElevatedOnServer: ElevatedOnServer;
        /**
         * Standard throttling.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/ThrottlingPriority#Default)
         */
        export interface Default extends globalThis.EnumItem {
            Name: "Default";
            Value: 0;
            EnumType: typeof globalThis.Enum.ThrottlingPriority;
        }
        export const Default: Default;
        export function GetEnumItems(this: globalThis.Enum): Array<globalThis.Enum.ThrottlingPriority>;
        export function FromName(this: globalThis.Enum, name: string): globalThis.Enum.ThrottlingPriority | undefined;
        export function FromValue(this: globalThis.Enum, value: number): globalThis.Enum.ThrottlingPriority | undefined;
    }
    export type ThrottlingPriority = ThrottlingPriority.Extreme | ThrottlingPriority.ElevatedOnServer | ThrottlingPriority.Default;
    /**
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/ThumbnailSize)
     */
    export namespace ThumbnailSize {
        /**
         * Thumbnail resolution is 48 pixels x 48 pixels.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/ThumbnailSize#Size48x48)
         */
        export interface Size48x48 extends globalThis.EnumItem {
            Name: "Size48x48";
            Value: 0;
            EnumType: typeof globalThis.Enum.ThumbnailSize;
        }
        export const Size48x48: Size48x48;
        /**
         * Thumbnail resolution is 180 pixels x 180 pixels.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/ThumbnailSize#Size180x180)
         */
        export interface Size180x180 extends globalThis.EnumItem {
            Name: "Size180x180";
            Value: 1;
            EnumType: typeof globalThis.Enum.ThumbnailSize;
        }
        export const Size180x180: Size180x180;
        /**
         * Thumbnail resolution is 420 pixels x 420 pixels.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/ThumbnailSize#Size420x420)
         */
        export interface Size420x420 extends globalThis.EnumItem {
            Name: "Size420x420";
            Value: 2;
            EnumType: typeof globalThis.Enum.ThumbnailSize;
        }
        export const Size420x420: Size420x420;
        /**
         * Thumbnail resolution is 60 pixels x 60 pixels.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/ThumbnailSize#Size60x60)
         */
        export interface Size60x60 extends globalThis.EnumItem {
            Name: "Size60x60";
            Value: 3;
            EnumType: typeof globalThis.Enum.ThumbnailSize;
        }
        export const Size60x60: Size60x60;
        /**
         * Thumbnail resolution is 100 pixels x 100 pixels.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/ThumbnailSize#Size100x100)
         */
        export interface Size100x100 extends globalThis.EnumItem {
            Name: "Size100x100";
            Value: 4;
            EnumType: typeof globalThis.Enum.ThumbnailSize;
        }
        export const Size100x100: Size100x100;
        /**
         * Thumbnail resolution is 150 pixels x 150 pixels.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/ThumbnailSize#Size150x150)
         */
        export interface Size150x150 extends globalThis.EnumItem {
            Name: "Size150x150";
            Value: 5;
            EnumType: typeof globalThis.Enum.ThumbnailSize;
        }
        export const Size150x150: Size150x150;
        /**
         * Thumbnail resolution is 352 pixels x 352 pixels.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/ThumbnailSize#Size352x352)
         */
        export interface Size352x352 extends globalThis.EnumItem {
            Name: "Size352x352";
            Value: 6;
            EnumType: typeof globalThis.Enum.ThumbnailSize;
        }
        export const Size352x352: Size352x352;
        export function GetEnumItems(this: globalThis.Enum): Array<globalThis.Enum.ThumbnailSize>;
        export function FromName(this: globalThis.Enum, name: string): globalThis.Enum.ThumbnailSize | undefined;
        export function FromValue(this: globalThis.Enum, value: number): globalThis.Enum.ThumbnailSize | undefined;
    }
    export type ThumbnailSize = ThumbnailSize.Size48x48 | ThumbnailSize.Size180x180 | ThumbnailSize.Size420x420 | ThumbnailSize.Size60x60 | ThumbnailSize.Size100x100 | ThumbnailSize.Size150x150 | ThumbnailSize.Size352x352;
    /**
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/ThumbnailType)
     */
    export namespace ThumbnailType {
        /**
         * The returned thumbnail shows just the headshot (head and up) of the user's avatar.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/ThumbnailType#HeadShot)
         */
        export interface HeadShot extends globalThis.EnumItem {
            Name: "HeadShot";
            Value: 0;
            EnumType: typeof globalThis.Enum.ThumbnailType;
        }
        export const HeadShot: HeadShot;
        /**
         * The returned thumbnail shows the bust (chest up) of the user's avatar.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/ThumbnailType#AvatarBust)
         */
        export interface AvatarBust extends globalThis.EnumItem {
            Name: "AvatarBust";
            Value: 1;
            EnumType: typeof globalThis.Enum.ThumbnailType;
        }
        export const AvatarBust: AvatarBust;
        /**
         * The returned thumbnail shows the entire body of the user's avatar.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/ThumbnailType#AvatarThumbnail)
         */
        export interface AvatarThumbnail extends globalThis.EnumItem {
            Name: "AvatarThumbnail";
            Value: 2;
            EnumType: typeof globalThis.Enum.ThumbnailType;
        }
        export const AvatarThumbnail: AvatarThumbnail;
        export function GetEnumItems(this: globalThis.Enum): Array<globalThis.Enum.ThumbnailType>;
        export function FromName(this: globalThis.Enum, name: string): globalThis.Enum.ThumbnailType | undefined;
        export function FromValue(this: globalThis.Enum, value: number): globalThis.Enum.ThumbnailType | undefined;
    }
    export type ThumbnailType = ThumbnailType.HeadShot | ThumbnailType.AvatarBust | ThumbnailType.AvatarThumbnail;
    /**
     * Controls the precision of a timer.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/TickCountSampleMethod)
     */
    export namespace TickCountSampleMethod {
        /**
         * Compute time using a faster, but less precise method.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/TickCountSampleMethod#Fast)
         */
        export interface Fast extends globalThis.EnumItem {
            Name: "Fast";
            Value: 0;
            EnumType: typeof globalThis.Enum.TickCountSampleMethod;
        }
        export const Fast: Fast;
        /**
         * Dynamically decide between using ''Fast'' and ''Precise'' depending on performance.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/TickCountSampleMethod#Benchmark)
         */
        export interface Benchmark extends globalThis.EnumItem {
            Name: "Benchmark";
            Value: 1;
            EnumType: typeof globalThis.Enum.TickCountSampleMethod;
        }
        export const Benchmark: Benchmark;
        /**
         * Compute time using a precise method.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/TickCountSampleMethod#Precise)
         */
        export interface Precise extends globalThis.EnumItem {
            Name: "Precise";
            Value: 2;
            EnumType: typeof globalThis.Enum.TickCountSampleMethod;
        }
        export const Precise: Precise;
        export function GetEnumItems(this: globalThis.Enum): Array<globalThis.Enum.TickCountSampleMethod>;
        export function FromName(this: globalThis.Enum, name: string): globalThis.Enum.TickCountSampleMethod | undefined;
        export function FromValue(this: globalThis.Enum, value: number): globalThis.Enum.TickCountSampleMethod | undefined;
    }
    export type TickCountSampleMethod = TickCountSampleMethod.Fast | TickCountSampleMethod.Benchmark | TickCountSampleMethod.Precise;
    /**
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/TonemapperPreset)
     */
    export namespace TonemapperPreset {
        /**
         * Sets the tone mapper to use the post‑2019 Roblox appearance which provides vivid colors and high contrasts.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/TonemapperPreset#Default)
         */
        export interface Default extends globalThis.EnumItem {
            Name: "Default";
            Value: 0;
            EnumType: typeof globalThis.Enum.TonemapperPreset;
        }
        export const Default: Default;
        /**
         * Sets the tone mapper to imitate the pre‑2019 Roblox appearance. Colors look less saturated and there is less contrast between them.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/TonemapperPreset#Retro)
         */
        export interface Retro extends globalThis.EnumItem {
            Name: "Retro";
            Value: 1;
            EnumType: typeof globalThis.Enum.TonemapperPreset;
        }
        export const Retro: Retro;
        export function GetEnumItems(this: globalThis.Enum): Array<globalThis.Enum.TonemapperPreset>;
        export function FromName(this: globalThis.Enum, name: string): globalThis.Enum.TonemapperPreset | undefined;
        export function FromValue(this: globalThis.Enum, value: number): globalThis.Enum.TonemapperPreset | undefined;
    }
    export type TonemapperPreset = TonemapperPreset.Default | TonemapperPreset.Retro;
    /**
     * Sets where the object is on the side of its parent.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/TopBottom)
     */
    export namespace TopBottom {
        /**
         * The object is above its parent.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/TopBottom#Top)
         */
        export interface Top extends globalThis.EnumItem {
            Name: "Top";
            Value: 0;
            EnumType: typeof globalThis.Enum.TopBottom;
        }
        export const Top: Top;
        /**
         * The object is centered around the center of its parent.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/TopBottom#Center)
         */
        export interface Center extends globalThis.EnumItem {
            Name: "Center";
            Value: 1;
            EnumType: typeof globalThis.Enum.TopBottom;
        }
        export const Center: Center;
        /**
         * The object is below its parent.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/TopBottom#Bottom)
         */
        export interface Bottom extends globalThis.EnumItem {
            Name: "Bottom";
            Value: 2;
            EnumType: typeof globalThis.Enum.TopBottom;
        }
        export const Bottom: Bottom;
        export function GetEnumItems(this: globalThis.Enum): Array<globalThis.Enum.TopBottom>;
        export function FromName(this: globalThis.Enum, name: string): globalThis.Enum.TopBottom | undefined;
        export function FromValue(this: globalThis.Enum, value: number): globalThis.Enum.TopBottom | undefined;
    }
    export type TopBottom = TopBottom.Top | TopBottom.Center | TopBottom.Bottom;
    /**
     * Changes the touch camera movement mode currently in-use by the client using a TouchEnabled device.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/TouchCameraMovementMode)
     */
    export namespace TouchCameraMovementMode {
        /**
         * Default mode used by Roblox core scripts.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/TouchCameraMovementMode#Default)
         */
        export interface Default extends globalThis.EnumItem {
            Name: "Default";
            Value: 0;
            EnumType: typeof globalThis.Enum.TouchCameraMovementMode;
        }
        export const Default: Default;
        /**
         * Default mode used by Roblox core scripts.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/TouchCameraMovementMode#Classic)
         */
        export interface Classic extends globalThis.EnumItem {
            Name: "Classic";
            Value: 1;
            EnumType: typeof globalThis.Enum.TouchCameraMovementMode;
        }
        export const Classic: Classic;
        /**
         * Camera moves with the subject and rotates to keep the subject in the center.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/TouchCameraMovementMode#Follow)
         */
        export interface Follow extends globalThis.EnumItem {
            Name: "Follow";
            Value: 2;
            EnumType: typeof globalThis.Enum.TouchCameraMovementMode;
        }
        export const Follow: Follow;
        /**
         * The camera locks at a certain angle. Once it's set, players can rotate the camera, but it will always maintain a consistent angle to the ground.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/TouchCameraMovementMode#Orbital)
         */
        export interface Orbital extends globalThis.EnumItem {
            Name: "Orbital";
            Value: 3;
            EnumType: typeof globalThis.Enum.TouchCameraMovementMode;
        }
        export const Orbital: Orbital;
        export function GetEnumItems(this: globalThis.Enum): Array<globalThis.Enum.TouchCameraMovementMode>;
        export function FromName(this: globalThis.Enum, name: string): globalThis.Enum.TouchCameraMovementMode | undefined;
        export function FromValue(this: globalThis.Enum, value: number): globalThis.Enum.TouchCameraMovementMode | undefined;
    }
    export type TouchCameraMovementMode = TouchCameraMovementMode.Default | TouchCameraMovementMode.Classic | TouchCameraMovementMode.Follow | TouchCameraMovementMode.Orbital;
    /**
     * The movement mode used by a client with a TouchEnabled device.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/TouchMovementMode)
     */
    export namespace TouchMovementMode {
        /**
         * The default movement controller.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/TouchMovementMode#Default)
         */
        export interface Default extends globalThis.EnumItem {
            Name: "Default";
            Value: 0;
            EnumType: typeof globalThis.Enum.TouchMovementMode;
        }
        export const Default: Default;
        /**
         * Change the movement controller to the classic thumbstick.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/TouchMovementMode#Thumbstick)
         */
        export interface Thumbstick extends globalThis.EnumItem {
            Name: "Thumbstick";
            Value: 1;
            EnumType: typeof globalThis.Enum.TouchMovementMode;
        }
        export const Thumbstick: Thumbstick;
        /**
         * Change the movement controller to the DPad.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/TouchMovementMode#DPad)
         */
        export interface DPad extends globalThis.EnumItem {
            Name: "DPad";
            Value: 2;
            EnumType: typeof globalThis.Enum.TouchMovementMode;
        }
        export const DPad: DPad;
        /**
         * Change the movement controller to the thumbpad.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/TouchMovementMode#Thumbpad)
         */
        export interface Thumbpad extends globalThis.EnumItem {
            Name: "Thumbpad";
            Value: 3;
            EnumType: typeof globalThis.Enum.TouchMovementMode;
        }
        export const Thumbpad: Thumbpad;
        /**
         * Change the movement controller to click to move.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/TouchMovementMode#ClickToMove)
         */
        export interface ClickToMove extends globalThis.EnumItem {
            Name: "ClickToMove";
            Value: 4;
            EnumType: typeof globalThis.Enum.TouchMovementMode;
        }
        export const ClickToMove: ClickToMove;
        /**
         * Change the movement controller to the dynamic thumbstick.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/TouchMovementMode#DynamicThumbstick)
         */
        export interface DynamicThumbstick extends globalThis.EnumItem {
            Name: "DynamicThumbstick";
            Value: 5;
            EnumType: typeof globalThis.Enum.TouchMovementMode;
        }
        export const DynamicThumbstick: DynamicThumbstick;
        export function GetEnumItems(this: globalThis.Enum): Array<globalThis.Enum.TouchMovementMode>;
        export function FromName(this: globalThis.Enum, name: string): globalThis.Enum.TouchMovementMode | undefined;
        export function FromValue(this: globalThis.Enum, value: number): globalThis.Enum.TouchMovementMode | undefined;
    }
    export type TouchMovementMode = TouchMovementMode.Default | TouchMovementMode.Thumbstick | TouchMovementMode.DPad | TouchMovementMode.Thumbpad | TouchMovementMode.ClickToMove | TouchMovementMode.DynamicThumbstick;
    /**
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/TrackerError)
     */
    export namespace TrackerError {
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/TrackerError#Ok)
         */
        export interface Ok extends globalThis.EnumItem {
            Name: "Ok";
            Value: 0;
            EnumType: typeof globalThis.Enum.TrackerError;
        }
        export const Ok: Ok;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/TrackerError#NoService)
         */
        export interface NoService extends globalThis.EnumItem {
            Name: "NoService";
            Value: 1;
            EnumType: typeof globalThis.Enum.TrackerError;
        }
        export const NoService: NoService;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/TrackerError#InitFailed)
         */
        export interface InitFailed extends globalThis.EnumItem {
            Name: "InitFailed";
            Value: 2;
            EnumType: typeof globalThis.Enum.TrackerError;
        }
        export const InitFailed: InitFailed;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/TrackerError#NoVideo)
         */
        export interface NoVideo extends globalThis.EnumItem {
            Name: "NoVideo";
            Value: 3;
            EnumType: typeof globalThis.Enum.TrackerError;
        }
        export const NoVideo: NoVideo;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/TrackerError#VideoError)
         */
        export interface VideoError extends globalThis.EnumItem {
            Name: "VideoError";
            Value: 4;
            EnumType: typeof globalThis.Enum.TrackerError;
        }
        export const VideoError: VideoError;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/TrackerError#VideoNoPermission)
         */
        export interface VideoNoPermission extends globalThis.EnumItem {
            Name: "VideoNoPermission";
            Value: 5;
            EnumType: typeof globalThis.Enum.TrackerError;
        }
        export const VideoNoPermission: VideoNoPermission;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/TrackerError#VideoUnsupported)
         */
        export interface VideoUnsupported extends globalThis.EnumItem {
            Name: "VideoUnsupported";
            Value: 6;
            EnumType: typeof globalThis.Enum.TrackerError;
        }
        export const VideoUnsupported: VideoUnsupported;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/TrackerError#NoAudio)
         */
        export interface NoAudio extends globalThis.EnumItem {
            Name: "NoAudio";
            Value: 7;
            EnumType: typeof globalThis.Enum.TrackerError;
        }
        export const NoAudio: NoAudio;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/TrackerError#AudioError)
         */
        export interface AudioError extends globalThis.EnumItem {
            Name: "AudioError";
            Value: 8;
            EnumType: typeof globalThis.Enum.TrackerError;
        }
        export const AudioError: AudioError;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/TrackerError#AudioNoPermission)
         */
        export interface AudioNoPermission extends globalThis.EnumItem {
            Name: "AudioNoPermission";
            Value: 9;
            EnumType: typeof globalThis.Enum.TrackerError;
        }
        export const AudioNoPermission: AudioNoPermission;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/TrackerError#UnsupportedDevice)
         */
        export interface UnsupportedDevice extends globalThis.EnumItem {
            Name: "UnsupportedDevice";
            Value: 10;
            EnumType: typeof globalThis.Enum.TrackerError;
        }
        export const UnsupportedDevice: UnsupportedDevice;
        export function GetEnumItems(this: globalThis.Enum): Array<globalThis.Enum.TrackerError>;
        export function FromName(this: globalThis.Enum, name: string): globalThis.Enum.TrackerError | undefined;
        export function FromValue(this: globalThis.Enum, value: number): globalThis.Enum.TrackerError | undefined;
    }
    export type TrackerError = TrackerError.Ok | TrackerError.NoService | TrackerError.InitFailed | TrackerError.NoVideo | TrackerError.VideoError | TrackerError.VideoNoPermission | TrackerError.VideoUnsupported | TrackerError.NoAudio | TrackerError.AudioError | TrackerError.AudioNoPermission | TrackerError.UnsupportedDevice;
    /**
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/TrackerExtrapolationFlagMode)
     */
    export namespace TrackerExtrapolationFlagMode {
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/TrackerExtrapolationFlagMode#Auto)
         */
        export interface Auto extends globalThis.EnumItem {
            Name: "Auto";
            Value: 3;
            EnumType: typeof globalThis.Enum.TrackerExtrapolationFlagMode;
        }
        export const Auto: Auto;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/TrackerExtrapolationFlagMode#ForceDisabled)
         */
        export interface ForceDisabled extends globalThis.EnumItem {
            Name: "ForceDisabled";
            Value: 0;
            EnumType: typeof globalThis.Enum.TrackerExtrapolationFlagMode;
        }
        export const ForceDisabled: ForceDisabled;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/TrackerExtrapolationFlagMode#ExtrapolateFacsAndPose)
         */
        export interface ExtrapolateFacsAndPose extends globalThis.EnumItem {
            Name: "ExtrapolateFacsAndPose";
            Value: 1;
            EnumType: typeof globalThis.Enum.TrackerExtrapolationFlagMode;
        }
        export const ExtrapolateFacsAndPose: ExtrapolateFacsAndPose;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/TrackerExtrapolationFlagMode#ExtrapolateFacsOnly)
         */
        export interface ExtrapolateFacsOnly extends globalThis.EnumItem {
            Name: "ExtrapolateFacsOnly";
            Value: 2;
            EnumType: typeof globalThis.Enum.TrackerExtrapolationFlagMode;
        }
        export const ExtrapolateFacsOnly: ExtrapolateFacsOnly;
        export function GetEnumItems(this: globalThis.Enum): Array<globalThis.Enum.TrackerExtrapolationFlagMode>;
        export function FromName(this: globalThis.Enum, name: string): globalThis.Enum.TrackerExtrapolationFlagMode | undefined;
        export function FromValue(this: globalThis.Enum, value: number): globalThis.Enum.TrackerExtrapolationFlagMode | undefined;
    }
    export type TrackerExtrapolationFlagMode = TrackerExtrapolationFlagMode.Auto | TrackerExtrapolationFlagMode.ForceDisabled | TrackerExtrapolationFlagMode.ExtrapolateFacsAndPose | TrackerExtrapolationFlagMode.ExtrapolateFacsOnly;
    /**
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/TrackerFaceTrackingStatus)
     */
    export namespace TrackerFaceTrackingStatus {
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/TrackerFaceTrackingStatus#FaceTrackingSuccess)
         */
        export interface FaceTrackingSuccess extends globalThis.EnumItem {
            Name: "FaceTrackingSuccess";
            Value: 0;
            EnumType: typeof globalThis.Enum.TrackerFaceTrackingStatus;
        }
        export const FaceTrackingSuccess: FaceTrackingSuccess;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/TrackerFaceTrackingStatus#FaceTrackingNoFaceFound)
         */
        export interface FaceTrackingNoFaceFound extends globalThis.EnumItem {
            Name: "FaceTrackingNoFaceFound";
            Value: 1;
            EnumType: typeof globalThis.Enum.TrackerFaceTrackingStatus;
        }
        export const FaceTrackingNoFaceFound: FaceTrackingNoFaceFound;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/TrackerFaceTrackingStatus#FaceTrackingUnknown)
         */
        export interface FaceTrackingUnknown extends globalThis.EnumItem {
            Name: "FaceTrackingUnknown";
            Value: 2;
            EnumType: typeof globalThis.Enum.TrackerFaceTrackingStatus;
        }
        export const FaceTrackingUnknown: FaceTrackingUnknown;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/TrackerFaceTrackingStatus#FaceTrackingLost)
         */
        export interface FaceTrackingLost extends globalThis.EnumItem {
            Name: "FaceTrackingLost";
            Value: 3;
            EnumType: typeof globalThis.Enum.TrackerFaceTrackingStatus;
        }
        export const FaceTrackingLost: FaceTrackingLost;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/TrackerFaceTrackingStatus#FaceTrackingHasTrackingError)
         */
        export interface FaceTrackingHasTrackingError extends globalThis.EnumItem {
            Name: "FaceTrackingHasTrackingError";
            Value: 4;
            EnumType: typeof globalThis.Enum.TrackerFaceTrackingStatus;
        }
        export const FaceTrackingHasTrackingError: FaceTrackingHasTrackingError;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/TrackerFaceTrackingStatus#FaceTrackingIsOccluded)
         */
        export interface FaceTrackingIsOccluded extends globalThis.EnumItem {
            Name: "FaceTrackingIsOccluded";
            Value: 5;
            EnumType: typeof globalThis.Enum.TrackerFaceTrackingStatus;
        }
        export const FaceTrackingIsOccluded: FaceTrackingIsOccluded;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/TrackerFaceTrackingStatus#FaceTrackingUninitialized)
         */
        export interface FaceTrackingUninitialized extends globalThis.EnumItem {
            Name: "FaceTrackingUninitialized";
            Value: 6;
            EnumType: typeof globalThis.Enum.TrackerFaceTrackingStatus;
        }
        export const FaceTrackingUninitialized: FaceTrackingUninitialized;
        export function GetEnumItems(this: globalThis.Enum): Array<globalThis.Enum.TrackerFaceTrackingStatus>;
        export function FromName(this: globalThis.Enum, name: string): globalThis.Enum.TrackerFaceTrackingStatus | undefined;
        export function FromValue(this: globalThis.Enum, value: number): globalThis.Enum.TrackerFaceTrackingStatus | undefined;
    }
    export type TrackerFaceTrackingStatus = TrackerFaceTrackingStatus.FaceTrackingSuccess | TrackerFaceTrackingStatus.FaceTrackingNoFaceFound | TrackerFaceTrackingStatus.FaceTrackingUnknown | TrackerFaceTrackingStatus.FaceTrackingLost | TrackerFaceTrackingStatus.FaceTrackingHasTrackingError | TrackerFaceTrackingStatus.FaceTrackingIsOccluded | TrackerFaceTrackingStatus.FaceTrackingUninitialized;
    /**
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/TrackerLodFlagMode)
     */
    export namespace TrackerLodFlagMode {
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/TrackerLodFlagMode#Auto)
         */
        export interface Auto extends globalThis.EnumItem {
            Name: "Auto";
            Value: 2;
            EnumType: typeof globalThis.Enum.TrackerLodFlagMode;
        }
        export const Auto: Auto;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/TrackerLodFlagMode#ForceFalse)
         */
        export interface ForceFalse extends globalThis.EnumItem {
            Name: "ForceFalse";
            Value: 0;
            EnumType: typeof globalThis.Enum.TrackerLodFlagMode;
        }
        export const ForceFalse: ForceFalse;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/TrackerLodFlagMode#ForceTrue)
         */
        export interface ForceTrue extends globalThis.EnumItem {
            Name: "ForceTrue";
            Value: 1;
            EnumType: typeof globalThis.Enum.TrackerLodFlagMode;
        }
        export const ForceTrue: ForceTrue;
        export function GetEnumItems(this: globalThis.Enum): Array<globalThis.Enum.TrackerLodFlagMode>;
        export function FromName(this: globalThis.Enum, name: string): globalThis.Enum.TrackerLodFlagMode | undefined;
        export function FromValue(this: globalThis.Enum, value: number): globalThis.Enum.TrackerLodFlagMode | undefined;
    }
    export type TrackerLodFlagMode = TrackerLodFlagMode.Auto | TrackerLodFlagMode.ForceFalse | TrackerLodFlagMode.ForceTrue;
    /**
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/TrackerLodValueMode)
     */
    export namespace TrackerLodValueMode {
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/TrackerLodValueMode#Auto)
         */
        export interface Auto extends globalThis.EnumItem {
            Name: "Auto";
            Value: 2;
            EnumType: typeof globalThis.Enum.TrackerLodValueMode;
        }
        export const Auto: Auto;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/TrackerLodValueMode#Force0)
         */
        export interface Force0 extends globalThis.EnumItem {
            Name: "Force0";
            Value: 0;
            EnumType: typeof globalThis.Enum.TrackerLodValueMode;
        }
        export const Force0: Force0;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/TrackerLodValueMode#Force1)
         */
        export interface Force1 extends globalThis.EnumItem {
            Name: "Force1";
            Value: 1;
            EnumType: typeof globalThis.Enum.TrackerLodValueMode;
        }
        export const Force1: Force1;
        export function GetEnumItems(this: globalThis.Enum): Array<globalThis.Enum.TrackerLodValueMode>;
        export function FromName(this: globalThis.Enum, name: string): globalThis.Enum.TrackerLodValueMode | undefined;
        export function FromValue(this: globalThis.Enum, value: number): globalThis.Enum.TrackerLodValueMode | undefined;
    }
    export type TrackerLodValueMode = TrackerLodValueMode.Auto | TrackerLodValueMode.Force0 | TrackerLodValueMode.Force1;
    /**
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/TrackerMode)
     */
    export namespace TrackerMode {
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/TrackerMode#None)
         */
        export interface None extends globalThis.EnumItem {
            Name: "None";
            Value: 0;
            EnumType: typeof globalThis.Enum.TrackerMode;
        }
        export const None: None;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/TrackerMode#Audio)
         */
        export interface Audio extends globalThis.EnumItem {
            Name: "Audio";
            Value: 1;
            EnumType: typeof globalThis.Enum.TrackerMode;
        }
        export const Audio: Audio;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/TrackerMode#Video)
         */
        export interface Video extends globalThis.EnumItem {
            Name: "Video";
            Value: 2;
            EnumType: typeof globalThis.Enum.TrackerMode;
        }
        export const Video: Video;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/TrackerMode#AudioVideo)
         */
        export interface AudioVideo extends globalThis.EnumItem {
            Name: "AudioVideo";
            Value: 3;
            EnumType: typeof globalThis.Enum.TrackerMode;
        }
        export const AudioVideo: AudioVideo;
        export function GetEnumItems(this: globalThis.Enum): Array<globalThis.Enum.TrackerMode>;
        export function FromName(this: globalThis.Enum, name: string): globalThis.Enum.TrackerMode | undefined;
        export function FromValue(this: globalThis.Enum, value: number): globalThis.Enum.TrackerMode | undefined;
    }
    export type TrackerMode = TrackerMode.None | TrackerMode.Audio | TrackerMode.Video | TrackerMode.AudioVideo;
    /**
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/TrackerPromptEvent)
     */
    export namespace TrackerPromptEvent {
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/TrackerPromptEvent#LODCameraRecommendDisable)
         */
        export interface LODCameraRecommendDisable extends globalThis.EnumItem {
            Name: "LODCameraRecommendDisable";
            Value: 0;
            EnumType: typeof globalThis.Enum.TrackerPromptEvent;
        }
        export const LODCameraRecommendDisable: LODCameraRecommendDisable;
        export function GetEnumItems(this: globalThis.Enum): Array<globalThis.Enum.TrackerPromptEvent>;
        export function FromName(this: globalThis.Enum, name: string): globalThis.Enum.TrackerPromptEvent | undefined;
        export function FromValue(this: globalThis.Enum, value: number): globalThis.Enum.TrackerPromptEvent | undefined;
    }
    export type TrackerPromptEvent = TrackerPromptEvent.LODCameraRecommendDisable;
    /**
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/TrackerType)
     */
    export namespace TrackerType {
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/TrackerType#None)
         */
        export interface None extends globalThis.EnumItem {
            Name: "None";
            Value: 0;
            EnumType: typeof globalThis.Enum.TrackerType;
        }
        export const None: None;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/TrackerType#Face)
         */
        export interface Face extends globalThis.EnumItem {
            Name: "Face";
            Value: 1;
            EnumType: typeof globalThis.Enum.TrackerType;
        }
        export const Face: Face;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/TrackerType#UpperBody)
         */
        export interface UpperBody extends globalThis.EnumItem {
            Name: "UpperBody";
            Value: 2;
            EnumType: typeof globalThis.Enum.TrackerType;
        }
        export const UpperBody: UpperBody;
        export function GetEnumItems(this: globalThis.Enum): Array<globalThis.Enum.TrackerType>;
        export function FromName(this: globalThis.Enum, name: string): globalThis.Enum.TrackerType | undefined;
        export function FromValue(this: globalThis.Enum, value: number): globalThis.Enum.TrackerType | undefined;
    }
    export type TrackerType = TrackerType.None | TrackerType.Face | TrackerType.UpperBody;
    /**
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/TriStateBoolean)
     */
    export namespace TriStateBoolean {
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/TriStateBoolean#False)
         */
        export interface False extends globalThis.EnumItem {
            Name: "False";
            Value: 2;
            EnumType: typeof globalThis.Enum.TriStateBoolean;
        }
        export const False: False;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/TriStateBoolean#True)
         */
        export interface True extends globalThis.EnumItem {
            Name: "True";
            Value: 1;
            EnumType: typeof globalThis.Enum.TriStateBoolean;
        }
        export const True: True;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/TriStateBoolean#Unknown)
         */
        export interface Unknown extends globalThis.EnumItem {
            Name: "Unknown";
            Value: 0;
            EnumType: typeof globalThis.Enum.TriStateBoolean;
        }
        export const Unknown: Unknown;
        export function GetEnumItems(this: globalThis.Enum): Array<globalThis.Enum.TriStateBoolean>;
        export function FromName(this: globalThis.Enum, name: string): globalThis.Enum.TriStateBoolean | undefined;
        export function FromValue(this: globalThis.Enum, value: number): globalThis.Enum.TriStateBoolean | undefined;
    }
    export type TriStateBoolean = TriStateBoolean.False | TriStateBoolean.True | TriStateBoolean.Unknown;
    /**
     * The completion status of a `GuiObject` tween function.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/TweenStatus)
     */
    export namespace TweenStatus {
        /**
         * The tween was cancelled before completion.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/TweenStatus#Canceled)
         */
        export interface Canceled extends globalThis.EnumItem {
            Name: "Canceled";
            Value: 0;
            EnumType: typeof globalThis.Enum.TweenStatus;
        }
        export const Canceled: Canceled;
        /**
         * The Tween has successfully completed.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/TweenStatus#Completed)
         */
        export interface Completed extends globalThis.EnumItem {
            Name: "Completed";
            Value: 1;
            EnumType: typeof globalThis.Enum.TweenStatus;
        }
        export const Completed: Completed;
        export function GetEnumItems(this: globalThis.Enum): Array<globalThis.Enum.TweenStatus>;
        export function FromName(this: globalThis.Enum, name: string): globalThis.Enum.TweenStatus | undefined;
        export function FromValue(this: globalThis.Enum, value: number): globalThis.Enum.TweenStatus | undefined;
    }
    export type TweenStatus = TweenStatus.Canceled | TweenStatus.Completed;
    /**
     * Used with `UIDragDetector` to determine bounding behavior of the dragged UI object when `UIDragDetector.BoundingUI` is set.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/UIDragDetectorBoundingBehavior)
     */
    export namespace UIDragDetectorBoundingBehavior {
        /**
         * Mimics **EntireObject** behavior for a UI object that's entirely contained by the `BoundingUI`, or else **HitPoint** for a UI object that's partially outside the `BoundingUI`.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/UIDragDetectorBoundingBehavior#Automatic)
         */
        export interface Automatic extends globalThis.EnumItem {
            Name: "Automatic";
            Value: 0;
            EnumType: typeof globalThis.Enum.UIDragDetectorBoundingBehavior;
        }
        export const Automatic: Automatic;
        /**
         * Bounds the entire dragged UI object within the `BoundingUI`.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/UIDragDetectorBoundingBehavior#EntireObject)
         */
        export interface EntireObject extends globalThis.EnumItem {
            Name: "EntireObject";
            Value: 1;
            EnumType: typeof globalThis.Enum.UIDragDetectorBoundingBehavior;
        }
        export const EntireObject: EntireObject;
        /**
         * Bounds the dragged UI only by the exact hit/grab point and its respective position after translation/rotation.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/UIDragDetectorBoundingBehavior#HitPoint)
         */
        export interface HitPoint extends globalThis.EnumItem {
            Name: "HitPoint";
            Value: 2;
            EnumType: typeof globalThis.Enum.UIDragDetectorBoundingBehavior;
        }
        export const HitPoint: HitPoint;
        export function GetEnumItems(this: globalThis.Enum): Array<globalThis.Enum.UIDragDetectorBoundingBehavior>;
        export function FromName(this: globalThis.Enum, name: string): globalThis.Enum.UIDragDetectorBoundingBehavior | undefined;
        export function FromValue(this: globalThis.Enum, value: number): globalThis.Enum.UIDragDetectorBoundingBehavior | undefined;
    }
    export type UIDragDetectorBoundingBehavior = UIDragDetectorBoundingBehavior.Automatic | UIDragDetectorBoundingBehavior.EntireObject | UIDragDetectorBoundingBehavior.HitPoint;
    /**
     * Used with `DragDetector` to set the paradigm which defines the relativity of inputs/outputs from a custom drag function.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/UIDragDetectorDragRelativity)
     */
    export namespace UIDragDetectorDragRelativity {
        /**
         * Designates the input and return values as the absolute target position/rotation in the space defined by `DragSpace`.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/UIDragDetectorDragRelativity#Absolute)
         */
        export interface Absolute extends globalThis.EnumItem {
            Name: "Absolute";
            Value: 0;
            EnumType: typeof globalThis.Enum.UIDragDetectorDragRelativity;
        }
        export const Absolute: Absolute;
        /**
         * Designates the input and return values as the change from the current position/rotation in the space defined by `DragSpace`.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/UIDragDetectorDragRelativity#Relative)
         */
        export interface Relative extends globalThis.EnumItem {
            Name: "Relative";
            Value: 1;
            EnumType: typeof globalThis.Enum.UIDragDetectorDragRelativity;
        }
        export const Relative: Relative;
        export function GetEnumItems(this: globalThis.Enum): Array<globalThis.Enum.UIDragDetectorDragRelativity>;
        export function FromName(this: globalThis.Enum, name: string): globalThis.Enum.UIDragDetectorDragRelativity | undefined;
        export function FromValue(this: globalThis.Enum, value: number): globalThis.Enum.UIDragDetectorDragRelativity | undefined;
    }
    export type UIDragDetectorDragRelativity = UIDragDetectorDragRelativity.Absolute | UIDragDetectorDragRelativity.Relative;
    /**
     * Used with `DragDetector` to set the paradigm which defines the space of inputs/outputs from a custom drag function.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/UIDragDetectorDragSpace)
     */
    export namespace UIDragDetectorDragSpace {
        /**
         * Designates the input and return values' space as the local space of the detector's parent `GuiObject`.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/UIDragDetectorDragSpace#Parent)
         */
        export interface Parent extends globalThis.EnumItem {
            Name: "Parent";
            Value: 0;
            EnumType: typeof globalThis.Enum.UIDragDetectorDragSpace;
        }
        export const Parent: Parent;
        /**
         * Designates the input and return values' space as that of the `LayerCollector`.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/UIDragDetectorDragSpace#LayerCollector)
         */
        export interface LayerCollector extends globalThis.EnumItem {
            Name: "LayerCollector";
            Value: 1;
            EnumType: typeof globalThis.Enum.UIDragDetectorDragSpace;
        }
        export const LayerCollector: LayerCollector;
        /**
         * Designates the input and return values' space as that of the `ReferenceUIInstance`. For `DragRelativity` and `DragUDim2` purposes, the `(0, 0)` origin is the absolute center position of the `ReferenceUIInstance`. If `ReferenceUIInstance` is not `nil`, this will behave the same as **Parent**.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/UIDragDetectorDragSpace#Reference)
         */
        export interface Reference extends globalThis.EnumItem {
            Name: "Reference";
            Value: 2;
            EnumType: typeof globalThis.Enum.UIDragDetectorDragSpace;
        }
        export const Reference: Reference;
        export function GetEnumItems(this: globalThis.Enum): Array<globalThis.Enum.UIDragDetectorDragSpace>;
        export function FromName(this: globalThis.Enum, name: string): globalThis.Enum.UIDragDetectorDragSpace | undefined;
        export function FromValue(this: globalThis.Enum, value: number): globalThis.Enum.UIDragDetectorDragSpace | undefined;
    }
    export type UIDragDetectorDragSpace = UIDragDetectorDragSpace.Parent | UIDragDetectorDragSpace.LayerCollector | UIDragDetectorDragSpace.Reference;
    /**
     * Used with `UIDragDetector` as the paradigm to generate proposed motion, given a stream of input position vectors.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/UIDragDetectorDragStyle)
     */
    export namespace UIDragDetectorDragStyle {
        /**
         * 2D motion in the plane of the `LayerCollector`.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/UIDragDetectorDragStyle#TranslatePlane)
         */
        export interface TranslatePlane extends globalThis.EnumItem {
            Name: "TranslatePlane";
            Value: 0;
            EnumType: typeof globalThis.Enum.UIDragDetectorDragStyle;
        }
        export const TranslatePlane: TranslatePlane;
        /**
         * 1D motion along the detector's `DragAxis`.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/UIDragDetectorDragStyle#TranslateLine)
         */
        export interface TranslateLine extends globalThis.EnumItem {
            Name: "TranslateLine";
            Value: 1;
            EnumType: typeof globalThis.Enum.UIDragDetectorDragStyle;
        }
        export const TranslateLine: TranslateLine;
        /**
         * By default, rotation about the absolute center position of the detector's parent `GuiObject`. If `ReferenceUIInstance` is set, rotation happens about that instance's absolute center position.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/UIDragDetectorDragStyle#Rotate)
         */
        export interface Rotate extends globalThis.EnumItem {
            Name: "Rotate";
            Value: 2;
            EnumType: typeof globalThis.Enum.UIDragDetectorDragStyle;
        }
        export const Rotate: Rotate;
        /**
         * Calculates desired motion via a custom function provided through `SetDragStyleFunction()`.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/UIDragDetectorDragStyle#Scriptable)
         */
        export interface Scriptable extends globalThis.EnumItem {
            Name: "Scriptable";
            Value: 3;
            EnumType: typeof globalThis.Enum.UIDragDetectorDragStyle;
        }
        export const Scriptable: Scriptable;
        export function GetEnumItems(this: globalThis.Enum): Array<globalThis.Enum.UIDragDetectorDragStyle>;
        export function FromName(this: globalThis.Enum, name: string): globalThis.Enum.UIDragDetectorDragStyle | undefined;
        export function FromValue(this: globalThis.Enum, value: number): globalThis.Enum.UIDragDetectorDragStyle | undefined;
    }
    export type UIDragDetectorDragStyle = UIDragDetectorDragStyle.TranslatePlane | UIDragDetectorDragStyle.TranslateLine | UIDragDetectorDragStyle.Rotate | UIDragDetectorDragStyle.Scriptable;
    /**
     * Describes how the clicked `GuiObject` will be treated once the desired motion has been calculated.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/UIDragDetectorResponseStyle)
     */
    export namespace UIDragDetectorResponseStyle {
        /**
         * Move by the `Offset` values of the detector's parent's `GuiObject.Position` value.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/UIDragDetectorResponseStyle#Offset)
         */
        export interface Offset extends globalThis.EnumItem {
            Name: "Offset";
            Value: 0;
            EnumType: typeof globalThis.Enum.UIDragDetectorResponseStyle;
        }
        export const Offset: Offset;
        /**
         * Move by the `Scale` values of the detector's parent's `GuiObject.Position` value.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/UIDragDetectorResponseStyle#Scale)
         */
        export interface Scale extends globalThis.EnumItem {
            Name: "Scale";
            Value: 1;
            EnumType: typeof globalThis.Enum.UIDragDetectorResponseStyle;
        }
        export const Scale: Scale;
        /**
         * The UI element will not move at all, but the `Offset` values of the detector's `DragUDim2` will still be updated and the detector's events will still fire, allowing you to respond to drag manipulation however you'd like.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/UIDragDetectorResponseStyle#CustomOffset)
         */
        export interface CustomOffset extends globalThis.EnumItem {
            Name: "CustomOffset";
            Value: 2;
            EnumType: typeof globalThis.Enum.UIDragDetectorResponseStyle;
        }
        export const CustomOffset: CustomOffset;
        /**
         * The UI element will not move at all, but the `Scale` values of the detector's `DragUDim2` will still be updated and the detector's events will still fire, allowing you to respond to drag manipulation however you'd like.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/UIDragDetectorResponseStyle#CustomScale)
         */
        export interface CustomScale extends globalThis.EnumItem {
            Name: "CustomScale";
            Value: 3;
            EnumType: typeof globalThis.Enum.UIDragDetectorResponseStyle;
        }
        export const CustomScale: CustomScale;
        export function GetEnumItems(this: globalThis.Enum): Array<globalThis.Enum.UIDragDetectorResponseStyle>;
        export function FromName(this: globalThis.Enum, name: string): globalThis.Enum.UIDragDetectorResponseStyle | undefined;
        export function FromValue(this: globalThis.Enum, value: number): globalThis.Enum.UIDragDetectorResponseStyle | undefined;
    }
    export type UIDragDetectorResponseStyle = UIDragDetectorResponseStyle.Offset | UIDragDetectorResponseStyle.Scale | UIDragDetectorResponseStyle.CustomOffset | UIDragDetectorResponseStyle.CustomScale;
    /**
     * Used with `UIDragDetector.UIDragSpeedAxisMapping` to determine the **X**\/**Y** dimension dragging speeds.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/UIDragSpeedAxisMapping)
     */
    export namespace UIDragSpeedAxisMapping {
        /**
         * Default setting for a detector's `UIDragSpeedAxisMapping` where the **X** and **Y** axis speeds are based off the **X** and **Y** `Scale`/`Offset` values respectively.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/UIDragSpeedAxisMapping#XY)
         */
        export interface XY extends globalThis.EnumItem {
            Name: "XY";
            Value: 0;
            EnumType: typeof globalThis.Enum.UIDragSpeedAxisMapping;
        }
        export const XY: XY;
        /**
         * Both the **X** and **Y** axis speeds are based off the **X** axis for `Scale`, while the `Offset` values still apply to their respective axis.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/UIDragSpeedAxisMapping#XX)
         */
        export interface XX extends globalThis.EnumItem {
            Name: "XX";
            Value: 1;
            EnumType: typeof globalThis.Enum.UIDragSpeedAxisMapping;
        }
        export const XX: XX;
        /**
         * Both the **X** and **Y** axis speeds are based off the **Y** axis for `Scale`, while the `Offset` values still apply to their respective axis.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/UIDragSpeedAxisMapping#YY)
         */
        export interface YY extends globalThis.EnumItem {
            Name: "YY";
            Value: 2;
            EnumType: typeof globalThis.Enum.UIDragSpeedAxisMapping;
        }
        export const YY: YY;
        export function GetEnumItems(this: globalThis.Enum): Array<globalThis.Enum.UIDragSpeedAxisMapping>;
        export function FromName(this: globalThis.Enum, name: string): globalThis.Enum.UIDragSpeedAxisMapping | undefined;
        export function FromValue(this: globalThis.Enum, value: number): globalThis.Enum.UIDragSpeedAxisMapping | undefined;
    }
    export type UIDragSpeedAxisMapping = UIDragSpeedAxisMapping.XY | UIDragSpeedAxisMapping.XX | UIDragSpeedAxisMapping.YY;
    /**
     * In a `UIListLayout` flex layout, specifies how to distribute extra space in the parent container.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/UIFlexAlignment)
     */
    export namespace UIFlexAlignment {
        /**
         * No flex behavior; siblings maintain their defined width or height.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/UIFlexAlignment#None)
         */
        export interface None extends globalThis.EnumItem {
            Name: "None";
            Value: 0;
            EnumType: typeof globalThis.Enum.UIFlexAlignment;
        }
        export const None: None;
        /**
         * Siblings resize to fill the entire parent container, overriding their defined width or height.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/UIFlexAlignment#Fill)
         */
        export interface Fill extends globalThis.EnumItem {
            Name: "Fill";
            Value: 1;
            EnumType: typeof globalThis.Enum.UIFlexAlignment;
        }
        export const Fill: Fill;
        /**
         * Siblings maintain their defined width or height. Equal spacing is added on both sides of each sibling.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/UIFlexAlignment#SpaceAround)
         */
        export interface SpaceAround extends globalThis.EnumItem {
            Name: "SpaceAround";
            Value: 2;
            EnumType: typeof globalThis.Enum.UIFlexAlignment;
        }
        export const SpaceAround: SpaceAround;
        /**
         * Siblings maintain their defined width or height. Equal spacing is added **between** siblings, but no additional space is added **around** siblings.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/UIFlexAlignment#SpaceBetween)
         */
        export interface SpaceBetween extends globalThis.EnumItem {
            Name: "SpaceBetween";
            Value: 3;
            EnumType: typeof globalThis.Enum.UIFlexAlignment;
        }
        export const SpaceBetween: SpaceBetween;
        /**
         * Siblings maintain their defined width or height. Equal spacing is added both **between** and **around** siblings.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/UIFlexAlignment#SpaceEvenly)
         */
        export interface SpaceEvenly extends globalThis.EnumItem {
            Name: "SpaceEvenly";
            Value: 4;
            EnumType: typeof globalThis.Enum.UIFlexAlignment;
        }
        export const SpaceEvenly: SpaceEvenly;
        export function GetEnumItems(this: globalThis.Enum): Array<globalThis.Enum.UIFlexAlignment>;
        export function FromName(this: globalThis.Enum, name: string): globalThis.Enum.UIFlexAlignment | undefined;
        export function FromValue(this: globalThis.Enum, value: number): globalThis.Enum.UIFlexAlignment | undefined;
    }
    export type UIFlexAlignment = UIFlexAlignment.None | UIFlexAlignment.Fill | UIFlexAlignment.SpaceAround | UIFlexAlignment.SpaceBetween | UIFlexAlignment.SpaceEvenly;
    /**
     * Used with `UIFlexItem.FlexMode` to define how the parent `GuiObject` grows or shrinks.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/UIFlexMode)
     */
    export namespace UIFlexMode {
        /**
         * The parent `GuiObject` is unaffected and neither shrinks nor grows.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/UIFlexMode#None)
         */
        export interface None extends globalThis.EnumItem {
            Name: "None";
            Value: 0;
            EnumType: typeof globalThis.Enum.UIFlexMode;
        }
        export const None: None;
        /**
         * Sets an effective `1:0` grow‑shrink ratio on the parent `GuiObject`. Objects set to `Grow` never shrink below their basis size, so overflow may occur if the container becomes smaller than the flex line's combined basis size.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/UIFlexMode#Grow)
         */
        export interface Grow extends globalThis.EnumItem {
            Name: "Grow";
            Value: 1;
            EnumType: typeof globalThis.Enum.UIFlexMode;
        }
        export const Grow: Grow;
        /**
         * Sets an effective `0:1` grow‑shrink ratio on the parent `GuiObject`. Objects set to `Shrink` never grow above their basis size, so underflow may occur if the container becomes larger than the flex line's combined basis size.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/UIFlexMode#Shrink)
         */
        export interface Shrink extends globalThis.EnumItem {
            Name: "Shrink";
            Value: 2;
            EnumType: typeof globalThis.Enum.UIFlexMode;
        }
        export const Shrink: Shrink;
        /**
         * Sets an effective `1:1` grow‑shrink ratio on the parent `GuiObject`. This setting ensures the flex line always fills the container, even if the container size changes.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/UIFlexMode#Fill)
         */
        export interface Fill extends globalThis.EnumItem {
            Name: "Fill";
            Value: 3;
            EnumType: typeof globalThis.Enum.UIFlexMode;
        }
        export const Fill: Fill;
        /**
         * Enables the `GrowRatio` and `ShrinkRatio` properties for the `UIFlexItem`, allowing for relative growth or shrinking of the parent `GuiObject` in a ratio compared to other flex objects also under control of a `UIFlexItem`.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/UIFlexMode#Custom)
         */
        export interface Custom extends globalThis.EnumItem {
            Name: "Custom";
            Value: 4;
            EnumType: typeof globalThis.Enum.UIFlexMode;
        }
        export const Custom: Custom;
        export function GetEnumItems(this: globalThis.Enum): Array<globalThis.Enum.UIFlexMode>;
        export function FromName(this: globalThis.Enum, name: string): globalThis.Enum.UIFlexMode | undefined;
        export function FromValue(this: globalThis.Enum, value: number): globalThis.Enum.UIFlexMode | undefined;
    }
    export type UIFlexMode = UIFlexMode.None | UIFlexMode.Grow | UIFlexMode.Shrink | UIFlexMode.Fill | UIFlexMode.Custom;
    /**
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/UITheme)
     */
    export namespace UITheme {
        /**
         * **Deprecated:** This option is deprecated.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/UITheme#Light)
         */
        export interface Light extends globalThis.EnumItem {
            Name: "Light";
            Value: 0;
            EnumType: typeof globalThis.Enum.UITheme;
        }
        export const Light: Light;
        /**
         * **Deprecated:** This option is deprecated.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/UITheme#Dark)
         */
        export interface Dark extends globalThis.EnumItem {
            Name: "Dark";
            Value: 1;
            EnumType: typeof globalThis.Enum.UITheme;
        }
        export const Dark: Dark;
        export function GetEnumItems(this: globalThis.Enum): Array<globalThis.Enum.UITheme>;
        export function FromName(this: globalThis.Enum, name: string): globalThis.Enum.UITheme | undefined;
        export function FromValue(this: globalThis.Enum, value: number): globalThis.Enum.UITheme | undefined;
    }
    export type UITheme = UITheme.Light | UITheme.Dark;
    /**
     * Controls the UI message under the `GuiService`.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/UiMessageType)
     */
    export namespace UiMessageType {
        /**
         * The message error.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/UiMessageType#UiMessageError)
         */
        export interface UiMessageError extends globalThis.EnumItem {
            Name: "UiMessageError";
            Value: 0;
            EnumType: typeof globalThis.Enum.UiMessageType;
        }
        export const UiMessageError: UiMessageError;
        /**
         * The message info.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/UiMessageType#UiMessageInfo)
         */
        export interface UiMessageInfo extends globalThis.EnumItem {
            Name: "UiMessageInfo";
            Value: 1;
            EnumType: typeof globalThis.Enum.UiMessageType;
        }
        export const UiMessageInfo: UiMessageInfo;
        export function GetEnumItems(this: globalThis.Enum): Array<globalThis.Enum.UiMessageType>;
        export function FromName(this: globalThis.Enum, name: string): globalThis.Enum.UiMessageType | undefined;
        export function FromValue(this: globalThis.Enum, value: number): globalThis.Enum.UiMessageType | undefined;
    }
    export type UiMessageType = UiMessageType.UiMessageError | UiMessageType.UiMessageInfo;
    /**
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/UsageContext)
     */
    export namespace UsageContext {
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/UsageContext#Default)
         */
        export interface Default extends globalThis.EnumItem {
            Name: "Default";
            Value: 0;
            EnumType: typeof globalThis.Enum.UsageContext;
        }
        export const Default: Default;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/UsageContext#Preview)
         */
        export interface Preview extends globalThis.EnumItem {
            Name: "Preview";
            Value: 1;
            EnumType: typeof globalThis.Enum.UsageContext;
        }
        export const Preview: Preview;
        export function GetEnumItems(this: globalThis.Enum): Array<globalThis.Enum.UsageContext>;
        export function FromName(this: globalThis.Enum, name: string): globalThis.Enum.UsageContext | undefined;
        export function FromValue(this: globalThis.Enum, value: number): globalThis.Enum.UsageContext | undefined;
    }
    export type UsageContext = UsageContext.Default | UsageContext.Preview;
    /**
     * Determines what body part is being tracked by a VR device, and what its CFrame actually is.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/UserCFrame)
     */
    export namespace UserCFrame {
        /**
         * The CFrame of the user's head.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/UserCFrame#Head)
         */
        export interface Head extends globalThis.EnumItem {
            Name: "Head";
            Value: 0;
            EnumType: typeof globalThis.Enum.UserCFrame;
        }
        export const Head: Head;
        /**
         * The CFrame of the user's left hand.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/UserCFrame#LeftHand)
         */
        export interface LeftHand extends globalThis.EnumItem {
            Name: "LeftHand";
            Value: 1;
            EnumType: typeof globalThis.Enum.UserCFrame;
        }
        export const LeftHand: LeftHand;
        /**
         * The CFrame of the user's right hand.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/UserCFrame#RightHand)
         */
        export interface RightHand extends globalThis.EnumItem {
            Name: "RightHand";
            Value: 2;
            EnumType: typeof globalThis.Enum.UserCFrame;
        }
        export const RightHand: RightHand;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/UserCFrame#Floor)
         */
        export interface Floor extends globalThis.EnumItem {
            Name: "Floor";
            Value: 3;
            EnumType: typeof globalThis.Enum.UserCFrame;
        }
        export const Floor: Floor;
        export function GetEnumItems(this: globalThis.Enum): Array<globalThis.Enum.UserCFrame>;
        export function FromName(this: globalThis.Enum, name: string): globalThis.Enum.UserCFrame | undefined;
        export function FromValue(this: globalThis.Enum, value: number): globalThis.Enum.UserCFrame | undefined;
    }
    export type UserCFrame = UserCFrame.Head | UserCFrame.LeftHand | UserCFrame.RightHand | UserCFrame.Floor;
    /**
     * The **UserInputState** enum describes the state of an input that is currently or was recently performed.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/UserInputState)
     */
    export namespace UserInputState {
        /**
         * Occurs when an `InputObject` starts to interact with the game. For example, a mouse button down, or a key down, or when a touch begins touching the screen.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/UserInputState#Begin)
         */
        export interface Begin extends globalThis.EnumItem {
            Name: "Begin";
            Value: 0;
            EnumType: typeof globalThis.Enum.UserInputState;
        }
        export const Begin: Begin;
        /**
         * Occurs each frame an `InputObject` has already begun interacting with the game and part of its state is changing. For example, a movement of the mouse position, a gamepad thumbstick, gamepad trigger button, or screen touch point.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/UserInputState#Change)
         */
        export interface Change extends globalThis.EnumItem {
            Name: "Change";
            Value: 1;
            EnumType: typeof globalThis.Enum.UserInputState;
        }
        export const Change: Change;
        /**
         * When an `InputObject` finishes interacting with the game. For example, a mouse button up, or a key up, or when a touch stops touching the screen.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/UserInputState#End)
         */
        export interface End extends globalThis.EnumItem {
            Name: "End";
            Value: 2;
            EnumType: typeof globalThis.Enum.UserInputState;
        }
        export const End: End;
        /**
         * A special circumstance state that indicates this input is no longer relevant, particularly with `ContextActionService`. For example, binding two action-handling functions will cause the first to Cancel if an input was already in-progress when the second was bound.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/UserInputState#Cancel)
         */
        export interface Cancel extends globalThis.EnumItem {
            Name: "Cancel";
            Value: 3;
            EnumType: typeof globalThis.Enum.UserInputState;
        }
        export const Cancel: Cancel;
        /**
         * A state that should never be seen in a game, essentially just marks the end of the enum.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/UserInputState#None)
         */
        export interface None extends globalThis.EnumItem {
            Name: "None";
            Value: 4;
            EnumType: typeof globalThis.Enum.UserInputState;
        }
        export const None: None;
        export function GetEnumItems(this: globalThis.Enum): Array<globalThis.Enum.UserInputState>;
        export function FromName(this: globalThis.Enum, name: string): globalThis.Enum.UserInputState | undefined;
        export function FromValue(this: globalThis.Enum, value: number): globalThis.Enum.UserInputState | undefined;
    }
    export type UserInputState = UserInputState.Begin | UserInputState.Change | UserInputState.End | UserInputState.Cancel | UserInputState.None;
    /**
     * Describes the type of a user input event.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/UserInputType)
     */
    export namespace UserInputType {
        /**
         * The left mouse button.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/UserInputType#MouseButton1)
         */
        export interface MouseButton1 extends globalThis.EnumItem {
            Name: "MouseButton1";
            Value: 0;
            EnumType: typeof globalThis.Enum.UserInputType;
        }
        export const MouseButton1: MouseButton1;
        /**
         * The right mouse button.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/UserInputType#MouseButton2)
         */
        export interface MouseButton2 extends globalThis.EnumItem {
            Name: "MouseButton2";
            Value: 1;
            EnumType: typeof globalThis.Enum.UserInputType;
        }
        export const MouseButton2: MouseButton2;
        /**
         * The middle mouse button.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/UserInputType#MouseButton3)
         */
        export interface MouseButton3 extends globalThis.EnumItem {
            Name: "MouseButton3";
            Value: 2;
            EnumType: typeof globalThis.Enum.UserInputType;
        }
        export const MouseButton3: MouseButton3;
        /**
         * The mouse wheel.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/UserInputType#MouseWheel)
         */
        export interface MouseWheel extends globalThis.EnumItem {
            Name: "MouseWheel";
            Value: 3;
            EnumType: typeof globalThis.Enum.UserInputType;
        }
        export const MouseWheel: MouseWheel;
        /**
         * Movement of the mouse. Fires changed events each time the player's cursor position changes and when the move enters/leaves the game window.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/UserInputType#MouseMovement)
         */
        export interface MouseMovement extends globalThis.EnumItem {
            Name: "MouseMovement";
            Value: 4;
            EnumType: typeof globalThis.Enum.UserInputType;
        }
        export const MouseMovement: MouseMovement;
        /**
         * A tap on the screen from a mobile device.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/UserInputType#Touch)
         */
        export interface Touch extends globalThis.EnumItem {
            Name: "Touch";
            Value: 7;
            EnumType: typeof globalThis.Enum.UserInputType;
        }
        export const Touch: Touch;
        /**
         * Key press on a keyboard.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/UserInputType#Keyboard)
         */
        export interface Keyboard extends globalThis.EnumItem {
            Name: "Keyboard";
            Value: 8;
            EnumType: typeof globalThis.Enum.UserInputType;
        }
        export const Keyboard: Keyboard;
        /**
         * The client regaining focus of the Roblox window.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/UserInputType#Focus)
         */
        export interface Focus extends globalThis.EnumItem {
            Name: "Focus";
            Value: 9;
            EnumType: typeof globalThis.Enum.UserInputType;
        }
        export const Focus: Focus;
        /**
         * The accelerometer of a mobile device.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/UserInputType#Accelerometer)
         */
        export interface Accelerometer extends globalThis.EnumItem {
            Name: "Accelerometer";
            Value: 10;
            EnumType: typeof globalThis.Enum.UserInputType;
        }
        export const Accelerometer: Accelerometer;
        /**
         * The Gyroscope of a mobile device.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/UserInputType#Gyro)
         */
        export interface Gyro extends globalThis.EnumItem {
            Name: "Gyro";
            Value: 11;
            EnumType: typeof globalThis.Enum.UserInputType;
        }
        export const Gyro: Gyro;
        /**
         * Input from the 1st plugged in Gamepad.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/UserInputType#Gamepad1)
         */
        export interface Gamepad1 extends globalThis.EnumItem {
            Name: "Gamepad1";
            Value: 12;
            EnumType: typeof globalThis.Enum.UserInputType;
        }
        export const Gamepad1: Gamepad1;
        /**
         * Input from the 2nd plugged in Gamepad.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/UserInputType#Gamepad2)
         */
        export interface Gamepad2 extends globalThis.EnumItem {
            Name: "Gamepad2";
            Value: 13;
            EnumType: typeof globalThis.Enum.UserInputType;
        }
        export const Gamepad2: Gamepad2;
        /**
         * Input from the 3rd plugged in Gamepad.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/UserInputType#Gamepad3)
         */
        export interface Gamepad3 extends globalThis.EnumItem {
            Name: "Gamepad3";
            Value: 14;
            EnumType: typeof globalThis.Enum.UserInputType;
        }
        export const Gamepad3: Gamepad3;
        /**
         * Input from the 4th plugged in Gamepad.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/UserInputType#Gamepad4)
         */
        export interface Gamepad4 extends globalThis.EnumItem {
            Name: "Gamepad4";
            Value: 15;
            EnumType: typeof globalThis.Enum.UserInputType;
        }
        export const Gamepad4: Gamepad4;
        /**
         * Input from the 5th plugged in Gamepad.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/UserInputType#Gamepad5)
         */
        export interface Gamepad5 extends globalThis.EnumItem {
            Name: "Gamepad5";
            Value: 16;
            EnumType: typeof globalThis.Enum.UserInputType;
        }
        export const Gamepad5: Gamepad5;
        /**
         * Input from the 6th plugged in Gamepad.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/UserInputType#Gamepad6)
         */
        export interface Gamepad6 extends globalThis.EnumItem {
            Name: "Gamepad6";
            Value: 17;
            EnumType: typeof globalThis.Enum.UserInputType;
        }
        export const Gamepad6: Gamepad6;
        /**
         * Input from the 7th plugged in Gamepad.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/UserInputType#Gamepad7)
         */
        export interface Gamepad7 extends globalThis.EnumItem {
            Name: "Gamepad7";
            Value: 18;
            EnumType: typeof globalThis.Enum.UserInputType;
        }
        export const Gamepad7: Gamepad7;
        /**
         * Input from the 8th plugged in Gamepad.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/UserInputType#Gamepad8)
         */
        export interface Gamepad8 extends globalThis.EnumItem {
            Name: "Gamepad8";
            Value: 19;
            EnumType: typeof globalThis.Enum.UserInputType;
        }
        export const Gamepad8: Gamepad8;
        /**
         * Input of Text into a text-based `GuiObject`. Normally this is only a `TextBox`.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/UserInputType#TextInput)
         */
        export interface TextInput extends globalThis.EnumItem {
            Name: "TextInput";
            Value: 20;
            EnumType: typeof globalThis.Enum.UserInputType;
        }
        export const TextInput: TextInput;
        /**
         * Text input from an input method editor (IME). `InputObjects` with this type aren't currently fired.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/UserInputType#InputMethod)
         */
        export interface InputMethod extends globalThis.EnumItem {
            Name: "InputMethod";
            Value: 21;
            EnumType: typeof globalThis.Enum.UserInputType;
        }
        export const InputMethod: InputMethod;
        /**
         * Unknown UserInputType.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/UserInputType#None)
         */
        export interface None extends globalThis.EnumItem {
            Name: "None";
            Value: 22;
            EnumType: typeof globalThis.Enum.UserInputType;
        }
        export const None: None;
        export function GetEnumItems(this: globalThis.Enum): Array<globalThis.Enum.UserInputType>;
        export function FromName(this: globalThis.Enum, name: string): globalThis.Enum.UserInputType | undefined;
        export function FromValue(this: globalThis.Enum, value: number): globalThis.Enum.UserInputType | undefined;
    }
    export type UserInputType = UserInputType.MouseButton1 | UserInputType.MouseButton2 | UserInputType.MouseButton3 | UserInputType.MouseWheel | UserInputType.MouseMovement | UserInputType.Touch | UserInputType.Keyboard | UserInputType.Focus | UserInputType.Accelerometer | UserInputType.Gyro | UserInputType.Gamepad1 | UserInputType.Gamepad2 | UserInputType.Gamepad3 | UserInputType.Gamepad4 | UserInputType.Gamepad5 | UserInputType.Gamepad6 | UserInputType.Gamepad7 | UserInputType.Gamepad8 | UserInputType.TextInput | UserInputType.InputMethod | UserInputType.None;
    /**
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/VRComfortSetting)
     */
    export namespace VRComfortSetting {
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/VRComfortSetting#Comfort)
         */
        export interface Comfort extends globalThis.EnumItem {
            Name: "Comfort";
            Value: 0;
            EnumType: typeof globalThis.Enum.VRComfortSetting;
        }
        export const Comfort: Comfort;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/VRComfortSetting#Normal)
         */
        export interface Normal extends globalThis.EnumItem {
            Name: "Normal";
            Value: 1;
            EnumType: typeof globalThis.Enum.VRComfortSetting;
        }
        export const Normal: Normal;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/VRComfortSetting#Expert)
         */
        export interface Expert extends globalThis.EnumItem {
            Name: "Expert";
            Value: 2;
            EnumType: typeof globalThis.Enum.VRComfortSetting;
        }
        export const Expert: Expert;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/VRComfortSetting#Custom)
         */
        export interface Custom extends globalThis.EnumItem {
            Name: "Custom";
            Value: 3;
            EnumType: typeof globalThis.Enum.VRComfortSetting;
        }
        export const Custom: Custom;
        export function GetEnumItems(this: globalThis.Enum): Array<globalThis.Enum.VRComfortSetting>;
        export function FromName(this: globalThis.Enum, name: string): globalThis.Enum.VRComfortSetting | undefined;
        export function FromValue(this: globalThis.Enum, value: number): globalThis.Enum.VRComfortSetting | undefined;
    }
    export type VRComfortSetting = VRComfortSetting.Comfort | VRComfortSetting.Normal | VRComfortSetting.Expert | VRComfortSetting.Custom;
    /**
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/VRControllerModelMode)
     */
    export namespace VRControllerModelMode {
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/VRControllerModelMode#Disabled)
         */
        export interface Disabled extends globalThis.EnumItem {
            Name: "Disabled";
            Value: 0;
            EnumType: typeof globalThis.Enum.VRControllerModelMode;
        }
        export const Disabled: Disabled;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/VRControllerModelMode#Transparent)
         */
        export interface Transparent extends globalThis.EnumItem {
            Name: "Transparent";
            Value: 1;
            EnumType: typeof globalThis.Enum.VRControllerModelMode;
        }
        export const Transparent: Transparent;
        export function GetEnumItems(this: globalThis.Enum): Array<globalThis.Enum.VRControllerModelMode>;
        export function FromName(this: globalThis.Enum, name: string): globalThis.Enum.VRControllerModelMode | undefined;
        export function FromValue(this: globalThis.Enum, value: number): globalThis.Enum.VRControllerModelMode | undefined;
    }
    export type VRControllerModelMode = VRControllerModelMode.Disabled | VRControllerModelMode.Transparent;
    /**
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/VRDeviceType)
     */
    export namespace VRDeviceType {
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/VRDeviceType#Unknown)
         */
        export interface Unknown extends globalThis.EnumItem {
            Name: "Unknown";
            Value: 0;
            EnumType: typeof globalThis.Enum.VRDeviceType;
        }
        export const Unknown: Unknown;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/VRDeviceType#OculusRift)
         */
        export interface OculusRift extends globalThis.EnumItem {
            Name: "OculusRift";
            Value: 1;
            EnumType: typeof globalThis.Enum.VRDeviceType;
        }
        export const OculusRift: OculusRift;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/VRDeviceType#HTCVive)
         */
        export interface HTCVive extends globalThis.EnumItem {
            Name: "HTCVive";
            Value: 2;
            EnumType: typeof globalThis.Enum.VRDeviceType;
        }
        export const HTCVive: HTCVive;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/VRDeviceType#ValveIndex)
         */
        export interface ValveIndex extends globalThis.EnumItem {
            Name: "ValveIndex";
            Value: 3;
            EnumType: typeof globalThis.Enum.VRDeviceType;
        }
        export const ValveIndex: ValveIndex;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/VRDeviceType#OculusQuest)
         */
        export interface OculusQuest extends globalThis.EnumItem {
            Name: "OculusQuest";
            Value: 4;
            EnumType: typeof globalThis.Enum.VRDeviceType;
        }
        export const OculusQuest: OculusQuest;
        export function GetEnumItems(this: globalThis.Enum): Array<globalThis.Enum.VRDeviceType>;
        export function FromName(this: globalThis.Enum, name: string): globalThis.Enum.VRDeviceType | undefined;
        export function FromValue(this: globalThis.Enum, value: number): globalThis.Enum.VRDeviceType | undefined;
    }
    export type VRDeviceType = VRDeviceType.Unknown | VRDeviceType.OculusRift | VRDeviceType.HTCVive | VRDeviceType.ValveIndex | VRDeviceType.OculusQuest;
    /**
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/VRLaserPointerMode)
     */
    export namespace VRLaserPointerMode {
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/VRLaserPointerMode#Disabled)
         */
        export interface Disabled extends globalThis.EnumItem {
            Name: "Disabled";
            Value: 0;
            EnumType: typeof globalThis.Enum.VRLaserPointerMode;
        }
        export const Disabled: Disabled;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/VRLaserPointerMode#Pointer)
         */
        export interface Pointer extends globalThis.EnumItem {
            Name: "Pointer";
            Value: 1;
            EnumType: typeof globalThis.Enum.VRLaserPointerMode;
        }
        export const Pointer: Pointer;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/VRLaserPointerMode#DualPointer)
         */
        export interface DualPointer extends globalThis.EnumItem {
            Name: "DualPointer";
            Value: 2;
            EnumType: typeof globalThis.Enum.VRLaserPointerMode;
        }
        export const DualPointer: DualPointer;
        export function GetEnumItems(this: globalThis.Enum): Array<globalThis.Enum.VRLaserPointerMode>;
        export function FromName(this: globalThis.Enum, name: string): globalThis.Enum.VRLaserPointerMode | undefined;
        export function FromValue(this: globalThis.Enum, value: number): globalThis.Enum.VRLaserPointerMode | undefined;
    }
    export type VRLaserPointerMode = VRLaserPointerMode.Disabled | VRLaserPointerMode.Pointer | VRLaserPointerMode.DualPointer;
    /**
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/VRSafetyBubbleMode)
     */
    export namespace VRSafetyBubbleMode {
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/VRSafetyBubbleMode#NoOne)
         */
        export interface NoOne extends globalThis.EnumItem {
            Name: "NoOne";
            Value: 0;
            EnumType: typeof globalThis.Enum.VRSafetyBubbleMode;
        }
        export const NoOne: NoOne;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/VRSafetyBubbleMode#OnlyFriends)
         */
        export interface OnlyFriends extends globalThis.EnumItem {
            Name: "OnlyFriends";
            Value: 1;
            EnumType: typeof globalThis.Enum.VRSafetyBubbleMode;
        }
        export const OnlyFriends: OnlyFriends;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/VRSafetyBubbleMode#Anyone)
         */
        export interface Anyone extends globalThis.EnumItem {
            Name: "Anyone";
            Value: 2;
            EnumType: typeof globalThis.Enum.VRSafetyBubbleMode;
        }
        export const Anyone: Anyone;
        export function GetEnumItems(this: globalThis.Enum): Array<globalThis.Enum.VRSafetyBubbleMode>;
        export function FromName(this: globalThis.Enum, name: string): globalThis.Enum.VRSafetyBubbleMode | undefined;
        export function FromValue(this: globalThis.Enum, value: number): globalThis.Enum.VRSafetyBubbleMode | undefined;
    }
    export type VRSafetyBubbleMode = VRSafetyBubbleMode.NoOne | VRSafetyBubbleMode.OnlyFriends | VRSafetyBubbleMode.Anyone;
    /**
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/VRScaling)
     */
    export namespace VRScaling {
        /**
         * Adjusts `Class.Camera.HeadScale' so that the world in VR is seen from the avatar's perspective.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/VRScaling#World)
         */
        export interface World extends globalThis.EnumItem {
            Name: "World";
            Value: 0;
            EnumType: typeof globalThis.Enum.VRScaling;
        }
        export const World: World;
        /**
         * Disable VR AutomaticScaling .
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/VRScaling#Off)
         */
        export interface Off extends globalThis.EnumItem {
            Name: "Off";
            Value: 1;
            EnumType: typeof globalThis.Enum.VRScaling;
        }
        export const Off: Off;
        export function GetEnumItems(this: globalThis.Enum): Array<globalThis.Enum.VRScaling>;
        export function FromName(this: globalThis.Enum, name: string): globalThis.Enum.VRScaling | undefined;
        export function FromValue(this: globalThis.Enum, value: number): globalThis.Enum.VRScaling | undefined;
    }
    export type VRScaling = VRScaling.World | VRScaling.Off;
    /**
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/VRSessionState)
     */
    export namespace VRSessionState {
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/VRSessionState#Undefined)
         */
        export interface Undefined extends globalThis.EnumItem {
            Name: "Undefined";
            Value: 0;
            EnumType: typeof globalThis.Enum.VRSessionState;
        }
        export const Undefined: Undefined;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/VRSessionState#Idle)
         */
        export interface Idle extends globalThis.EnumItem {
            Name: "Idle";
            Value: 1;
            EnumType: typeof globalThis.Enum.VRSessionState;
        }
        export const Idle: Idle;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/VRSessionState#Visible)
         */
        export interface Visible extends globalThis.EnumItem {
            Name: "Visible";
            Value: 2;
            EnumType: typeof globalThis.Enum.VRSessionState;
        }
        export const Visible: Visible;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/VRSessionState#Focused)
         */
        export interface Focused extends globalThis.EnumItem {
            Name: "Focused";
            Value: 3;
            EnumType: typeof globalThis.Enum.VRSessionState;
        }
        export const Focused: Focused;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/VRSessionState#Stopping)
         */
        export interface Stopping extends globalThis.EnumItem {
            Name: "Stopping";
            Value: 4;
            EnumType: typeof globalThis.Enum.VRSessionState;
        }
        export const Stopping: Stopping;
        export function GetEnumItems(this: globalThis.Enum): Array<globalThis.Enum.VRSessionState>;
        export function FromName(this: globalThis.Enum, name: string): globalThis.Enum.VRSessionState | undefined;
        export function FromValue(this: globalThis.Enum, value: number): globalThis.Enum.VRSessionState | undefined;
    }
    export type VRSessionState = VRSessionState.Undefined | VRSessionState.Idle | VRSessionState.Visible | VRSessionState.Focused | VRSessionState.Stopping;
    /**
     * Used to universally identify a VR touchpad that is used by either the left, or right hand.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/VRTouchpad)
     */
    export namespace VRTouchpad {
        /**
         * Left hand touchpad.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/VRTouchpad#Left)
         */
        export interface Left extends globalThis.EnumItem {
            Name: "Left";
            Value: 0;
            EnumType: typeof globalThis.Enum.VRTouchpad;
        }
        export const Left: Left;
        /**
         * Right hand touchpad.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/VRTouchpad#Right)
         */
        export interface Right extends globalThis.EnumItem {
            Name: "Right";
            Value: 1;
            EnumType: typeof globalThis.Enum.VRTouchpad;
        }
        export const Right: Right;
        export function GetEnumItems(this: globalThis.Enum): Array<globalThis.Enum.VRTouchpad>;
        export function FromName(this: globalThis.Enum, name: string): globalThis.Enum.VRTouchpad | undefined;
        export function FromValue(this: globalThis.Enum, value: number): globalThis.Enum.VRTouchpad | undefined;
    }
    export type VRTouchpad = VRTouchpad.Left | VRTouchpad.Right;
    /**
     * Used to identify the behavior of a specified VR touchpad.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/VRTouchpadMode)
     */
    export namespace VRTouchpadMode {
        /**
         * The touchpad is treated as ButtonB if it is the left touchpad, or ButtonA if it is the right touchpad.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/VRTouchpadMode#Touch)
         */
        export interface Touch extends globalThis.EnumItem {
            Name: "Touch";
            Value: 0;
            EnumType: typeof globalThis.Enum.VRTouchpadMode;
        }
        export const Touch: Touch;
        /**
         * The touchpad will function as a gamepad joystick.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/VRTouchpadMode#VirtualThumbstick)
         */
        export interface VirtualThumbstick extends globalThis.EnumItem {
            Name: "VirtualThumbstick";
            Value: 1;
            EnumType: typeof globalThis.Enum.VRTouchpadMode;
        }
        export const VirtualThumbstick: VirtualThumbstick;
        /**
         * The touchpad will function as a means of inputting the standard ABXY gamepad input, dividing it up into 4 diagonal pie slices.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/VRTouchpadMode#ABXY)
         */
        export interface ABXY extends globalThis.EnumItem {
            Name: "ABXY";
            Value: 2;
            EnumType: typeof globalThis.Enum.VRTouchpadMode;
        }
        export const ABXY: ABXY;
        export function GetEnumItems(this: globalThis.Enum): Array<globalThis.Enum.VRTouchpadMode>;
        export function FromName(this: globalThis.Enum, name: string): globalThis.Enum.VRTouchpadMode | undefined;
        export function FromValue(this: globalThis.Enum, value: number): globalThis.Enum.VRTouchpadMode | undefined;
    }
    export type VRTouchpadMode = VRTouchpadMode.Touch | VRTouchpadMode.VirtualThumbstick | VRTouchpadMode.ABXY;
    /**
     * The velocity constraint mode property controls how the linear velocity of the attachment(s) is constrained.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/VelocityConstraintMode)
     */
    export namespace VelocityConstraintMode {
        /**
         * The velocity component in the direction of the line is constrained to the specified value. The line direction is based on the `RelativeTo` property: - `Attachment0` - The line direction is the   primary axis of `Attachment0`.
         * - `Attachment1` - The line direction is the   primary axis of `Attachment1`.
         * - `World` - The line direction must be specified.
         *
         *
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/VelocityConstraintMode#Line)
         */
        export interface Line extends globalThis.EnumItem {
            Name: "Line";
            Value: 0;
            EnumType: typeof globalThis.Enum.VelocityConstraintMode;
        }
        export const Line: Line;
        /**
         * The velocity components in the plane are constrained to the specified values. The plane tangents are based on the `RelativeTo` property: - `Attachment0` - The plane tangents are the two   axes of `Attachment0`.
         * - `Attachment1` - The plane tangents are the two   axes of `Attachment1`.
         * - `World` - The two plane tangents must be   specified
         *
         *
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/VelocityConstraintMode#Plane)
         */
        export interface Plane extends globalThis.EnumItem {
            Name: "Plane";
            Value: 1;
            EnumType: typeof globalThis.Enum.VelocityConstraintMode;
        }
        export const Plane: Plane;
        /**
         * The velocity components must be equal to the vector components specified. The coordinate system of the vector is based on the `RelativeTo` property: - `Attachment0` - The vector components are in the   coordinate system defined by the axes of   `Attachment0`.
         * - `Attachment1` - The vector components are in the   coordinate system defined by the axes of   `Attachment1`.
         * - `World` - The coordinate system is in the world   and the vector components must be specified.
         *
         *
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/VelocityConstraintMode#Vector)
         */
        export interface Vector extends globalThis.EnumItem {
            Name: "Vector";
            Value: 2;
            EnumType: typeof globalThis.Enum.VelocityConstraintMode;
        }
        export const Vector: Vector;
        export function GetEnumItems(this: globalThis.Enum): Array<globalThis.Enum.VelocityConstraintMode>;
        export function FromName(this: globalThis.Enum, name: string): globalThis.Enum.VelocityConstraintMode | undefined;
        export function FromValue(this: globalThis.Enum, value: number): globalThis.Enum.VelocityConstraintMode | undefined;
    }
    export type VelocityConstraintMode = VelocityConstraintMode.Line | VelocityConstraintMode.Plane | VelocityConstraintMode.Vector;
    /**
     * Used by `UIGridStyleLayout.VerticalAlignment` to align the layout vertically within its parent.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/VerticalAlignment)
     */
    export namespace VerticalAlignment {
        /**
         * Grid is aligned to the center of its parent along the **Y** axis.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/VerticalAlignment#Center)
         */
        export interface Center extends globalThis.EnumItem {
            Name: "Center";
            Value: 0;
            EnumType: typeof globalThis.Enum.VerticalAlignment;
        }
        export const Center: Center;
        /**
         * Grid is aligned to the top edge of its parent.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/VerticalAlignment#Top)
         */
        export interface Top extends globalThis.EnumItem {
            Name: "Top";
            Value: 1;
            EnumType: typeof globalThis.Enum.VerticalAlignment;
        }
        export const Top: Top;
        /**
         * Grid is aligned to the bottom edge of its parent.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/VerticalAlignment#Bottom)
         */
        export interface Bottom extends globalThis.EnumItem {
            Name: "Bottom";
            Value: 2;
            EnumType: typeof globalThis.Enum.VerticalAlignment;
        }
        export const Bottom: Bottom;
        export function GetEnumItems(this: globalThis.Enum): Array<globalThis.Enum.VerticalAlignment>;
        export function FromName(this: globalThis.Enum, name: string): globalThis.Enum.VerticalAlignment | undefined;
        export function FromValue(this: globalThis.Enum, value: number): globalThis.Enum.VerticalAlignment | undefined;
    }
    export type VerticalAlignment = VerticalAlignment.Center | VerticalAlignment.Top | VerticalAlignment.Bottom;
    /**
     * Indicates the side that the vertical scrollbar will be located at.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/VerticalScrollBarPosition)
     */
    export namespace VerticalScrollBarPosition {
        /**
         * Right side of the `ScrollingFrame`.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/VerticalScrollBarPosition#Right)
         */
        export interface Right extends globalThis.EnumItem {
            Name: "Right";
            Value: 0;
            EnumType: typeof globalThis.Enum.VerticalScrollBarPosition;
        }
        export const Right: Right;
        /**
         * Left side of the `ScrollingFrame`.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/VerticalScrollBarPosition#Left)
         */
        export interface Left extends globalThis.EnumItem {
            Name: "Left";
            Value: 1;
            EnumType: typeof globalThis.Enum.VerticalScrollBarPosition;
        }
        export const Left: Left;
        export function GetEnumItems(this: globalThis.Enum): Array<globalThis.Enum.VerticalScrollBarPosition>;
        export function FromName(this: globalThis.Enum, name: string): globalThis.Enum.VerticalScrollBarPosition | undefined;
        export function FromValue(this: globalThis.Enum, value: number): globalThis.Enum.VerticalScrollBarPosition | undefined;
    }
    export type VerticalScrollBarPosition = VerticalScrollBarPosition.Right | VerticalScrollBarPosition.Left;
    /**
     * Describes various types of haptic motor sizes and locations.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/VibrationMotor)
     */
    export namespace VibrationMotor {
        /**
         * Large motor.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/VibrationMotor#Large)
         */
        export interface Large extends globalThis.EnumItem {
            Name: "Large";
            Value: 0;
            EnumType: typeof globalThis.Enum.VibrationMotor;
        }
        export const Large: Large;
        /**
         * Small motor.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/VibrationMotor#Small)
         */
        export interface Small extends globalThis.EnumItem {
            Name: "Small";
            Value: 1;
            EnumType: typeof globalThis.Enum.VibrationMotor;
        }
        export const Small: Small;
        /**
         * Left trigger motor.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/VibrationMotor#LeftTrigger)
         */
        export interface LeftTrigger extends globalThis.EnumItem {
            Name: "LeftTrigger";
            Value: 2;
            EnumType: typeof globalThis.Enum.VibrationMotor;
        }
        export const LeftTrigger: LeftTrigger;
        /**
         * Right trigger motor.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/VibrationMotor#RightTrigger)
         */
        export interface RightTrigger extends globalThis.EnumItem {
            Name: "RightTrigger";
            Value: 3;
            EnumType: typeof globalThis.Enum.VibrationMotor;
        }
        export const RightTrigger: RightTrigger;
        /**
         * Left hand motor for VR devices.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/VibrationMotor#LeftHand)
         */
        export interface LeftHand extends globalThis.EnumItem {
            Name: "LeftHand";
            Value: 4;
            EnumType: typeof globalThis.Enum.VibrationMotor;
        }
        export const LeftHand: LeftHand;
        /**
         * Right hand motor for VR devices.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/VibrationMotor#RightHand)
         */
        export interface RightHand extends globalThis.EnumItem {
            Name: "RightHand";
            Value: 5;
            EnumType: typeof globalThis.Enum.VibrationMotor;
        }
        export const RightHand: RightHand;
        export function GetEnumItems(this: globalThis.Enum): Array<globalThis.Enum.VibrationMotor>;
        export function FromName(this: globalThis.Enum, name: string): globalThis.Enum.VibrationMotor | undefined;
        export function FromValue(this: globalThis.Enum, value: number): globalThis.Enum.VibrationMotor | undefined;
    }
    export type VibrationMotor = VibrationMotor.Large | VibrationMotor.Small | VibrationMotor.LeftTrigger | VibrationMotor.RightTrigger | VibrationMotor.LeftHand | VibrationMotor.RightHand;
    /**
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/VideoDeviceCaptureQuality)
     */
    export namespace VideoDeviceCaptureQuality {
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/VideoDeviceCaptureQuality#Default)
         */
        export interface Default extends globalThis.EnumItem {
            Name: "Default";
            Value: 0;
            EnumType: typeof globalThis.Enum.VideoDeviceCaptureQuality;
        }
        export const Default: Default;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/VideoDeviceCaptureQuality#Low)
         */
        export interface Low extends globalThis.EnumItem {
            Name: "Low";
            Value: 1;
            EnumType: typeof globalThis.Enum.VideoDeviceCaptureQuality;
        }
        export const Low: Low;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/VideoDeviceCaptureQuality#Medium)
         */
        export interface Medium extends globalThis.EnumItem {
            Name: "Medium";
            Value: 2;
            EnumType: typeof globalThis.Enum.VideoDeviceCaptureQuality;
        }
        export const Medium: Medium;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/VideoDeviceCaptureQuality#High)
         */
        export interface High extends globalThis.EnumItem {
            Name: "High";
            Value: 3;
            EnumType: typeof globalThis.Enum.VideoDeviceCaptureQuality;
        }
        export const High: High;
        export function GetEnumItems(this: globalThis.Enum): Array<globalThis.Enum.VideoDeviceCaptureQuality>;
        export function FromName(this: globalThis.Enum, name: string): globalThis.Enum.VideoDeviceCaptureQuality | undefined;
        export function FromValue(this: globalThis.Enum, value: number): globalThis.Enum.VideoDeviceCaptureQuality | undefined;
    }
    export type VideoDeviceCaptureQuality = VideoDeviceCaptureQuality.Default | VideoDeviceCaptureQuality.Low | VideoDeviceCaptureQuality.Medium | VideoDeviceCaptureQuality.High;
    /**
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/VideoError)
     */
    export namespace VideoError {
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/VideoError#Ok)
         */
        export interface Ok extends globalThis.EnumItem {
            Name: "Ok";
            Value: 0;
            EnumType: typeof globalThis.Enum.VideoError;
        }
        export const Ok: Ok;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/VideoError#Eof)
         */
        export interface Eof extends globalThis.EnumItem {
            Name: "Eof";
            Value: 1;
            EnumType: typeof globalThis.Enum.VideoError;
        }
        export const Eof: Eof;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/VideoError#EAgain)
         */
        export interface EAgain extends globalThis.EnumItem {
            Name: "EAgain";
            Value: 2;
            EnumType: typeof globalThis.Enum.VideoError;
        }
        export const EAgain: EAgain;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/VideoError#BadParameter)
         */
        export interface BadParameter extends globalThis.EnumItem {
            Name: "BadParameter";
            Value: 3;
            EnumType: typeof globalThis.Enum.VideoError;
        }
        export const BadParameter: BadParameter;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/VideoError#AllocFailed)
         */
        export interface AllocFailed extends globalThis.EnumItem {
            Name: "AllocFailed";
            Value: 4;
            EnumType: typeof globalThis.Enum.VideoError;
        }
        export const AllocFailed: AllocFailed;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/VideoError#CodecInitFailed)
         */
        export interface CodecInitFailed extends globalThis.EnumItem {
            Name: "CodecInitFailed";
            Value: 5;
            EnumType: typeof globalThis.Enum.VideoError;
        }
        export const CodecInitFailed: CodecInitFailed;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/VideoError#CodecCloseFailed)
         */
        export interface CodecCloseFailed extends globalThis.EnumItem {
            Name: "CodecCloseFailed";
            Value: 6;
            EnumType: typeof globalThis.Enum.VideoError;
        }
        export const CodecCloseFailed: CodecCloseFailed;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/VideoError#DecodeFailed)
         */
        export interface DecodeFailed extends globalThis.EnumItem {
            Name: "DecodeFailed";
            Value: 7;
            EnumType: typeof globalThis.Enum.VideoError;
        }
        export const DecodeFailed: DecodeFailed;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/VideoError#ParsingFailed)
         */
        export interface ParsingFailed extends globalThis.EnumItem {
            Name: "ParsingFailed";
            Value: 8;
            EnumType: typeof globalThis.Enum.VideoError;
        }
        export const ParsingFailed: ParsingFailed;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/VideoError#Unsupported)
         */
        export interface Unsupported extends globalThis.EnumItem {
            Name: "Unsupported";
            Value: 9;
            EnumType: typeof globalThis.Enum.VideoError;
        }
        export const Unsupported: Unsupported;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/VideoError#Generic)
         */
        export interface Generic extends globalThis.EnumItem {
            Name: "Generic";
            Value: 10;
            EnumType: typeof globalThis.Enum.VideoError;
        }
        export const Generic: Generic;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/VideoError#DownloadFailed)
         */
        export interface DownloadFailed extends globalThis.EnumItem {
            Name: "DownloadFailed";
            Value: 11;
            EnumType: typeof globalThis.Enum.VideoError;
        }
        export const DownloadFailed: DownloadFailed;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/VideoError#StreamNotFound)
         */
        export interface StreamNotFound extends globalThis.EnumItem {
            Name: "StreamNotFound";
            Value: 12;
            EnumType: typeof globalThis.Enum.VideoError;
        }
        export const StreamNotFound: StreamNotFound;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/VideoError#EncodeFailed)
         */
        export interface EncodeFailed extends globalThis.EnumItem {
            Name: "EncodeFailed";
            Value: 13;
            EnumType: typeof globalThis.Enum.VideoError;
        }
        export const EncodeFailed: EncodeFailed;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/VideoError#CreateFailed)
         */
        export interface CreateFailed extends globalThis.EnumItem {
            Name: "CreateFailed";
            Value: 14;
            EnumType: typeof globalThis.Enum.VideoError;
        }
        export const CreateFailed: CreateFailed;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/VideoError#NoPermission)
         */
        export interface NoPermission extends globalThis.EnumItem {
            Name: "NoPermission";
            Value: 15;
            EnumType: typeof globalThis.Enum.VideoError;
        }
        export const NoPermission: NoPermission;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/VideoError#NoService)
         */
        export interface NoService extends globalThis.EnumItem {
            Name: "NoService";
            Value: 16;
            EnumType: typeof globalThis.Enum.VideoError;
        }
        export const NoService: NoService;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/VideoError#ReleaseFailed)
         */
        export interface ReleaseFailed extends globalThis.EnumItem {
            Name: "ReleaseFailed";
            Value: 17;
            EnumType: typeof globalThis.Enum.VideoError;
        }
        export const ReleaseFailed: ReleaseFailed;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/VideoError#Unknown)
         */
        export interface Unknown extends globalThis.EnumItem {
            Name: "Unknown";
            Value: 18;
            EnumType: typeof globalThis.Enum.VideoError;
        }
        export const Unknown: Unknown;
        export function GetEnumItems(this: globalThis.Enum): Array<globalThis.Enum.VideoError>;
        export function FromName(this: globalThis.Enum, name: string): globalThis.Enum.VideoError | undefined;
        export function FromValue(this: globalThis.Enum, value: number): globalThis.Enum.VideoError | undefined;
    }
    export type VideoError = VideoError.Ok | VideoError.Eof | VideoError.EAgain | VideoError.BadParameter | VideoError.AllocFailed | VideoError.CodecInitFailed | VideoError.CodecCloseFailed | VideoError.DecodeFailed | VideoError.ParsingFailed | VideoError.Unsupported | VideoError.Generic | VideoError.DownloadFailed | VideoError.StreamNotFound | VideoError.EncodeFailed | VideoError.CreateFailed | VideoError.NoPermission | VideoError.NoService | VideoError.ReleaseFailed | VideoError.Unknown;
    /**
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/ViewMode)
     */
    export namespace ViewMode {
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/ViewMode#None)
         */
        export interface None extends globalThis.EnumItem {
            Name: "None";
            Value: 0;
            EnumType: typeof globalThis.Enum.ViewMode;
        }
        export const None: None;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/ViewMode#GeometryComplexity)
         */
        export interface GeometryComplexity extends globalThis.EnumItem {
            Name: "GeometryComplexity";
            Value: 1;
            EnumType: typeof globalThis.Enum.ViewMode;
        }
        export const GeometryComplexity: GeometryComplexity;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/ViewMode#Transparent)
         */
        export interface Transparent extends globalThis.EnumItem {
            Name: "Transparent";
            Value: 2;
            EnumType: typeof globalThis.Enum.ViewMode;
        }
        export const Transparent: Transparent;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/ViewMode#Decal)
         */
        export interface Decal extends globalThis.EnumItem {
            Name: "Decal";
            Value: 3;
            EnumType: typeof globalThis.Enum.ViewMode;
        }
        export const Decal: Decal;
        export function GetEnumItems(this: globalThis.Enum): Array<globalThis.Enum.ViewMode>;
        export function FromName(this: globalThis.Enum, name: string): globalThis.Enum.ViewMode | undefined;
        export function FromValue(this: globalThis.Enum, value: number): globalThis.Enum.ViewMode | undefined;
    }
    export type ViewMode = ViewMode.None | ViewMode.GeometryComplexity | ViewMode.Transparent | ViewMode.Decal;
    /**
     * Enables Virtual Cursor mode within an experience.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/VirtualCursorMode)
     */
    export namespace VirtualCursorMode {
        /**
         * The Virtual Cursor is in the default state.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/VirtualCursorMode#Default)
         */
        export interface Default extends globalThis.EnumItem {
            Name: "Default";
            Value: 0;
            EnumType: typeof globalThis.Enum.VirtualCursorMode;
        }
        export const Default: Default;
        /**
         * The Virtual Cursor is disabled.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/VirtualCursorMode#Disabled)
         */
        export interface Disabled extends globalThis.EnumItem {
            Name: "Disabled";
            Value: 1;
            EnumType: typeof globalThis.Enum.VirtualCursorMode;
        }
        export const Disabled: Disabled;
        /**
         * The Virtual Cursor is enabled.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/VirtualCursorMode#Enabled)
         */
        export interface Enabled extends globalThis.EnumItem {
            Name: "Enabled";
            Value: 2;
            EnumType: typeof globalThis.Enum.VirtualCursorMode;
        }
        export const Enabled: Enabled;
        export function GetEnumItems(this: globalThis.Enum): Array<globalThis.Enum.VirtualCursorMode>;
        export function FromName(this: globalThis.Enum, name: string): globalThis.Enum.VirtualCursorMode | undefined;
        export function FromValue(this: globalThis.Enum, value: number): globalThis.Enum.VirtualCursorMode | undefined;
    }
    export type VirtualCursorMode = VirtualCursorMode.Default | VirtualCursorMode.Disabled | VirtualCursorMode.Enabled;
    /**
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/VirtualInputMode)
     */
    export namespace VirtualInputMode {
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/VirtualInputMode#None)
         */
        export interface None extends globalThis.EnumItem {
            Name: "None";
            Value: 0;
            EnumType: typeof globalThis.Enum.VirtualInputMode;
        }
        export const None: None;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/VirtualInputMode#Recording)
         */
        export interface Recording extends globalThis.EnumItem {
            Name: "Recording";
            Value: 1;
            EnumType: typeof globalThis.Enum.VirtualInputMode;
        }
        export const Recording: Recording;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/VirtualInputMode#Playing)
         */
        export interface Playing extends globalThis.EnumItem {
            Name: "Playing";
            Value: 2;
            EnumType: typeof globalThis.Enum.VirtualInputMode;
        }
        export const Playing: Playing;
        export function GetEnumItems(this: globalThis.Enum): Array<globalThis.Enum.VirtualInputMode>;
        export function FromName(this: globalThis.Enum, name: string): globalThis.Enum.VirtualInputMode | undefined;
        export function FromValue(this: globalThis.Enum, value: number): globalThis.Enum.VirtualInputMode | undefined;
    }
    export type VirtualInputMode = VirtualInputMode.None | VirtualInputMode.Recording | VirtualInputMode.Playing;
    /**
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/VoiceChatState)
     */
    export namespace VoiceChatState {
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/VoiceChatState#Idle)
         */
        export interface Idle extends globalThis.EnumItem {
            Name: "Idle";
            Value: 0;
            EnumType: typeof globalThis.Enum.VoiceChatState;
        }
        export const Idle: Idle;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/VoiceChatState#Joining)
         */
        export interface Joining extends globalThis.EnumItem {
            Name: "Joining";
            Value: 1;
            EnumType: typeof globalThis.Enum.VoiceChatState;
        }
        export const Joining: Joining;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/VoiceChatState#JoiningRetry)
         */
        export interface JoiningRetry extends globalThis.EnumItem {
            Name: "JoiningRetry";
            Value: 2;
            EnumType: typeof globalThis.Enum.VoiceChatState;
        }
        export const JoiningRetry: JoiningRetry;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/VoiceChatState#Joined)
         */
        export interface Joined extends globalThis.EnumItem {
            Name: "Joined";
            Value: 3;
            EnumType: typeof globalThis.Enum.VoiceChatState;
        }
        export const Joined: Joined;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/VoiceChatState#Leaving)
         */
        export interface Leaving extends globalThis.EnumItem {
            Name: "Leaving";
            Value: 4;
            EnumType: typeof globalThis.Enum.VoiceChatState;
        }
        export const Leaving: Leaving;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/VoiceChatState#Ended)
         */
        export interface Ended extends globalThis.EnumItem {
            Name: "Ended";
            Value: 5;
            EnumType: typeof globalThis.Enum.VoiceChatState;
        }
        export const Ended: Ended;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/VoiceChatState#Failed)
         */
        export interface Failed extends globalThis.EnumItem {
            Name: "Failed";
            Value: 6;
            EnumType: typeof globalThis.Enum.VoiceChatState;
        }
        export const Failed: Failed;
        export function GetEnumItems(this: globalThis.Enum): Array<globalThis.Enum.VoiceChatState>;
        export function FromName(this: globalThis.Enum, name: string): globalThis.Enum.VoiceChatState | undefined;
        export function FromValue(this: globalThis.Enum, value: number): globalThis.Enum.VoiceChatState | undefined;
    }
    export type VoiceChatState = VoiceChatState.Idle | VoiceChatState.Joining | VoiceChatState.JoiningRetry | VoiceChatState.Joined | VoiceChatState.Leaving | VoiceChatState.Ended | VoiceChatState.Failed;
    /**
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/VoiceControlPath)
     */
    export namespace VoiceControlPath {
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/VoiceControlPath#Publish)
         */
        export interface Publish extends globalThis.EnumItem {
            Name: "Publish";
            Value: 0;
            EnumType: typeof globalThis.Enum.VoiceControlPath;
        }
        export const Publish: Publish;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/VoiceControlPath#Subscribe)
         */
        export interface Subscribe extends globalThis.EnumItem {
            Name: "Subscribe";
            Value: 1;
            EnumType: typeof globalThis.Enum.VoiceControlPath;
        }
        export const Subscribe: Subscribe;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/VoiceControlPath#Join)
         */
        export interface Join extends globalThis.EnumItem {
            Name: "Join";
            Value: 2;
            EnumType: typeof globalThis.Enum.VoiceControlPath;
        }
        export const Join: Join;
        export function GetEnumItems(this: globalThis.Enum): Array<globalThis.Enum.VoiceControlPath>;
        export function FromName(this: globalThis.Enum, name: string): globalThis.Enum.VoiceControlPath | undefined;
        export function FromValue(this: globalThis.Enum, value: number): globalThis.Enum.VoiceControlPath | undefined;
    }
    export type VoiceControlPath = VoiceControlPath.Publish | VoiceControlPath.Subscribe | VoiceControlPath.Join;
    /**
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/VolumetricAudio)
     */
    export namespace VolumetricAudio {
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/VolumetricAudio#Disabled)
         */
        export interface Disabled extends globalThis.EnumItem {
            Name: "Disabled";
            Value: 0;
            EnumType: typeof globalThis.Enum.VolumetricAudio;
        }
        export const Disabled: Disabled;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/VolumetricAudio#Automatic)
         */
        export interface Automatic extends globalThis.EnumItem {
            Name: "Automatic";
            Value: 1;
            EnumType: typeof globalThis.Enum.VolumetricAudio;
        }
        export const Automatic: Automatic;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/VolumetricAudio#Enabled)
         */
        export interface Enabled extends globalThis.EnumItem {
            Name: "Enabled";
            Value: 2;
            EnumType: typeof globalThis.Enum.VolumetricAudio;
        }
        export const Enabled: Enabled;
        export function GetEnumItems(this: globalThis.Enum): Array<globalThis.Enum.VolumetricAudio>;
        export function FromName(this: globalThis.Enum, name: string): globalThis.Enum.VolumetricAudio | undefined;
        export function FromValue(this: globalThis.Enum, value: number): globalThis.Enum.VolumetricAudio | undefined;
    }
    export type VolumetricAudio = VolumetricAudio.Disabled | VolumetricAudio.Automatic | VolumetricAudio.Enabled;
    /**
     * This Enum was once used to set the direction of `Terrain` water.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/WaterDirection)
     */
    export namespace WaterDirection {
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/WaterDirection#NegX)
         */
        export interface NegX extends globalThis.EnumItem {
            Name: "NegX";
            Value: 0;
            EnumType: typeof globalThis.Enum.WaterDirection;
        }
        export const NegX: NegX;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/WaterDirection#X)
         */
        export interface X extends globalThis.EnumItem {
            Name: "X";
            Value: 1;
            EnumType: typeof globalThis.Enum.WaterDirection;
        }
        export const X: X;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/WaterDirection#NegY)
         */
        export interface NegY extends globalThis.EnumItem {
            Name: "NegY";
            Value: 2;
            EnumType: typeof globalThis.Enum.WaterDirection;
        }
        export const NegY: NegY;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/WaterDirection#Y)
         */
        export interface Y extends globalThis.EnumItem {
            Name: "Y";
            Value: 3;
            EnumType: typeof globalThis.Enum.WaterDirection;
        }
        export const Y: Y;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/WaterDirection#NegZ)
         */
        export interface NegZ extends globalThis.EnumItem {
            Name: "NegZ";
            Value: 4;
            EnumType: typeof globalThis.Enum.WaterDirection;
        }
        export const NegZ: NegZ;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/WaterDirection#Z)
         */
        export interface Z extends globalThis.EnumItem {
            Name: "Z";
            Value: 5;
            EnumType: typeof globalThis.Enum.WaterDirection;
        }
        export const Z: Z;
        export function GetEnumItems(this: globalThis.Enum): Array<globalThis.Enum.WaterDirection>;
        export function FromName(this: globalThis.Enum, name: string): globalThis.Enum.WaterDirection | undefined;
        export function FromValue(this: globalThis.Enum, value: number): globalThis.Enum.WaterDirection | undefined;
    }
    export type WaterDirection = WaterDirection.NegX | WaterDirection.X | WaterDirection.NegY | WaterDirection.Y | WaterDirection.NegZ | WaterDirection.Z;
    /**
     * The WaterForce Enum is used to work with `Terrain` water cells.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/WaterForce)
     */
    export namespace WaterForce {
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/WaterForce#None)
         */
        export interface None extends globalThis.EnumItem {
            Name: "None";
            Value: 0;
            EnumType: typeof globalThis.Enum.WaterForce;
        }
        export const None: None;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/WaterForce#Small)
         */
        export interface Small extends globalThis.EnumItem {
            Name: "Small";
            Value: 1;
            EnumType: typeof globalThis.Enum.WaterForce;
        }
        export const Small: Small;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/WaterForce#Medium)
         */
        export interface Medium extends globalThis.EnumItem {
            Name: "Medium";
            Value: 2;
            EnumType: typeof globalThis.Enum.WaterForce;
        }
        export const Medium: Medium;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/WaterForce#Strong)
         */
        export interface Strong extends globalThis.EnumItem {
            Name: "Strong";
            Value: 3;
            EnumType: typeof globalThis.Enum.WaterForce;
        }
        export const Strong: Strong;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/WaterForce#Max)
         */
        export interface Max extends globalThis.EnumItem {
            Name: "Max";
            Value: 4;
            EnumType: typeof globalThis.Enum.WaterForce;
        }
        export const Max: Max;
        export function GetEnumItems(this: globalThis.Enum): Array<globalThis.Enum.WaterForce>;
        export function FromName(this: globalThis.Enum, name: string): globalThis.Enum.WaterForce | undefined;
        export function FromValue(this: globalThis.Enum, value: number): globalThis.Enum.WaterForce | undefined;
    }
    export type WaterForce = WaterForce.None | WaterForce.Small | WaterForce.Medium | WaterForce.Strong | WaterForce.Max;
    /**
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/WeldConstraintPreserve)
     */
    export namespace WeldConstraintPreserve {
        /**
         * All `WeldConstraints` will be returned in the recommended table.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/WeldConstraintPreserve#All)
         */
        export interface All extends globalThis.EnumItem {
            Name: "All";
            Value: 0;
            EnumType: typeof globalThis.Enum.WeldConstraintPreserve;
        }
        export const All: All;
        /**
         * `WeldConstraints` will be ignored and not returned in the recommended table.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/WeldConstraintPreserve#None)
         */
        export interface None extends globalThis.EnumItem {
            Name: "None";
            Value: 1;
            EnumType: typeof globalThis.Enum.WeldConstraintPreserve;
        }
        export const None: None;
        /**
         * Only `WeldConstraints` that connect touching parts in the performed operation will be returned in the recommended table.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/WeldConstraintPreserve#Touching)
         */
        export interface Touching extends globalThis.EnumItem {
            Name: "Touching";
            Value: 2;
            EnumType: typeof globalThis.Enum.WeldConstraintPreserve;
        }
        export const Touching: Touching;
        export function GetEnumItems(this: globalThis.Enum): Array<globalThis.Enum.WeldConstraintPreserve>;
        export function FromName(this: globalThis.Enum, name: string): globalThis.Enum.WeldConstraintPreserve | undefined;
        export function FromValue(this: globalThis.Enum, value: number): globalThis.Enum.WeldConstraintPreserve | undefined;
    }
    export type WeldConstraintPreserve = WeldConstraintPreserve.All | WeldConstraintPreserve.None | WeldConstraintPreserve.Touching;
    /**
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/WhisperChatPrivacyMode)
     */
    export namespace WhisperChatPrivacyMode {
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/WhisperChatPrivacyMode#AllUsers)
         */
        export interface AllUsers extends globalThis.EnumItem {
            Name: "AllUsers";
            Value: 0;
            EnumType: typeof globalThis.Enum.WhisperChatPrivacyMode;
        }
        export const AllUsers: AllUsers;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/WhisperChatPrivacyMode#NoOne)
         */
        export interface NoOne extends globalThis.EnumItem {
            Name: "NoOne";
            Value: 1;
            EnumType: typeof globalThis.Enum.WhisperChatPrivacyMode;
        }
        export const NoOne: NoOne;
        export function GetEnumItems(this: globalThis.Enum): Array<globalThis.Enum.WhisperChatPrivacyMode>;
        export function FromName(this: globalThis.Enum, name: string): globalThis.Enum.WhisperChatPrivacyMode | undefined;
        export function FromValue(this: globalThis.Enum, value: number): globalThis.Enum.WhisperChatPrivacyMode | undefined;
    }
    export type WhisperChatPrivacyMode = WhisperChatPrivacyMode.AllUsers | WhisperChatPrivacyMode.NoOne;
    /**
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/WrapLayerAutoSkin)
     */
    export namespace WrapLayerAutoSkin {
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/WrapLayerAutoSkin#Disabled)
         */
        export interface Disabled extends globalThis.EnumItem {
            Name: "Disabled";
            Value: 0;
            EnumType: typeof globalThis.Enum.WrapLayerAutoSkin;
        }
        export const Disabled: Disabled;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/WrapLayerAutoSkin#EnabledPreserve)
         */
        export interface EnabledPreserve extends globalThis.EnumItem {
            Name: "EnabledPreserve";
            Value: 1;
            EnumType: typeof globalThis.Enum.WrapLayerAutoSkin;
        }
        export const EnabledPreserve: EnabledPreserve;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/WrapLayerAutoSkin#EnabledOverride)
         */
        export interface EnabledOverride extends globalThis.EnumItem {
            Name: "EnabledOverride";
            Value: 2;
            EnumType: typeof globalThis.Enum.WrapLayerAutoSkin;
        }
        export const EnabledOverride: EnabledOverride;
        export function GetEnumItems(this: globalThis.Enum): Array<globalThis.Enum.WrapLayerAutoSkin>;
        export function FromName(this: globalThis.Enum, name: string): globalThis.Enum.WrapLayerAutoSkin | undefined;
        export function FromValue(this: globalThis.Enum, value: number): globalThis.Enum.WrapLayerAutoSkin | undefined;
    }
    export type WrapLayerAutoSkin = WrapLayerAutoSkin.Disabled | WrapLayerAutoSkin.EnabledPreserve | WrapLayerAutoSkin.EnabledOverride;
    /**
     * The Studio-only property for quickly visualizing and debugging meshes with inner cage and outer cages.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/WrapLayerDebugMode)
     */
    export namespace WrapLayerDebugMode {
        /**
         * This debug rendering mode does nothing. This is the default value.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/WrapLayerDebugMode#None)
         */
        export interface None extends globalThis.EnumItem {
            Name: "None";
            Value: 0;
            EnumType: typeof globalThis.Enum.WrapLayerDebugMode;
        }
        export const None: None;
        /**
         * This debug mode visualizes corresponding cage mesh vertices bound to an underlying `WrapTarget`. In order to find corresponding vertices between different cages, the Wrap Deformer algorithm uses UV matching. As long as your `WrapLayer` cage mesh share the same UV layout as `WrapTarget`, its vertices will be marked as "bound".
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/WrapLayerDebugMode#BoundCage)
         */
        export interface BoundCage extends globalThis.EnumItem {
            Name: "BoundCage";
            Value: 1;
            EnumType: typeof globalThis.Enum.WrapLayerDebugMode;
        }
        export const BoundCage: BoundCage;
        /**
         * This debug mode shows the resulting layer mesh as a whole. The deformer will use vertex locations from the previous layer for all unbound vertices.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/WrapLayerDebugMode#LayerCage)
         */
        export interface LayerCage extends globalThis.EnumItem {
            Name: "LayerCage";
            Value: 2;
            EnumType: typeof globalThis.Enum.WrapLayerDebugMode;
        }
        export const LayerCage: LayerCage;
        /**
         * The same as BoundCage but also visualizes how bound vertices were moved. You can use this mode to identify where they belong on a previous layer and where they are located on the current layer.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/WrapLayerDebugMode#BoundCageAndLinks)
         */
        export interface BoundCageAndLinks extends globalThis.EnumItem {
            Name: "BoundCageAndLinks";
            Value: 3;
            EnumType: typeof globalThis.Enum.WrapLayerDebugMode;
        }
        export const BoundCageAndLinks: BoundCageAndLinks;
        /**
         * This debug mode shows the original inner cage mesh as it was created.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/WrapLayerDebugMode#Reference)
         */
        export interface Reference extends globalThis.EnumItem {
            Name: "Reference";
            Value: 4;
            EnumType: typeof globalThis.Enum.WrapLayerDebugMode;
        }
        export const Reference: Reference;
        /**
         * This debug mode visualizes the internal RBF solver state. You can estimate the wrap deformer's expected behavior by looking at this state. All renderable mesh vertices move from a "big sphere" to a "small sphere" along a corresponding line connecting two spheres.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/WrapLayerDebugMode#Rbf)
         */
        export interface Rbf extends globalThis.EnumItem {
            Name: "Rbf";
            Value: 5;
            EnumType: typeof globalThis.Enum.WrapLayerDebugMode;
        }
        export const Rbf: Rbf;
        /**
         * This debug mode shows the original outer cage mesh as it was created.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/WrapLayerDebugMode#OuterCage)
         */
        export interface OuterCage extends globalThis.EnumItem {
            Name: "OuterCage";
            Value: 6;
            EnumType: typeof globalThis.Enum.WrapLayerDebugMode;
        }
        export const OuterCage: OuterCage;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/WrapLayerDebugMode#ReferenceMeshAfterMorph)
         */
        export interface ReferenceMeshAfterMorph extends globalThis.EnumItem {
            Name: "ReferenceMeshAfterMorph";
            Value: 7;
            EnumType: typeof globalThis.Enum.WrapLayerDebugMode;
        }
        export const ReferenceMeshAfterMorph: ReferenceMeshAfterMorph;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/WrapLayerDebugMode#HSROuterDetail)
         */
        export interface HSROuterDetail extends globalThis.EnumItem {
            Name: "HSROuterDetail";
            Value: 8;
            EnumType: typeof globalThis.Enum.WrapLayerDebugMode;
        }
        export const HSROuterDetail: HSROuterDetail;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/WrapLayerDebugMode#HSROuter)
         */
        export interface HSROuter extends globalThis.EnumItem {
            Name: "HSROuter";
            Value: 9;
            EnumType: typeof globalThis.Enum.WrapLayerDebugMode;
        }
        export const HSROuter: HSROuter;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/WrapLayerDebugMode#HSRInner)
         */
        export interface HSRInner extends globalThis.EnumItem {
            Name: "HSRInner";
            Value: 10;
            EnumType: typeof globalThis.Enum.WrapLayerDebugMode;
        }
        export const HSRInner: HSRInner;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/WrapLayerDebugMode#HSRInnerReverse)
         */
        export interface HSRInnerReverse extends globalThis.EnumItem {
            Name: "HSRInnerReverse";
            Value: 11;
            EnumType: typeof globalThis.Enum.WrapLayerDebugMode;
        }
        export const HSRInnerReverse: HSRInnerReverse;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/WrapLayerDebugMode#LayerCageFittedToBase)
         */
        export interface LayerCageFittedToBase extends globalThis.EnumItem {
            Name: "LayerCageFittedToBase";
            Value: 12;
            EnumType: typeof globalThis.Enum.WrapLayerDebugMode;
        }
        export const LayerCageFittedToBase: LayerCageFittedToBase;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/WrapLayerDebugMode#LayerCageFittedToPrev)
         */
        export interface LayerCageFittedToPrev extends globalThis.EnumItem {
            Name: "LayerCageFittedToPrev";
            Value: 13;
            EnumType: typeof globalThis.Enum.WrapLayerDebugMode;
        }
        export const LayerCageFittedToPrev: LayerCageFittedToPrev;
        export function GetEnumItems(this: globalThis.Enum): Array<globalThis.Enum.WrapLayerDebugMode>;
        export function FromName(this: globalThis.Enum, name: string): globalThis.Enum.WrapLayerDebugMode | undefined;
        export function FromValue(this: globalThis.Enum, value: number): globalThis.Enum.WrapLayerDebugMode | undefined;
    }
    export type WrapLayerDebugMode = WrapLayerDebugMode.None | WrapLayerDebugMode.BoundCage | WrapLayerDebugMode.LayerCage | WrapLayerDebugMode.BoundCageAndLinks | WrapLayerDebugMode.Reference | WrapLayerDebugMode.Rbf | WrapLayerDebugMode.OuterCage | WrapLayerDebugMode.ReferenceMeshAfterMorph | WrapLayerDebugMode.HSROuterDetail | WrapLayerDebugMode.HSROuter | WrapLayerDebugMode.HSRInner | WrapLayerDebugMode.HSRInnerReverse | WrapLayerDebugMode.LayerCageFittedToBase | WrapLayerDebugMode.LayerCageFittedToPrev;
    /**
     * The Studio-only property for quickly visualizing and debugging meshes with only outer cages.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/WrapTargetDebugMode)
     */
    export namespace WrapTargetDebugMode {
        /**
         * This debug rendering mode does nothing, and this is the default value.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/WrapTargetDebugMode#None)
         */
        export interface None extends globalThis.EnumItem {
            Name: "None";
            Value: 0;
            EnumType: typeof globalThis.Enum.WrapTargetDebugMode;
        }
        export const None: None;
        /**
         * This debug mode shows the original cage mesh as it was created.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/WrapTargetDebugMode#TargetCageOriginal)
         */
        export interface TargetCageOriginal extends globalThis.EnumItem {
            Name: "TargetCageOriginal";
            Value: 1;
            EnumType: typeof globalThis.Enum.WrapTargetDebugMode;
        }
        export const TargetCageOriginal: TargetCageOriginal;
        /**
         * This debug mode shows corresponding cage mesh compressed by clothing layers above it. This debug mode is intended to validate that the compression algorithm and corresponding cages work as intended.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/WrapTargetDebugMode#TargetCageCompressed)
         */
        export interface TargetCageCompressed extends globalThis.EnumItem {
            Name: "TargetCageCompressed";
            Value: 2;
            EnumType: typeof globalThis.Enum.WrapTargetDebugMode;
        }
        export const TargetCageCompressed: TargetCageCompressed;
        /**
         * This debug mode shows the resulting cage mesh for the corresponding Wrap Instance. This debug mode is intended to validate that the final deformed cage looks as intended.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/WrapTargetDebugMode#TargetCageInterface)
         */
        export interface TargetCageInterface extends globalThis.EnumItem {
            Name: "TargetCageInterface";
            Value: 3;
            EnumType: typeof globalThis.Enum.WrapTargetDebugMode;
        }
        export const TargetCageInterface: TargetCageInterface;
        /**
         * The same as TargetCageOriginal but affects all WrapTargets that belong to the Wrap Deformer simultaneously. It doesn't matter which particular WrapTarget you enable this debug visualization option.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/WrapTargetDebugMode#TargetLayerCageOriginal)
         */
        export interface TargetLayerCageOriginal extends globalThis.EnumItem {
            Name: "TargetLayerCageOriginal";
            Value: 4;
            EnumType: typeof globalThis.Enum.WrapTargetDebugMode;
        }
        export const TargetLayerCageOriginal: TargetLayerCageOriginal;
        /**
         * The same as TargetCageCompressed but affects all WrapTargets that belong to the Wrap Deformer simultaneously. It doesn't matter which particular WrapTarget you enable this debug visualization option.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/WrapTargetDebugMode#TargetLayerCageCompressed)
         */
        export interface TargetLayerCageCompressed extends globalThis.EnumItem {
            Name: "TargetLayerCageCompressed";
            Value: 5;
            EnumType: typeof globalThis.Enum.WrapTargetDebugMode;
        }
        export const TargetLayerCageCompressed: TargetLayerCageCompressed;
        /**
         * The same as TargetCageInterface but affects all WrapTargets that belong to the Wrap Deformer simultaneously. It doesn't matter which particular WrapTarget you enable this debug visualization option.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/WrapTargetDebugMode#TargetLayerInterface)
         */
        export interface TargetLayerInterface extends globalThis.EnumItem {
            Name: "TargetLayerInterface";
            Value: 6;
            EnumType: typeof globalThis.Enum.WrapTargetDebugMode;
        }
        export const TargetLayerInterface: TargetLayerInterface;
        /**
         * This debug mode visualizes the internal RBF solver state. You can estimate the wrap deformer expected behavior by looking at this state. All renderable mesh vertices move from a "big sphere" to a "small sphere" along a corresponding line connecting two spheres.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/WrapTargetDebugMode#Rbf)
         */
        export interface Rbf extends globalThis.EnumItem {
            Name: "Rbf";
            Value: 7;
            EnumType: typeof globalThis.Enum.WrapTargetDebugMode;
        }
        export const Rbf: Rbf;
        /**
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/WrapTargetDebugMode#OuterCageDetail)
         */
        export interface OuterCageDetail extends globalThis.EnumItem {
            Name: "OuterCageDetail";
            Value: 8;
            EnumType: typeof globalThis.Enum.WrapTargetDebugMode;
        }
        export const OuterCageDetail: OuterCageDetail;
        export function GetEnumItems(this: globalThis.Enum): Array<globalThis.Enum.WrapTargetDebugMode>;
        export function FromName(this: globalThis.Enum, name: string): globalThis.Enum.WrapTargetDebugMode | undefined;
        export function FromValue(this: globalThis.Enum, value: number): globalThis.Enum.WrapTargetDebugMode | undefined;
    }
    export type WrapTargetDebugMode = WrapTargetDebugMode.None | WrapTargetDebugMode.TargetCageOriginal | WrapTargetDebugMode.TargetCageCompressed | WrapTargetDebugMode.TargetCageInterface | WrapTargetDebugMode.TargetLayerCageOriginal | WrapTargetDebugMode.TargetLayerCageCompressed | WrapTargetDebugMode.TargetLayerInterface | WrapTargetDebugMode.Rbf | WrapTargetDebugMode.OuterCageDetail;
    /**
     * Used by `LayerCollector.ZIndexBehavior` to control how the `GuiObject.ZIndex` property behaves for descendants.
     *
     * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/ZIndexBehavior)
     */
    export namespace ZIndexBehavior {
        /**
         * The ZIndex property overrides the default value computed from the depth in the hierarchy.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/ZIndexBehavior#Global)
         */
        export interface Global extends globalThis.EnumItem {
            Name: "Global";
            Value: 0;
            EnumType: typeof globalThis.Enum.ZIndexBehavior;
        }
        export const Global: Global;
        /**
         * The ZIndex property controls the order in which the GuiObject renders relative to its siblings.
         *
         * [Creator Hub](https://create.roblox.com/docs/reference/engine/enums/ZIndexBehavior#Sibling)
         */
        export interface Sibling extends globalThis.EnumItem {
            Name: "Sibling";
            Value: 1;
            EnumType: typeof globalThis.Enum.ZIndexBehavior;
        }
        export const Sibling: Sibling;
        export function GetEnumItems(this: globalThis.Enum): Array<globalThis.Enum.ZIndexBehavior>;
        export function FromName(this: globalThis.Enum, name: string): globalThis.Enum.ZIndexBehavior | undefined;
        export function FromValue(this: globalThis.Enum, value: number): globalThis.Enum.ZIndexBehavior | undefined;
    }
    export type ZIndexBehavior = ZIndexBehavior.Global | ZIndexBehavior.Sibling;
}
declare type CastsToEnum<T extends EnumItem> = T | T["Name" | "Value"];
